.vscode/settings.json:        "editor.defaultFormatter": "ms-python.black-formatter"
setup.py:    platforms=["Linux", "Windows", "Mac OS-X"],
requirements-dev.txt:pytest-cov
requirements-dev.txt:pytest-runner
tests/functional/test_mandel_biot.py:    - The first test compares desired and actual relative errors for the pressure,
tests/functional/test_mandel_biot.py:    - The second test checks that the same errors for pressure and displacement (up to
tests/functional/test_mandel_biot.py:def results() -> list[MandelSaveData]:
tests/functional/test_mandel_biot.py:        error_consolidation_degree=(0.004112823366753098, 2.983724378680108e-16),
tests/functional/test_mandel_biot.py:        error_consolidation_degree=(0.002324983805104465, 2.983724378680108e-16),
tests/functional/test_mandel_biot.py:        error_consolidation_degree=(0.0018043500295539042, 2.983724378680108e-16),
tests/functional/test_mandel_biot.py:    using the L2-discrete relative error given in [2]) and degrees of consolidation
tests/functional/test_mandel_biot.py:    For this test, we require an absolute tolerance of 1e-5 and a relative tolerance of
tests/functional/test_mandel_biot.py:    1e-3 between the `desired_error` and the `actual_error`. The choice of such
tests/functional/test_mandel_biot.py:    failure due to floating-point arithmetic close to machine precision.
tests/functional/test_mandel_biot.py:        - [1] Mikelić, A., Wang, B., & Wheeler, M. F. (2014). Numerical convergence
tests/functional/test_mandel_biot.py:          Computational Geosciences, 18(3), 325-341.
tests/functional/test_mandel_biot.py:        - [2] Nordbotten, J. M. (2016). Stable cell-centered finite volume
tests/functional/test_mandel_biot.py:          54(2), 942-968.
tests/functional/test_mandel_biot.py:        actual.error_pressure, desired.error_pressure, atol=1e-5, rtol=1e-3
tests/functional/test_mandel_biot.py:        actual.error_flux, desired.error_flux, atol=1e-5, rtol=1e-3
tests/functional/test_mandel_biot.py:        actual.error_displacement, desired.error_displacement, atol=1e-5, rtol=1e-3
tests/functional/test_mandel_biot.py:        actual.error_force, desired.error_force, atol=1e-5, rtol=1e-3
tests/functional/test_mandel_biot.py:        atol=1e-5,
tests/functional/test_mandel_biot.py:        rtol=1e-3,
tests/functional/test_mandel_biot.py:        atol=1e-5,
tests/functional/test_mandel_biot.py:        rtol=1e-3,
tests/functional/test_mandel_biot.py:    scaling = {"m": 1e-3, "kg": 1e-3}  # length in millimeters and mass in grams
tests/functional/test_mandel_biot.py:        unscaled.results[-1].error_pressure,
tests/functional/test_mandel_biot.py:        scaled.results[-1].error_pressure,
tests/functional/test_mandel_biot.py:        unscaled.results[-1].error_displacement,
tests/functional/test_mandel_biot.py:        scaled.results[-1].error_displacement,
tests/functional/test_terzaghi_biot.py:    - The first test guarantees that the results obtained with the Biot class
tests/functional/test_terzaghi_biot.py:    - The second test compares desired and actual relative errors for the pressure and
tests/functional/test_terzaghi_biot.py:      degree of consolidation obtained from the MPFA/MPSA-FV solutions and the
tests/functional/test_terzaghi_biot.py:    - The last test checks if we obtain the same results for an unscaled and a scaled
tests/functional/test_terzaghi_biot.py:    errors (measured using the L2-discrete relative error given in [2]) and degree of
tests/functional/test_terzaghi_biot.py:    For this test, we require an absolute tolerance of 1e-5 and a relative tolerance of
tests/functional/test_terzaghi_biot.py:    1e-3 between the `desired_error` and the `actual_error`. The choice of such
tests/functional/test_terzaghi_biot.py:    failure due to floating-point arithmetic close to machine precision.
tests/functional/test_terzaghi_biot.py:        - [1] Mikelić, A., Wang, B., & Wheeler, M. F. (2014). Numerical convergence
tests/functional/test_terzaghi_biot.py:          Computational Geosciences, 18(3), 325-341.
tests/functional/test_terzaghi_biot.py:        - [2] Nordbotten, J. M. (2016). Stable cell-centered finite volume
tests/functional/test_terzaghi_biot.py:          54(2), 942-968.
tests/functional/test_terzaghi_biot.py:    np.testing.assert_allclose(actual_error_p, desired_error_p, rtol=1e-3, atol=1e-5)
tests/functional/test_terzaghi_biot.py:        actual_error_consol, desired_error_consol, rtol=1e-3, atol=1e-5
tests/functional/test_terzaghi_biot.py:        unscaled.results[-1].error_pressure,
tests/functional/test_terzaghi_biot.py:        scaled.results[-1].error_pressure,
tests/functional/test_terzaghi_biot.py:        unscaled.results[-1].error_consolidation_degree,
tests/functional/test_terzaghi_biot.py:        unscaled.results[-1].error_consolidation_degree,
tests/functional/setups/manu_flow_comp_frac.py:the two-dimensional, compressible, single phase flow with a single, fully embedded
tests/functional/setups/manu_flow_comp_frac.py:In particular, we have added a pressure-dependent density which obeys the following
tests/functional/setups/manu_flow_comp_frac.py:    \rho(p) = \rho_0 \exp{c_f (p - p_0)},
tests/functional/setups/manu_flow_comp_frac.py:    - [1] Varela, J., Ahmed, E., Keilegavlen, E., Nordbotten, J. M., & Radu, F. A.
tests/functional/setups/manu_flow_comp_frac.py:      (2022). A posteriori error estimates for hierarchical mixed-dimensional
tests/functional/setups/manu_flow_comp_frac.py:# -----> Data-saving
tests/functional/setups/manu_flow_comp_frac.py:    """Method for computing the discrete relative L2-error. Normally provided by a
tests/functional/setups/manu_flow_comp_frac.py:    def collect_data(self) -> ManuCompSaveData:
tests/functional/setups/manu_flow_comp_frac.py:# -----> Exact solution
tests/functional/setups/manu_flow_comp_frac.py:        rho_0 = setup.fluid.density()  # [kg * m^-3]  Reference fluid density
tests/functional/setups/manu_flow_comp_frac.py:        c_f = setup.fluid.compressibility()  # [Pa^-1]  Fluid compressibility
tests/functional/setups/manu_flow_comp_frac.py:        phi_0 = setup.solid.porosity()  # [-] Reference porosity
tests/functional/setups/manu_flow_comp_frac.py:            ((x - 0.5) ** 2 + (y - 0.25) ** 2) ** 0.5,  # bottom
tests/functional/setups/manu_flow_comp_frac.py:            ((x - 0.5) ** 2) ** 0.5,  # middle
tests/functional/setups/manu_flow_comp_frac.py:            ((x - 0.5) ** 2 + (y - 0.75) ** 2) ** 0.5,  # top
tests/functional/setups/manu_flow_comp_frac.py:        bubble_fun = (y - 0.25) ** 2 * (y - 0.75) ** 2
tests/functional/setups/manu_flow_comp_frac.py:        q_matrix = [[-sym.diff(p, x), -sym.diff(p, y)] for p in p_matrix]
tests/functional/setups/manu_flow_comp_frac.py:        rho_matrix = [rho_0 * sym.exp(c_f * (p - p_0)) for p in p_matrix]
tests/functional/setups/manu_flow_comp_frac.py:        p_frac = -t * bubble_fun
tests/functional/setups/manu_flow_comp_frac.py:        q_frac = -sym.diff(p_frac, y)
tests/functional/setups/manu_flow_comp_frac.py:        rho_frac = rho_0 * sym.exp(c_f * (p_frac - p_0))
tests/functional/setups/manu_flow_comp_frac.py:        f_frac = accum_frac + div_mf_frac - 2 * mf_intf
tests/functional/setups/manu_flow_comp_frac.py:    def matrix_pressure(self, sd_matrix: pp.Grid, time: number) -> np.ndarray:
tests/functional/setups/manu_flow_comp_frac.py:        # Cell-centered pressures
tests/functional/setups/manu_flow_comp_frac.py:    def matrix_flux(self, sd_matrix: pp.Grid, time: number) -> np.ndarray:
tests/functional/setups/manu_flow_comp_frac.py:        """Evaluate exact matrix Darcy flux [m^3 * s^-1] at the face centers .
tests/functional/setups/manu_flow_comp_frac.py:        # Face-centered Darcy fluxes
tests/functional/setups/manu_flow_comp_frac.py:    def matrix_source(self, sd_matrix: pp.Grid, time: number) -> np.ndarray:
tests/functional/setups/manu_flow_comp_frac.py:        # Integrated cell-centered sources
tests/functional/setups/manu_flow_comp_frac.py:    def fracture_pressure(self, sd_frac: pp.Grid, time: number) -> np.ndarray:
tests/functional/setups/manu_flow_comp_frac.py:    def fracture_flux(self, sd_frac: pp.Grid, time: number) -> np.ndarray:
tests/functional/setups/manu_flow_comp_frac.py:    def fracture_source(self, sd_frac: pp.Grid, time: number) -> np.ndarray:
tests/functional/setups/manu_flow_comp_frac.py:    def interface_flux(self, intf: pp.MortarGrid, time: number) -> np.ndarray:
tests/functional/setups/manu_flow_comp_frac.py:    def matrix_boundary_pressure(self, sd_matrix: pp.Grid, time: number) -> np.ndarray:
tests/functional/setups/manu_flow_comp_frac.py:    def matrix_boundary_density(self, sd_matrix: pp.Grid, time: float) -> np.ndarray:
tests/functional/setups/manu_flow_comp_frac.py:# -----> Boundary conditions
tests/functional/setups/manu_flow_comp_frac.py:    """Mixed-dimensional grid object."""
tests/functional/setups/manu_flow_comp_frac.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/functional/setups/manu_flow_comp_frac.py:    def bc_type_mobrho(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/functional/setups/manu_flow_comp_frac.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/functional/setups/manu_flow_comp_frac.py:    def bc_values_mobrho(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/functional/setups/manu_flow_comp_frac.py:# -----> Balance equations
tests/functional/setups/manu_flow_comp_frac.py:    def fluid_source(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/functional/setups/manu_flow_comp_frac.py:        """Modify balance equation to account for time-dependent external sources."""
tests/functional/setups/manu_flow_comp_frac.py:        # Add-up contribution
tests/functional/setups/manu_flow_comp_frac.py:        fluid_source.set_name("Time-dependent fluid source")
tests/functional/setups/manu_flow_comp_frac.py:# -----> Solution strategy
tests/functional/setups/manu_flow_comp_frac.py:    """Mixed-dimensional grid."""
tests/functional/setups/manu_flow_comp_frac.py:    def before_nonlinear_loop(self) -> None:
tests/functional/setups/manu_flow_comp_frac.py:    def after_simulation(self) -> None:
tests/functional/setups/manu_flow_comp_frac.py:# -----> Mixer
tests/functional/setups/manu_flow_incomp_frac.py:for the two-dimensional, incompressible, single phase flow with a single, fully embedded
tests/functional/setups/manu_flow_incomp_frac.py:    - [1] Varela, J., Ahmed, E., Keilegavlen, E., Nordbotten, J. M., & Radu, F. A.
tests/functional/setups/manu_flow_incomp_frac.py:      (2022). A posteriori error estimates for hierarchical mixed-dimensional
tests/functional/setups/manu_flow_incomp_frac.py:# -----> Data-saving
tests/functional/setups/manu_flow_incomp_frac.py:    """L2-discrete relative error for the flux in the fracture."""
tests/functional/setups/manu_flow_incomp_frac.py:    """L2-discrete relative error for the pressure in the fracture."""
tests/functional/setups/manu_flow_incomp_frac.py:    """L2-discrete relative error for the flux on the interfaces."""
tests/functional/setups/manu_flow_incomp_frac.py:    """L2-discrete relative error for the flux in the matrix."""
tests/functional/setups/manu_flow_incomp_frac.py:    """L2-discrete relative error for the pressure in the matrix."""
tests/functional/setups/manu_flow_incomp_frac.py:    """Method for computing the discrete relative L2-error. Normally provided by a
tests/functional/setups/manu_flow_incomp_frac.py:    def collect_data(self) -> ManuIncompSaveData:
tests/functional/setups/manu_flow_incomp_frac.py:# -----> Exact solution
tests/functional/setups/manu_flow_incomp_frac.py:            ((x - 0.5) ** 2 + (y - 0.25) ** 2) ** 0.5,  # bottom
tests/functional/setups/manu_flow_incomp_frac.py:            ((x - 0.5) ** 2) ** 0.5,  # middle
tests/functional/setups/manu_flow_incomp_frac.py:            ((x - 0.5) ** 2 + (y - 0.75) ** 2) ** 0.5,  # top
tests/functional/setups/manu_flow_incomp_frac.py:        bubble_fun = (y - 0.25) ** 2 * (y - 0.75) ** 2
tests/functional/setups/manu_flow_incomp_frac.py:        q_matrix = [[-sym.diff(p, x), -sym.diff(p, y)] for p in p_matrix]
tests/functional/setups/manu_flow_incomp_frac.py:        p_frac = -bubble_fun
tests/functional/setups/manu_flow_incomp_frac.py:        q_frac = -sym.diff(p_frac, y)
tests/functional/setups/manu_flow_incomp_frac.py:        f_frac = sym.diff(q_frac, y) - 2 * q_intf
tests/functional/setups/manu_flow_incomp_frac.py:    def matrix_pressure(self, sd_matrix: pp.Grid) -> np.ndarray:
tests/functional/setups/manu_flow_incomp_frac.py:        # Cell-centered pressures
tests/functional/setups/manu_flow_incomp_frac.py:    def matrix_flux(self, sd_matrix: pp.Grid) -> np.ndarray:
tests/functional/setups/manu_flow_incomp_frac.py:        # Face-centered Darcy fluxes
tests/functional/setups/manu_flow_incomp_frac.py:    def matrix_source(self, sd_matrix: pp.Grid) -> np.ndarray:
tests/functional/setups/manu_flow_incomp_frac.py:        # Integrated cell-centered sources
tests/functional/setups/manu_flow_incomp_frac.py:    def fracture_pressure(self, sd_frac: pp.Grid) -> np.ndarray:
tests/functional/setups/manu_flow_incomp_frac.py:    def fracture_flux(self, sd_frac: pp.Grid) -> np.ndarray:
tests/functional/setups/manu_flow_incomp_frac.py:    def fracture_source(self, sd_frac: pp.Grid) -> np.ndarray:
tests/functional/setups/manu_flow_incomp_frac.py:    def interface_flux(self, intf: pp.MortarGrid) -> np.ndarray:
tests/functional/setups/manu_flow_incomp_frac.py:    def boundary_values(self, sd_matrix: pp.Grid) -> np.ndarray:
tests/functional/setups/manu_flow_incomp_frac.py:# -----> Utilities
tests/functional/setups/manu_flow_incomp_frac.py:    """Mixed-dimensional grid."""
tests/functional/setups/manu_flow_incomp_frac.py:    def plot_results(self) -> None:
tests/functional/setups/manu_flow_incomp_frac.py:    def _plot_matrix_pressure(self) -> None:
tests/functional/setups/manu_flow_incomp_frac.py:        p_num = self.results[-1].approx_matrix_pressure
tests/functional/setups/manu_flow_incomp_frac.py:        p_ex = self.results[-1].exact_matrix_pressure
tests/functional/setups/manu_flow_incomp_frac.py:        p_num = self.results[-1].approx_frac_pressure
tests/functional/setups/manu_flow_incomp_frac.py:        p_ex = self.results[-1].exact_frac_pressure
tests/functional/setups/manu_flow_incomp_frac.py:        plt.ylabel("y-coordinate")
tests/functional/setups/manu_flow_incomp_frac.py:        lmbda_num = self.results[-1].approx_intf_flux
tests/functional/setups/manu_flow_incomp_frac.py:        lmbda_ex = self.results[-1].exact_intf_flux
tests/functional/setups/manu_flow_incomp_frac.py:        plt.ylabel("y-coordinate")
tests/functional/setups/manu_flow_incomp_frac.py:        q_num = self.results[-1].approx_frac_flux
tests/functional/setups/manu_flow_incomp_frac.py:        q_ex = self.results[-1].exact_frac_flux
tests/functional/setups/manu_flow_incomp_frac.py:        plt.ylabel("y-coordinate")
tests/functional/setups/manu_flow_incomp_frac.py:# -----> Geometry
tests/functional/setups/manu_flow_incomp_frac.py:    """Generate fracture network and mixed-dimensional grid."""
tests/functional/setups/manu_flow_incomp_frac.py:    def set_fractures(self) -> None:
tests/functional/setups/manu_flow_incomp_frac.py:            part of the mixed-dimensional grid.
tests/functional/setups/manu_flow_incomp_frac.py:    def set_domain(self) -> None:
tests/functional/setups/manu_flow_incomp_frac.py:    def meshing_arguments(self) -> dict:
tests/functional/setups/manu_flow_incomp_frac.py:    def meshing_kwargs(self) -> dict:
tests/functional/setups/manu_flow_incomp_frac.py:        """Create mixed-dimensional grid. Ignore fractures 1 and 2."""
tests/functional/setups/manu_flow_incomp_frac.py:    def grid_type(self) -> str:
tests/functional/setups/manu_flow_incomp_frac.py:# -----> Boundary conditions
tests/functional/setups/manu_flow_incomp_frac.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/functional/setups/manu_flow_incomp_frac.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/functional/setups/manu_flow_incomp_frac.py:# -----> Balance equations
tests/functional/setups/manu_flow_incomp_frac.py:    def fluid_source(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/functional/setups/manu_flow_incomp_frac.py:            Cell-wise Ad operator containing the fluid source contributions.
tests/functional/setups/manu_flow_incomp_frac.py:# -----> Solution strategy
tests/functional/setups/manu_flow_incomp_frac.py:    """Mixed-dimensional grid."""
tests/functional/setups/manu_flow_incomp_frac.py:    def after_simulation(self) -> None:
tests/functional/setups/manu_flow_incomp_frac.py:    def _is_nonlinear_problem(self) -> bool:
tests/functional/setups/manu_flow_incomp_frac.py:    def _is_time_dependent(self) -> bool:
tests/functional/setups/manu_flow_incomp_frac.py:# -----> Mixer
tests/functional/setups/manu_poromech_nofrac.py:system (without fractures) using two-dimensional manufactured solutions.
tests/functional/setups/manu_poromech_nofrac.py:The implementation considers a compressible fluid, resulting in a coupled non-linear
tests/functional/setups/manu_poromech_nofrac.py:    \\rho(p) =  \\rho_0 \\exp{c_f \\left(p - p_0\\right)},
tests/functional/setups/manu_poromech_nofrac.py:    p(x, y, t) = t x (1 - x) y (1- y),
tests/functional/setups/manu_poromech_nofrac.py:    p(x, y, t) = t x (1 - x) \\sin{2 \\pi y},
tests/functional/setups/manu_poromech_nofrac.py:    p(x, y, t) = t x (1 - x) y (1 - y) \\sin{\\pi x} \\sin{\\pi y},
tests/functional/setups/manu_poromech_nofrac.py:    u(x, y, t) = t x (1 - x) y (1 - y) \\sin{\\pi x},
tests/functional/setups/manu_poromech_nofrac.py:    u(x, y, t) = t x (1 - x) y (1 - y) \\cos{\\pi x}.
tests/functional/setups/manu_poromech_nofrac.py:    - [1] Garipov, T. T., & Hui, M. H. (2019). Discrete fracture modeling approach for
tests/functional/setups/manu_poromech_nofrac.py:      simulating coupled thermo-hydro-mechanical effects in fractured reservoirs.
tests/functional/setups/manu_poromech_nofrac.py:    - [2] Nordbotten, J. M. (2016). Stable cell-centered finite volume discretization
tests/functional/setups/manu_poromech_nofrac.py:      for Biot equations. SIAM Journal on Numerical Analysis, 54(2), 942-968.
tests/functional/setups/manu_poromech_nofrac.py:    - [3] Varela, J., Gasda, S. E., Keilegavlen, E., & Nordbotten, J. M. (2021). A
tests/functional/setups/manu_poromech_nofrac.py:      Finite-Volume-Based Module for Unsaturated Poroelasticity. Advanced Modeling
tests/functional/setups/manu_poromech_nofrac.py:# -----> Data-saving
tests/functional/setups/manu_poromech_nofrac.py:    """L2-discrete relative error for the displacement."""
tests/functional/setups/manu_poromech_nofrac.py:    """L2-discrete relative error for the Darcy flux."""
tests/functional/setups/manu_poromech_nofrac.py:    """L2-discrete relative error for the poroelastic force."""
tests/functional/setups/manu_poromech_nofrac.py:    """L2-discrete relative error for the pressure."""
tests/functional/setups/manu_poromech_nofrac.py:    """Method for computing the discrete relative L2-error. Normally provided by a
tests/functional/setups/manu_poromech_nofrac.py:    def collect_data(self) -> ManuPoroMechSaveData:
tests/functional/setups/manu_poromech_nofrac.py:# -----> Exact solution
tests/functional/setups/manu_poromech_nofrac.py:        alpha = setup.solid.biot_coefficient()  # [-] Biot coefficient
tests/functional/setups/manu_poromech_nofrac.py:        phi_0 = setup.solid.porosity()  # [-] Reference porosity
tests/functional/setups/manu_poromech_nofrac.py:        c_f = setup.fluid.compressibility()  # [Pa^-1] Fluid compressibility
tests/functional/setups/manu_poromech_nofrac.py:            p = t * x * (1 - x) * y * (1 - y)
tests/functional/setups/manu_poromech_nofrac.py:            p = t * x * (1 - x) * sym.sin(2 * pi * y)
tests/functional/setups/manu_poromech_nofrac.py:            p = t * x * (1 - x) * y * (1 - y) * sym.sin(pi * x) * sym.sin(pi * y)
tests/functional/setups/manu_poromech_nofrac.py:                t * x * (1 - x) * y * (1 - y) * sym.sin(pi * x),
tests/functional/setups/manu_poromech_nofrac.py:                t * x * (1 - x) * y * (1 - y) * sym.cos(pi * x),
tests/functional/setups/manu_poromech_nofrac.py:        rho = rho_0 * sym.exp(c_f * (p - p_0))
tests/functional/setups/manu_poromech_nofrac.py:        q = [-1 * (k / mu_f) * sym.diff(p, x), -1 * (k / mu_f) * sym.diff(p, y)]
tests/functional/setups/manu_poromech_nofrac.py:        phi = phi_0 + ((alpha - phi_0) * (1 - alpha) / K_d) * (p - p_0) + alpha * div_u
tests/functional/setups/manu_poromech_nofrac.py:            [sigma_elas[0][0] - alpha * p, sigma_elas[0][1]],
tests/functional/setups/manu_poromech_nofrac.py:            [sigma_elas[1][0], sigma_elas[1][1] - alpha * p],
tests/functional/setups/manu_poromech_nofrac.py:    # -----> Primary and secondary variables
tests/functional/setups/manu_poromech_nofrac.py:    def pressure(self, sd: pp.Grid, time: float) -> np.ndarray:
tests/functional/setups/manu_poromech_nofrac.py:        # Cell-centered pressures
tests/functional/setups/manu_poromech_nofrac.py:    def displacement(self, sd: pp.Grid, time: float) -> np.ndarray:
tests/functional/setups/manu_poromech_nofrac.py:        # Cell-centered displacements
tests/functional/setups/manu_poromech_nofrac.py:    def darcy_flux(self, sd: pp.Grid, time: float) -> np.ndarray:
tests/functional/setups/manu_poromech_nofrac.py:        """Evaluate exact Darcy flux [m^3 * s^-1] at the face centers.
tests/functional/setups/manu_poromech_nofrac.py:        # Face-centered Darcy fluxes
tests/functional/setups/manu_poromech_nofrac.py:    def poroelastic_force(self, sd: pp.Grid, time: float) -> np.ndarray:
tests/functional/setups/manu_poromech_nofrac.py:            - The returned poroelastic force is given in PorePy's flattened vector
tests/functional/setups/manu_poromech_nofrac.py:            - Recall that force = (stress dot_prod unit_normal) * face_area.
tests/functional/setups/manu_poromech_nofrac.py:        # Face-centered poroelastic force
tests/functional/setups/manu_poromech_nofrac.py:    # -----> Sources
tests/functional/setups/manu_poromech_nofrac.py:    def mechanics_source(self, sd: pp.Grid, time: float) -> np.ndarray:
tests/functional/setups/manu_poromech_nofrac.py:        return -source_mech_flat
tests/functional/setups/manu_poromech_nofrac.py:    def flow_source(self, sd: pp.Grid, time: float) -> np.ndarray:
tests/functional/setups/manu_poromech_nofrac.py:# -----> Utilities
tests/functional/setups/manu_poromech_nofrac.py:    """Mixed-dimensional grid."""
tests/functional/setups/manu_poromech_nofrac.py:    def plot_results(self) -> None:
tests/functional/setups/manu_poromech_nofrac.py:        p_ex = self.results[-1].exact_pressure
tests/functional/setups/manu_poromech_nofrac.py:        p_num = self.results[-1].approx_pressure
tests/functional/setups/manu_poromech_nofrac.py:        u_ex = self.results[-1].exact_displacement
tests/functional/setups/manu_poromech_nofrac.py:        u_num = self.results[-1].approx_displacement
tests/functional/setups/manu_poromech_nofrac.py:# -----> Geometry
tests/functional/setups/manu_poromech_nofrac.py:    def set_domain(self) -> None:
tests/functional/setups/manu_poromech_nofrac.py:    def meshing_arguments(self) -> dict:
tests/functional/setups/manu_poromech_nofrac.py:    def grid_type(self) -> str:
tests/functional/setups/manu_poromech_nofrac.py:# -----> Balance equations
tests/functional/setups/manu_poromech_nofrac.py:    def fluid_source(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/functional/setups/manu_poromech_nofrac.py:        return fluid_sources  # - prod
tests/functional/setups/manu_poromech_nofrac.py:    """Modify momentum balance to account for time-dependent body force."""
tests/functional/setups/manu_poromech_nofrac.py:    def body_force(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/functional/setups/manu_poromech_nofrac.py:# -----> Solution strategy
tests/functional/setups/manu_poromech_nofrac.py:    def before_nonlinear_loop(self) -> None:
tests/functional/setups/manu_poromech_nofrac.py:    def after_simulation(self) -> None:
tests/functional/setups/manu_poromech_nofrac.py:# -----> Mixer class
tests/functional/setups/manu_poromech_nofrac.py:    Mixer class for the two-dimensional non-linear poromechanics verification setup.
tests/functional/test_manu_poromech_nofrac.py:This module contains light-weighted functional tests for a manufactured solution of
tests/functional/test_manu_poromech_nofrac.py:The set of equations is non-linear, with the non-linearity entering through the
tests/functional/test_manu_poromech_nofrac.py:                    rho(p) = rho_0 * exp(c_f * (p - p_0)),
tests/functional/test_manu_poromech_nofrac.py:is the (constant) fluid compressibility. For this setup, we employ rho_0=1 [kg * m^-3],
tests/functional/test_manu_poromech_nofrac.py:c_f=0.02 [Pa^-1], and p_0=0 [Pa].
tests/functional/test_manu_poromech_nofrac.py:porosity phi_ref=0.1 [-] and the Biot coefficient alpha=0.5 [-]. For the exact pressure
tests/functional/test_manu_poromech_nofrac.py:up to absolute (1e-5) and relative (1e-3) tolerances. The values of such tolerances
tests/functional/test_manu_poromech_nofrac.py:floating-point arithmetic close to machine precision.
tests/functional/test_manu_poromech_nofrac.py:L2-error norm (such as the ones defined in [3]). The desired errors were obtained by
tests/functional/test_manu_poromech_nofrac.py:    - [1] Coussy, O. (2004). Poromechanics. John Wiley & Sons. ISO 690
tests/functional/test_manu_poromech_nofrac.py:    - [2] Garipov, T. T., & Hui, M. H. (2019). Discrete fracture modeling approach for
tests/functional/test_manu_poromech_nofrac.py:    simulating coupled thermo-hydro-mechanical effects in fractured reservoirs.
tests/functional/test_manu_poromech_nofrac.py:    - [3] Nordbotten, J. M. (2016). Stable cell-centered finite volume discretization
tests/functional/test_manu_poromech_nofrac.py:    for Biot equations. SIAM Journal on Numerical Analysis, 54(2), 942-968.
tests/functional/test_manu_poromech_nofrac.py:def results() -> list[ManuPoroMechSaveData]:
tests/functional/test_manu_poromech_nofrac.py:        actual.error_pressure, desired.error_pressure, atol=1e-5, rtol=1e-3
tests/functional/test_manu_poromech_nofrac.py:        actual.error_flux, desired.error_flux, atol=1e-5, rtol=1e-3
tests/functional/test_manu_poromech_nofrac.py:        actual.error_displacement, desired.error_displacement, atol=1e-5, rtol=1e-3
tests/functional/test_manu_poromech_nofrac.py:        actual.error_force, desired.error_force, atol=1e-5, rtol=1e-3
tests/functional/test_manu_flow_incomp_frac.py:This module contains light-weighted functional tests for a manufactured flow solution
tests/functional/test_manu_flow_incomp_frac.py:    absolute (1e-5) and relative (1e-3) tolerances. The values of such tolerances aim at
tests/functional/test_manu_flow_incomp_frac.py:    floating-point arithmetic close to machine precision.
tests/functional/test_manu_flow_incomp_frac.py:    errors are measured in a discrete relative L2-error norm (such as the ones
tests/functional/test_manu_flow_incomp_frac.py:        - [1] Varela, J., Ahmed, E., Keilegavlen, E., Nordbotten, J. M., & Radu, F. A.
tests/functional/test_manu_flow_incomp_frac.py:            (2022). A posteriori error estimates for hierarchical mixed-dimensional
tests/functional/test_manu_flow_incomp_frac.py:        - [2] Nordbotten, J. M. (2016). Stable cell-centered finite volume
tests/functional/test_manu_flow_incomp_frac.py:            54(2), 942-968.
tests/functional/test_manu_flow_incomp_frac.py:        atol=1e-5,
tests/functional/test_manu_flow_incomp_frac.py:        rtol=1e-3,
tests/functional/test_manu_flow_incomp_frac.py:        actual_matrix_flux_error, desired_matrix_flux_error, atol=1e-5, rtol=1e-3
tests/functional/test_manu_flow_incomp_frac.py:        actual_frac_pressure_error, desired_frac_pressure_error, atol=1e-5, rtol=1e-3
tests/functional/test_manu_flow_incomp_frac.py:        actual_frac_flux_error, desired_frac_flux_error, atol=1e-5, rtol=1e-3
tests/functional/test_manu_flow_incomp_frac.py:        actual_intf_flux_error, desired_intf_flux_error, atol=1e-5, rtol=1e-3
tests/functional/test_manu_flow_comp_frac.py:This module contains light-weighted functional tests for a manufactured solution of
tests/functional/test_manu_flow_comp_frac.py:natural extension of the incompressible case, see [1]. The non-linearity is included
tests/functional/test_manu_flow_comp_frac.py:    \rho(p) = \rho_0 \exp{(c_f (p - p_0))},
tests/functional/test_manu_flow_comp_frac.py:where, for our setup, :math:`\rho_0 = 1` [kg * m^-3], :math:`c_f = 0.2` [Pa^-1],
tests/functional/test_manu_flow_comp_frac.py:up to absolute (1e-5) and relative (1e-3) tolerances. The values of such tolerances
tests/functional/test_manu_flow_comp_frac.py:floating-point arithmetic close to machine precision.
tests/functional/test_manu_flow_comp_frac.py:errors are measured in a discrete relative L2-error norm (such as the ones defined
tests/functional/test_manu_flow_comp_frac.py:    - [1] Varela, J., Ahmed, E., Keilegavlen, E., Nordbotten, J. M., & Radu,
tests/functional/test_manu_flow_comp_frac.py:    F. A. (2022). A posteriori error estimates for hierarchical mixed-dimensional
tests/functional/test_manu_flow_comp_frac.py:    - [2] Nordbotten, J. M. (2016). Stable cell-centered finite volume discretization
tests/functional/test_manu_flow_comp_frac.py:    for Biot equations. SIAM Journal on Numerical Analysis, 54(2), 942-968.
tests/functional/test_manu_flow_comp_frac.py:    - [3] Garipov, T. T., & Hui, M. H. (2019). Discrete fracture modeling approach for
tests/functional/test_manu_flow_comp_frac.py:    simulating coupled thermo-hydro-mechanical effects in fractured reservoirs.
tests/functional/test_manu_flow_comp_frac.py:def results() -> list[ManuCompSaveData]:
tests/functional/test_manu_flow_comp_frac.py:        atol=1e-5,
tests/functional/test_manu_flow_comp_frac.py:        rtol=1e-3,
tests/functional/test_manu_flow_comp_frac.py:        actual.error_matrix_flux, desired.error_matrix_flux, atol=1e-5, rtol=1e-3
tests/functional/test_manu_flow_comp_frac.py:        atol=1e-5,
tests/functional/test_manu_flow_comp_frac.py:        rtol=1e-3,
tests/functional/test_manu_flow_comp_frac.py:        actual.error_frac_flux, desired.error_frac_flux, atol=1e-5, rtol=1e-3
tests/functional/test_manu_flow_comp_frac.py:        actual.error_intf_flux, desired.error_intf_flux, atol=1e-5, rtol=1e-3
tests/regression/run_cron_test.sh:set -ev
tests/regression/run_cron_test.sh:  	docker run -u root docker.io/pmgbergen/porepylib:py27 /bin/sh -c "cd /home/porepy/porepy-src; python setup.py test;sh ./test/regression/run_cron_test.sh"
tests/regression/run_cron_test.sh:  	 docker run -u root docker.io/pmgbergen/porepylib:py36 /bin/sh -c "cd /home/porepy/porepy-src; python setup.py test;sh ./test/regression/run_cron_test.sh"
tests/regression/check_tutorials.py:        new_file = file[:-6] + ".py"
tests/regression/check_tutorials.py:        cmd_convert = "jupyter nbconvert --to script " + file
tests/integration/test_mdg_generation.py:Collection of tests for validating the mixed-dimensional grid generation
tests/integration/test_mdg_generation.py:    """Test suite for verifying the md-grid generation of pp.create_mdg"""
tests/integration/test_mdg_generation.py:    def cell_size(self) -> float:
tests/integration/test_mdg_generation.py:    def fracture_2d_data(self) -> List[np.ndarray]:
tests/integration/test_mdg_generation.py:    def fracture_3d_data(self) -> List[np.array]:
tests/integration/test_mdg_generation.py:    def higher_level_extra_args_data_2d(self) -> List[dict]:
tests/integration/test_mdg_generation.py:    def lower_level_extra_args_data_2d(self) -> List[dict]:
tests/integration/test_mdg_generation.py:    def higher_level_extra_args_data_3d(self) -> List[dict]:
tests/integration/test_mdg_generation.py:    def lower_level_extra_args_data_3d(self) -> List[dict]:
tests/integration/test_mdg_generation.py:    ) -> FractureNetwork:
tests/integration/test_mdg_generation.py:            - FractureNetwork2d
tests/integration/test_mdg_generation.py:            - FractureNetwork3d
tests/integration/test_mdg_generation.py:        """Generates a mixed-dimensional grid using pp.create_mdg
tests/integration/test_mdg_generation.py:        """Generates a mixed-dimensional grid using lower level functions
tests/integration/test_mdg_generation.py:            - fracture_network.mesh
tests/integration/test_mdg_generation.py:            - pp.meshing.cart_grid
tests/integration/test_mdg_generation.py:            - pp.meshing.tensor_grid
tests/integration/test_mdg_generation.py:    def mdg_equality(self, h_mdg, l_mdg) -> bool:
tests/integration/test_mdg_generation.py:    def test_generation(self, grid_type, domain_index, fracture_indices) -> None:
tests/integration/test_mdg_generation.py:        - high-level generation means the actual use of the function pp.create_mdg;
tests/integration/test_mdg_generation.py:        - lower-level generation means the generation of an mdg for each grid_type
tests/integration/test_mdg_generation.py:        # - lower level signatures were changed without updates on the `create_mdg`;
tests/integration/test_mdg_generation.py:        # - `create_mdg` were updated without mapping signatures to the lower level.
tests/integration/test_mdg_generation.py:                loc_meshing_args[chunk] = -1.0
tests/integration/test_mdg_generation.py:                ref_msg = str(chunk + " must be strictly positive %r" % -1.0)
tests/integration/test_mdg_generation.py:                loc_meshing_args[chunk] = -1.0
tests/integration/test_mdg_generation.py:                ref_msg = str(chunk + " must be strictly positive %r" % -1.0)
tests/integration/test_mdg_generation.py:                pts = np.array([-1.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.1])
tests/integration/test_mdg_generation.py:    def line_fractures(self) -> list[list[pp.LineFracture]]:
tests/integration/test_mdg_generation.py:    def plane_fractures(self) -> list[list[pp.PlaneFracture]]:
tests/integration/test_mdg_generation.py:        f1 = pp.PlaneFracture(np.array([[0, 0, 0, 0], [-2, 2, 2, -2], [-2, -2, 2, 2]]))
tests/integration/test_mdg_generation.py:        f2 = pp.PlaneFracture(np.array([[-2, -2, 2, 2], [0, 0, 0, 0], [-2, 2, 2, -2]]))
tests/integration/test_mdg_generation.py:    ) -> None:
tests/integration/test_mdg_generation.py:    ) -> None:
tests/integration/test_coarsening.py:# ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:        self.assertTrue(np.array_equal(orient_cell0, [-1, 1, -1, 1, -1, -1, 1, 1]))
tests/integration/test_coarsening.py:        self.assertTrue(np.array_equal(orient_cell1, [-1, 1, -1, 1, -1, 1]))
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:        known = [-1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, 1, 1, 1, 1]
tests/integration/test_coarsening.py:        known = [-1, 1, -1, -1, 1, 1, -1, -1, 1, 1]
tests/integration/test_coarsening.py:        known = [-1, 1, -1, -1, 1, 1, -1, -1, 1, 1]
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:        # non-fixed order, we need to exclude this test.
tests/integration/test_coarsening.py:                    [-1.66533454e-16, -5.55111512e-17, 5.55111512e-17, 1.66533454e-16],
tests/integration/test_coarsening.py:                    [-1.66533454e-16, -5.55111512e-17, 5.55111512e-17, 1.66533454e-16],
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:        # Be carefull! If the indexing of any grids (including mg) change the hard-coded
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:        # non-fixed order, we need to exclude this test.
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:        known_map = np.array([4, 3, 7, 5, 11, 8, 1, 2, 10, 6, 12, 9]) - 1
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:            - 1
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:            - 1
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:        # non-fixed order, we need to exclude this test.
tests/integration/test_coarsening.py:                    [-1.66533454e-16, -5.55111512e-17, 5.55111512e-17, 1.66533454e-16],
tests/integration/test_coarsening.py:                    [-1.66533454e-16, -5.55111512e-17, 5.55111512e-17, 1.66533454e-16],
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:        # non-fixed order, we need to exclude this test.
tests/integration/test_coarsening.py:                    [-1.66533454e-16, -5.55111512e-17, 5.55111512e-17, 1.66533454e-16],
tests/integration/test_coarsening.py:                    [-1.66533454e-16, -5.55111512e-17, 5.55111512e-17, 1.66533454e-16],
tests/integration/test_coarsening.py:    # ------------------------------------------------------------------------------#
tests/integration/test_coarsening.py:        # non-fixed order, we need to exclude this test.
tests/integration/test_coarsening.py:            f1 = np.array([[N / 2.0, N / 2.0], [1.0, N - 1.0]])
tests/integration/test_coarsening.py:            f2 = np.array([[1.0, N - 1.0], [N / 2.0, N / 2.0]])
tests/integration/test_coarsening.py:                        -9.43689571e-16,
tests/integration/test_coarsening.py:                        -8.32667268e-16,
tests/integration/test_coarsening.py:                        -7.21644966e-16,
tests/integration/test_coarsening.py:                        -6.10622664e-16,
tests/integration/test_coarsening.py:                        -4.99600361e-16,
tests/integration/test_coarsening.py:                        -3.88578059e-16,
tests/integration/test_coarsening.py:                        -2.77555756e-16,
tests/integration/test_coarsening.py:                        -1.66533454e-16,
tests/integration/test_coarsening.py:                        -5.55111512e-17,
tests/integration/test_coarsening.py:                        5.55111512e-17,
tests/integration/test_coarsening.py:                        1.66533454e-16,
tests/integration/test_coarsening.py:                        2.77555756e-16,
tests/integration/test_coarsening.py:                        3.88578059e-16,
tests/integration/test_coarsening.py:                        4.99600361e-16,
tests/integration/test_coarsening.py:                        6.10622664e-16,
tests/integration/test_coarsening.py:                        7.21644966e-16,
tests/integration/test_coarsening.py:                        8.32667268e-16,
tests/integration/test_coarsening.py:                        9.43689571e-16,
tests/integration/test_coarsening.py:                        -9.43689571e-16,
tests/integration/test_coarsening.py:                        -8.32667268e-16,
tests/integration/test_coarsening.py:                        -7.21644966e-16,
tests/integration/test_coarsening.py:                        -6.10622664e-16,
tests/integration/test_coarsening.py:                        -4.99600361e-16,
tests/integration/test_coarsening.py:                        -3.88578059e-16,
tests/integration/test_coarsening.py:                        -2.77555756e-16,
tests/integration/test_coarsening.py:                        -1.66533454e-16,
tests/integration/test_coarsening.py:                        -5.55111512e-17,
tests/integration/test_coarsening.py:                        5.55111512e-17,
tests/integration/test_coarsening.py:                        1.66533454e-16,
tests/integration/test_coarsening.py:                        2.77555756e-16,
tests/integration/test_coarsening.py:                        3.88578059e-16,
tests/integration/test_coarsening.py:                        4.99600361e-16,
tests/integration/test_coarsening.py:                        6.10622664e-16,
tests/integration/test_coarsening.py:                        7.21644966e-16,
tests/integration/test_coarsening.py:                        8.32667268e-16,
tests/integration/test_coarsening.py:                        9.43689571e-16,
tests/integration/test_coarsening.py:# ------------------------------------------------------------------------------#
tests/integration/test_DFN.py:                [0.75, 0.0, 0.0, -0.25, 1, 0],
tests/integration/test_DFN.py:                [0.0, -0.25, 0.75, 0.0, 0, -1],
tests/integration/test_DFN.py:                [1.0, 0.0, 0.0, -1.0, 0, 0],
tests/integration/test_DFN.py:                [0.0, 1.0, -1.0, 0.0, 0, 0],
tests/integration/test_DFN.py:                [0.75, 0.0, 0.0, -0.25, 1, 0],
tests/integration/test_DFN.py:                [0.0, -0.25, 0.75, 0.0, 0, -1],
tests/integration/test_DFN.py:                [1.0, 0.0, 0.0, -1.0, 0, 0],
tests/integration/test_DFN.py:                [0.0, 1.0, -1.0, 0.0, 0, 0],
tests/integration/test_DFN.py:        b_f2 = np.array([1, 0, -1, 0, 0, 0])
tests/integration/test_DFN.py:                [0.0, -0.25],
tests/integration/test_DFN.py:                [0.0, -1.0],
tests/integration/test_DFN.py:                [-1.0, 0.0],
tests/integration/test_DFN.py:            [[0.0, 0.75, -0.25, 0.0, 0, 1], [0.25, 0.0, 0.0, -0.75, 1, 0]]
tests/integration/test_DFN.py:        A_e1_e_e = np.matrix([[-0.75, 0.0], [0.0, -0.75]])
tests/integration/test_DFN.py:        A_e1_e_primary = np.matrix([[-1.0], [-1.0]])
tests/integration/test_DFN.py:        A_e1_primary_e = np.matrix([[-1.0, -1.0]])
tests/integration/test_DFN.py:                [0.0, -0.25],
tests/integration/test_DFN.py:                [0.0, -1.0],
tests/integration/test_DFN.py:                [-1.0, 0.0],
tests/integration/test_DFN.py:            [[0.0, 0.75, -0.25, 0.0, 0.0, 1.0], [0.25, 0.0, 0.0, -0.75, 1.0, 0.0]]
tests/integration/test_DFN.py:        A_e2_e_e = np.matrix([[-0.75, 0.0], [0.0, -0.75]])
tests/integration/test_DFN.py:        A_e2_e_primary = np.matrix([[-1.0], [-1.0]])
tests/integration/test_DFN.py:        A_e2_primary_e = np.matrix([[-1.0, -1.0]])
tests/integration/test_DFN.py:        A_e1_e_e = np.matrix([[-0.5, 0.0], [0.0, -0.5]])
tests/integration/test_DFN.py:        A_e1_e_primary = np.matrix([[-1.0], [-1.0]])
tests/integration/test_DFN.py:        A_e1_primary_e = np.matrix([[-1.0, -1.0]])
tests/integration/test_DFN.py:        A_e2_e_e = np.matrix([[-0.5, 0.0], [0.0, -0.5]])
tests/integration/test_DFN.py:        A_e2_e_primary = np.matrix([[-1.0], [-1.0]])
tests/integration/test_DFN.py:        A_e2_primary_e = np.matrix([[-1.0, -1.0]])
tests/integration/test_DFN.py:# ------------------------- HELP FUNCTIONS --------------------------------#
tests/integration/test_DFN.py:    """Remove the higher-dimensional subdomain and fix the internal mapping."""
tests/integration/test_DFN.py:    # Remove the +1 and -2 dimensional grids with respect to the
tests/integration/test_DFN.py:    # considered dfn, and re-write the node number.
tests/integration/test_DFN.py:        sd for sd in mdg.subdomains(dim=dim - 2)
tests/integration/ad/test_equation_system_evaluation.py:    # Try testing both the individual variable and its mixed-dimensional wrapper.
tests/integration/ad/test_equation_system_evaluation.py:        assert np.allclose(val_increment.val, val.val - val_prev_timestep)
tests/integration/test_2d_benchmark_geiger.py:        kf = 1e-4
tests/integration/test_2d_benchmark_geiger.py:        kf = 1e-4
tests/integration/test_2d_benchmark_geiger.py:        kf = 1e-4
tests/integration/test_2d_benchmark_geiger.py:        kf = 1e-4
tests/integration/test_upwind_coupling.py:# ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:    # ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:        tol = 1e-3
tests/integration/test_upwind_coupling.py:        a = 1e-2
tests/integration/test_upwind_coupling.py:            aperture = np.ones(sd.num_cells) * np.power(1e-2, mdg.dim_max() - sd.dim)
tests/integration/test_upwind_coupling.py:                top = bound_face_centers[1, :] > 1 - tol
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, -1.0, -1.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, -1.0, -1.0, 0.0],
tests/integration/test_upwind_coupling.py:                [1.0, 0.0, 0.0, 0.0, -1.0],
tests/integration/test_upwind_coupling.py:        theta_known = [1, 1, 1, -1, 1]
tests/integration/test_upwind_coupling.py:        rtol = 1e-15
tests/integration/test_upwind_coupling.py:    # ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:        tol = 1e-3
tests/integration/test_upwind_coupling.py:        a = 1e-2
tests/integration/test_upwind_coupling.py:            aperture = np.ones(sd.num_cells) * np.power(a, mdg.dim_max() - sd.dim)
tests/integration/test_upwind_coupling.py:                right = bound_face_centers[0, :] > 1 - tol
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.01, -1.0, -1.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, -1.0, 0.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, 0.0, -1.0],
tests/integration/test_upwind_coupling.py:        rhs_known = np.array([0.5, 0.5, 1e-2, 0, 0])
tests/integration/test_upwind_coupling.py:        rtol = 1e-15
tests/integration/test_upwind_coupling.py:    # ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:        tol = 1e-3
tests/integration/test_upwind_coupling.py:        a = 1e-2
tests/integration/test_upwind_coupling.py:            aperture = np.ones(sd.num_cells) * np.power(a, mdg.dim_max() - sd.dim)
tests/integration/test_upwind_coupling.py:                right = bound_face_centers[0, :] > 1 - tol
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -0.5,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -0.5,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -0.01,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                -0.5,
tests/integration/test_upwind_coupling.py:                -0.5,
tests/integration/test_upwind_coupling.py:                -0.01,
tests/integration/test_upwind_coupling.py:        rtol = 1e-15
tests/integration/test_upwind_coupling.py:    # ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:        tol = 1e-3
tests/integration/test_upwind_coupling.py:        a = 1e-2
tests/integration/test_upwind_coupling.py:            aperture = np.ones(g.num_cells) * np.power(a, mdg.dim_max() - g.dim)
tests/integration/test_upwind_coupling.py:                top = bound_face_centers[2, :] > 1 - tol
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, -1.0, -1.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, -1.0, -1.0, 0.0],
tests/integration/test_upwind_coupling.py:                [1.0, 0.0, 0.0, 0.0, -1.0],
tests/integration/test_upwind_coupling.py:        theta_known = np.array([1, 1, 1, -1, 1])
tests/integration/test_upwind_coupling.py:        rtol = 1e-15
tests/integration/test_upwind_coupling.py:    # ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:        tol = 1e-3
tests/integration/test_upwind_coupling.py:        a = 1e-2
tests/integration/test_upwind_coupling.py:            aperture = np.ones(sd.num_cells) * np.power(a, mdg.dim_max() - sd.dim)
tests/integration/test_upwind_coupling.py:            right = bound_face_centers[0, :] > 1 - tol
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.01, -1.0, -1.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, -1.0, 0.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, 0.0, -1.0],
tests/integration/test_upwind_coupling.py:        rtol = 1e-15
tests/integration/test_upwind_coupling.py:    # ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:        tol = 1e-3
tests/integration/test_upwind_coupling.py:        a = 1e-2
tests/integration/test_upwind_coupling.py:            aperture = np.ones(sd.num_cells) * np.power(a, mdg.dim_max() - sd.dim)
tests/integration/test_upwind_coupling.py:                right = bound_face_centers[0, :] > 1 - tol
tests/integration/test_upwind_coupling.py:                -2.50000000e-01,
tests/integration/test_upwind_coupling.py:                -2.50000000e-01,
tests/integration/test_upwind_coupling.py:                -2.50000000e-01,
tests/integration/test_upwind_coupling.py:                -2.50000000e-01,
tests/integration/test_upwind_coupling.py:                2.50000000e-01,
tests/integration/test_upwind_coupling.py:                2.50000000e-01,
tests/integration/test_upwind_coupling.py:                2.50000000e-01,
tests/integration/test_upwind_coupling.py:                2.50000000e-01,
tests/integration/test_upwind_coupling.py:                -5.00000000e-03,
tests/integration/test_upwind_coupling.py:                5.00000000e-03,
tests/integration/test_upwind_coupling.py:                -5.00000000e-03,
tests/integration/test_upwind_coupling.py:                5.00000000e-03,
tests/integration/test_upwind_coupling.py:                -5.55111512e-19,
tests/integration/test_upwind_coupling.py:                5.55111512e-19,
tests/integration/test_upwind_coupling.py:                -5.55111512e-19,
tests/integration/test_upwind_coupling.py:                5.55111512e-19,
tests/integration/test_upwind_coupling.py:                -5.55111512e-19,
tests/integration/test_upwind_coupling.py:                5.55111512e-19,
tests/integration/test_upwind_coupling.py:                -5.55111512e-19,
tests/integration/test_upwind_coupling.py:                5.55111512e-19,
tests/integration/test_upwind_coupling.py:                -5.00000000e-03,
tests/integration/test_upwind_coupling.py:                5.00000000e-03,
tests/integration/test_upwind_coupling.py:                -5.00000000e-03,
tests/integration/test_upwind_coupling.py:                5.00000000e-03,
tests/integration/test_upwind_coupling.py:                1.00000000e-04,
tests/integration/test_upwind_coupling.py:                -0.00000000e00,
tests/integration/test_upwind_coupling.py:                -0.00000000e00,
tests/integration/test_upwind_coupling.py:                -1.00000000e-04,
tests/integration/test_upwind_coupling.py:        rtol = 1e-15
tests/integration/test_upwind_coupling.py:    # ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:        a = 1e-2
tests/integration/test_upwind_coupling.py:            aperture = np.ones(sd.num_cells) * np.power(a, mdg.dim_max() - sd.dim)
tests/integration/test_upwind_coupling.py:                [-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -2.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -2.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0],
tests/integration/test_upwind_coupling.py:                [0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0],
tests/integration/test_upwind_coupling.py:                -1.40740741,
tests/integration/test_upwind_coupling.py:                -1.40740741,
tests/integration/test_upwind_coupling.py:        rtol = 1e-8
tests/integration/test_upwind_coupling.py:    # ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:        a = 1e-1
tests/integration/test_upwind_coupling.py:            aperture = np.ones(sd.num_cells) * np.power(a, mdg.dim_max() - sd.dim)
tests/integration/test_upwind_coupling.py:                [-1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0],
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, -1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/integration/test_upwind_coupling.py:                [-1.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0],
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -0.1,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                    -1.0,
tests/integration/test_upwind_coupling.py:                [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0],
tests/integration/test_upwind_coupling.py:                [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0],
tests/integration/test_upwind_coupling.py:            [3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, -3.0, -3.0, 3.0, 3.0]
tests/integration/test_upwind_coupling.py:        rtol = 1e-15
tests/integration/test_upwind_coupling.py:# ------------------------------------------------------------------------------#
tests/integration/test_upwind_coupling.py:    gb - grid bucket
tests/integration/test_upwind_coupling.py:    upwind- upwind discretization class
tests/integration/test_upwind_coupling.py:    flux - 3 x 1 flux at all faces [u, v, w]
tests/integration/test_upwind_coupling.py:    a - cross-sectional area of the fractures.
tests/integration/test_upwind_coupling.py:        aperture = np.ones(sd.num_cells) * np.power(a, mdg.dim_max() - sd.dim)
tests/integration/test_upwind_coupling.py:# #------------------------------------------------------------------------------#
tests/integration/test_fv_disc.py:# -*- coding: utf-8 -*-
tests/integration/test_fv_disc.py:    bot_faces = np.argwhere(g.face_centers[1] < 1e-5).ravel()
tests/integration/test_fv_disc.py:    top_faces = np.argwhere(g.face_centers[1] > 1 - 1e-5).ravel()
tests/integration/test_fv_disc.py:    left_faces = np.argwhere(g.face_centers[0] < 1e-5).ravel()
tests/integration/test_fv_disc.py:    right_faces = np.argwhere(g.face_centers[0] > 1 - 1e-5).ravel()
tests/integration/test_fv_disc.py:    rhs = -div * bound_flux * pr_bound + src * g.cell_volumes
tests/integration/test_fv_disc.py:    p_diff = pr - pr_cell
tests/integration/test_fv_disc.py:           --------
tests/integration/test_fv_disc.py:           -------
tests/integration/test_fv_disc.py:    bot_faces = np.argwhere(g.face_centers[1] < 1e-5).ravel()
tests/integration/test_fv_disc.py:    top_faces = np.argwhere(g.face_centers[1] > 1 - 1e-5).ravel()
tests/integration/test_fv_disc.py:    left_faces = np.argwhere(g.face_centers[0] < 1e-5).ravel()
tests/integration/test_fv_disc.py:    right_faces = np.argwhere(g.face_centers[0] > 1 - 1e-5).ravel()
tests/integration/test_fv_disc.py:    rhs = -div * bound_flux * pr_bound + src
tests/integration/test_fv_disc.py:    p_diff = pr[5:15] - np.hstack((pr[-5:], pr[-10:-5]))
tests/integration/test_fv_disc.py:    assert np.max(np.abs(p_diff)) < 1e-10
tests/integration/test_mpfa.py:# -*- coding: utf-8 -*-
tests/integration/test_mpfa.py:        self.assertTrue(A[mid - 1, mid] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[mid + 1, mid] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[mid - 3, mid] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[mid + 3, mid] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[0, 1] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[0, 3] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[2, 1] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[2, 5] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[1, 0] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[1, 2] == -1)
tests/integration/test_mpfa.py:        self.assertTrue(A[1, 4] == -1)
tests/integration/test_mpfa.py:        pr = np.linalg.solve(a.todense(), -rhs)
tests/integration/test_mpfa.py:        p_diff = pr - pr_cell
tests/integration/test_mpfa.py:        self.assertTrue(np.max(np.abs(p_diff)) < 1e-8)
tests/integration/test_mpfa.py:        pr = np.linalg.solve(a.todense(), -rhs)
tests/integration/test_mpfa.py:        p_diff = pr - pr_cell
tests/integration/test_mpfa.py:        self.assertTrue(np.max(np.abs(p_diff)) < 1e-8)
tests/integration/test_mpfa.py:            0.5 - np.random.rand(g.nodes.shape[0], g.num_nodes)
tests/integration/test_mpfa.py:        # Cancel perturbations in z-coordinate.
tests/integration/test_mpfa.py:        pr = np.linalg.solve(a.todense(), -rhs)
tests/integration/test_mpfa.py:        p_diff = pr - pr_cell
tests/integration/test_mpfa.py:        self.assertTrue(np.max(np.abs(p_diff)) < 1e-8)
tests/integration/models/test_equations.py:            dimensions_to_assemble = domain_dim - only_codimension
tests/integration/models/test_diagnostics_mixin.py:def setup() -> PoromechanicsWithDiagnostics:
tests/integration/models/test_diagnostics_mixin.py:def test_diagnostics_mixin_basic(_, setup: PoromechanicsWithDiagnostics) -> None:
tests/integration/models/test_diagnostics_mixin.py:) -> None:
tests/integration/models/test_diagnostics_mixin.py:    def custom_handler(mat, equation_name, variable_name) -> float:
tests/integration/models/test_diagnostics_mixin.py:def test_diagnostics_mixin_grouping(_, setup: PoromechanicsWithDiagnostics) -> None:
tests/integration/models/test_diagnostics_mixin.py:    def is_interface_block(mat, equation_name, variable_name) -> float:
tests/integration/models/test_evaluate_constitutive_laws.py:        (setup_utils.Poromechanics, "fluid_density", 1000 * np.exp(4e-10 * 2), None),
tests/integration/models/test_evaluate_constitutive_laws.py:            # \rho = \rho_0 \exp(compressibility p - thermal_expansion T)
tests/integration/models/test_evaluate_constitutive_laws.py:            1000 * np.exp(4e-10 * 2 - 2.1e-4 * 3),
tests/integration/models/test_evaluate_constitutive_laws.py:            (1 - 7e-3) * 2.5 + 7e-3 * 0.6,
tests/integration/models/test_evaluate_constitutive_laws.py:            # phi_0 + (alpha - phi_ref) * (1 - alpha) / bulk p. Only pressure, not
tests/integration/models/test_evaluate_constitutive_laws.py:            7e-3 + (0.8 - 7e-3) * (1 - 0.8) / (11.11 * pp.GIGA) * 2,
tests/integration/models/test_evaluate_constitutive_laws.py:            # phi_0 + (alpha - phi_ref) * (1 - alpha) / bulk * p
tests/integration/models/test_evaluate_constitutive_laws.py:            # - (alpha - phi_0) * thermal expansion * T
tests/integration/models/test_evaluate_constitutive_laws.py:                7e-3
tests/integration/models/test_evaluate_constitutive_laws.py:                + (0.8 - 7e-3) * (1 - 0.8) / (11.11 * pp.GIGA) * 2
tests/integration/models/test_evaluate_constitutive_laws.py:                - (0.8 - 7e-3) * 1e-5 * 3
tests/integration/models/test_evaluate_constitutive_laws.py:            # (-normal_traction) * maximum_closure /
tests/integration/models/test_evaluate_constitutive_laws.py:            #    (normal_stiffness * maximum_closure + (-normal_traction))
tests/integration/models/test_evaluate_constitutive_laws.py:            (1 * 1e-4) / (1529 * 1e-4 + 1),
tests/integration/models/test_evaluate_constitutive_laws.py:            1e-20,
tests/integration/models/test_evaluate_constitutive_laws.py:            # for the 1-d domain.
tests/integration/models/test_evaluate_constitutive_laws.py:    # Assign non-trivial values to the parameters to avoid masking errors.
tests/integration/models/test_evaluate_constitutive_laws.py:    # This yields non-zero perturbations.
tests/integration/models/test_evaluate_constitutive_laws.py:    assert np.allclose(val, expected, rtol=1e-8, atol=1e-10)
tests/integration/models/test_evaluate_constitutive_laws.py:            - subdomain aperture
tests/integration/models/test_evaluate_constitutive_laws.py:            - subdomain specific volume
tests/integration/models/test_evaluate_constitutive_laws.py:            - interface specific volume
tests/integration/models/test_evaluate_constitutive_laws.py:    # Assign non-trivial values to the parameters to avoid masking errors.
tests/integration/models/test_poromechanics.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/test_poromechanics.py:        subdomain and matrix-fracture interface. Also initialize boundary conditions
tests/integration/models/test_poromechanics.py:                sd.dim, -1, order="F"
tests/integration/models/test_poromechanics.py:    def fracture_stress(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Operator:
tests/integration/models/test_poromechanics.py:            Poromechanical stress operator on matrix-fracture interfaces.
tests/integration/models/test_poromechanics.py:        if not all([intf.dim == self.nd - 1 for intf in interfaces]):
tests/integration/models/test_poromechanics.py:            raise ValueError("Interfaces must be of dimension nd - 1.")
tests/integration/models/test_poromechanics.py:    def fluid_source(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/integration/models/test_poromechanics.py:                    self.params["fracture_source_value"], "kg * s ^ -1"
tests/integration/models/test_poromechanics.py:        uy_north (float): Displacement in y-direction on the north boundary.
tests/integration/models/test_poromechanics.py:    solid_vals["residual_aperture"] = 1e-10
tests/integration/models/test_poromechanics.py:) -> tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray, np.ndarray]:
tests/integration/models/test_poromechanics.py:    ).reshape(setup.nd, -1, order="F")
tests/integration/models/test_poromechanics.py:        [setup.pressure_variable], setup.mdg.subdomains(dim=setup.nd - 1)
tests/integration/models/test_poromechanics.py:    sd_frac = setup.mdg.subdomains(dim=setup.nd - 1)
tests/integration/models/test_poromechanics.py:        .val.reshape(setup.nd, -1, order="F")
tests/integration/models/test_poromechanics.py:        .val.reshape(setup.nd, -1, order="F")
tests/integration/models/test_poromechanics.py:        ({}, -0.1),
tests/integration/models/test_poromechanics.py:    tol = 1e-10
tests/integration/models/test_poromechanics.py:        left = sd_nd.cell_centers[0] < setup.domain.bounding_box["xmax"] / 2 - tol
tests/integration/models/test_poromechanics.py:        assert np.all(p_vals > 0 - tol)
tests/integration/models/test_poromechanics.py:        assert np.all(jump[1] > -tol)
tests/integration/models/test_poromechanics.py:        # Normal traction should be non-positive. Zero if north_displacement equals
tests/integration/models/test_poromechanics.py:            assert np.all(traction[setup.nd - 1 :: setup.nd] <= tol)
tests/integration/models/test_poromechanics.py:        .val.reshape((m.nd, -1), order="F")
tests/integration/models/test_poromechanics.py:    tol = 1e-10
tests/integration/models/test_poromechanics.py:        assert np.all(p < -tol)
tests/integration/models/test_poromechanics.py:    assert np.abs(np.sum(jump[0])) < 1e-5
tests/integration/models/test_poromechanics.py:    assert np.all(np.abs(traction) < 1e-7)
tests/integration/models/test_poromechanics.py:    assert np.all(p_frac < -1e-7)
tests/integration/models/test_poromechanics.py:    setup.params["uy_south"] = -0.001
tests/integration/models/test_poromechanics.py:    assert np.abs(np.sum(jump[0])) < 1e-5
tests/integration/models/test_poromechanics.py:    assert np.all(np.abs(traction) < 1e-7)
tests/integration/models/test_poromechanics.py:    assert np.all(p_frac < -1e-7)
tests/integration/models/test_poromechanics.py:    setup = create_fractured_setup({}, {}, -0.001)
tests/integration/models/test_poromechanics.py:    assert np.all(p_frac > 1e-10)
tests/integration/models/test_poromechanics.py:    assert np.abs(np.sum(jump[0])) < 1e-5
tests/integration/models/test_poromechanics.py:    assert np.all(np.abs(traction) < 1e-7)
tests/integration/models/test_poromechanics.py:    assert np.all(p_frac > 4.7e-4)
tests/integration/models/test_poromechanics.py:    assert np.all(p_frac < 4.9e-4)
tests/integration/models/test_poromechanics.py:    setup_ref.params["uy_south"] = -0.001
tests/integration/models/test_poromechanics.py:    setup.params["uy_south"] = -0.001
tests/integration/models/test_poromechanics.py:    variable_units = ["Pa", "Pa * m^2 * s^-1", "m", "m"]
tests/integration/models/test_poromechanics.py:    flux_units = ["Pa * m^2 * s^-1", "kg * m^-1 * s^-1", "Pa * m", "Pa"]
tests/integration/models/test_materials_and_units.py:    - Units
tests/integration/models/test_materials_and_units.py:       - Setting default and modified unit objects
tests/integration/models/test_materials_and_units.py:       - Relationships between base and derived units
tests/integration/models/test_materials_and_units.py:    - Material properties
tests/integration/models/test_materials_and_units.py:        - Unit conversion
tests/integration/models/test_materials_and_units.py:        - Default values
tests/integration/models/test_materials_and_units.py:        - Setting modified values TODO
tests/integration/models/test_materials_and_units.py:def subdomains() -> list[pp.Grid]:
tests/integration/models/test_materials_and_units.py:def base_units() -> list[str]:
tests/integration/models/test_materials_and_units.py:def derived_units() -> list[str]:
tests/integration/models/test_materials_and_units.py:        assert np.isclose(material.convert_units(1, f"{unit}^-2"), val**2)
tests/integration/models/test_materials_and_units.py:    assert np.isclose(material.convert_units(1, "m^2 *Pa^-1"), expected)
tests/integration/models/test_materials_and_units.py:    assert np.isclose(material.convert_units(1, "m^2*Pa^-1*s^-1"), expected)
tests/integration/models/test_materials_and_units.py:    invalid_units = ["invalid", "m^2*invalid", "^2", "s^-1*", "2", "m**2"]
tests/integration/models/test_materials_and_units.py:    dimensionless_units = ["", "1", "-", "   "]
tests/integration/models/test_thermoporomechanics.py:) -> TailoredThermoporomechanics:
tests/integration/models/test_thermoporomechanics.py:    solid_vals["residual_aperture"] = 1e-10
tests/integration/models/test_thermoporomechanics.py:    solid_vals["thermal_expansion"] = 1e-1
tests/integration/models/test_thermoporomechanics.py:    fluid_vals["thermal_expansion"] = 1e-1
tests/integration/models/test_thermoporomechanics.py:        [setup.temperature_variable], setup.mdg.subdomains(dim=setup.nd - 1)
tests/integration/models/test_thermoporomechanics.py:        ({}, -0.1),
tests/integration/models/test_thermoporomechanics.py:    tol = 1e-10
tests/integration/models/test_thermoporomechanics.py:        left = sd.cell_centers[0] < setup.domain.bounding_box["xmax"] / 2 - tol
tests/integration/models/test_thermoporomechanics.py:        assert np.all(p_vals > 0 - tol)
tests/integration/models/test_thermoporomechanics.py:        assert np.all(t_vals > 0 - tol)
tests/integration/models/test_thermoporomechanics.py:        assert np.all(jump[1] > -tol)
tests/integration/models/test_thermoporomechanics.py:        # Normal traction should be non-positive. Zero if uy_north equals
tests/integration/models/test_thermoporomechanics.py:            assert np.all(traction[setup.nd - 1 :: setup.nd] <= tol)
tests/integration/models/test_thermoporomechanics.py:    assert np.abs(np.sum(jump[0])) < 1e-5
tests/integration/models/test_thermoporomechanics.py:    assert np.all(np.abs(traction) < 1e-7)
tests/integration/models/test_thermoporomechanics.py:    assert np.all(p_frac < -1e-7)
tests/integration/models/test_thermoporomechanics.py:    assert np.all(t_frac < -1e-7)
tests/integration/models/test_thermoporomechanics.py:    setup = create_fractured_setup({}, {}, {"uy_south": -0.001})
tests/integration/models/test_thermoporomechanics.py:    assert np.abs(np.sum(jump[0])) < 1e-5
tests/integration/models/test_thermoporomechanics.py:    assert np.all(np.abs(traction) < 1e-7)
tests/integration/models/test_thermoporomechanics.py:    assert np.all(p_vals < -1e-7)
tests/integration/models/test_thermoporomechanics.py:    assert np.all(t_vals < -1e-7)
tests/integration/models/test_thermoporomechanics.py:    setup = create_fractured_setup({}, {}, {"uy_north": -0.001})
tests/integration/models/test_thermoporomechanics.py:    assert np.all(p_frac > 1e-10)
tests/integration/models/test_thermoporomechanics.py:    assert np.all(t_frac > 1e-10)
tests/integration/models/test_thermoporomechanics.py:    assert np.abs(np.sum(jump[0])) < 1e-5
tests/integration/models/test_thermoporomechanics.py:    assert np.all(np.abs(traction) < 1e-7)
tests/integration/models/test_thermoporomechanics.py:    assert np.allclose(p_frac, 4.8e-4, atol=1e-5)
tests/integration/models/test_thermoporomechanics.py:    assert np.allclose(t_frac, 8.3e-6, atol=1e-7)
tests/integration/models/test_thermoporomechanics.py:        "uy_north": -0.1,
tests/integration/models/test_thermoporomechanics.py:        "Pa * m^2 * s^-1",
tests/integration/models/test_thermoporomechanics.py:        "m^-1 * s^-1 * J",
tests/integration/models/test_thermoporomechanics.py:        "m^-1 * s^-1 * J",
tests/integration/models/test_thermoporomechanics.py:    secondary_units = ["Pa * m^2 * s^-1", "kg * m^-1 * s^-1", "Pa * m", "-"]
tests/integration/models/test_geometry.py:    Setting of mixed-dimensional grid
tests/integration/models/test_geometry.py:) -> None:
tests/integration/models/test_geometry.py:    some_subdomains = top_subdomain + geometry.mdg.subdomains(dim=geometry.nd - 1)
tests/integration/models/test_geometry.py:    top_interfaces = geometry.mdg.interfaces(dim=geometry.nd - 1)
tests/integration/models/test_geometry.py:    some_interfaces = top_interfaces + geometry.mdg.interfaces(dim=geometry.nd - 2)
tests/integration/models/test_geometry.py:            top_subdomain, "no_such_attribute", dim=1  # type: ignore[call-arg]
tests/integration/models/test_geometry.py:            top_subdomain, "name", dim=1  # type: ignore[call-arg]
tests/integration/models/test_geometry.py:                grids, attr, dim=dim  # type: ignore[call-args]
tests/integration/models/test_geometry.py:def test_subdomain_interface_methods(geometry_class: type[pp.ModelGeometry]) -> None:
tests/integration/models/test_geometry.py:) -> None:
tests/integration/models/test_geometry.py:        # We get the expected values from the cell-face relation of the subdomain:
tests/integration/models/test_geometry.py:        # face is pointing outwards for those faces that have a positive cell-face
tests/integration/models/test_geometry.py:        # item (note that on boundary faces, there is only one non-zero entry in the
tests/integration/models/test_geometry.py:        # cell-face for each row, ie., each face).
tests/integration/models/test_geometry.py:        # Summing is a trick to get the sign of the cell-face relation for the boundary
tests/integration/models/test_geometry.py:def test_outwards_normals(geometry_class: type[pp.ModelGeometry], num_fracs) -> None:
tests/integration/models/test_geometry.py:    normals_reshaped = np.reshape(normals, (dim, -1), order="F")
tests/integration/models/test_geometry.py:    normals_reshaped_not_unitary = np.reshape(normals_not_unitary, (dim, -1), order="F")
tests/integration/models/test_geometry.py:        vec = cc[:, fracture_cells] - fc[:, fracture_faces]
tests/integration/models/test_geometry.py:        nrm2 = np.linalg.norm(proj_normals + 1e-3 * vec[:dim].T, axis=1)
tests/integration/models/test_geometry.py:    # Left multiply with dim-vector defined on the interface. This should give a vector
tests/integration/models/test_geometry.py:    inner_product = np.linalg.norm(product.reshape((dim, -1), order="F"), axis=0)
tests/integration/models/test_geometry.py:    dot_product = np.sum(product.reshape((dim, -1), order="F"), axis=0)
tests/integration/models/test_geometry.py:    # The summing can also be done by constructing an nd-to-scalar mapping, using the
tests/integration/models/test_geometry.py:    # basis vectors. A similar operation (actually the transpose, scalar-to-nd) is used
tests/integration/models/test_geometry.py:) -> None:
tests/integration/models/test_geometry.py:            assert np.allclose((mat - e_i).data, 0)
tests/integration/models/test_geometry.py:                assert np.allclose((e_None - e_i).data, 0)
tests/integration/models/test_geometry.py:    # the normal component, so [(0, dim-1), (1, 2*dim-1), ...)] should be non-zero.
tests/integration/models/test_geometry.py:    cols_normal_component = np.arange(dim - 1, dim * num_subdomain_cells, dim)
tests/integration/models/test_geometry.py:    assert np.allclose((known_normal_component - normal_component).data, 0)
tests/integration/models/test_geometry.py:        # Here we need [(0, 0), (1, 2), (2, 4), ...] to be non-zero
tests/integration/models/test_geometry.py:        # Here we need [(0, 0), (1, 1), (2, 3), (3, 4), (4, 6), ..] to be non-zero
tests/integration/models/test_geometry.py:        rows_tangential_component = np.arange(num_subdomain_cells * (dim - 1))
tests/integration/models/test_geometry.py:            np.arange(dim - 1, dim * num_subdomain_cells, dim),
tests/integration/models/test_geometry.py:        data_tangential_component = np.ones(num_subdomain_cells * (dim - 1))
tests/integration/models/test_geometry.py:        shape=((dim - 1) * num_subdomain_cells, dim * num_subdomain_cells),
tests/integration/models/test_geometry.py:    assert np.allclose((known_tangential_component - tangential_component).data, 0)
tests/integration/models/test_constitutive_laws.py:        # a fracture of co-dimension 1.
tests/integration/models/test_constitutive_laws.py:            dimensions_to_assemble = domain_dim - only_codimension
tests/integration/models/test_mass_balance.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/test_mass_balance.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/test_mass_balance.py:    def bc_values_mobrho(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/test_mass_balance.py:        p = 1 - x.
tests/integration/models/test_mass_balance.py:            vals, 1 - sd.cell_centers[0] / setup.domain.bounding_box["xmax"]
tests/integration/models/test_mass_balance.py:        normals = np.abs(sd.face_normals[0]) * np.power(0.1, setup.nd - sd.dim)
tests/integration/models/test_mass_balance.py:    variable_units = ["Pa", "Pa * m^2 * s^-1"]
tests/integration/models/test_mass_balance.py:    flux_units = ["Pa * m^2 * s^-1", "kg * m^-1 * s^-1"]
tests/integration/models/test_energy_balance.py:    def bc_values_fourier(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/test_energy_balance.py:    def bc_type_fourier(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/test_energy_balance.py:    def bc_values_enthalpy_flux(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/test_energy_balance.py:                "thermal_conductivity": 1e-10,
tests/integration/models/test_energy_balance.py:                "thermal_conductivity": 1e-10,
tests/integration/models/test_energy_balance.py:                "permeability": 1e-2,
tests/integration/models/test_energy_balance.py:            {"thermal_conductivity": 1e4, "permeability": 1e-7},
tests/integration/models/test_energy_balance.py:        p = 1 - x
tests/integration/models/test_energy_balance.py:                1 - sd.cell_centers[0] / setup.domain.bounding_box["xmax"],
tests/integration/models/test_energy_balance.py:                rtol=1e-4,
tests/integration/models/test_energy_balance.py:            normals = np.abs(sd.face_normals[0]) * np.power(0.1, setup.nd - sd.dim)
tests/integration/models/test_energy_balance.py:            assert np.all(np.abs(val) < np.abs(enth) + 1e-10)
tests/integration/models/test_energy_balance.py:        assert np.allclose(np.sum(total_energy), expected, rtol=1e-3)
tests/integration/models/test_energy_balance.py:    variable_units = ["K", "Pa", "m^2 * s^-1 * Pa", "m^-1 * s^-1 * J"]
tests/integration/models/test_energy_balance.py:    secondary_units = ["m^2 * s^-1 * Pa", "m^-1 * s^-1 * J", "m^-1 * s^-1 * J"]
tests/integration/models/test_restart.py:Here, exemplarily for a mixed-dimensional poromechanics model with time-varying boundary
tests/integration/models/test_rediscretization.py:    """Class to short-circuit the solution strategy to a single iteration.
tests/integration/models/test_rediscretization.py:    8. Check convergence second time (passes by hard-coding)
tests/integration/models/test_rediscretization.py:    def assemble_linear_system(self) -> None:
tests/integration/models/test_rediscretization.py:# Non-trivial solution achieved through BCs.
tests/integration/models/test_rediscretization.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/test_rediscretization.py:        # Make flow problem non-linear:
tests/integration/models/test_rediscretization.py:    tol = 1e-2
tests/integration/models/test_rediscretization.py:    diff = model_full.stored_linear_system[0][0] - model_full.stored_linear_system[1][0]
tests/integration/models/test_momentum_balance.py:        ({}, -0.1),
tests/integration/models/test_momentum_balance.py:            assert np.all(np.sign(vals[setup.nd - 1 :: setup.nd]) < 0)
tests/integration/models/test_momentum_balance.py:            tol = 1e-10
tests/integration/models/test_momentum_balance.py:            left = sd.cell_centers[0] < setup.domain.bounding_box["xmax"] / 2 - tol
tests/integration/models/test_momentum_balance.py:                np.sign(vals[:: setup.nd][right]) == -np.sign(north_displacement)
tests/integration/models/test_momentum_balance.py:                np.sign(vals[setup.nd - 1 :: setup.nd][top])
tests/integration/models/test_momentum_balance.py:            assert np.allclose(vals[setup.nd - 1 :: setup.nd][bottom], 0)
tests/integration/models/test_momentum_balance.py:    sd_frac = setup.mdg.subdomains(dim=setup.nd - 1)
tests/integration/models/test_momentum_balance.py:        assert np.all(jump[setup.nd - 1 :: setup.nd] > 0)
tests/integration/models/test_momentum_balance.py:        # Normal traction should be non-positive. Zero if north_displacement is zero.,
tests/integration/models/test_momentum_balance.py:            assert np.all(traction[setup.nd - 1 :: setup.nd] <= 0)
tests/integration/models/test_momentum_balance.py:@pytest.mark.parametrize("uy_north", [0.2, -0.1])
tests/integration/models/setup_utils.py:    def set_fractures(self) -> None:
tests/integration/models/setup_utils.py:    def meshing_arguments(self) -> dict:
tests/integration/models/setup_utils.py:    def set_domain(self) -> None:
tests/integration/models/setup_utils.py:        # Mono-dimensional grid by default
tests/integration/models/setup_utils.py:    def meshing_arguments(self) -> dict:
tests/integration/models/setup_utils.py:    def set_well_network(self) -> None:
tests/integration/models/setup_utils.py:    Implementation of mechanical values facilitates time-dependent boundary conditions
tests/integration/models/setup_utils.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/setup_utils.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/setup_utils.py:        """Boundary condition type for the density-mobility product.
tests/integration/models/setup_utils.py:    def bc_type_fourier(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/setup_utils.py:    def bc_type_enthalpy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/setup_utils.py:    def bc_values_mobrho(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/setup_utils.py:        to the reference value of the density-mobility product.
tests/integration/models/setup_utils.py:    def bc_values_mechanics_np(self, sd: pp.Grid) -> np.ndarray:
tests/integration/models/setup_utils.py:    def bc_values_mechanics(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/setup_utils.py:    def bc_type_mechanics(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/setup_utils.py:    ) -> np.ndarray:
tests/integration/models/setup_utils.py:        if self.time_manager.time > 1e-5:
tests/integration/models/setup_utils.py:) -> MassBalance | MomentumBalance | MassAndEnergyBalance | Poromechanics:
tests/integration/models/setup_utils.py:) -> list[pp.Grid] | list[pp.MortarGrid]:
tests/integration/models/setup_utils.py:        mdg: Mixed-dimensional grid.
tests/integration/models/setup_utils.py:        https://www.geeksforgeeks.org/create-classes-dynamically-in-python/
tests/integration/models/setup_utils.py:    "permeability": 1e-20,
tests/integration/models/setup_utils.py:    "porosity": 7e-3,
tests/integration/models/setup_utils.py:    "thermal_expansion": 1e-5,
tests/integration/models/setup_utils.py:    "maximum_fracture_closure": 1e-4,
tests/integration/models/setup_utils.py:    "fracture_gap": 1e-4,
tests/integration/models/setup_utils.py:    "compressibility": 4e-10,
tests/integration/models/setup_utils.py:    "viscosity": 1e-3,
tests/integration/models/setup_utils.py:    "thermal_expansion": 2.1e-4,
tests/integration/models/setup_utils.py:        cell_wise: If True, the values are compared cell-wise. If False, the values are
tests/integration/models/setup_utils.py:        cell_wise: If True, compare cell-wise values. If False, compare sums of values.
tests/integration/models/setup_utils.py:        # Compare cell-wise values.
tests/integration/models/setup_utils.py:        rtol = 1e-5 * np.sum(np.abs(values_0))
tests/integration/models/setup_utils.py:        assert np.isclose(np.sum(values_0 - values_1), 0, atol=1e-10 + rtol)
tests/integration/models/test_well_models.py:The module contains a setup for testing well-related functionality in the models.
tests/integration/models/test_well_models.py:    def set_well_network(self) -> None:
tests/integration/models/test_well_models.py:    def meshing_arguments(self) -> dict:
tests/integration/models/test_well_models.py:    def grid_type(self) -> str:
tests/integration/models/test_well_models.py:    def _bc_type(self, sd: pp.Grid, well_cond) -> pp.BoundaryCondition:
tests/integration/models/test_well_models.py:    def _bc_values(self, subdomains: list[pp.Grid], value, name) -> pp.ad.DenseArray:
tests/integration/models/test_well_models.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/test_well_models.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/test_well_models.py:            self.params.get("well_flux", -1), "kg * m ^ 3 * s ^ -1"
tests/integration/models/test_well_models.py:    def bc_type_mobrho(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/test_well_models.py:    def bc_values_mobrho(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/test_well_models.py:    def bc_type_enthalpy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/test_well_models.py:    def bc_values_enthalpy_flux(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/integration/models/test_well_models.py:            self.params.get("well_enthalpy", 1e7), "kg * m ^ 3 * s ^ -1"
tests/integration/models/test_well_models.py:    def bc_type_fourier(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/integration/models/test_well_models.py:    def permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/integration/models/test_well_models.py:            Cell-wise permeability values.
tests/integration/models/test_well_models.py:    def well_permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/integration/models/test_well_models.py:            Cell-wise permeability values.
tests/integration/models/test_well_models.py:    the effect of the low-permeable matrix.
tests/integration/models/test_well_models.py:            "solid": pp.SolidConstants({"permeability": 1e-6 / 4, "well_radius": 0.01})
tests/integration/models/test_well_models.py:    dist = np.absolute(matrix.cell_centers[2, :] - 0.5)
tests/integration/models/test_well_models.py:    p_range = np.max(matrix_pressure) - np.min(matrix_pressure)
tests/integration/models/test_well_models.py:    expected_p = p_range * (0.5 - dist) / 0.5
tests/integration/models/test_well_models.py:    diff = expected_p - matrix_pressure
tests/integration/models/test_well_models.py:    assert np.max(np.abs(diff / p_range)) < 1e-1
tests/integration/models/test_well_models.py:    # With a matrix permeability of 1/4e-6, the pressure drop for a unit flow rate is
tests/integration/models/test_well_models.py:    # (1/2**2) / 1/4e-6 = 1e6: 1/2 for splitting flow in two directions (top and
tests/integration/models/test_well_models.py:    assert np.isclose(np.max(matrix_pressure), 1e6, rtol=1e-1)
tests/integration/models/test_well_models.py:    scale_dist = np.exp(-np.max(dist))
tests/integration/models/test_well_models.py:    perm = 1e-3
tests/integration/models/test_well_models.py:    assert np.isclose(np.min(fracture_pressure), min_p, rtol=1e-2)
tests/integration/models/test_well_models.py:    # Peacmann well model is: u = 2 * pi * k * h * (p_fracture - p_well) / ( ln(r_e /
tests/integration/models/test_well_models.py:    # and unit flow rate, the pressure drop is p_fracture - p_well = 1 / (2 * pi * 1e-3
tests/integration/models/test_well_models.py:    k = 1e-2 / 12
tests/integration/models/test_well_models.py:    dp = well_pressure[0] - fracture_pressure[injection_cell]
tests/integration/models/test_well_models.py:    assert np.isclose(dp, dp_expected, rtol=1e-4)
tests/integration/models/test_well_models.py:    the effect of the low-permeable matrix.
tests/integration/models/test_well_models.py:    # We want low pressures, to ensure energy is not dominated by -p in fluid part.
tests/integration/models/test_well_models.py:    dt = 1e-4
tests/integration/models/test_well_models.py:                    "thermal_conductivity": 1e-6,
tests/integration/models/test_well_models.py:                    "thermal_conductivity": 1e-6,
tests/integration/models/test_well_models.py:                    "normal_thermal_conductivity": 1e-6,
tests/integration/models/test_well_models.py:    h_s = setup.solid_enthalpy(sds) * (pp.ad.Scalar(1) - setup.porosity(sds))
tests/integration/models/test_well_models.py:    assert np.isclose(u_val, u_expected, rtol=1e-3)
tests/integration/models/test_well_models.py:    assert np.isclose(u_val, h_val, rtol=1e-3)
tests/integration/models/test_well_models.py:    assert np.isclose(well_enthalpy_flux, h_well * well_fluid_flux, rtol=1e-10)
tests/integration/models/test_well_models.py:    assert np.isclose(well_fluid_flux, -1, rtol=1e-10)
tests/integration/models/test_well_models.py:    def meshing_arguments(self) -> dict:
tests/integration/models/test_well_models.py:        "well_flux": -1e-2,
tests/integration/models/test_well_models.py:    def meshing_arguments(self) -> dict:
tests/integration/models/test_well_models.py:        "well_flux": -1e-2,
tests/integration/test_tpfaMultiDim.py:        a = np.power(aperture, mdg.dim_max() - sd.dim) * np.ones(sd.num_cells)
tests/integration/test_tpfaMultiDim.py:        p_diff = pressure - pressure_analytic
tests/integration/test_tpfaMultiDim.py:        if np.max(np.abs(p_diff)) >= 2e-2:
tests/integration/fracture_propagation_utils.py:# -*- coding: utf-8 -*-
tests/integration/fracture_propagation_utils.py:Note: Several of the functions assume single-fracture domain with two
tests/integration/fracture_propagation_utils.py:    dimension. Then re-discretize locally and return the discretization
tests/integration/fracture_propagation_utils.py:    md_grids. All values are compared to those of the first md-grid in md-grids.
tests/integration/fracture_propagation_utils.py:    md-grids     - list of grid md-grids. The field names in parameters should
tests/integration/fracture_propagation_utils.py:    lh          - list of corresponding lhs matrices
tests/integration/fracture_propagation_utils.py:    rh          - list of corresponding rhs vectors
tests/integration/fracture_propagation_utils.py:    parameters  - For the assumed parameter fields, see below. To add other
tests/integration/fracture_propagation_utils.py:                face_map, cell_map = fml[i - 1], cml[i - 1]
tests/integration/fracture_propagation_utils.py:                face_map, cell_map = fmh[i - 1], cmh[i - 1]
tests/integration/fracture_propagation_utils.py:            (cmh[i - 1], cml[i - 1]),
tests/integration/fracture_propagation_utils.py:            (fmh[i - 1], fml[i - 1]),
tests/integration/fracture_propagation_utils.py:    assert np.isclose(np.sum(np.absolute(lhs_0 - mapped_lhs)), 0)
tests/integration/fracture_propagation_utils.py:    dim_l = dim_h - 1
tests/integration/fracture_propagation_utils.py:    # Check that all md-grids have the same number of grids in the lower dimension
tests/integration/fracture_propagation_utils.py:    num_grids_l: int = len(md_grids[0].subdomains(dim=dim_h - 1))
tests/integration/fracture_propagation_utils.py:        assert len(mdg.subdomains(dim=dim_h - 1)) == num_grids_l
tests/integration/fracture_propagation_utils.py:            # Check that all md-grids have the same number of cells, faces and nodes
tests/integration/fracture_propagation_utils.py:                # identical between the md-grids.
tests/integration/fracture_propagation_utils.py:            fm = face_maps_h[i - 1]
tests/integration/fracture_propagation_utils.py:            assert np.sum(np.absolute(proj_0) - np.absolute(mapped_fc)) == 0
tests/integration/fracture_propagation_utils.py:    these entities are constructed. Handles non-unique nodes and faces on next
tests/integration/test_mpfa_pressure_trace_reconstruction.py:                [-0.25, 0.0, 0.0, 0.0],
tests/integration/test_mpfa_pressure_trace_reconstruction.py:                [0.0, -0.25, 0.0, 0.0],
tests/integration/test_mpfa_pressure_trace_reconstruction.py:                [0.0, 0.0, -0.25, 0.0],
tests/integration/test_mpfa_pressure_trace_reconstruction.py:                [0.0, 0.0, 0.0, -0.25],
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        self.assertTrue(np.all(np.abs(grad_bound - grad_bound_known) < 1e-7))
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        self.assertTrue(np.all(np.abs(grad_cell - grad_cell_known) < 1e-12))
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        P = sps.linalg.spsolve(div * flux, -div * bound_flux * p_b)
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        self.assertTrue(np.all(np.abs(P - np.sum(g.cell_centers, axis=0) - p0) < 1e-10))
tests/integration/test_mpfa_pressure_trace_reconstruction.py:            np.all(np.abs(P_f - np.sum(g.face_centers, axis=0) - p0) < 1e-10)
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        P = sps.linalg.spsolve(div * flux, -div * bound_flux * p_b.ravel("F"))
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        self.assertTrue(np.all(np.abs(P_f[dir_ind] - p_b[dir_ind]) < 1e-10))
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        p_b = np.sum(-g.face_centers, axis=0)
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        P = sps.linalg.spsolve(div * hf2f * flux, -div * hf2f * bound_flux * p_b)
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        self.assertTrue(np.all(np.abs(P + np.sum(g.cell_centers, axis=0)) < 1e-10))
tests/integration/test_mpfa_pressure_trace_reconstruction.py:        self.assertTrue(np.all(np.abs(P_f + np.sum(g.face_centers, axis=0)) < 1e-10))
tests/integration/test_vem_convergence.py:# -*- coding: utf-8 -*-
tests/integration/test_vem_convergence.py:            - 400.0 * np.pi * y * np.cos(2.0 * np.pi * y) * np.sin(2.0 * np.pi * x)
tests/integration/test_vem_convergence.py:            - 400.0 * np.pi * x * np.cos(2.0 * np.pi * x) * np.sin(2.0 * np.pi * y)
tests/integration/test_vem_convergence.py:        return np.sqrt(np.sum(np.power(np.abs(p - sol), 2) * g.cell_volumes))
tests/integration/test_vem_convergence.py:            - y * (x**2 - 9.0 * z**2)
tests/integration/test_vem_convergence.py:            - 4.0 * x**2 * z
tests/integration/test_vem_convergence.py:            - (
tests/integration/test_vem_convergence.py:                - 4.0 * np.pi**2 * y**2 * np.sin(np.pi * y)
tests/integration/test_vem_convergence.py:            - 4.0 * y**2 * (2.0 * np.sin(np.pi * y) + np.pi * y * np.cos(np.pi * y))
tests/integration/test_vem_convergence.py:        return x**2 * z + 4.0 * y**2 * np.sin(np.pi * y) - 3.0 * z**3
tests/integration/test_vem_convergence.py:        return np.sqrt(np.sum(np.power(np.abs(p - sol), 2) * g.cell_volumes))
tests/integration/test_vem_convergence.py:        return x**2 * z + 4.0 * y**2 * np.sin(np.pi * y) - 3.0 * z**3
tests/integration/test_vem_convergence.py:        return np.sqrt(np.sum(np.power(np.abs(p - sol), 2) * g.cell_volumes))
tests/integration/test_discretization_update.py:    # be non-overlapping, meaning the method must deal with non-connected subgrids.
tests/integration/test_discretization_update.py:    # fv methods will be non-overlapping, meaning the method must deal with
tests/integration/test_discretization_update.py:    # non-connected subgrids. In the second step, the regions are overlapping.
tests/integration/test_discretization_update.py:    # NOTE: Only the highest-dimensional grid in the MixedDimensionalGrid is used.
tests/integration/test_discretization_update.py:                diff = mat - mat2
tests/integration/test_discretization_update.py:                    assert np.max(np.abs(diff.data)) < 1e-10
tests/integration/test_grid_factory.py:                # there should be no lower-dimensional grids
tests/integration/test_fracture_propagation.py:    fracture tip in the lower-dimensional grid, find which face in the higher-dimensional
tests/integration/test_fracture_propagation.py:## Below follows tests of the picking of high-dimensional faces to split, when using
tests/integration/test_fracture_propagation.py:    sd_1 = mdg.subdomains(dim=mdg.dim_max() - 1)[0]
tests/integration/test_fracture_propagation.py:    sd_1 = mdg.subdomains(dim=mdg.dim_max() - 1)[0]
tests/integration/test_fracture_propagation.py:    sd_1 = mdg.subdomains(dim=mdg.dim_max() - 1)[0]
tests/integration/test_fracture_propagation.py:    g2 = mdg.subdomains(dim=mdg.dim_max() - 1)[1]
tests/integration/test_fracture_propagation.py:    """Verify that the right high-dimensional face is picked, based on tagged faces
tests/integration/test_fracture_propagation.py:    on the tips of the lower-dimensional grid. Thus, the test probes the function
tests/integration/test_fracture_propagation.py:    fixed to zero; non-zero values can also be accommodated, but that case is outside
tests/integration/test_fracture_propagation.py:            dim=mdg.dim_max() - 1, return_data=True
tests/integration/test_fracture_propagation.py:                fch = sd_primary.face_centers[:, ti].reshape((-1, 1))
tests/integration/test_fracture_propagation.py:                    np.sum((sd_frac.face_centers[:, tip_faces] - fch) ** 2, axis=0)
tests/integration/test_fracture_propagation.py:            # Store propagation map for this face - this is necessary to split the faces
tests/integration/test_fracture_propagation.py:    """Tests of splitting of faces in the higher-dimensional grid.
tests/integration/test_fracture_propagation.py:        2-3 grown in a single step (from two different initial fractures)
tests/integration/test_fracture_propagation.py:        2-3 grown in a single step (from two different initial fractures)
tests/integration/test_fracture_propagation.py:        # Final step - only one of the fractures grow
tests/integration/test_fracture_propagation.py:        #  O O O   <- Initial fracture
tests/integration/test_fracture_propagation.py:        #    0     <- face opened in the first step
tests/integration/test_fracture_propagation.py:        #  O O O   <- Initial fracture
tests/integration/test_fracture_propagation.py:        #  0       <- face opened in the first step
tests/integration/test_fracture_propagation.py:        #  O O O   <- Initial fracture
tests/integration/test_fracture_propagation.py:        #  O   O   <- faces opened in the first step
tests/integration/test_fracture_propagation.py:        g = mdg.subdomains(dim=mdg.dim_max() - 1)[0]
tests/integration/test_fracture_propagation.py:            new_cc = new_cc.reshape((-1, 1))
tests/integration/test_fracture_propagation.py:        # xz-plane looks like this
tests/integration/test_fracture_propagation.py:        # x - x  -  x
tests/integration/test_fracture_propagation.py:        # x - x  -  x
tests/integration/test_fracture_propagation.py:        # x - x
tests/integration/test_fracture_propagation.py:    # Subclass ConformingFracturePropagation, which is the simplest known non-ABC
tests/integration/test_fracture_propagation.py:        n_new = cell_map.shape[0] - cell_map.shape[1]
tests/integration/test_fracture_propagation.py:        3. Compute the expected i) SIFs (purely tensile - i.e. K_II = K_III = 0),
tests/integration/test_fracture_propagation.py:        5. Compare i-iii.
tests/integration/test_fracture_propagation.py:        * angles - ConformingFracturePropagation returns 0.
tests/integration/test_fracture_propagation.py:        * parameter robustness. This is sort of helped by choosing varying, non-integer
tests/integration/test_fracture_propagation.py:        Ordering is hard-coded according to the grids defined in _make_grid
tests/integration/test_fracture_propagation.py:        # Face-wise for g_l
tests/integration/test_fracture_propagation.py:        """Compute face-wise SIFs and propagation tags
tests/integration/test_fracture_propagation.py:        du = u_top[-1] - u_bot[-1]
tests/integration/test_fracture_propagation.py:            ind_1 = face_ind[-1]
tests/integration/test_fracture_propagation.py:        K = np.sqrt(2 * np.pi / R_d) * self.mu / (3 - 4 * self.poisson + 1) * du
tests/integration/test_fracture_propagation.py:        self.g_l = mdg.subdomains(dim=dim - 1)[0]
tests/integration/test_fracture_propagation.py:                ## Check mortar grid - see 1d case above for comments
tests/integration/test_split_grid.py:        Create a L-intersection in 3D
tests/integration/test_split_grid.py:        Create a x-intersection in 3D
tests/integration/test_split_grid.py:        Create a tripple L-intersection in 3D
tests/integration/test_split_grid.py:    # Will not need +- sign on cell_faces for this test
tests/integration/test_fracture_mesh_generation.py:                if np.abs(box_2[k] - v) > 1e-10:
tests/integration/test_fracture_mesh_generation.py:                        "xmax": -np.inf,
tests/integration/test_fracture_mesh_generation.py:                        "ymax": -np.inf,
tests/integration/test_fracture_mesh_generation.py:                        "zmax": -np.inf,
tests/integration/test_fracture_mesh_generation.py:                        "xmax": -np.inf,
tests/integration/test_fracture_mesh_generation.py:                        "ymax": -np.inf,
tests/integration/test_fracture_mesh_generation.py:                        "zmax": -np.inf,
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-0.7, -0.7, 0.8, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        isect_coord = np.array([[0, 0], [0, 0], [-0.7, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-0.7, -0.7, 0.8, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [-1, -1, 1, 1], [0, 0, 0, 0]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        isect_0_coord = np.array([[0, 0], [0, 0], [-0.7, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        isect_1_coord = np.array([[-1, 1], [0, 0], [0, 0]])
tests/integration/test_fracture_mesh_generation.py:        isect_2_coord = np.array([[0, 0], [-1, 1], [0, 0]])
tests/integration/test_fracture_mesh_generation.py:        isect_pt = np.array([0, 0, 0]).reshape((-1, 1))
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-0.7, -0.7, 0.8, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(f_2.pts + np.array([0.5, 0, 0]).reshape((-1, 1)))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        isect_0_coord = np.array([[0, 0], [0, 0], [-0.7, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        isect_1_coord = np.array([[0.5, 0.5], [0, 0], [-0.7, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        f_2 = pp.PlaneFracture(np.array([[-1, -1, 1, 1], [-1, 1, 1, -1], [0, 0, 0, 0]]))
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        isect_0_coord = np.array([[0, 0], [0, 0], [-1, 1]])
tests/integration/test_fracture_mesh_generation.py:        isect_1_coord = np.array([[-1, 1], [0, 0], [0, 0]])
tests/integration/test_fracture_mesh_generation.py:        isect_2_coord = np.array([[0, 0], [-1, 1], [0, 0]])
tests/integration/test_fracture_mesh_generation.py:        isect_pt = np.array([0, 0, 0]).reshape((-1, 1))
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, 1, 1, -1], [-1, 1, 1, -1], [-1, -1, 1, 1]])
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        isect_coord = np.array([[0, 0], [0, 0], [-1, 1]])
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, 1, 1, -1], [-1, 1, 1, -1], [-0.5, -0.5, 0.5, 0.5]])
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        # Fractures 0 and 2 intersect both in the interval z\in[-1, -0.5] and
tests/integration/test_fracture_mesh_generation.py:        # so we will simply define a full line of [-1, 1]. This is not ideal, but
tests/integration/test_fracture_mesh_generation.py:        isect_coord_full = np.array([[0, 0], [0, 0], [-1, 1]])
tests/integration/test_fracture_mesh_generation.py:        isect_coord_middle = np.array([[0, 0], [0, 0], [-0.5, 0.5]])
tests/integration/test_fracture_mesh_generation.py:            np.array([0, 0, -0.5]).reshape((-1, 1)),
tests/integration/test_fracture_mesh_generation.py:            np.array([0, 0, 0.5]).reshape((-1, 1)),
tests/integration/test_fracture_mesh_generation.py:        Two fractures sharing a segment in an L-intersection.
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -1, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -1, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        # can be located in the .msh-file. To function as a test, we disband the
tests/integration/test_fracture_mesh_generation.py:        # test of cell-face relations.
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -1, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -1, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:            np.array([[0.5, 0.5, 1], [0.5, -0.5, 0], [0.5, 1.9, 0.0]]).T
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -1, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -1, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -1, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -1, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:            np.array([[-0.2, 0.5, 0], [1, 0.5, 0], [0.5, 0.5, 1.0]]).T
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -1, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -1, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -1, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -1, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -1, "xmax": 1, "ymin": 0, "ymax": 1, "zmin": 0, "zmax": 1}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        f_2 = pp.PlaneFracture(np.array([[0, 0, 1], [0, 0, -1], [1, 1, -1]]).T)
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-0.7, -0.7, 0.8, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-0.7, -0.7, 0.8, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [-1, -1, 1, 1], [0, 0, 0, 0]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        isect_0_coord = np.array([[0, 0], [0, 0], [-0.7, 0.8]])
tests/integration/test_fracture_mesh_generation.py:        isect_pt = np.array([0, 0, 0]).reshape((-1, 1))
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, 1, 1, -1], [-1, 1, 1, -1], [-1, -1, 1, 1]])
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        isect_coord = np.array([[0, 0], [0, 0], [-1, 1]])
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, 1, 1, -1], [-1, 1, 1, -1], [-1, -1, 1, 1]])
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        Two fractures sharing a segment in an L-intersection.
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(np.array([[0, 1, 1, 0], [0, 0, 1, 1], [-1, 1, 1, -1]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        f_3 = pp.PlaneFracture(np.array([[0, 1, 1, 0], [0, 0, 1, 1], [-1, 1, 1, -1]]))
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        bbox = {"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2, "zmin": -2, "zmax": 2}
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 2, 2, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 2, 2, -1], [0, 0, 0, 0], [-1, -1, 2, 2]]))
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-2, 2, 2, -2], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-2, 2, 2, -2], [0, 0, 0, 0], [-1, -1, 2, 2]]))
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-2, 2, 2, -2], [0, 0, 0, 0], [-2, -2, 2, 2]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[-2, 2, 2, -2], [-2, 2, 2, -2], [-2, -2, 2, 2]])
tests/integration/test_fracture_mesh_generation.py:        f_1 = pp.PlaneFracture(np.array([[-1, 2, 2, -1], [0, 0, 0, 0], [-1, -1, 1, 1]]))
tests/integration/test_fracture_mesh_generation.py:        f_2 = pp.PlaneFracture(np.array([[-1, -1, 2, 2], [-1, 1, 1, -1], [0, 0, 0, 0]]))
tests/integration/test_fracture_mesh_generation.py:            np.array([[-2, 2, 2, -2], [-2, 1, 1, -2], [-2, -2, 2, 2]])
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, -1, 0], [1, -1, 0], [1, 1, 0], [-1, 1, 0]]).T
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, 0, -1], [1, 0, -1], [1, 0, 1], [-1, 0, 1]]).T
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, -1, 0], [1, -1, 0], [1, 1, 0], [-1, 1, 0]]).T
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, 0, -1], [1, 0, -1], [1, 0, 1], [-1, 0, 1]]).T
tests/integration/test_fracture_mesh_generation.py:            np.array([[0, -1, -1], [0, 1, -1], [0, 1, 1], [0, -1, 1]]).T
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, 2, 2, -1], [0.5, 0.5, 0.5, 0.5], [-1, -1, 0.3, 0.3]])
tests/integration/test_fracture_mesh_generation.py:            np.array([[-1, 2, 2, -1], [0.5, 0.5, 0.5, 0.5], [-1, -1, 0.7, 0.7]])
tests/integration/test_fracture_mesh_generation.py:        # The fracture should be split into subfractures because of the non-convexity.
tests/integration/test_fracture_mesh_generation.py:        # non-convexity.
tests/integration/test_fracture_mesh_generation.py:                    np.abs(g.nodes - np.array([[0.5], [0.5], [0.5]])) < 1e-6, axis=0
tests/integration/test_fracture_mesh_generation.py:                    np.abs(g.cell_centers - np.array([[0.5], [0.5], [0.5]])) < 1e-6,
tests/integration/test_wells.py:well network and the resulting updates to the mixed-dimensional grid are tested.
tests/integration/test_wells.py:tags. Grid node ordering is tacitly assumed - if the assumption is broken, the
tests/integration/test_wells.py:        Mixed-dimensional grid with matrix, fractures, wells and
tests/integration/test_wells.py:        well-fracture intersection grids + all interfaces
tests/integration/test_wells.py:    # Mesh fractures and add fracture + intersection grids to the mixed-dimensional grid
tests/integration/test_wells.py:) -> None:
tests/integration/test_wells.py:    assert mdg.num_subdomains() == (1 + 3 * n_frac + (1 - n_end))
tests/integration/test_wells.py:    # 3d-2d: n_frac between matrix and fractures,
tests/integration/test_wells.py:    # 2d-0d: n_frac
tests/integration/test_wells.py:    # 1d-0d: 2 between well and intersection for each internal fracture and 1 for
tests/integration/test_wells.py:# Interfaces: 1 3d-2d, 2+1 well-fracture 1+1 fracture-intersection
tests/integration/test_wells.py:# Interfaces: 3 3d-2d, 3+2 well-fracture and 5+3 fracture-intersection
tests/integration/test_wells.py:) -> None:
tests/integration/test_wells.py:def test_add_one_well_with_matrix() -> None:
tests/integration/test_wells.py:        # Since the generation of .msh files is platform-dependent, only norm values are
tests/integration/test_wells.py:            rtol=1e-5,
tests/integration/test_wells.py:            atol=1e-8,
tests/integration/test_mpfa_mpsa_partial_update.py: poro-mechanics, respectively.
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_flux = (flux - partial_flux).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_bound = (bound_flux - partial_bound).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_vc = (vector_source - partial_vector_source).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_flux = (flux - partial_flux).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_bound = (bound_flux - partial_bound).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_vc = (vector_source - partial_vector_source).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        # The test is similar to what will happen with a memory-constrained
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((flux_full - flux).max() < 1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((flux_full - flux).min() > -1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((bound_flux - bound_flux_full).max() < 1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((bound_flux - bound_flux_full).min() > -1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((vc - vc_full).max() < 1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((vc - vc_full).min() > -1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_stress = (stress - partial_stress).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_bound = (bound_stress - partial_bound).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_stress = (stress - partial_stress).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_bound = (bound_stress - partial_bound).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        # Only the faces of the central cell should be non-zero.
tests/integration/test_mpfa_mpsa_partial_update.py:        # with a memory-constrained splitting.
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((stress_full - stress).max() < 1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((stress_full - stress).min() > -1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((bound_stress - bound_stress_full).max() < 1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((bound_stress - bound_stress_full).min() > -1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:    """Test various partial assembly for mpsa for poro-elasticity."""
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_div_u = (div_u - partial_div_u).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_bound_div_u = (bound_div_u - partial_bound_div_u).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_grad_p = (grad_p - partial_grad_p).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_stab = (stab - partial_stab).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_bound_pressure = (bound_pressure - partial_bound_pressure).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_div_u = (div_u - partial_div_u).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_bound_div_u = (bound_div_u - partial_bound_div_u).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_grad_p = (grad_p - partial_grad_p).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_stab = (stab - partial_stab).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        diff_bound_pressure = (bound_pressure - partial_bound_pressure).todense()
tests/integration/test_mpfa_mpsa_partial_update.py:        # with a memory-constrained splitting.
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((div_u_full - div_u).max() < 1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((bound_div_u_full - bound_div_u).min() > -1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((grad_p_full - grad_p).max() < 1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        self.assertTrue((stab_full - stab).min() > -1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:            (bound_displacement_pressure - bound_pressure_full).min() > -1e-8
tests/integration/test_mpfa_mpsa_partial_update.py:                self.assertTrue(np.max(mat_full - mat_partial) < 1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:                self.assertTrue(np.min(mat_full - mat_partial) < 1e-8)
tests/integration/test_mpfa_mpsa_partial_update.py:        # Data dictionary for the two-step discretization
tests/integration/test_mpfa_mpsa_partial_update.py:        # Data dictionary for the two-step discretization
tests/integration/test_mpfa_mpsa_partial_update.py:        # Data dictionary for the two-step discretization
tests/integration/test_darcy_mortar_immersed_fracture.py:# -*- coding: utf-8 -*-
tests/integration/test_darcy_mortar_immersed_fracture.py:Test of Robin-type coupling for a grid with immersed fractures.
tests/integration/test_darcy_mortar_immersed_fracture.py:The non-immersed case is kind of tested in the module
tests/integration/test_darcy_mortar_immersed_fracture.py:            aperture = np.power(1e-2, mdg.dim_max() - sd.dim)
tests/integration/test_darcy_mortar_immersed_fracture.py:    def verify_cv(self, mdg, tol=1e-6):
tests/integration/test_darcy_mortar_immersed_fracture.py:        self.set_params(mdg, kn=1e-6, kf=1e-6)
tests/integration/test_darcy_mortar_immersed_fracture.py:        self.assertTrue(np.allclose(p, sd_2d.cell_centers[1], rtol=1e-5))
tests/integration/test_darcy_mortar_immersed_fracture.py:        self.set_params(mdg, kn=1e-6, kf=1e-6)
tests/integration/test_darcy_mortar_immersed_fracture.py:        self.assertTrue(np.allclose(p, sd_2d.cell_centers[1], rtol=1e-5))
tests/integration/test_darcy_mortar_immersed_fracture.py:        self.set_params(mdg, kn=1e-6, kf=1e-6)
tests/integration/test_darcy_mortar_immersed_fracture.py:        self.assertTrue(np.allclose(p, sd_2d.cell_centers[1], rtol=1e-5))
tests/integration/test_darcy_mortar_immersed_fracture.py:        self.assertTrue(np.allclose(p, p_flipped, rtol=1e-10))
tests/integration/test_darcy_mortar_immersed_fracture.py:        self.assertTrue(np.allclose(p, p_flipped, rtol=1e-10))
tests/integration/test_darcy_mortar_immersed_fracture.py:        self.assertTrue(np.allclose(p, p_flipped, rtol=1e-10))
tests/integration/test_tag_gmsh.py:                    # the y-axis, fracture 2 is aligned with the x-axis
tests/integration/test_tag_gmsh.py:                            (np.abs(db_cc[0]) < 1e-10)
tests/integration/test_tag_gmsh.py:                            | (np.abs(db_cc[1]) < 1e-10)
tests/integration/test_tag_gmsh.py:                            | (np.abs(db_cc[0] - 1) < 1e-10)
tests/integration/test_tag_gmsh.py:                            | (np.abs(db_cc[1] - 1) < 1e-10)
tests/integration/test_TpfaMonoCoupling.py:        We set up the test case -----|---------
tests/integration/test_TpfaMonoCoupling.py:                                -----|---------
tests/integration/test_TpfaMonoCoupling.py:        tol = 1e-6
tests/integration/test_TpfaMonoCoupling.py:            right = sd.face_centers[0] > xmax - tol
tests/integration/test_TpfaMonoCoupling.py:                    xmax - sd.cell_centers[0],
tests/integration/test_TpfaMonoCoupling.py:        g2 = pp.CartGrid([(xmax - split) * n, ymax * n], physdims=[xmax - split, ymax])
tests/integration/test_TpfaMonoCoupling.py:        tol = 1e-6
tests/integration/test_TpfaMonoCoupling.py:        left_faces = np.argwhere(left_grid.face_centers[0] > split - tol).ravel()
tests/integration/test_TpfaMonoCoupling.py:        intf = pp.MortarGrid(g1.dim - 1, {"0": side_grid}, face_faces)
tests/integration/test_TpfaMonoCoupling.py:                                |--------|
tests/integration/test_TpfaMonoCoupling.py:                                |--------|
tests/integration/test_TpfaMonoCoupling.py:               p = sin(pi/xmax * (x - x0)) * cos(2*pi/ymax * (y - y0))
tests/integration/test_TpfaMonoCoupling.py:        tol = 1e-6
tests/integration/test_TpfaMonoCoupling.py:            x[0] = x[0] - shiftx
tests/integration/test_TpfaMonoCoupling.py:            x[1] = x[1] - shifty
tests/integration/test_TpfaMonoCoupling.py:            pxx = -((np.pi / xmax) ** 2) * p
tests/integration/test_TpfaMonoCoupling.py:            pyy = -((2 * np.pi / ymax) ** 2) * p
tests/integration/test_TpfaMonoCoupling.py:            right = sd.face_centers[0] > xmax - tol
tests/integration/test_TpfaMonoCoupling.py:            src = -lpc * sd.cell_volumes
tests/integration/test_TpfaMonoCoupling.py:                                |--------|
tests/integration/test_TpfaMonoCoupling.py:                                |--------|
tests/integration/test_TpfaMonoCoupling.py:               p = sin(pi/xmax * (x - x0)) * cos(2*pi/ymax * (y - y0))
tests/integration/test_TpfaMonoCoupling.py:        tol = 1e-6
tests/integration/test_TpfaMonoCoupling.py:            x[0] = x[0] - shiftx
tests/integration/test_TpfaMonoCoupling.py:            x[1] = x[1] - shifty
tests/integration/test_TpfaMonoCoupling.py:            pxx = -((np.pi / xmax) ** 2) * p
tests/integration/test_TpfaMonoCoupling.py:            pyy = -((2 * np.pi / ymax) ** 2) * p
tests/integration/test_TpfaMonoCoupling.py:            right = sd.face_centers[0] > xmax - tol
tests/integration/test_TpfaMonoCoupling.py:            aperture = 1e-6 ** (2 - sd.dim) * np.ones(sd.num_cells)
tests/integration/test_TpfaMonoCoupling.py:            src = -lpc * sd.cell_volumes * aperture
tests/integration/test_TpfaMonoCoupling.py:                    1e-10 * np.ones(sd.num_cells)
tests/integration/test_TpfaMonoCoupling.py:        # Parameter-discretization keyword:
tests/integration/test_TpfaMonoCoupling.py:                np.max(np.abs(data[pp.TIME_STEP_SOLUTIONS][key_p][0] - ap)) < 5e-2
tests/integration/test_TpfaMonoCoupling.py:            right_flux = -right_to_m * (
tests/integration/test_TpfaMonoCoupling.py:                np.max(np.abs(data[pp.TIME_STEP_SOLUTIONS][key_m][0] - left_flux))
tests/integration/test_TpfaMonoCoupling.py:                < 5e-2
tests/integration/test_TpfaMonoCoupling.py:                np.max(np.abs(data[pp.TIME_STEP_SOLUTIONS][key_m][0] - right_flux))
tests/integration/test_TpfaMonoCoupling.py:                < 5e-2
tests/integration/test_TpfaMonoCoupling.py:        tol = 1e-6
tests/integration/test_TpfaMonoCoupling.py:        left_faces = np.argwhere(g1.face_centers[1] > ymax - tol).ravel()
tests/integration/test_TpfaMonoCoupling.py:        intf = pp.MortarGrid(g1.dim - 1, {"0": side_grid}, face_faces)
tests/integration/test_TpfaMonoCoupling.py:        tol = 1e-6
tests/integration/test_TpfaMonoCoupling.py:            right = np.argwhere(sd.face_centers[1] > ymax - tol).ravel()
tests/integration/test_TpfaMonoCoupling.py:                    intf = pp.MortarGrid(gi.dim - 1, {"0": g_m}, face_faces)
tests/integration/test_TpfaMonoCoupling.py:        tol = 1e-6
tests/integration/test_mpfa_mpsa_convergence.py:considered 'correct' - (May 2016). The comparison in itself is rather ugly
tests/integration/test_mpfa_mpsa_convergence.py:(results are hard-coded).
tests/integration/test_mpfa_mpsa_convergence.py:            - 400.0 * np.pi * y * np.cos(2.0 * np.pi * y) * np.sin(2.0 * np.pi * x)
tests/integration/test_mpfa_mpsa_convergence.py:            - 400.0 * np.pi * x * np.cos(2.0 * np.pi * x) * np.sin(2.0 * np.pi * y)
tests/integration/test_mpfa_mpsa_convergence.py:        return np.sqrt(np.sum(np.power(np.abs(p - sol), 2) * g.cell_volumes))
tests/integration/test_mpfa_mpsa_convergence.py:            - y * (x**2 - 9.0 * z**2)
tests/integration/test_mpfa_mpsa_convergence.py:            - 4.0 * x**2 * z
tests/integration/test_mpfa_mpsa_convergence.py:            - (
tests/integration/test_mpfa_mpsa_convergence.py:                - 4.0 * np.pi**2 * y**2 * np.sin(np.pi * y)
tests/integration/test_mpfa_mpsa_convergence.py:            - 4.0 * y**2 * (2.0 * np.sin(np.pi * y) + np.pi * y * np.cos(np.pi * y))
tests/integration/test_mpfa_mpsa_convergence.py:        return x**2 * z + 4.0 * y**2 * np.sin(np.pi * y) - 3.0 * z**3
tests/integration/test_mpfa_mpsa_convergence.py:        return np.sqrt(np.sum(np.power(np.abs(p - sol), 2) * g.cell_volumes))
tests/integration/test_mpfa_mpsa_convergence.py:        return x**2 * z + 4.0 * y**2 * np.sin(np.pi * y) - 3.0 * z**3
tests/integration/test_mpfa_mpsa_convergence.py:        return np.sqrt(np.sum(np.power(np.abs(p - sol), 2) * g.cell_volumes))
tests/integration/test_mpfa_mpsa_convergence.py:        rhs = -sympy.diff(dux, x) - sympy.diff(duy, y)
tests/integration/test_mpfa_mpsa_convergence.py:        b = an_sol.rhs_f(xc[0], xc[1]) * g.cell_volumes - div * bound_flux * u_bound
tests/integration/test_mpfa_mpsa_convergence.py:        1) the permeability is given on the form perm = (1-chi) + chi *
tests/integration/test_mpfa_mpsa_convergence.py:        2) The solution takes the form u_full = u / ((1-chi) + chi*kappa),
tests/integration/test_mpfa_mpsa_convergence.py:        Also note that self.solve_system is a sub-method of this, with a
tests/integration/test_mpfa_mpsa_convergence.py:        perm_vec = (1 - char_func_cells) + kappa * char_func_cells
tests/integration/test_mpfa_mpsa_convergence.py:            (1 - char_func_bound) + kappa * char_func_bound
tests/integration/test_mpfa_mpsa_convergence.py:        b = an_sol.rhs_f(xc[0], xc[1]) * g.cell_volumes - div * bound_flux * u_bound
tests/integration/test_mpfa_mpsa_convergence.py:        # Right hand side - contribution from the solution and the boundary
tests/integration/test_mpfa_mpsa_convergence.py:        mat_vec = (1 - char_func_cells) + kappa * char_func_cells
tests/integration/test_mpfa_mpsa_convergence.py:        ) / ((1 - char_func_bound) + kappa * char_func_bound)
tests/integration/test_mpfa_mpsa_convergence.py:        ) / ((1 - char_func_bound) + kappa * char_func_bound)
tests/integration/test_mpfa_mpsa_convergence.py:        # Right hand side - contribution from the solution and the boundary
tests/integration/test_mpfa_mpsa_convergence.py:                -0.22614269,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.23671876,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.16849627,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21205881,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.19724312,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.25489906,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.25400658,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.20711298,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.13397631,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.07618574,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.13563931,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.20535843,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.16753938,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.17611844,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.11203853,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.2116459,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.14134316,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.1733023,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.09103128,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.1022011,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.07195505,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.04211765,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.0475905,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.0321949,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.01126896,
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(u_num, u_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(flux_num, flux_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:                -0.07979219,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.01739874,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.03865476,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.04745346,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.02109245,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.08995594,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.04394501,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.01972811,
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(u_num, u_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(stress_num, stress_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        k(x,y) = 1e-6, x > 0.5, y > 0.5
tests/integration/test_mpfa_mpsa_convergence.py:        kappa = 1e-6
tests/integration/test_mpfa_mpsa_convergence.py:                3.91688459e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                5.44014582e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.95254908e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.91407727e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                5.27854234e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                8.73164613e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.68081801e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.90171573e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.64748667e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.95331084e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.24438451e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.22016098e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.11909891,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.45106523,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.06652199,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.16807666,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.12677713,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.45344628,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.03276262,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.58079751,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.35594388,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.06197948,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.12637603,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.04696978,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.64778558,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.10489621,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.27014072,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.47589136,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.49921764,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.38658258,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.29370566,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.32735917,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.10266602,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.61819902,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.65272094,
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(u_num, u_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(flux_num, flux_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:                3.86896239e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                5.25655435e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.35593962e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.20356456e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                5.13670140e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                8.14201598e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.31488005e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.11844753e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.75653573e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.28177518e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                9.38100917e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                8.71900958e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.23515554e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.05297017e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                5.28281641e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                5.58253234e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.10722384,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.42775993,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.09453212,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.26260685,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.10152723,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.41307325,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.07004913,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.75104724,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.30860082,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.23375323,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.046755,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.62410537,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.06935512,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.25789075,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.41984198,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.39096356,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.29379901,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.02879553,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.10161239,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.11390141,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.61775419,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.61027696,
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(u_num, u_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(flux_num, flux_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        kappa = 1e-6
tests/integration/test_mpfa_mpsa_convergence.py:        uy = sympy.cos(pi * x) * (y - 0.5) ** 2
tests/integration/test_mpfa_mpsa_convergence.py:                4.34828020e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.28604711e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                4.44822207e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.38491959e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.44343744e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.57167144e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.00162624e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.00238227e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                5.87213962e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.38867039e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                8.23865674e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.13226288e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.95485035e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.99228558e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.86032264e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.98718901e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.10107048e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.92175454e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.61175691e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -9.54876903e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.16316129e05,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.88145864e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.05122149e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.50227511e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.10004595e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.95726100e05,
tests/integration/test_mpfa_mpsa_convergence.py:                4.80967293e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.75468311e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                9.79098447e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.41353425e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.25311645e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                4.92754427e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.70707593e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.99251805e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.24576479e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                7.41411040e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.01589906e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.62752910e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.54194953e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.81738306e-03,
tests/integration/test_mpfa_mpsa_convergence.py:                9.75232315e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.94212745e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.40312366e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -9.84146744e-04,
tests/integration/test_mpfa_mpsa_convergence.py:                1.44439248e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.26062693e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.18985536e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                6.69214843e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                9.75560080e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.16164304e00,
tests/integration/test_mpfa_mpsa_convergence.py:                2.61832387e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.78158572e00,
tests/integration/test_mpfa_mpsa_convergence.py:                4.00765626e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.17553339e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                6.68855436e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.76856058e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.19126220e-03,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.16523644e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.70740449e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.94622916e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.33488229e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                9.75877417e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.12724793e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.54364949e00,
tests/integration/test_mpfa_mpsa_convergence.py:                1.36688693e-06,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.99045087e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.75368137e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                7.52661873e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.06531877e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.61010433e00,
tests/integration/test_mpfa_mpsa_convergence.py:                9.96675947e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -9.49588482e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.75235100e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.84643256e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.28927672e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.02791621e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.48170356e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                6.06184771e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                7.05495950e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                4.51513684e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.89761162e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.70617671e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.39287873e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.98695191e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.00244197e00,
tests/integration/test_mpfa_mpsa_convergence.py:                3.32888439e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                6.13216163e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.94315594e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.25632372e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.92829981e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.20246999e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.09484045e-01,
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(u_num, u_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(stress_num, stress_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:                -0.22520049,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.17438399,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.03106521,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.23518914,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21772969,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.00907209,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.16780779,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.26366039,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.2113708,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21537036,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.19676077,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.25316387,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21519289,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.01138746,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.25353288,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.25465231,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.11863116,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.20781077,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.28400782,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.06103447,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.1345499,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.17170964,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.0746532,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.13539543,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.18490946,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.02175786,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.20407522,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.2084673,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.09926638,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.16599291,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.29765445,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.07124824,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.17482109,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21936224,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.11164636,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.05092288,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21120468,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.19719789,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.02376679,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.14079355,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21939472,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.15935784,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.17298347,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.27041779,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.08215586,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.09058382,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21516999,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.10237499,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.08984219,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.12449397,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.14809246,
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(u_num, u_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(flux_num, flux_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:                -0.00079293,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.26958583,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.33638689,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21238819,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.0349944,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.16198909,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.07875239,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.27337858,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.1670963,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.48304876,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.22723128,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.18865259,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.22811062,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.30489755,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.18806925,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.30525305,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.06651859,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.23583853,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.06045769,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.38650195,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.16491128,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.2016545,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.30974013,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.01539455,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.22705338,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.13767907,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.21021141,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.09388028,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.05587886,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.36175408,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.18516825,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.19081557,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.03032643,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.15881483,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.17178383,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.19799585,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.10703985,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.08057204,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.36977486,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.22871008,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.02248408,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.08465242,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.09051632,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.12533392,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.09117625,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.13517655,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.29061051,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.17997061,
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(u_num, u_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(stress_num, stress_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        k(x,y) = 1e-6, x > 0.5, y > 0.5
tests/integration/test_mpfa_mpsa_convergence.py:                3.23882374e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.00141263e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.89788221e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                6.50248262e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.26582286e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.85645414e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.23206214e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.61911020e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                7.68008367e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.55728946e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                6.74836809e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                5.99591360e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.17121651e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.80544428e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.19433071e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.13312194e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.27341943e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.21703640e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.48524532e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.68503490e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                9.04646914e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                7.97365667e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                3.23832023e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                1.01162732e-06,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.70554892e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.62657580e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.00531058e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.89809540e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                7.41287855e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                2.59896652e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                4.68358154e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                3.56771478e-07,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.01692398,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.0436895,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.54725235,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.27117394,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.69655085,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.01292093,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.91889083,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.01822556,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.95069045,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.89315773,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.28695981,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.11899968,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.11766933,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.73307357,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.6860483,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.8401944,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.64284045,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.13761907,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.51436174,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.02567319,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.43280923,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.14624988,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.68966019,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.58267543,
tests/integration/test_mpfa_mpsa_convergence.py:                -0.47524675,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.16026059,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.21286644,
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(u_num, u_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(flux_num, flux_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        kappa = 1e-6
tests/integration/test_mpfa_mpsa_convergence.py:        uy = sympy.cos(pi * x) * (y - 0.5) ** 2
tests/integration/test_mpfa_mpsa_convergence.py:                3.09390864e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.34641782e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.39984582e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.40769722e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.01690824e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                1.27214799e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                6.25290354e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.93655381e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.21697832e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -9.98054636e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.05268072e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.39309160e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.52539272e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.08198323e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.77588051e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.75971892e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                8.63812650e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.18966686e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.97526372e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.47568703e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                7.81745485e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                9.96400435e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                6.68681050e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.46143679e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.17920741e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.36336034e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.17481291e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.66781994e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.38240999e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.08400498e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.15426044e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.31935194e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.78229418e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.12982884e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.64775005e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.49997413e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.07616544e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.05270256e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.35178837e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.53240133e-03,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.96455647e04,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.64055159e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.86014521e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.78896900e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.60447467e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.23566159e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.04419759e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.35057023e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                9.56055537e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.64651914e05,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.77346295e05,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.61357268e00,
tests/integration/test_mpfa_mpsa_convergence.py:                2.80488162e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.96733690e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.65972580e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.69365614e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.90711867e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                7.59404680e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.14402627e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.16161943e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.42805581e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.44840056e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.53171831e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.46034911e-03,
tests/integration/test_mpfa_mpsa_convergence.py:                7.41828564e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                1.20733804e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.69615641e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.19989892e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.76955699e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.54287340e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.23675204e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.65992898e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.96835654e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.08920433e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.91195954e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                3.95226369e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.85307501e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.75764611e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.39524507e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -9.74156517e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                7.72101341e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.46911828e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.20590624e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.56645157e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.46701436e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.23513666e00,
tests/integration/test_mpfa_mpsa_convergence.py:                1.74449458e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                9.48470755e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.61535220e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.76862760e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                2.67592513e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                9.04967778e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.31401211e00,
tests/integration/test_mpfa_mpsa_convergence.py:                1.04384062e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.75957149e00,
tests/integration/test_mpfa_mpsa_convergence.py:                8.17646416e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.93107738e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                1.12604490e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.18117811e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.64442921e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.21959672e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.24295237e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.61436595e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -5.77455488e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.01131873e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.80335366e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.96331808e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                8.74556628e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.55241411e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.78326576e00,
tests/integration/test_mpfa_mpsa_convergence.py:                3.56825332e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.90782184e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.58239048e00,
tests/integration/test_mpfa_mpsa_convergence.py:                4.07064626e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.61352071e00,
tests/integration/test_mpfa_mpsa_convergence.py:                9.40026683e-03,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.47155162e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.87760460e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                6.83596274e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                8.73341300e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.50132399e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.93138058e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.11662381e00,
tests/integration/test_mpfa_mpsa_convergence.py:                2.34849922e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.34554429e00,
tests/integration/test_mpfa_mpsa_convergence.py:                8.86961989e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.79817871e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -8.55922163e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -4.57786835e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.04773077e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -3.50647833e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -2.74326653e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -7.54153110e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                -6.31218484e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                -1.48522376e00,
tests/integration/test_mpfa_mpsa_convergence.py:                -9.06961017e-02,
tests/integration/test_mpfa_mpsa_convergence.py:                3.04826450e-01,
tests/integration/test_mpfa_mpsa_convergence.py:                4.79898022e-01,
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(u_num, u_precomp, atol=1e-10).all()
tests/integration/test_mpfa_mpsa_convergence.py:        assert np.isclose(stress_num, stress_precomp, atol=1e-10).all()
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(d[::2] - dc_x)) < 1e-8)
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(d[1::2] - dc_y)) < 1e-8)
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(traction[::2] - traction_ex_x)) < 1e-8)
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(traction[1::2] - traction_ex_y)) < 1e-8)
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(d[::2] - d_x)) < 1e-8)
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(d[1::2] - d_y)) < 1e-8)
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(traction)) < 1e-8)
tests/integration/test_mpsa.py:            bot = np.ravel(np.argwhere(g.face_centers[1, :] < 1e-10))
tests/integration/test_mpsa.py:            left = np.ravel(np.argwhere(g.face_centers[0, :] < 1e-10))
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(d[::2] - d_x)) < 1e-8)
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(d[1::2] - d_y)) < 1e-8)
tests/integration/test_mpsa.py:            self.assertTrue(np.max(np.abs(traction)) < 1e-8)
tests/integration/test_mpsa.py:            bot = np.ravel(np.argwhere(g.face_centers[1, :] < 1e-10))
tests/integration/test_mpsa.py:            left = np.ravel(np.argwhere(g.face_centers[0, :] < 1e-10))
tests/integration/test_mpsa.py:            traction_2d = traction.reshape((g.dim, -1), order="F")
tests/integration/test_mpsa.py:                    np.all(np.sum(traction_2d[:, fid] * sgn, axis=1) < 1e-10)
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((stress - stress_old).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((bound_stress - bound_stress_old).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_cell - hf_cell_old).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_bound - hf_bound_old).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((stress - stress_full).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((bound_stress - bound_stress_full).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_cell - hf_cell_full).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_bound - hf_bound_full).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((stress - stress_dir).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((bound_stress - bound_stress_dir).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_cell - hf_cell_dir).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_bound - hf_bound_dir).data, 0))
tests/integration/test_mpsa.py:        faces = g.face_centers[2] < 1e-10
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((stress - stress_rob).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((bound_stress - bound_stress_rob).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_cell - hf_cell_rob).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_bound - hf_bound_rob).data, 0))
tests/integration/test_mpsa.py:        faces = np.where(g.face_centers[0] > 1 - 1e-10)[0]
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((stress - stress_rob).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((bound_stress - bound_stress_rob).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_cell - hf_cell_rob).data, 0))
tests/integration/test_mpsa.py:        self.assertTrue(np.allclose((hf_bound - hf_bound_rob).data, 0))
tests/integration/test_mpsa.py:                [0.10416667, 0.0, 0.0, 0.0, 0.0, -0.02083333, 0.0, 0.0],
tests/integration/test_mpsa.py:                [0.0, 0.0, 0.10416667, 0.0, 0.0, 0.0, 0.0, -0.02083333],
tests/integration/test_mpsa.py:                [-0.02083333, 0.0, 0.0, 0.0, 0.0, 0.10416667, 0.0, 0.0],
tests/integration/test_mpsa.py:                [0.0, 0.0, -0.02083333, 0.0, 0.0, 0.0, 0.0, 0.10416667],
tests/integration/test_mpsa.py:        self.assertTrue(np.all(np.abs(grad_bound - hf2f.dot(grad_bound_known)) < 1e-7))
tests/integration/test_mpsa.py:        self.assertTrue(np.all(np.abs(grad_cell - hf2f.dot(grad_cell_known)) < 1e-12))
tests/integration/test_mpsa.py:            (g.dim, -1), order="F"
tests/integration/test_mpsa.py:        U = U.reshape((g.dim, -1), order="F")
tests/integration/test_mpsa.py:        self.assertTrue(np.all(np.abs(U - g.cell_centers - x0) < 1e-10))
tests/integration/test_mpsa.py:        self.assertTrue(np.all(np.abs(U_f - g.face_centers - x0) < 1e-10))
tests/integration/test_mpsa.py:            (g.dim, -1), order="F"
tests/integration/test_mpsa.py:        self.assertTrue(np.all(np.abs(U_f[:, dir_ind] - u_b[:, dir_ind]) < 1e-10))
tests/integration/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/integration/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/integration/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/integration/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/integration/test_mpsa.py:        the x- and y-axis and the flipping the boundary conditions also.
tests/integration/test_mpsa.py:        west = g.face_centers[0] < 1e-7
tests/integration/test_mpsa.py:        south = g.face_centers[1] < 1e-7
tests/integration/test_mpsa.py:        north = g.face_centers[1] > 1 - 1e-7
tests/integration/test_mpsa.py:        east = g.face_centers[0] > 1 - 1e-7
tests/integration/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/integration/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/integration/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/integration/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/integration/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/integration/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/integration/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/integration/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/integration/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/integration/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/integration/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/integration/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/integration/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/integration/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/integration/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/integration/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/integration/test_mpsa.py:        bot = sd.face_centers[2] < 1e-10
tests/integration/test_mpsa.py:        top = sd.face_centers[2] > 1 - 1e-10
tests/integration/test_mpsa.py:        west = sd.face_centers[0] < 1e-10
tests/integration/test_mpsa.py:        east = sd.face_centers[0] > 1 - 1e-10
tests/integration/test_mpsa.py:        north = sd.face_centers[1] > 1 - 1e-10
tests/integration/test_mpsa.py:        south = sd.face_centers[1] < 1e-10
tests/integration/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/integration/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/integration/test_mpsa.py:                -0.75,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -0.75,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:        self.assertTrue(np.all(np.abs(igrad - igrad_known).A < 1e-12))
tests/integration/test_mpsa.py:        west = g.face_centers[0] < 1e-10
tests/integration/test_mpsa.py:        east = g.face_centers[0] > 1 - 1e-10
tests/integration/test_mpsa.py:        south = g.face_centers[1] < 1e-10
tests/integration/test_mpsa.py:                -4.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -4.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -4 / 3,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -4.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -4.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -4 / 3,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -4.0,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -4.0,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -1.5,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -4.0,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -4.0,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -1.5,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -2.0,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -2 / 3,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:                -0.5,
tests/integration/test_mpsa.py:        self.assertTrue(np.all(np.abs(igrad - igrad_known).A < 1e-12))
tests/integration/test_md_grids_2d.py:    Note that the tests in part are based on hard-coded 'known' information on the
tests/integration/test_md_grids_2d.py:        self.assertAlmostEqual(x_length, bbox["xmax"] - bbox["xmin"])
tests/integration/test_md_grids_2d.py:        self.assertAlmostEqual(y_length, bbox["ymax"] - bbox["ymin"])
tests/integration/test_md_grids_2d.py:                np.vstack((np.arange(11 / 12, 1 / 12, -1 / 6), 0.5 * np.ones(5))),
tests/integration/test_md_grids_2d.py:            (np.vstack((np.arange(1, 1 / 6, -1 / 6), 0.5 * np.ones(6))), np.zeros(6))
tests/integration/test_md_grids_2d.py:            (np.vstack((np.arange(7 / 8, 0, -1 / 4), 0.5 * np.ones(4))), np.zeros(4))
tests/integration/test_md_grids_2d.py:        x = np.hstack((np.arange(1, -1 / 4, -1 / 4), 0.5))
tests/integration/test_md_grids_2d.py:        y = np.hstack((np.arange(3 / 4, 0, -1 / 4), 0.5))
tests/integration/setup_grids_mpfa_mpsa_tests.py:    g_cart_rpert.nodes = g_cart_rpert.nodes + dx * pert * (0.5 - rand)
tests/integration/setup_grids_mpfa_mpsa_tests.py:    # No perturbations of the z-coordinate (which is not active in this case)
tests/integration/setup_grids_mpfa_mpsa_tests.py:    g.nodes += rate * dx * (rand - 0.5)
tests/integration/setup_grids_mpfa_mpsa_tests.py:    # Ensure there are no perturbations in the z-coordinate
tests/integration/setup_mixed_dimensional_grids.py:    eps = 1e-10
tests/integration/setup_mixed_dimensional_grids.py:    assert x_stop < 1 + eps and x_stop > -eps
tests/integration/setup_mixed_dimensional_grids.py:    assert x_start < 1 + eps and x_stop > -eps
tests/integration/setup_mixed_dimensional_grids.py:    eps = 1e-10
tests/integration/setup_mixed_dimensional_grids.py:    assert x_stop < 1 + eps and x_stop > -eps
tests/integration/setup_mixed_dimensional_grids.py:    assert x_start < 1 + eps and x_stop > -eps
tests/integration/setup_mixed_dimensional_grids.py:    a = 1e-2
tests/integration/setup_mixed_dimensional_grids.py:    kf = 1e-3
tests/integration/setup_mixed_dimensional_grids.py:    eps = 1e-1
tests/integration/setup_mixed_dimensional_grids.py:        aperture = np.ones(g.num_cells) * np.power(a, mdg.dim_max() - g.dim)
tests/integration/setup_mixed_dimensional_grids.py:            top = bound_face_centers[1, :] > 1 - eps
tests/integration/setup_mixed_dimensional_grids.py:            [-1, 0, 0, 0, 1, 0, 0, 0, 0],
tests/integration/setup_mixed_dimensional_grids.py:            [0, -1, 0, -1, 0, 0, 0, 0, 0],
tests/integration/setup_mixed_dimensional_grids.py:            [0, -1, 0, -1, 0, 0, 0, 0, 0],
tests/integration/setup_mixed_dimensional_grids.py:            [1, 0, 0, 0, -1, 0, 0, 0, 0],
tests/integration/setup_mixed_dimensional_grids.py:    constant = np.divide(E, np.multiply(1 + nu, 1 - 2 * nu))
tests/integration/setup_mixed_dimensional_grids.py:            [0, -1 / 2, 0, -1 / 2, 0, 0, 0, 0, 0],
tests/integration/setup_mixed_dimensional_grids.py:            [0, -1 / 2, 0, -1 / 2, 0, 0, 0, 0, 0],
tests/integration/setup_mixed_dimensional_grids.py:    constant = np.divide(E, 1 - np.power(nu, 2))
tests/integration/setup_mixed_dimensional_grids.py:    eps = 1e-10
tests/integration/setup_mixed_dimensional_grids.py:    last_ind = mdg.dim_max() - 1
tests/integration/setup_mixed_dimensional_grids.py:                np.ones(g.num_cells) * E * poisson / ((1 + poisson) * (1 - 2 * poisson))
tests/integration/setup_mixed_dimensional_grids.py:            top = bound_face_centers[last_ind, :] > height - eps
tests/integration/setup_mixed_dimensional_grids.py:            right = bound_face_centers[0, :] > 1 - eps
tests/integration/setup_mixed_dimensional_grids.py:                    dist = np.absolute(bound_face_centers[0, to] - 0.5 + eps)
tests/integration/setup_mixed_dimensional_grids.py:                    dist = np.absolute(bound_face_centers[0, bo] - 0.5 + eps)
tests/integration/setup_mixed_dimensional_grids.py:                    back = bound_face_centers[1, :] > 2 * t - eps
tests/integration/setup_mixed_dimensional_grids.py:                bc_val[last_ind, ind_b] = -np.absolute(
tests/integration/setup_mixed_dimensional_grids.py:    eps = 1e-10
tests/integration/setup_mixed_dimensional_grids.py:    last_ind = mdg.dim_max() - 1
tests/integration/setup_mixed_dimensional_grids.py:            lam = np.ones(g.num_cells) * 2 * mu * poisson / (1 - 2 * poisson)
tests/integration/setup_mixed_dimensional_grids.py:            top = bound_face_centers[last_ind, :] > height - eps
tests/integration/setup_mixed_dimensional_grids.py:            right = bound_face_centers[0, :] > length - eps
tests/integration/setup_mixed_dimensional_grids.py:                    back = bound_face_centers[1, :] > 2 * t - eps
tests/integration/setup_mixed_dimensional_grids.py:                        2 * (cc > (height / 2)) - 1
tests/integration/setup_mixed_dimensional_grids.py:    point_l = center - np.array([a, 0])
tests/integration/setup_mixed_dimensional_grids.py:    v1 = fc - point_l[:, np.newaxis]
tests/integration/setup_mixed_dimensional_grids.py:    v2 = fc - point_r[:, np.newaxis]
tests/integration/setup_mixed_dimensional_grids.py:    v = fc - center[:, np.newaxis]
tests/integration/setup_mixed_dimensional_grids.py:    t1 = np.arccos(np.clip(np.dot(normal, v1 / r1), -1.0, 1.0))
tests/integration/setup_mixed_dimensional_grids.py:    t2 = np.arccos(np.clip(np.dot(normal, v2 / r2), -1.0, 1.0))
tests/integration/setup_mixed_dimensional_grids.py:    t = np.arccos(np.clip(np.dot(normal, v / r), -1.0, 1.0))
tests/integration/setup_mixed_dimensional_grids.py:        * np.cos(t - t1 / 2 - t2 / 2)
tests/integration/setup_mixed_dimensional_grids.py:        - 1
tests/integration/setup_mixed_dimensional_grids.py:    s_t = pluss - minus
tests/integration/setup_mixed_dimensional_grids.py:    nu - Poisson's ratio
tests/integration/setup_mixed_dimensional_grids.py:    sigma_n = p0 * (1 - np.divide(n3, den))
tests/integration/setup_mixed_dimensional_grids.py:    sigma_t = p0 * (1 - np.divide(n3 + fc[normal_ind] * 2 * np.square(a), den))
tests/integration/setup_mixed_dimensional_grids.py:        W = np.max(g.face_centers) / 2 - 0.1 * g.face_areas[0]
tests/integration/setup_mixed_dimensional_grids.py:        W = np.max(g.face_centers) / 2 - 0.1 * g.face_areas[0]
tests/integration/setup_mixed_dimensional_grids.py:    a = 1e-2
tests/integration/setup_mixed_dimensional_grids.py:    eps = 1e-10
tests/integration/setup_mixed_dimensional_grids.py:    last_ind = mdg.dim_max() - 1
tests/integration/setup_mixed_dimensional_grids.py:        aperture = np.ones(g.num_cells) * np.power(a, mdg.dim_max() - g.dim)
tests/integration/setup_mixed_dimensional_grids.py:            top = bound_face_centers[last_ind, :] > 1 - eps
tests/integration/setup_mixed_dimensional_grids.py:            left = bound_face_centers[0, :] > 1 - eps
tests/integration/setup_mixed_dimensional_grids.py:    Assign apertures to new lower-dimensional cells.
tests/integration/test_mpfaMultiDim.py:        a = np.power(aperture, mdg.dim_max() - sd.dim) * np.ones(sd.num_cells)
tests/integration/test_mpfaMultiDim.py:            p_diff = pressure - pressure_analytic
tests/integration/_helper_test_upwind_coupling.py:""" This file contains hard-coded values used in the integration test
tests/integration/_helper_test_upwind_coupling.py:            2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            1.00000000e-04,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            2.50000000e-01,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -5.55111512e-19,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.55111512e-19,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -5.55111512e-19,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.55111512e-19,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -5.55111512e-19,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.55111512e-19,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -5.55111512e-19,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.55111512e-19,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            5.00000000e-03,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            1.00000000e-04,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e-04,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            -1.00000000e00,
tests/integration/_helper_test_upwind_coupling.py:            2.5e-01,
tests/integration/_helper_test_upwind_coupling.py:            2.5e-01,
tests/integration/_helper_test_upwind_coupling.py:            2.5e-01,
tests/integration/_helper_test_upwind_coupling.py:            2.5e-01,
tests/integration/_helper_test_upwind_coupling.py:            5.0e-03,
tests/integration/_helper_test_upwind_coupling.py:            5.0e-03,
tests/integration/_helper_test_upwind_coupling.py:            5.0e-03,
tests/integration/_helper_test_upwind_coupling.py:            5.0e-03,
tests/integration/_helper_test_upwind_coupling.py:            1.0e-04,
tests/test_grids.py:# -*- coding: utf-8 -*-
tests/test_grids.py:        initially aligned with the y-axis.
tests/test_grids.py:        rotate_fracture: Fracture is rotated from aligned with the y-axis
tests/test_grids.py:                [1, 1, -1],  # 0
tests/test_grids.py:                [-1, 1, -1],  # 1
tests/test_grids.py:                [-1, 1, -1],  # 2
tests/test_grids.py:                [1, 1, -1],  # 3
tests/test_grids.py:                [1, -1, 1],  # 4
tests/test_grids.py:                [1, -1, -1],  # 5
tests/test_grids.py:                [1, -1, -1],  # 6
tests/test_grids.py:                [1, 1, -1],  # 7
tests/test_grids.py:                [1, 1, -1],  # 8
tests/test_grids.py:                [1, 1, -1],  # 9
tests/test_grids.py:                [1, -1, -1],  # 10
tests/test_grids.py:                [-1, -1, 1],  # 11
tests/test_grids.py:                [1, 1, -1],  # 12
tests/test_grids.py:                [-1, -1, 1],  # 13
tests/test_grids.py:                [-1, 1, 1],  # 14
tests/test_grids.py:                [-1, 1, -1],  # 15
tests/test_grids.py:                [-1, 1, 1],  # 16
tests/test_grids.py:                [1, 1, -1],  # 17
tests/test_grids.py:            g.face_normals[:, fracture_faces] *= -1
tests/test_grids.py:            g.cell_faces[fracture_faces, [3, 6, 15, 10]] *= -1
tests/test_grids.py:            g.face_normals[:, 28] *= -1
tests/test_grids.py:            g.cell_faces[28, 3] *= -1
tests/test_utils.py:        dof[i] = dof[i - 1][-1] + 1 + np.arange(full_dof[i])
tests/test_utils.py:def compare_arrays(a, b, tol=1e-4, sort=True):
tests/test_utils.py:        dist = np.sum((b - a[:, i].reshape((-1, 1))) ** 2, axis=0)
tests/test_utils.py:        dist = np.sum((a - b[:, i].reshape((-1, 1))) ** 2, axis=0)
tests/test_utils.py:    dfn = g1.face_nodes - g2.face_nodes
tests/test_utils.py:    dcf = g1.cell_faces - g2.cell_faces
tests/test_utils.py:        coord = g1.nodes - g2.nodes
tests/test_utils.py:        coord = g1.cell_centers - g2.cell_centers
tests/test_utils.py:    if dist.max() > 1e-16:
tests/common/flow_benchmark_2d_geiger_setup.py:def add_data(mdg: pp.MixedDimensionalGrid, domain: pp.Domain, kf: float) -> None:
tests/common/flow_benchmark_2d_geiger_setup.py:    data of the corresponding mixed-dimensional grid.
tests/common/flow_benchmark_2d_geiger_setup.py:        mdg: mixed-dimensional grid.
tests/common/flow_benchmark_2d_geiger_setup.py:    tol = 1e-5
tests/common/flow_benchmark_2d_geiger_setup.py:    a = 1e-4
tests/common/flow_benchmark_2d_geiger_setup.py:        a_dim = np.power(a, mdg.dim_max() - sd.dim)
tests/common/flow_benchmark_2d_geiger_setup.py:            right = bound_face_centers[0, :] > domain.bounding_box["xmax"] - tol
tests/common/flow_benchmark_2d_geiger_setup.py:            bc_val[bound_faces[left]] = -a_dim * sd.face_areas[bound_faces[left]]
tests/unit/test_bc_vectorial.py:        # Move the boundary conditions to sub-faces
tests/unit/test_hu_model_full_jac.py:- test copied from test_hu, so see comments there
tests/unit/test_hu_model_full_jac.py:- accumulation and sources = 0
tests/unit/test_hu_model_full_jac.py:- g = 1
tests/unit/test_hu_model_full_jac.py:- p = [1,0]
tests/unit/test_hu_model_full_jac.py:- constant density
tests/unit/test_hu_model_full_jac.py:(- come negli altri test, ci potrebbero esser problemi con la mixture che non ho proprio capito)
tests/unit/test_hu_model_full_jac.py:    def pressure_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_full_jac.py:    def mass_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_full_jac.py:            flux_V_G - flux_intf_phase_0 - flux_intf_phase_1
tests/unit/test_hu_model_full_jac.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_full_jac.py:        # TEST SECTION: --------------------------------------------------------------
tests/unit/test_hu_model_full_jac.py:        A_exact = np.array([[1, -1, 0, 0], [-1, 1, 0, 0], [1, -1, 0, 0], [-1, 1, 0, 0]])
tests/unit/test_hu_model_full_jac.py:        assert np.all(np.isclose(A_ad, A_exact, rtol=0, atol=1e-10))
tests/unit/test_hu_model_full_jac.py:        print("\n\n TEST PASSED ----------------------------------------- ")
tests/unit/test_hu_model_full_jac.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_full_jac.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_full_jac.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_full_jac.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_full_jac.py:    dt_init=5e-4,
tests/unit/test_hu_model_full_jac.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_mpfa_robin.py:                left = g.face_centers[0] < 1e-10
tests/unit/test_mpfa_robin.py:                right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpfa_robin.py:                C = (rob_bound - robin_weight * p_bound) / (robin_weight - p_bound)
tests/unit/test_mpfa_robin.py:                u_ex = -C * g.face_normals[0]
tests/unit/test_mpfa_robin.py:                left = g.face_centers[0] < 1e-10
tests/unit/test_mpfa_robin.py:                right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpfa_robin.py:                C = (rob_bound - robin_weight * p_bound) / (robin_weight - p_bound)
tests/unit/test_mpfa_robin.py:                u_ex = -C * g.face_normals[0]
tests/unit/test_mpfa_robin.py:                bot = g.face_centers[1] < 1e-10
tests/unit/test_mpfa_robin.py:                top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpfa_robin.py:                C = (rob_bound - robin_weight * p_bound) / (robin_weight - p_bound)
tests/unit/test_mpfa_robin.py:                p_ex = C * (1 - g.cell_centers[1]) + p_bound
tests/unit/test_mpfa_robin.py:        bot = g.face_centers[1] < 1e-10
tests/unit/test_mpfa_robin.py:        top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpfa_robin.py:        left = g.face_centers[0] < 1e-10
tests/unit/test_mpfa_robin.py:        right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpfa_robin.py:        b = -div * bound_flux * u_bound
tests/unit/test_mpfa_robin.py:            np.dot(g.face_normals[:, f], np.array([0, -1, 0]))
tests/unit/test_mpfa_robin.py:        b = -div * bound_flux * u_bound
tests/unit/test_hu_model_mortar_fluid_flux.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_mortar_fluid_flux.py:    # other methods not called in prepared_simulation: -------------------------------------------------
tests/unit/test_hu_model_mortar_fluid_flux.py:        # TEST: ---------------------------------------------------------------------------
tests/unit/test_hu_model_mortar_fluid_flux.py:        #         sd.nodes[1][internal_nodes_id[0]] -= 0.1
tests/unit/test_hu_model_mortar_fluid_flux.py:        # ---------
tests/unit/test_hu_model_mortar_fluid_flux.py:        # pay attention, you are goning to evaluate the equation "lamnda - rhs = ...". Since lambda = 0 ny initialization the evaluation of thr equations is -mortar
tests/unit/test_hu_model_mortar_fluid_flux.py:        # that's why i'll write -np.array([...
tests/unit/test_hu_model_mortar_fluid_flux.py:        # so mortar > 0 => fluid flux >0 => exiting boundary flux => a minus in the conservation law: div(F-boundary_flux)
tests/unit/test_hu_model_mortar_fluid_flux.py:        mortar_phase_0 = -(
tests/unit/test_hu_model_mortar_fluid_flux.py:        mortar_phase_1 = -(
tests/unit/test_hu_model_mortar_fluid_flux.py:        assert np.all( div_flux_intf_phase_0_from_mass_by_hand == -div_flux_intf_phase_0_from_mass )
tests/unit/test_hu_model_mortar_fluid_flux.py:        assert np.all( div_flux_intf_phase_1_from_mass_by_hand == -div_flux_intf_phase_1_from_mass ) # minus bcs in the balance eq the intf fluxes are subtracted... weird pp notation, I followed it
tests/unit/test_hu_model_mortar_fluid_flux.py:                    mortar_phase_0, np.array([1, 1, -1, -1]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux.py:                    rho_mob_phase_0 * np.array([1, 1, -1, -1]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    rho_mob_phase_1 * np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    mortar_phase_0, np.array([1, 1, -1, -1]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux.py:                    rho_mob_phase_0 * np.array([1, 1, -1, -1]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    rho_mob_phase_1 * np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    mortar_phase_0, np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    mortar_phase_0, np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:        if self.case == 5:  # delta p = -1, g = 0, s0=0
tests/unit/test_hu_model_mortar_fluid_flux.py:                    np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    rho_mob_phase_0 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    rho_mob_phase_1 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:        if self.case == 8:  # delta p = -1, g = 1, s0=1
tests/unit/test_hu_model_mortar_fluid_flux.py:                    np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    rho_mob_phase_0 * np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    rho_mob_phase_1 * np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    mortar_phase_0, 2*np.array([1, 1, -1, -1]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*rho_mob_phase_0 * np.array([1, 1, -1, -1]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*rho_mob_phase_1 * np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    mortar_phase_0, 2*np.array([1, 1, -1, -1]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*rho_mob_phase_0 * np.array([1, 1, -1, -1]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*rho_mob_phase_1 * np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    mortar_phase_0, 2*np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    mortar_phase_0, 2*np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:        if self.case == 13:  # delta p = -1, g = 0, s0=0
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*rho_mob_phase_0 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*rho_mob_phase_1 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:        if self.case == 16:  # delta p = -1, g = 1, s0=1
tests/unit/test_hu_model_mortar_fluid_flux.py:                2* np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                2* rho_mob_phase_0 * np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:                    2*rho_mob_phase_1 * np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_mortar_fluid_flux.py:                    atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:        print("\n\n\n TEST PASSED ----------------------------------------")
tests/unit/test_hu_model_mortar_fluid_flux.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_mortar_fluid_flux.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_mortar_fluid_flux.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_mortar_fluid_flux.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_mortar_fluid_flux.py:            "cell_size_x": self.xmax/2-0.1,
tests/unit/test_hu_model_mortar_fluid_flux.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_mortar_fluid_flux.py:        "residual_aperture": 1e-1,
tests/unit/test_hu_model_mortar_fluid_flux.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_model_mortar_fluid_flux.py:if case == 5:  # delta p = -1, g = 0
tests/unit/test_hu_model_mortar_fluid_flux.py:if case == 8:  # delta p = -1, g = 1
tests/unit/test_hu_model_mortar_fluid_flux.py:if case == 13:  # delta p = -1, g = 0
tests/unit/test_hu_model_mortar_fluid_flux.py:if case == 16:  # delta p = -1, g = 1
tests/unit/test_hu_model_mortar_fluid_flux.py:    #     #model.darcy_flux_phase_1_values_2d = np.array([0.,0,0,0,0, 0,0,0,-1,-1, 0,0,-1,-1])
tests/unit/test_fracture_importer.py:# -*- coding: utf-8 -*-
tests/unit/test_fracture_importer.py:        f = np.hstack((np.arange(2).reshape((-1, 1)), p))
tests/unit/test_fracture_importer.py:        domain = {"xmin": -1, "xmax": 0, "ymin": -2, "ymax": 2}
tests/unit/test_fracture_importer.py:        self.assertTrue(network.domain["xmin"] == -1)
tests/unit/test_fracture_importer.py:        self.assertTrue(network.domain["ymin"] == -2)
tests/unit/test_fracture_importer.py:        f = np.hstack((frac_id * np.ones(2).reshape((-1, 1)), p))
tests/unit/test_fracture_importer.py:        f = np.hstack((frac_id * np.ones(3).reshape((-1, 1)), p))
tests/unit/test_fracture_importer.py:                    (-1, 1)
tests/unit/test_fracture_importer.py:        # Two fractures, identical coordinates - this will not matter
tests/unit/test_fracture_importer.py:        self.assertTrue(f.pts[0].min() == -2)
tests/unit/test_fracture_importer.py:        self.assertTrue(f.pts[1].min() == -1)
tests/unit/test_hu_12.py:    def initial_condition(self) -> None:
tests/unit/test_hu_12.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_12.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_12.py:            permeability = 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_12.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_12.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_12.py:                eps = 1e-6
tests/unit/test_hu_12.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_12.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_12.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_12.py:                eps = 1e-6
tests/unit/test_hu_12.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_12.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_12.py:    def set_geometry(self) -> None:
tests/unit/test_hu_12.py:    def set_domain(self) -> None:
tests/unit/test_hu_12.py:    def set_fractures(self) -> None:
tests/unit/test_hu_12.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_12.py:    dt_init=1e-3,
tests/unit/test_hu_12.py:    # dt_init=1e-2,
tests/unit/test_hu_12.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_12.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_12.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_hu_model_V_G_sat.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_V_G_sat.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_model_V_G_sat.py:        # TEST: --------------------------------------------------------------------------------------------
tests/unit/test_hu_model_V_G_sat.py:                rho_G, np.array([0, 0, 0, 0, 0, -0.5, 0]), rtol=0, atol=1e-3 )) # PASSED. if compressible not exaclty -0.5
tests/unit/test_hu_model_V_G_sat.py:                rho_G, 2*np.array([0, 0, 0, 0, 0, -0.5, 0]), rtol=0, atol=1e-3 )) # PASSED         
tests/unit/test_hu_model_V_G_sat.py:        print("\n\n TEST PASSED ------------------- ")
tests/unit/test_hu_model_V_G_sat.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_V_G_sat.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_V_G_sat.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_model_V_G_sat.py:    model.saturation_values_2d = np.array([-2., -2]) 
tests/unit/test_hu_model_sat_constr.py:    ) -> pp.ad.Operator:
tests/unit/test_hu_model_sat_constr.py:        # accumulation term: ------------------------------
tests/unit/test_hu_model_sat_constr.py:        # interfaces flux contribution (copied from mass bal): ------------------------------------
tests/unit/test_hu_model_sat_constr.py:        flux = flux - flux_intf_phase_0 - flux_intf_phase_1
tests/unit/test_hu_model_sat_constr.py:        # sources: --------------------------------------------------------------
tests/unit/test_hu_model_sat_constr.py:            pp.ad.Scalar(-1)
tests/unit/test_hu_model_sat_constr.py:    ) -> pp.ad.Operator:
tests/unit/test_hu_model_sat_constr.py:        # accumulation term: ------------------------------------------------
tests/unit/test_hu_model_sat_constr.py:        # subdomains flux contribution: -------------------------------------
tests/unit/test_hu_model_sat_constr.py:        # interfaces flux contribution: ------------------------------------
tests/unit/test_hu_model_sat_constr.py:            flux -= (
tests/unit/test_hu_model_sat_constr.py:                discr.bound_transport_neu  # -1,0,1 matrix
tests/unit/test_hu_model_sat_constr.py:            flux -= (
tests/unit/test_hu_model_sat_constr.py:        # sources: ---------------------------------------
tests/unit/test_hu_model_sat_constr.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_sat_constr.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_model_sat_constr.py:        # TEST SECTION: ---------------------------------------------------------
tests/unit/test_hu_model_sat_constr.py:        #         sd.nodes[1][[9, 11]] -= 0.1
tests/unit/test_hu_model_sat_constr.py:                #     np.isclose(s_phase_1, 0 * s_phase_1, rtol=0, atol=1e-5)
tests/unit/test_hu_model_sat_constr.py:        print("\n\n TEST PASSED ------------------- ")
tests/unit/test_hu_model_sat_constr.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_sat_constr.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_sat_constr.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_sat_constr.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_sat_constr.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_fracture_class.py:            np.array([[0, 2, 2, 0], [0, 2, 2, 0], [-1, -1, 1, 1]]),
tests/unit/test_fracture_class.py:        n_known = np.array([1, -1, 0]).reshape((1, 3))
tests/unit/test_fracture_class.py:        # Center away from xy-plane
tests/unit/test_fracture_class.py:            np.array([[0, 1, 1, 0], [0, 0, 1, 1], [1, 0, -1, 0]]), check_convexity=False
tests/unit/test_fracture_class.py:        z = (r[0] - r[1] * x - r[2] * y) / r[3]
tests/unit/test_fracture_class.py:        z_cc = (r[0] - 0.5 * r[1] - 0.5 * r[2]) / r[3]
tests/unit/test_fracture_class.py:        n_known = np.array([1, -1]).reshape((1, 2))
tests/unit/test_fracture_class.py:        p = np.array([1e-4, 0, 0])
tests/unit/test_fracture_class.py:        is_vert, ind = f.is_vertex(p, tol=1e-5)
tests/unit/test_fracture_class.py:        is_vert, ind = f.is_vertex(p, tol=1e-3)
tests/unit/test_hu_model_jac_frac.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_jac_frac.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_model_jac_frac.py:        # TEST: --------------------------------------------------------------------------------------------
tests/unit/test_hu_model_jac_frac.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_jac_frac.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_jac_frac.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_jac_frac.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_jac_frac.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_vtk.py:The tests focus on the write-to-file capabilities of the Exporter. It is tested for
tests/unit/test_vtk.py:mixed-dimensional domains. In addition, the export capability of  2d and 3d fracture
tests/unit/test_vtk.py:) -> bool:
tests/unit/test_vtk.py:) -> bool:
tests/unit/test_vtk.py:    # created using the Exporter. Thus, they have a non-hierarchical xml-structure.
tests/unit/test_vtk.py:    # Here, we make a simple brute-force comparison, and search for each item in the
tests/unit/test_vtk.py:    ) -> bool:
tests/unit/test_vtk.py:    ) -> bool:
tests/unit/test_vtk.py:    """Test Exporter for 2d mixed-dimensional grids for a two-fracture domain.
tests/unit/test_vtk.py:    """Test import-from-pvd functionality of the Exporter for 2d mixed-dimensional grids
tests/unit/test_vtk.py:    for a two-fracture domain.
tests/unit/test_vtk.py:    # Test of the import routine of the Exporter for 2d mixed-dimensional grids.
tests/unit/test_vtk.py:    """Test Exporter for 2d mixed-dimensional grids for a two-fracture domain.
tests/unit/test_vtk.py:    """Test Exporter functionality to distinguish between constant and non-constant
tests/unit/test_vtk.py:    domain = pp.Domain({"xmin": -2, "xmax": 3, "ymin": -2, "ymax": 3})
tests/unit/test_vtk.py:        np.array([[0.5, 0.5, 0.5, 0.5], [-1, 2, 2, -1], [-1, -1, 2, 2]])
tests/unit/test_vtk.py:    domain = {"xmin": -2, "xmax": 3, "ymin": -2, "ymax": 3, "zmin": -3, "zmax": 3}
tests/unit/test_hu_model_V_G_1D.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_V_G_1D.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_model_V_G_1D.py:        # TEST: --------------------------------------------------------------------------------------------
tests/unit/test_hu_model_V_G_1D.py:                rho_G, np.array([ 0, -0.5, 0]), rtol=0, atol=1e-3 )) 
tests/unit/test_hu_model_V_G_1D.py:                rho_G, 2*np.array([0, -0.5, 0]), rtol=0, atol=1e-3 ))          
tests/unit/test_hu_model_V_G_1D.py:        print("\n\n TEST PASSED ------------------- ")
tests/unit/test_hu_model_V_G_1D.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_V_G_1D.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_V_G_1D.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_mcolon.py:        self.assertTrue(np.all((c - np.array([1, 2, 2, 3])) == 0))
tests/unit/test_mcolon.py:        self.assertTrue(np.all((c - np.array([1, 2])) == 0))
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[2].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[2].child[1] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[3].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[3].child[1] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[4].child[1] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[5].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[5].child[1] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[1].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[2].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[2].child[1] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[3].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[4].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[4].child[1] == -1)
tests/unit/test_adtree.py:        n = pp.adtree.ADTNode(99, [-1.0, 2.0])
tests/unit/test_adtree.py:        We search for points, segments and 2d objects (not a-priori grid cells).
tests/unit/test_adtree.py:        We search for points, segments and 2d objects (not a-priori grid faces)
tests/unit/test_adtree.py:        and 3d objects (not a-priori grid cells).
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[1].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[2].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[2].child[1] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[3].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[4].child[0] == -1)
tests/unit/test_adtree.py:        self.assertTrue(tree.nodes[4].child[1] == -1)
tests/unit/test_hu_model_intf_upwind.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_intf_upwind.py:    # other methods not called in prepared_simulation: -------------------------------------------------
tests/unit/test_hu_model_intf_upwind.py:        print("\n\n\n\n\n before nonlinear iter --------------------------------- ")
tests/unit/test_hu_model_intf_upwind.py:        # TEST: ---------------------------------------------------------------------------
tests/unit/test_hu_model_intf_upwind.py:        #         sd.nodes[1][internal_nodes_id[0]] -= 0.1
tests/unit/test_hu_model_intf_upwind.py:        # ---------
tests/unit/test_hu_model_intf_upwind.py:        print("\n\n\n TEST PASSED ----------------------------------------")
tests/unit/test_hu_model_intf_upwind.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_intf_upwind.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_intf_upwind.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_intf_upwind.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_intf_upwind.py:            "cell_size_x": self.xmax/2-0.1,
tests/unit/test_hu_model_intf_upwind.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_intf_upwind.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_model_intf_upwind.py:    model.interface_mortar_flux_phase_0_values = np.array([-1., -1, 1, 1])
tests/unit/test_hu_model_intf_upwind.py:    model.interface_mortar_flux_phase_1_values = np.array([-1., -1, 1, 1])
tests/unit/test_hu_model_intf_upwind.py:if case == 5:  # delta p = -1, g = 0
tests/unit/test_hu_model_intf_upwind.py:if case == 8:  # delta p = -1, g = 1
tests/unit/test_hu_model_intf_upwind.py:if case == 13:  # delta p = -1, g = 0
tests/unit/test_hu_model_intf_upwind.py:if case == 16:  # delta p = -1, g = 1
tests/unit/test_hu_model_intf_upwind.py:    #model.darcy_flux_phase_1_values_2d = np.array([0.,0,0,0,0, 0,0,0,-1,-1, 0,0,-1,-1])
tests/unit/video-1/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000270.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000271.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000272.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000273.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000274.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000275.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000276.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000277.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000278.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000279.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000280.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000281.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000282.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000283.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000284.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000285.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000286.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000287.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000288.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000289.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000290.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000291.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000292.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000293.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000294.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000295.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000296.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000297.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000298.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000299.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000300.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000301.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000302.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000303.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000304.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000305.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000306.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000307.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000308.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000309.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000310.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000311.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000312.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000313.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000314.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000315.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000316.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000317.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000318.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000319.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000320.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000321.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000322.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000323.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000324.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000325.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000326.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000327.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000328.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000329.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000330.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000331.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000332.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000333.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000334.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000335.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000336.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000337.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000338.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000339.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000340.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000341.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000342.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000343.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000344.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000345.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000346.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000347.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000348.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000349.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000350.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000351.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000352.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000353.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000354.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000355.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000356.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000357.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000358.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000359.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000360.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000361.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000362.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000363.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000364.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000365.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000366.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000367.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000368.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000369.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000370.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000371.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000372.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000373.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000374.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000375.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000376.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000377.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000378.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000379.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000380.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000381.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000382.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000383.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000384.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000385.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000386.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000387.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000388.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000389.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000390.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000391.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000392.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000393.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000394.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000395.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000396.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000397.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000398.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_1_000399.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000270.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000271.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000272.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000273.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000274.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000275.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000276.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000277.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000278.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000279.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000280.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000281.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000282.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000283.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000284.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000285.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000286.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000287.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000288.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000289.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000290.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000291.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000292.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000293.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000294.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000295.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000296.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000297.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000298.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000299.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000300.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000301.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000302.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000303.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000304.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000305.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000306.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000307.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000308.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000309.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000310.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000311.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000312.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000313.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000314.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000315.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000316.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000317.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000318.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000319.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000320.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000321.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000322.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000323.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000324.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000325.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000326.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000327.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000328.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000329.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000330.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000331.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000332.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000333.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000334.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000335.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000336.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000337.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000338.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000339.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000340.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000341.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000342.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000343.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000344.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000345.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000346.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000347.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000348.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000349.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000350.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000351.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000352.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000353.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000354.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000355.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000356.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000357.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000358.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000359.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000360.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000361.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000362.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000363.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000364.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000365.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000366.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000367.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000368.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000369.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000370.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000371.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000372.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000373.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000374.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000375.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000376.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000377.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000378.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000379.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000380.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000381.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000382.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000383.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000384.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000385.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000386.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000387.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000388.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000389.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000390.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000391.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000392.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000393.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000394.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000395.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000396.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000397.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000398.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000399.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000400.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000401.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000402.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000403.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000404.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000405.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000406.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000407.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000408.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000409.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000410.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000411.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000412.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000413.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000414.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000415.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000416.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000417.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000418.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000419.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000420.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000421.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000422.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000423.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000424.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000425.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000426.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000427.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000428.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000429.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000430.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000431.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000432.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000433.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000434.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000435.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000436.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000437.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000438.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000439.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000440.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000441.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000442.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000443.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000444.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000445.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000446.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000447.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000448.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000449.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000450.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000451.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000452.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000453.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000454.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000455.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000456.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000457.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000458.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000459.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000460.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000461.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000462.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000463.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000464.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000465.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000466.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000467.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000468.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000469.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000470.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000471.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000472.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000473.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000474.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000475.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000476.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000477.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000478.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000479.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000480.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000481.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000482.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000483.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000484.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000485.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000486.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000487.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000488.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000489.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000490.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000491.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000492.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000493.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000494.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000495.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000496.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000497.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000498.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000499.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000500.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000501.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000502.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000503.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000504.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000505.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000506.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000507.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000508.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000509.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000510.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000511.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000512.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000513.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000514.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000515.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000516.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000517.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000518.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000519.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000520.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000521.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000522.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000523.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000524.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000525.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000526.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000527.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000528.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000529.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000530.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000531.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000532.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000533.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000534.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000535.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000536.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000537.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000538.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000539.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000540.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000541.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000542.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000543.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000544.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000545.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000546.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000547.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000548.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000549.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000550.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000551.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000552.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000553.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000554.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000555.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000556.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000557.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000558.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000559.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000560.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000561.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000562.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000563.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000564.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000565.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000566.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000567.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000568.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000569.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000570.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000571.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000572.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000573.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000574.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000575.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000576.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000577.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000578.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000579.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000580.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000581.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000582.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000583.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000584.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000585.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000586.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000587.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000588.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000589.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000590.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000591.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000592.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000593.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000594.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000595.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000596.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000597.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000598.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000599.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000600.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000601.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000602.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000603.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000604.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000605.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000606.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000607.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000608.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000609.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000610.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000611.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000612.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000613.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000614.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000615.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000616.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000617.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000618.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000619.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000620.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000621.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000622.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000623.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000624.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000625.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000626.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000627.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000628.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000629.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000630.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000631.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000632.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000633.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000634.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000635.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000636.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000637.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000638.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000639.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000640.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000641.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000642.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000643.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000644.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000645.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000646.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000647.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000648.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000649.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000650.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000651.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000652.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000653.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000654.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000655.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000656.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000657.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000658.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000659.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000660.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000661.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000662.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000663.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000664.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000665.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000666.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000667.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000668.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000669.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000670.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000671.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000672.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000673.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000674.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000675.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000676.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000677.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000678.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000679.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000680.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000681.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000682.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000683.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000684.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000685.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000686.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000687.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000688.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000689.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000690.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000691.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000692.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000693.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000694.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000695.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000696.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000697.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000698.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000699.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000700.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000701.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000702.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000703.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000704.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000705.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000706.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000707.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000708.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000709.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000710.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000711.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000712.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000713.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000714.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000715.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000716.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000717.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000718.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000719.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000720.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000721.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000722.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000723.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000724.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000725.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000726.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000727.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000728.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000729.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000730.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000731.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000732.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000733.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000734.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000735.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000736.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000737.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000738.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000739.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000740.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000741.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000742.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000743.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000744.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000745.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000746.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000747.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000748.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000749.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000750.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000751.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000752.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000753.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000754.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000755.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000756.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000757.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000758.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000759.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000760.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000761.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000762.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000763.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000764.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000765.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000766.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000767.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000768.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000769.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000770.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000771.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000772.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000773.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000774.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000775.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000776.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000777.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000778.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000779.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000780.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000781.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000782.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000783.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000784.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000785.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000786.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000787.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000788.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000789.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000790.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000791.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000792.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000793.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000794.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000795.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000796.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000797.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000798.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000799.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000800.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000801.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000802.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000803.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000804.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000805.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000806.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000807.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000808.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000809.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000810.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000811.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000812.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000813.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000814.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000815.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000816.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000817.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000818.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000819.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000820.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000821.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000822.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000823.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000824.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000825.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000826.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000827.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000828.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000829.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000830.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000831.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000832.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000833.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000834.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000835.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000836.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000837.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000838.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000839.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000840.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000841.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000842.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000843.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000844.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000845.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000846.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000847.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000848.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000849.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000850.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000851.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000852.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000853.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000854.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000855.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000856.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000857.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000858.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000859.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000860.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000861.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000862.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000863.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000864.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000865.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000866.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000867.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000868.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000869.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000870.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000871.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000872.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000873.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000874.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000875.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000876.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000877.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000878.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000879.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000880.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000881.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000882.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000883.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000884.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000885.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000886.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000887.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000888.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000889.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000890.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000891.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000892.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000893.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000894.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000895.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000896.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000897.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000898.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000899.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000900.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000901.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000902.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000903.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000904.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000905.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000906.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000907.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000908.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000909.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000910.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000911.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000912.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000913.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000914.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000915.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000916.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000917.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000918.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000919.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000920.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000921.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000922.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000923.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000924.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000925.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000926.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000927.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000928.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000929.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000930.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000931.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000932.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000933.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000934.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000935.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000936.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000937.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000938.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000939.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000940.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000941.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000942.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000943.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000944.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000945.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000946.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000947.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000948.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000949.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000950.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000951.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000952.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000953.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000954.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000955.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000956.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000957.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000958.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000959.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000960.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000961.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000962.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000963.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000964.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000965.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000966.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000967.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000968.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000969.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000970.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000971.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000972.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000973.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000974.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000975.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000976.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000977.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000978.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000979.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000980.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000981.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000982.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000983.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000984.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000985.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000986.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000987.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000988.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000989.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000990.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000991.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000992.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000993.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000994.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000995.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000996.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000997.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000998.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_000999.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001270.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001271.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001272.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001273.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001274.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001275.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001276.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001277.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001278.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001279.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001280.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001281.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001282.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001283.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001284.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001285.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001286.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001287.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001288.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001289.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001290.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001291.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001292.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001293.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001294.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001295.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001296.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001297.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001298.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001299.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001300.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001301.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001302.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001303.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001304.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001305.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001306.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001307.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001308.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001309.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001310.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001311.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001312.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001313.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001314.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001315.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001316.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001317.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001318.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001319.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001320.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001321.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001322.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001323.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001324.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001325.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001326.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001327.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001328.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001329.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001330.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001331.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001332.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001333.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001334.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001335.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001336.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001337.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001338.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001339.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001340.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001341.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001342.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001343.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001344.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001345.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001346.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001347.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001348.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001349.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001350.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001351.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001352.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001353.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001354.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001355.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001356.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001357.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001358.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001359.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001360.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001361.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001362.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001363.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001364.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001365.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001366.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001367.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001368.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001369.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001370.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001371.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001372.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001373.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001374.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001375.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001376.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001377.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001378.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001379.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001380.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001381.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001382.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001383.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001384.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001385.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001386.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001387.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001388.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001389.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001390.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001391.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001392.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001393.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001394.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001395.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001396.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001397.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001398.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001399.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001400.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001401.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001402.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001403.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001404.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001405.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001406.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001407.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001408.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001409.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001410.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001411.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001412.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001413.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001414.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001415.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001416.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001417.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001418.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001419.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001420.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001421.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001422.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001423.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001424.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001425.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001426.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001427.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001428.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001429.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001430.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001431.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001432.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001433.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001434.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001435.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001436.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001437.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001438.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001439.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001440.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001441.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001442.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001443.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001444.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001445.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001446.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001447.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001448.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001449.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001450.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001451.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001452.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001453.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001454.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001455.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001456.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001457.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001458.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001459.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001460.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001461.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001462.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001463.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001464.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001465.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001466.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001467.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001468.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001469.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001470.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001471.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001472.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001473.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001474.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001475.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001476.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001477.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001478.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001479.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001480.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001481.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001482.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001483.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001484.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001485.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001486.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001487.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001488.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001489.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001490.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001491.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001492.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001493.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001494.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001495.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001496.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001497.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001498.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001499.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001500.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001501.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001502.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001503.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001504.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001505.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001506.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001507.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001508.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001509.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001510.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001511.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001512.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001513.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001514.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001515.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001516.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001517.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001518.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001519.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001520.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001521.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001522.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001523.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001524.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001525.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001526.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001527.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001528.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001529.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001530.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001531.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001532.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001533.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001534.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001535.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001536.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001537.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001538.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001539.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001540.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001541.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001542.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001543.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001544.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001545.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001546.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001547.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001548.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001549.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001550.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001551.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001552.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001553.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001554.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001555.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001556.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001557.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001558.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001559.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001560.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001561.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001562.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001563.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001564.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001565.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001566.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001567.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001568.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001569.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001570.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001571.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001572.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001573.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001574.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001575.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001576.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001577.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001578.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001579.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001580.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001581.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001582.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001583.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001584.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001585.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001586.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001587.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001588.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001589.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001590.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001591.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001592.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001593.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001594.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001595.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001596.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001597.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001598.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001599.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001600.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001601.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001602.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001603.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001604.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001605.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001606.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001607.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001608.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001609.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001610.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001611.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001612.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001613.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001614.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001615.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001616.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001617.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001618.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001619.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001620.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001621.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001622.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001623.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001624.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001625.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001626.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001627.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001628.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001629.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001630.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001631.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001632.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001633.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001634.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001635.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001636.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001637.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001638.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001639.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001640.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001641.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001642.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001643.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001644.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001645.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001646.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001647.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001648.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001649.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001650.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001651.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001652.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001653.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001654.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001655.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001656.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001657.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001658.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001659.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001660.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001661.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001662.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001663.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001664.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001665.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001666.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001667.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001668.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001669.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001670.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001671.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001672.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001673.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001674.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001675.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001676.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001677.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001678.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001679.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001680.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001681.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001682.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001683.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001684.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001685.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001686.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001687.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001688.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001689.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001690.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001691.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001692.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001693.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001694.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001695.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001696.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001697.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001698.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001699.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001700.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001701.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001702.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001703.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001704.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001705.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001706.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001707.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001708.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001709.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001710.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001711.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001712.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001713.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001714.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001715.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001716.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001717.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001718.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001719.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001720.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001721.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001722.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001723.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001724.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001725.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001726.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001727.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001728.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001729.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001730.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001731.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001732.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001733.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001734.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001735.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001736.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001737.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001738.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001739.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001740.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001741.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001742.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001743.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001744.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001745.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001746.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001747.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001748.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001749.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001750.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001751.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001752.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001753.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001754.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001755.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001756.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001757.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001758.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001759.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001760.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001761.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001762.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001763.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001764.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001765.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001766.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001767.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001768.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001769.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001770.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001771.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001772.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001773.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001774.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001775.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001776.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001777.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001778.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001779.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001780.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001781.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001782.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001783.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001784.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001785.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001786.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001787.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001788.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001789.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001790.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001791.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001792.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001793.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001794.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001795.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001796.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001797.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001798.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001799.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001800.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001801.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001802.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001803.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001804.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001805.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001806.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001807.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001808.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001809.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001810.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001811.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001812.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001813.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001814.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001815.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001816.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001817.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001818.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001819.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001820.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001821.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001822.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001823.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001824.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001825.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001826.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001827.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001828.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001829.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001830.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001831.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001832.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001833.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001834.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001835.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001836.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001837.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001838.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001839.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001840.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001841.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001842.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001843.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001844.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001845.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001846.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001847.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001848.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001849.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001850.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001851.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001852.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001853.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001854.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001855.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001856.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001857.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001858.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001859.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001860.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001861.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001862.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001863.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001864.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001865.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001866.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001867.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001868.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001869.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001870.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001871.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001872.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001873.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001874.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001875.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001876.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001877.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001878.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001879.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001880.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001881.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001882.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001883.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001884.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001885.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001886.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001887.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001888.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001889.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001890.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001891.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001892.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001893.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001894.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001895.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001896.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001897.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001898.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001899.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001900.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001901.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001902.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001903.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001904.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001905.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001906.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001907.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001908.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001909.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001910.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001911.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001912.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001913.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001914.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001915.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001916.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001917.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001918.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001919.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001920.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001921.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001922.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001923.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001924.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001925.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001926.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001927.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001928.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001929.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001930.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001931.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001932.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001933.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001934.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001935.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001936.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001937.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001938.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001939.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001940.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001941.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001942.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001943.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001944.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001945.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001946.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001947.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001948.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001949.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001950.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001951.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001952.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001953.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001954.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001955.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001956.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001957.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001958.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001959.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001960.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001961.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001962.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001963.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001964.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001965.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001966.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001967.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001968.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001969.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001970.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001971.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001972.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001973.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001974.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001975.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001976.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001977.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001978.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001979.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001980.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001981.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001982.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001983.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001984.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001985.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001986.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001987.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001988.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001989.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001990.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001991.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001992.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001993.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001994.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001995.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001996.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001997.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001998.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_001999.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002270.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002271.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002272.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002273.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002274.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002275.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002276.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002277.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002278.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002279.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002280.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002281.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002282.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002283.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002284.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002285.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002286.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002287.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002288.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002289.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002290.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002291.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002292.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002293.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002294.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002295.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002296.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002297.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002298.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002299.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002300.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002301.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002302.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002303.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002304.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002305.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002306.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002307.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002308.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002309.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002310.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002311.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002312.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002313.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002314.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002315.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002316.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002317.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002318.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002319.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002320.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002321.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002322.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002323.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002324.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002325.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002326.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002327.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002328.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002329.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002330.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002331.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002332.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002333.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002334.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002335.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002336.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002337.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002338.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002339.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002340.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002341.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002342.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002343.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002344.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002345.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002346.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002347.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002348.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002349.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002350.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002351.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002352.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002353.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002354.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002355.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002356.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002357.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002358.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002359.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002360.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002361.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002362.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002363.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002364.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002365.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002366.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002367.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002368.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002369.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002370.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002371.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002372.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002373.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002374.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002375.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002376.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002377.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002378.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002379.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002380.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002381.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002382.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002383.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002384.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002385.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002386.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002387.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002388.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002389.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002390.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002391.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002392.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002393.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002394.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002395.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002396.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002397.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002398.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002399.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002400.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002401.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002402.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002403.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002404.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002405.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002406.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002407.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002408.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002409.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002410.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002411.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002412.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002413.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002414.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002415.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002416.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002417.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002418.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002419.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002420.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002421.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002422.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002423.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002424.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002425.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002426.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002427.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002428.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002429.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002430.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002431.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002432.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002433.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002434.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002435.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002436.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002437.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002438.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002439.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002440.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002441.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002442.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002443.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002444.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002445.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002446.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002447.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002448.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002449.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002450.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002451.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002452.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002453.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002454.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002455.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002456.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002457.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002458.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002459.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002460.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002461.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002462.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002463.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002464.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002465.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002466.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002467.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002468.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002469.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002470.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002471.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002472.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002473.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002474.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002475.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002476.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002477.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002478.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002479.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002480.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002481.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002482.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002483.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002484.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002485.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002486.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002487.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002488.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002489.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002490.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002491.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002492.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002493.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002494.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002495.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002496.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002497.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002498.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002499.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002500.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002501.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002502.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002503.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002504.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002505.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002506.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002507.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002508.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002509.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002510.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002511.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002512.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002513.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002514.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002515.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002516.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002517.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002518.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002519.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002520.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002521.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002522.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002523.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002524.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002525.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002526.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002527.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002528.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002529.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002530.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002531.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002532.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002533.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002534.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002535.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002536.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002537.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002538.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002539.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002540.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002541.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002542.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002543.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002544.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002545.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002546.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002547.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002548.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002549.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002550.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002551.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002552.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002553.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002554.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002555.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002556.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002557.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002558.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002559.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002560.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002561.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002562.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002563.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002564.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002565.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002566.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002567.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002568.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002569.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002570.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002571.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002572.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002573.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002574.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002575.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002576.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002577.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002578.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002579.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002580.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002581.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002582.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002583.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002584.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002585.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002586.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002587.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002588.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002589.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002590.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002591.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002592.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002593.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002594.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002595.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002596.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002597.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002598.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002599.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002600.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002601.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002602.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002603.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002604.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002605.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002606.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002607.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002608.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002609.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002610.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002611.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002612.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002613.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002614.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002615.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002616.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002617.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002618.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002619.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002620.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002621.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002622.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002623.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002624.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002625.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002626.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002627.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002628.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002629.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002630.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002631.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002632.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002633.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002634.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002635.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002636.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002637.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002638.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002639.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002640.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002641.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002642.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002643.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002644.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002645.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002646.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002647.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002648.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002649.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002650.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002651.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002652.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002653.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002654.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002655.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002656.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002657.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002658.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002659.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002660.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002661.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002662.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002663.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002664.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002665.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002666.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002667.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002668.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002669.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002670.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002671.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002672.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002673.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002674.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002675.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002676.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002677.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002678.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002679.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002680.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002681.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002682.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002683.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002684.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002685.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002686.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002687.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002688.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002689.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002690.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002691.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002692.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002693.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002694.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002695.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002696.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002697.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002698.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002699.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002700.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002701.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002702.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002703.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002704.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002705.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002706.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002707.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002708.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002709.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002710.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002711.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002712.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002713.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002714.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002715.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002716.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002717.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002718.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002719.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002720.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002721.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002722.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002723.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002724.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002725.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002726.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002727.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002728.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002729.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002730.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002731.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002732.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002733.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002734.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002735.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002736.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002737.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002738.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002739.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002740.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002741.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002742.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002743.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002744.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002745.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002746.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002747.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002748.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002749.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002750.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002751.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002752.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002753.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002754.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002755.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002756.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002757.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002758.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002759.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002760.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002761.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002762.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002763.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002764.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002765.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002766.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002767.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002768.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002769.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002770.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002771.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002772.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002773.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002774.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002775.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002776.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002777.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002778.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002779.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002780.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002781.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002782.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002783.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002784.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002785.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002786.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002787.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002788.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002789.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002790.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002791.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002792.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002793.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002794.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002795.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002796.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002797.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002798.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002799.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002800.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002801.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002802.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002803.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002804.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002805.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002806.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002807.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002808.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002809.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002810.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002811.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002812.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002813.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002814.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002815.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002816.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002817.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002818.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002819.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002820.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002821.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002822.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002823.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002824.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002825.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002826.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002827.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002828.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002829.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002830.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002831.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002832.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002833.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002834.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002835.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002836.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002837.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002838.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002839.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002840.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002841.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002842.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002843.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002844.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002845.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002846.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002847.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002848.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002849.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002850.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002851.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002852.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002853.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002854.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002855.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002856.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002857.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002858.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002859.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002860.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002861.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002862.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002863.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002864.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002865.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002866.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002867.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002868.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002869.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002870.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002871.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002872.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002873.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002874.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002875.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002876.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002877.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002878.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002879.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002880.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002881.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002882.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002883.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002884.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002885.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002886.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002887.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002888.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002889.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002890.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002891.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002892.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002893.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002894.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002895.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002896.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002897.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002898.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002899.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002900.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002901.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002902.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002903.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002904.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002905.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002906.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002907.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002908.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002909.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002910.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002911.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002912.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002913.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002914.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002915.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002916.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002917.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002918.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002919.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002920.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002921.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002922.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002923.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002924.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002925.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002926.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002927.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002928.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002929.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002930.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002931.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002932.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002933.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002934.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002935.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002936.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002937.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002938.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002939.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002940.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002941.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002942.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002943.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002944.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002945.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002946.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002947.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002948.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002949.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002950.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002951.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002952.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002953.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002954.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002955.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002956.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002957.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002958.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002959.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002960.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002961.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002962.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002963.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002964.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002965.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002966.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002967.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002968.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002969.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002970.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002971.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002972.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002973.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002974.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002975.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002976.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002977.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002978.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002979.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002980.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002981.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002982.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002983.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002984.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002985.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002986.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002987.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002988.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002989.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002990.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002991.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002992.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002993.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002994.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002995.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002996.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002997.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002998.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_002999.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003270.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003271.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003272.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003273.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003274.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003275.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003276.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003277.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003278.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003279.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003280.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003281.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003282.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003283.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003284.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003285.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003286.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003287.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003288.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003289.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003290.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003291.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003292.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003293.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003294.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003295.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003296.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003297.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003298.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003299.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003300.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003301.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003302.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003303.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003304.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003305.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003306.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003307.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003308.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003309.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003310.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003311.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003312.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003313.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003314.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003315.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003316.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003317.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003318.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003319.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003320.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003321.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003322.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003323.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003324.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003325.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003326.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003327.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003328.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003329.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003330.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003331.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003332.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003333.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003334.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003335.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003336.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003337.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003338.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003339.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003340.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003341.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003342.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003343.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003344.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003345.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003346.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003347.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003348.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003349.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003350.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003351.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003352.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003353.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003354.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003355.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003356.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003357.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003358.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003359.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003360.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003361.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003362.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003363.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003364.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003365.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003366.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003367.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003368.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003369.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003370.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003371.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003372.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003373.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003374.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003375.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003376.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003377.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003378.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003379.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003380.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003381.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003382.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003383.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003384.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003385.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003386.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003387.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003388.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003389.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003390.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003391.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003392.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003393.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003394.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003395.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003396.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003397.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003398.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003399.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003400.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003401.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003402.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003403.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003404.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003405.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003406.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003407.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003408.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003409.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003410.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003411.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003412.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003413.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003414.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003415.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003416.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003417.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003418.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003419.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003420.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003421.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003422.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003423.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003424.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003425.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003426.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003427.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003428.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003429.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003430.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003431.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003432.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003433.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003434.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003435.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003436.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003437.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003438.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003439.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003440.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003441.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003442.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003443.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003444.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003445.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003446.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003447.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003448.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003449.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003450.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003451.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003452.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003453.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003454.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003455.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003456.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003457.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003458.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003459.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003460.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003461.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003462.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003463.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003464.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003465.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003466.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003467.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003468.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003469.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003470.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003471.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003472.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003473.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003474.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003475.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003476.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003477.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003478.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003479.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003480.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003481.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003482.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003483.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003484.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003485.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003486.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003487.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003488.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003489.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003490.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003491.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003492.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003493.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003494.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003495.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003496.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003497.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003498.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003499.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003500.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003501.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003502.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003503.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003504.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003505.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003506.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003507.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003508.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003509.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003510.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003511.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003512.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003513.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003514.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003515.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003516.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003517.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003518.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003519.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003520.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003521.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003522.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003523.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003524.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003525.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003526.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003527.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003528.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003529.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003530.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003531.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003532.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003533.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003534.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003535.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003536.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003537.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003538.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003539.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003540.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003541.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003542.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003543.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003544.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003545.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003546.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003547.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003548.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003549.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003550.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003551.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003552.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003553.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003554.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003555.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003556.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003557.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003558.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003559.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003560.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003561.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003562.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003563.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003564.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003565.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003566.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003567.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003568.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003569.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003570.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003571.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003572.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003573.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003574.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003575.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003576.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003577.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003578.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003579.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003580.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003581.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003582.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003583.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003584.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003585.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003586.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003587.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003588.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003589.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003590.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003591.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003592.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003593.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003594.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003595.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003596.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003597.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003598.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003599.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003600.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003601.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003602.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003603.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003604.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003605.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003606.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003607.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003608.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003609.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003610.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003611.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003612.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003613.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003614.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003615.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003616.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003617.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003618.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003619.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003620.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003621.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003622.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003623.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003624.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003625.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003626.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003627.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003628.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003629.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003630.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003631.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003632.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003633.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003634.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003635.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003636.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003637.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003638.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003639.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003640.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003641.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003642.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003643.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003644.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003645.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003646.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003647.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003648.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003649.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003650.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003651.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003652.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003653.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003654.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003655.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003656.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003657.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003658.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003659.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003660.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003661.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003662.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003663.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003664.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003665.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003666.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003667.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003668.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003669.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003670.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003671.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003672.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003673.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003674.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003675.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003676.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003677.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003678.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003679.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003680.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003681.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003682.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003683.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003684.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003685.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003686.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003687.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003688.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003689.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003690.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003691.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003692.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003693.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003694.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003695.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003696.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003697.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003698.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003699.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003700.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003701.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003702.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003703.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003704.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003705.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003706.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003707.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003708.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003709.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003710.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003711.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003712.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003713.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003714.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003715.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003716.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003717.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003718.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003719.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003720.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003721.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003722.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003723.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003724.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003725.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003726.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003727.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003728.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003729.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003730.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003731.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003732.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003733.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003734.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003735.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003736.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003737.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003738.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003739.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003740.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003741.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003742.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003743.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003744.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003745.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003746.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003747.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003748.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003749.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003750.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003751.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003752.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003753.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003754.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003755.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003756.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003757.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003758.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003759.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003760.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003761.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003762.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003763.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003764.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003765.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003766.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003767.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003768.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003769.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003770.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003771.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003772.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003773.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003774.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003775.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003776.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003777.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003778.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003779.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003780.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003781.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003782.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003783.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003784.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003785.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003786.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003787.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003788.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003789.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003790.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003791.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003792.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003793.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003794.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003795.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003796.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003797.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003798.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003799.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003800.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003801.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003802.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003803.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003804.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003805.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003806.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003807.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003808.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003809.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003810.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003811.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003812.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003813.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003814.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003815.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003816.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003817.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003818.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003819.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003820.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003821.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003822.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003823.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003824.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003825.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003826.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003827.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003828.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003829.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003830.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003831.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003832.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003833.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003834.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003835.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003836.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003837.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003838.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003839.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003840.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003841.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003842.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003843.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003844.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003845.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003846.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003847.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003848.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003849.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003850.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003851.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003852.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003853.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003854.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003855.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003856.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003857.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003858.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003859.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003860.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003861.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003862.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003863.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003864.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003865.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003866.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003867.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003868.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003869.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003870.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003871.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003872.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003873.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003874.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003875.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003876.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003877.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003878.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003879.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003880.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003881.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003882.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003883.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003884.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003885.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003886.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003887.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003888.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003889.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003890.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003891.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003892.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003893.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003894.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003895.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003896.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003897.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003898.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003899.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003900.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003901.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003902.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003903.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003904.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003905.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003906.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003907.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003908.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003909.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003910.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003911.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003912.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003913.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003914.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003915.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003916.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003917.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003918.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003919.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003920.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003921.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003922.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003923.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003924.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003925.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003926.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003927.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003928.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003929.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003930.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003931.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003932.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003933.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003934.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003935.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003936.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003937.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003938.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003939.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003940.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003941.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003942.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003943.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003944.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003945.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003946.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003947.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003948.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003949.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003950.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003951.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003952.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003953.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003954.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003955.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003956.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003957.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003958.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003959.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003960.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003961.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003962.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003963.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003964.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003965.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003966.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003967.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003968.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003969.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003970.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003971.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003972.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003973.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003974.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003975.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003976.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003977.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003978.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003979.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003980.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003981.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003982.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003983.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003984.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003985.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003986.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003987.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003988.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003989.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003990.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003991.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003992.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003993.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003994.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003995.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003996.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003997.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003998.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_003999.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004270.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004271.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004272.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004273.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004274.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004275.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004276.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004277.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004278.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004279.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004280.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004281.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004282.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004283.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004284.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004285.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004286.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004287.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004288.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004289.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004290.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004291.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004292.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004293.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004294.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004295.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004296.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004297.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004298.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004299.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004300.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004301.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004302.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004303.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004304.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004305.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004306.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004307.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004308.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004309.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004310.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004311.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004312.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004313.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004314.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004315.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004316.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004317.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004318.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004319.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004320.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004321.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004322.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004323.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004324.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004325.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004326.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004327.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004328.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004329.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004330.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004331.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004332.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004333.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004334.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004335.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004336.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004337.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004338.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004339.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004340.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004341.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004342.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004343.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004344.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004345.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004346.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004347.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004348.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004349.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004350.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004351.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004352.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004353.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004354.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004355.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004356.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004357.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004358.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004359.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004360.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004361.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004362.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004363.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004364.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004365.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004366.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004367.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004368.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004369.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004370.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004371.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004372.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004373.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004374.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004375.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004376.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004377.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004378.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004379.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004380.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004381.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004382.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004383.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004384.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004385.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004386.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004387.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004388.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004389.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004390.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004391.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004392.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004393.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004394.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004395.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004396.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004397.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004398.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004399.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004400.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004401.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004402.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004403.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004404.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004405.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004406.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004407.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004408.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004409.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004410.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004411.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004412.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004413.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004414.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004415.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004416.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004417.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004418.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004419.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004420.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004421.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004422.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004423.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004424.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004425.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004426.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004427.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004428.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004429.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004430.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004431.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004432.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004433.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004434.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004435.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004436.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004437.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004438.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004439.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004440.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004441.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004442.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004443.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004444.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004445.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004446.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004447.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004448.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004449.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004450.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004451.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004452.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004453.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004454.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004455.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004456.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004457.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004458.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004459.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004460.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004461.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004462.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004463.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004464.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004465.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004466.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004467.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004468.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004469.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004470.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004471.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004472.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004473.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004474.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004475.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004476.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004477.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004478.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004479.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004480.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004481.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004482.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004483.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004484.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004485.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004486.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004487.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004488.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004489.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004490.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004491.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004492.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004493.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004494.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004495.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004496.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004497.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004498.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004499.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004500.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004501.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004502.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004503.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004504.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004505.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004506.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004507.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004508.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004509.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004510.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004511.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004512.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004513.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004514.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004515.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004516.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004517.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004518.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004519.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004520.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004521.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004522.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004523.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004524.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004525.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004526.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004527.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004528.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004529.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004530.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004531.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004532.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004533.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004534.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004535.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004536.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004537.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004538.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004539.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004540.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004541.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004542.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004543.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004544.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004545.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004546.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004547.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004548.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004549.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004550.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004551.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004552.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004553.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004554.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004555.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004556.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004557.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004558.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004559.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004560.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004561.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004562.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004563.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004564.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004565.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004566.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004567.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004568.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004569.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004570.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004571.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004572.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004573.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004574.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004575.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004576.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004577.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004578.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004579.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004580.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004581.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004582.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004583.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004584.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004585.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004586.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004587.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004588.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004589.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004590.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004591.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004592.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004593.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004594.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004595.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004596.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004597.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004598.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004599.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004600.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004601.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004602.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004603.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004604.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004605.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004606.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004607.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004608.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004609.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004610.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004611.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004612.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004613.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004614.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004615.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004616.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004617.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004618.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004619.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004620.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004621.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004622.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004623.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004624.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004625.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004626.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004627.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004628.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004629.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004630.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004631.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004632.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004633.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004634.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004635.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004636.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004637.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004638.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004639.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004640.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004641.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004642.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004643.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004644.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004645.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004646.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004647.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004648.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004649.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004650.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004651.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004652.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004653.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004654.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004655.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004656.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004657.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004658.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004659.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004660.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004661.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004662.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004663.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004664.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004665.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004666.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004667.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004668.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004669.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004670.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004671.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004672.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004673.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004674.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004675.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004676.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004677.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004678.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004679.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004680.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004681.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004682.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004683.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004684.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004685.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004686.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004687.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004688.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004689.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004690.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004691.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004692.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004693.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004694.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004695.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004696.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004697.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004698.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004699.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004700.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004701.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004702.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004703.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004704.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004705.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004706.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004707.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004708.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004709.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004710.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004711.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004712.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004713.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004714.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004715.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004716.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004717.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004718.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004719.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004720.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004721.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004722.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004723.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004724.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004725.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004726.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004727.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004728.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004729.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004730.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004731.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004732.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004733.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004734.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004735.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004736.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004737.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004738.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004739.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004740.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004741.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004742.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004743.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004744.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004745.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004746.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004747.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004748.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004749.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004750.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004751.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004752.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004753.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004754.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004755.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004756.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004757.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004758.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004759.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004760.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004761.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004762.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004763.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004764.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004765.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004766.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004767.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004768.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004769.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004770.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004771.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004772.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004773.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004774.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004775.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004776.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004777.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004778.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004779.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004780.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004781.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004782.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004783.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004784.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004785.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004786.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004787.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004788.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004789.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004790.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004791.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004792.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004793.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004794.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004795.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004796.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004797.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004798.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004799.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004800.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004801.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004802.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004803.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004804.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004805.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004806.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004807.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004808.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004809.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004810.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004811.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004812.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004813.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004814.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004815.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004816.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004817.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004818.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004819.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004820.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004821.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004822.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004823.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004824.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004825.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004826.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004827.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004828.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004829.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004830.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004831.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004832.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004833.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004834.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004835.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004836.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004837.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004838.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004839.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004840.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004841.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004842.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004843.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004844.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004845.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004846.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004847.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004848.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004849.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004850.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004851.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004852.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004853.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004854.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004855.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004856.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004857.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004858.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004859.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004860.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004861.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004862.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004863.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004864.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004865.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004866.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004867.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004868.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004869.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004870.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004871.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004872.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004873.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004874.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004875.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004876.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004877.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004878.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004879.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004880.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004881.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004882.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004883.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004884.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004885.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004886.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004887.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004888.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004889.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004890.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004891.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004892.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004893.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004894.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004895.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004896.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004897.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004898.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004899.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004900.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004901.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004902.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004903.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004904.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004905.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004906.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004907.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004908.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004909.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004910.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004911.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004912.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004913.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004914.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004915.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004916.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004917.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004918.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004919.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004920.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004921.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004922.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004923.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004924.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004925.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004926.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004927.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004928.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004929.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004930.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004931.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004932.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004933.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004934.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004935.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004936.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004937.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004938.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004939.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004940.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004941.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004942.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004943.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004944.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004945.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004946.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004947.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004948.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004949.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004950.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004951.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004952.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004953.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004954.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004955.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004956.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004957.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004958.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004959.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004960.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004961.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004962.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004963.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004964.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004965.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004966.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004967.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004968.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004969.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004970.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004971.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004972.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004973.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004974.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004975.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004976.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004977.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004978.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004979.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004980.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004981.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004982.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004983.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004984.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004985.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004986.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004987.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004988.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004989.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004990.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004991.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004992.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004993.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004994.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004995.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004996.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004997.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004998.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_004999.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005270.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005271.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005272.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005273.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005274.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005275.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005276.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005277.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005278.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005279.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005280.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005281.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005282.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005283.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005284.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005285.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005286.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005287.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005288.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005289.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005290.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005291.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005292.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005293.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005294.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005295.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005296.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005297.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005298.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005299.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005300.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005301.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005302.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005303.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005304.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005305.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005306.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005307.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005308.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005309.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005310.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005311.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005312.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005313.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005314.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005315.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005316.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005317.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005318.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005319.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005320.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005321.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005322.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005323.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005324.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005325.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005326.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005327.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005328.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005329.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005330.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005331.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005332.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005333.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005334.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005335.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005336.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005337.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005338.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005339.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005340.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005341.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005342.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005343.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005344.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005345.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005346.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005347.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005348.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005349.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005350.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005351.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005352.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005353.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005354.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005355.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005356.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005357.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005358.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005359.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005360.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005361.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005362.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005363.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005364.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005365.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005366.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005367.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005368.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005369.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005370.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005371.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005372.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005373.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005374.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005375.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005376.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005377.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005378.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005379.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005380.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005381.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005382.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005383.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005384.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005385.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005386.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005387.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005388.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005389.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005390.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005391.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005392.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005393.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005394.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005395.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005396.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005397.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005398.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005399.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005400.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005401.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005402.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005403.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005404.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005405.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005406.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005407.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005408.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005409.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005410.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005411.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005412.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005413.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005414.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005415.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005416.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005417.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005418.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005419.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005420.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005421.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005422.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005423.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005424.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005425.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005426.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005427.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005428.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005429.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005430.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005431.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005432.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005433.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005434.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005435.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005436.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005437.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005438.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005439.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005440.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005441.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005442.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005443.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005444.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005445.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005446.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005447.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005448.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005449.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005450.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005451.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005452.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005453.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005454.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005455.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005456.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005457.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005458.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005459.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005460.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005461.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005462.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005463.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005464.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005465.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005466.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005467.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005468.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005469.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005470.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005471.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005472.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005473.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005474.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005475.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005476.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005477.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005478.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005479.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005480.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005481.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005482.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005483.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005484.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005485.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005486.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005487.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005488.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005489.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005490.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005491.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005492.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005493.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005494.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005495.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005496.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005497.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005498.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005499.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005500.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005501.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005502.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005503.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005504.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005505.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005506.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005507.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005508.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005509.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005510.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005511.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005512.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005513.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005514.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005515.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005516.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005517.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005518.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005519.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005520.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005521.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005522.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005523.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005524.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005525.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005526.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005527.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005528.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005529.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005530.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005531.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005532.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005533.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005534.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005535.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005536.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005537.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005538.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005539.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005540.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005541.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005542.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005543.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005544.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005545.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005546.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005547.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005548.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005549.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005550.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005551.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005552.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005553.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005554.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005555.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005556.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005557.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005558.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005559.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005560.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005561.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005562.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005563.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005564.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005565.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005566.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005567.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005568.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005569.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005570.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005571.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005572.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005573.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005574.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005575.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005576.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005577.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005578.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005579.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005580.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005581.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005582.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005583.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005584.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005585.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005586.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005587.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005588.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005589.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005590.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005591.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005592.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005593.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005594.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005595.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005596.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005597.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005598.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005599.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005600.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005601.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005602.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005603.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005604.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005605.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005606.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005607.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005608.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005609.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005610.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005611.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005612.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005613.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005614.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005615.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005616.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005617.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005618.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005619.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005620.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005621.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005622.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005623.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005624.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005625.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005626.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005627.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005628.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005629.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005630.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005631.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005632.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005633.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005634.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005635.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005636.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005637.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005638.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005639.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005640.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005641.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005642.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005643.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005644.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005645.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005646.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005647.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005648.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005649.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005650.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005651.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005652.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005653.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005654.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005655.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005656.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005657.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005658.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005659.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005660.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005661.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005662.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005663.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005664.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005665.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005666.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005667.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005668.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005669.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005670.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005671.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005672.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005673.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005674.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005675.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005676.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005677.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005678.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005679.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005680.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005681.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005682.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005683.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005684.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005685.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005686.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005687.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005688.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005689.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005690.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005691.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005692.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005693.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005694.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005695.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005696.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005697.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005698.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005699.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005700.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005701.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005702.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005703.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005704.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005705.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005706.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005707.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005708.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005709.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005710.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005711.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005712.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005713.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005714.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005715.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005716.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005717.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005718.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005719.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005720.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005721.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005722.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005723.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005724.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005725.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005726.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005727.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005728.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005729.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005730.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005731.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005732.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005733.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005734.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005735.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005736.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005737.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005738.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005739.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005740.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005741.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005742.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005743.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005744.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005745.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005746.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005747.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005748.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005749.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005750.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005751.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005752.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005753.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005754.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005755.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005756.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005757.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005758.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005759.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005760.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005761.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005762.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005763.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005764.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005765.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005766.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005767.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005768.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005769.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005770.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005771.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005772.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005773.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005774.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005775.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005776.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005777.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005778.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005779.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005780.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005781.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005782.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005783.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005784.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005785.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005786.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005787.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005788.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005789.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005790.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005791.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005792.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005793.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005794.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005795.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005796.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005797.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005798.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005799.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005800.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005801.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005802.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005803.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005804.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005805.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005806.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005807.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005808.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005809.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005810.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005811.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005812.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005813.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005814.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005815.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005816.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005817.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005818.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005819.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005820.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005821.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005822.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005823.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005824.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005825.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005826.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005827.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005828.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005829.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005830.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005831.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005832.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005833.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005834.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005835.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005836.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005837.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005838.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005839.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005840.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005841.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005842.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005843.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005844.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005845.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005846.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005847.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005848.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005849.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005850.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005851.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005852.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005853.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005854.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005855.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005856.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005857.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005858.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005859.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005860.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005861.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005862.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005863.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005864.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005865.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005866.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005867.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005868.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005869.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005870.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005871.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005872.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005873.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005874.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005875.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005876.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005877.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005878.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005879.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005880.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005881.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005882.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005883.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005884.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005885.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005886.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005887.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005888.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005889.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005890.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005891.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005892.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005893.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005894.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005895.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005896.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005897.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005898.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005899.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005900.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005901.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005902.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005903.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005904.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005905.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005906.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005907.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005908.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005909.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005910.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005911.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005912.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005913.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005914.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005915.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005916.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005917.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005918.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005919.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005920.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005921.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005922.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005923.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005924.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005925.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005926.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005927.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005928.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005929.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005930.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005931.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005932.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005933.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005934.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005935.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005936.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005937.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005938.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005939.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005940.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005941.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005942.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005943.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005944.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005945.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005946.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005947.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005948.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005949.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005950.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005951.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005952.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005953.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005954.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005955.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005956.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005957.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005958.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005959.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005960.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005961.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005962.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005963.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005964.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005965.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005966.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005967.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005968.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005969.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005970.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005971.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005972.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005973.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005974.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005975.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005976.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005977.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005978.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005979.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005980.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005981.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005982.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005983.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005984.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005985.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005986.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005987.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005988.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005989.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005990.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005991.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005992.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005993.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005994.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005995.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005996.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005997.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005998.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_005999.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006270.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006271.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006272.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006273.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006274.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006275.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006276.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006277.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006278.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006279.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006280.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006281.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006282.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006283.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006284.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006285.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006286.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006287.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006288.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006289.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006290.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006291.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006292.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006293.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006294.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006295.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006296.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006297.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006298.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006299.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006300.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006301.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006302.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006303.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006304.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006305.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006306.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006307.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006308.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006309.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006310.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006311.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006312.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006313.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006314.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006315.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006316.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006317.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006318.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006319.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006320.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006321.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006322.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006323.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006324.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006325.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006326.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006327.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006328.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006329.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006330.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006331.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006332.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006333.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006334.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006335.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006336.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006337.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006338.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006339.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006340.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006341.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006342.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006343.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006344.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006345.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006346.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006347.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006348.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006349.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006350.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006351.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006352.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006353.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006354.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006355.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006356.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006357.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006358.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006359.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006360.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006361.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006362.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006363.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006364.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006365.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006366.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006367.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006368.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006369.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006370.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006371.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006372.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006373.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006374.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006375.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006376.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006377.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006378.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006379.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006380.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006381.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006382.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006383.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006384.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006385.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006386.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006387.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006388.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006389.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006390.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006391.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006392.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006393.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006394.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006395.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006396.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006397.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006398.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006399.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006400.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006401.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006402.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006403.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006404.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006405.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006406.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006407.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006408.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006409.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006410.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006411.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006412.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006413.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006414.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006415.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006416.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006417.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006418.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006419.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006420.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006421.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006422.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006423.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006424.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006425.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006426.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006427.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006428.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006429.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006430.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006431.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006432.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006433.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006434.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006435.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006436.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006437.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006438.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006439.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006440.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006441.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006442.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006443.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006444.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006445.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006446.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006447.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006448.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006449.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006450.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006451.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006452.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006453.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006454.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006455.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006456.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006457.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006458.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006459.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006460.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006461.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006462.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006463.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006464.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006465.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006466.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006467.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006468.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006469.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006470.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006471.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006472.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006473.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006474.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006475.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006476.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006477.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006478.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006479.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006480.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006481.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006482.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006483.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006484.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006485.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006486.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006487.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006488.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006489.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006490.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006491.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006492.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006493.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006494.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006495.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006496.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006497.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006498.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006499.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006500.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006501.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006502.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006503.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006504.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006505.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006506.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006507.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006508.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006509.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006510.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006511.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006512.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006513.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006514.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006515.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006516.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006517.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006518.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006519.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006520.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006521.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006522.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006523.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006524.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006525.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006526.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006527.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006528.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006529.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006530.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006531.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006532.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006533.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006534.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006535.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006536.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006537.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006538.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006539.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006540.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006541.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006542.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006543.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006544.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006545.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006546.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006547.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006548.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006549.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006550.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006551.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006552.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006553.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006554.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006555.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006556.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006557.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006558.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006559.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006560.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006561.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006562.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006563.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006564.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006565.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006566.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006567.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006568.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006569.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006570.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006571.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006572.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006573.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006574.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006575.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006576.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006577.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006578.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006579.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006580.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006581.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006582.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006583.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006584.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006585.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006586.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006587.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006588.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006589.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006590.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006591.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006592.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006593.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006594.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006595.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006596.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006597.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006598.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006599.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006600.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006601.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006602.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006603.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006604.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006605.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006606.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006607.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006608.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006609.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006610.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006611.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006612.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006613.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006614.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006615.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006616.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006617.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006618.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006619.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006620.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006621.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006622.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006623.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006624.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006625.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006626.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006627.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006628.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006629.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006630.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006631.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006632.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006633.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006634.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006635.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006636.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006637.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006638.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006639.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006640.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006641.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006642.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006643.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006644.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006645.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006646.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006647.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006648.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006649.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006650.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006651.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006652.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006653.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006654.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006655.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006656.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006657.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006658.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006659.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006660.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006661.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006662.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006663.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006664.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006665.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006666.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006667.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006668.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006669.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006670.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006671.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006672.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006673.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006674.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006675.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006676.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006677.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006678.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006679.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006680.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006681.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006682.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006683.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006684.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006685.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006686.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006687.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006688.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006689.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006690.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006691.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006692.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006693.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006694.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006695.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006696.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006697.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006698.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006699.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006700.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006701.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006702.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006703.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006704.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006705.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006706.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006707.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006708.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006709.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006710.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006711.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006712.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006713.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006714.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006715.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006716.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006717.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006718.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006719.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006720.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006721.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006722.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006723.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006724.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006725.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006726.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006727.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006728.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006729.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006730.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006731.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006732.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006733.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006734.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006735.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006736.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006737.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006738.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006739.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006740.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006741.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006742.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006743.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006744.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006745.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006746.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006747.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006748.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006749.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006750.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006751.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006752.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006753.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006754.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006755.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006756.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006757.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006758.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006759.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006760.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006761.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006762.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006763.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006764.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006765.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006766.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006767.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006768.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006769.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006770.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006771.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006772.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006773.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006774.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006775.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006776.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006777.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006778.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006779.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006780.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006781.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006782.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006783.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006784.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006785.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006786.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006787.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006788.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006789.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006790.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006791.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006792.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006793.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006794.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006795.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006796.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006797.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006798.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006799.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006800.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006801.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006802.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006803.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006804.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006805.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006806.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006807.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006808.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006809.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006810.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006811.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006812.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006813.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006814.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006815.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006816.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006817.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006818.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006819.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006820.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006821.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006822.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006823.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006824.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006825.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006826.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006827.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006828.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006829.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006830.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006831.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006832.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006833.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006834.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006835.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006836.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006837.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006838.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006839.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006840.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006841.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006842.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006843.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006844.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006845.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006846.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006847.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006848.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006849.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006850.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006851.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006852.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006853.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006854.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006855.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006856.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006857.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006858.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006859.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006860.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006861.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006862.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006863.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006864.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006865.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006866.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006867.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006868.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006869.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006870.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006871.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006872.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006873.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006874.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006875.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006876.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006877.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006878.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006879.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006880.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006881.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006882.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006883.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006884.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006885.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006886.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006887.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006888.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006889.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006890.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006891.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006892.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006893.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006894.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006895.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006896.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006897.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006898.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006899.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006900.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006901.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006902.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006903.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006904.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006905.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006906.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006907.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006908.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006909.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006910.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006911.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006912.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006913.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006914.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006915.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006916.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006917.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006918.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006919.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006920.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006921.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006922.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006923.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006924.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006925.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006926.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006927.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006928.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006929.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006930.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006931.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006932.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006933.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006934.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006935.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006936.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006937.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006938.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006939.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006940.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006941.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006942.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006943.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006944.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006945.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006946.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006947.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006948.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006949.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006950.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006951.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006952.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006953.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006954.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006955.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006956.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006957.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006958.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006959.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006960.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006961.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006962.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006963.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006964.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006965.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006966.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006967.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006968.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006969.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006970.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006971.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006972.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006973.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006974.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006975.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006976.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006977.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006978.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006979.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006980.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006981.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006982.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006983.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006984.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006985.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006986.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006987.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006988.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006989.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006990.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006991.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006992.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006993.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006994.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006995.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006996.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006997.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006998.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_006999.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_2_007269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000124.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000125.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000126.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000127.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000128.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000129.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000130.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000131.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000132.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000133.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000134.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000135.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000136.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000137.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000138.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000139.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000140.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000141.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000142.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000143.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000144.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000145.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000146.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000147.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000148.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000149.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000150.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000151.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000152.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000153.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000154.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000155.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000156.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000157.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000158.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000159.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000160.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000161.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000162.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000163.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000164.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000165.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000166.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000167.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000168.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000169.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000170.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000171.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000172.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000173.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000174.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000175.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000176.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000177.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000178.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000179.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000180.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000181.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000182.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000183.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000184.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000185.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000186.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000187.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000188.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000189.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000190.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000191.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000192.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000193.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000194.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000195.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000196.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000197.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000198.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000199.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000200.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000201.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000202.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000203.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000204.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000205.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000206.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000207.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000208.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000209.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000210.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000211.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000212.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000213.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000214.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000215.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000216.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000217.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000218.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000219.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000220.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000221.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000222.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000223.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000224.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000225.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000226.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000227.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000228.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000229.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000230.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000231.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000232.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000233.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000234.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000235.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000236.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000237.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000238.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000239.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000240.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000241.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000242.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000243.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000244.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000245.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000246.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000247.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000248.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000249.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000250.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000251.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000252.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000253.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000254.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000255.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000256.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000257.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000258.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000259.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000260.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000261.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000262.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000263.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000264.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000265.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000266.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000267.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000268.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000269.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000270.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000271.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000272.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000273.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000274.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000275.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000276.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000277.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000278.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000279.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000280.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000281.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000282.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000283.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000284.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000285.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000286.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000287.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000288.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000289.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000290.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000291.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000292.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000293.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000294.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000295.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000296.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000297.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000298.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000299.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000300.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000301.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000302.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000303.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000304.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000305.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000306.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000307.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000308.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000309.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000310.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000311.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000312.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000313.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000314.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000315.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000316.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000317.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000318.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000319.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000320.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000321.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000322.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000323.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000324.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000325.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000326.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000327.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000328.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000329.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000330.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000331.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000332.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000333.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000334.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000335.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000336.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000337.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000338.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000339.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000340.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000341.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000342.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000343.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000344.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000345.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000346.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000347.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000348.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000349.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000350.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000351.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000352.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000353.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000354.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000355.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000356.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000357.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000358.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000359.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000360.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000361.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000362.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000363.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000364.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000365.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000366.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000367.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000368.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000369.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000370.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000371.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000372.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000373.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000374.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000375.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000376.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000377.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000378.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000379.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000380.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000381.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000382.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000383.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000384.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000385.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000386.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000387.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000388.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000389.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000390.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000391.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000392.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000393.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000394.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000395.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000396.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000397.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000398.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/video-1/data_mortar_1_000399.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/ad/test_forward_ad_standard_functions.py:        a = np.array([1, -10, 3, -np.pi])
tests/unit/ad/test_forward_ad_standard_functions.py:        self.assertTrue(np.all(sign == [1, -1, 1, -1]))
tests/unit/ad/test_forward_ad_standard_functions.py:        a = AdArray(np.array([1, -10, 3, -np.pi]), np.eye(4))
tests/unit/ad/test_forward_ad_standard_functions.py:        self.assertTrue(np.all(sign == [1, -1, 1, -1]))
tests/unit/ad/test_forward_ad_standard_functions.py:            np.allclose(a.val, [1, -10, 3, -np.pi]) and np.allclose(a.jac, np.eye(4))
tests/unit/ad/test_forward_ad_standard_functions.py:        a = np.array([1, -10, 3, -np.pi])
tests/unit/ad/test_forward_ad_standard_functions.py:        self.assertTrue(np.allclose(a, [1, -10, 3, -np.pi]))
tests/unit/ad/test_forward_ad_standard_functions.py:            [[1, -1, -np.pi, 3], [0, 0, 0, 0], [1, 2, -3.2, 4], [4, 2, 300000, 1]]
tests/unit/ad/test_forward_ad_standard_functions.py:        a = AdArray(np.array([1, -10, 3, -np.pi]), sps.csc_matrix(J))
tests/unit/ad/test_forward_ad_standard_functions.py:            [[1, -1, -np.pi, 3], [0, 0, 0, 0], [1, 2, -3.2, 4], [-4, -2, -300000, -1]]
tests/unit/ad/test_forward_ad_standard_functions.py:                        [1, -1, -np.pi, 3],
tests/unit/ad/test_forward_ad_standard_functions.py:                        [1, 2, -3.2, 4],
tests/unit/ad/test_forward_ad_standard_functions.py:        self.assertTrue(b.val == np.cos(2) and b.jac == -np.sin(2) * 3)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(-np.diag(np.sin(val)), J)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(-np.diag(np.sin(val)), J.A)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = -c * sps.diags(np.sin(c * val)) * J
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((np.cos(val) ** 2) ** (-1)), J)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((np.cos(val) ** 2) ** (-1)), J.A)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = c * sps.diags((np.cos(c * val) ** 2) ** (-1)) * J
tests/unit/ad/test_forward_ad_standard_functions.py:            b.val == np.arcsin(0.2) and b.jac == (1 - 0.2**2) ** (-0.5) * 0.3
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((1 - val**2) ** (-0.5)), J)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((1 - val**2) ** (-0.5)), J.A)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = sps.diags(c * (1 - (c * val) ** 2) ** (-0.5)) * J
tests/unit/ad/test_forward_ad_standard_functions.py:            b.val == np.arccos(0.2) and b.jac == -((1 - 0.2**2) ** (-0.5)) * 0.3
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(-np.diag((1 - val**2) ** (-0.5)), J)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(-np.diag((1 - val**2) ** (-0.5)), J.A)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = -sps.diags(c * (1 - (c * val) ** 2) ** (-0.5)) * J
tests/unit/ad/test_forward_ad_standard_functions.py:            b.val == np.arctan(0.2) and b.jac == (1 + 0.2**2) ** (-1) * 0.3
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((1 + val**2) ** (-1)), J)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((1 + val**2) ** (-1)), J.A)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = sps.diags(c * (1 + (c * val) ** 2) ** (-1)) * J
tests/unit/ad/test_forward_ad_standard_functions.py:        self.assertTrue(b.val == np.tanh(2) and b.jac == np.cosh(2) ** (-2) * 3)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((np.cosh(val) ** 2) ** (-1)), J)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((np.cosh(val) ** 2) ** (-1)), J.A)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = c * sps.diags((np.cosh(c * val) ** 2) ** (-1)) * J
tests/unit/ad/test_forward_ad_standard_functions.py:            b.val == np.arcsinh(0.2) and b.jac == (1 + 0.2**2) ** (-0.5) * 0.3
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((1 + val**2) ** (-0.5)), J)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((1 + val**2) ** (-0.5)), J.A)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = sps.diags(c * (1 + (c * val) ** 2) ** (-0.5)) * J
tests/unit/ad/test_forward_ad_standard_functions.py:            and b.jac == (2 - 1) ** (-0.5) * (2 + 1) ** (-0.5) * 3
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((val - 1) ** (-0.5) * (val + 1) ** (-0.5)), J)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((val - 1) ** (-0.5) * (val + 1) ** (-0.5)), J.A)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = sps.diags(c * (c * val - 1) ** (-0.5) * (c * val + 1) ** (-0.5)) * J
tests/unit/ad/test_forward_ad_standard_functions.py:            b.val == np.arctanh(0.2) and b.jac == (1 - 0.2**2) ** (-1) * 0.3
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((1 - val**2) ** (-1)), J)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = np.dot(np.diag((1 - val**2) ** (-1)), J.A)
tests/unit/ad/test_forward_ad_standard_functions.py:        jac = sps.diags(c * (1 - (c * val) ** 2) ** (-1)) * J
tests/unit/ad/test_forward_ad_standard_functions.py:        val = 0.5 * (1 + 2 / np.pi * np.arctan(0.5 / 1e-3))
tests/unit/ad/test_forward_ad_standard_functions.py:        val = 0.5 * (1 + (2 / np.pi) * np.arctan(0.2 / 1e-3))
tests/unit/ad/test_forward_ad_standard_functions.py:        der = (1 / np.pi) * (1e-3 / (1e-3**2 + 0.2**2))
tests/unit/ad/test_forward_ad_standard_functions.py:        val = np.array([1, -2, 3])
tests/unit/ad/test_forward_ad_standard_functions.py:        J = np.array([[3, -2, 1], [-5, 6, 1], [2, 3, -5]])
tests/unit/ad/test_forward_ad_standard_functions.py:        true_val = 0.5 * (1 + 2 * np.pi ** (-1) * np.arctan(val * 1e3))
tests/unit/ad/test_forward_ad_standard_functions.py:            np.diag(np.pi ** (-1) * (1e-3 * (1e-3**2 + val**2) ** (-1))), J
tests/unit/ad/test_forward_ad_standard_functions.py:        self.assertTrue(np.all(J == np.array([[3, -2, 1], [-5, 6, 1], [2, 3, -5]])))
tests/unit/ad/test_forward_ad_standard_functions.py:        val = np.array([1, -2, 3])
tests/unit/ad/test_forward_ad_standard_functions.py:        J = sps.csc_matrix(np.array([[3, -2, 1], [-5, 6, 1], [2, 3, -5]]))
tests/unit/ad/test_forward_ad_standard_functions.py:        true_val = 0.5 * (1 + 2 * np.pi ** (-1) * np.arctan(val * 1e3))
tests/unit/ad/test_forward_ad_standard_functions.py:            np.diag(np.pi ** (-1) * (1e-3 * (1e-3**2 + val**2) ** (-1))), J.A
tests/unit/ad/test_forward_ad_standard_functions.py:        val = np.array([1, -2, -3])
tests/unit/ad/test_forward_ad_standard_functions.py:        true_val = 0.5 * (1 + 2 * np.pi ** (-1) * np.arctan(c * val * 1e3))
tests/unit/ad/test_forward_ad_standard_functions.py:            sps.diags(c * np.pi ** (-1) * (1e-3 * (1e-3**2 + (c * val) ** 2) ** (-1)))
tests/unit/ad/test_forward_ad_standard_functions.py:        self.assertTrue(np.all(a.val == [1, -2, -3]) and np.all(a.jac.A == J.A))
tests/unit/ad/test_grid_operators.py:) -> tuple[int, int, int]:
tests/unit/ad/test_grid_operators.py:        mdg: Mixed-dimensional grid.
tests/unit/ad/test_grid_operators.py:    """Provide a mixed-dimensional grid for the tests."""
tests/unit/ad/test_grid_operators.py:        1. Projections generated by passing a md-grid and a list of grids are identical
tests/unit/ad/test_grid_operators.py:        2. All projections for all grids (individually) in a simple md-grid.
tests/unit/ad/test_grid_operators.py:    # This is a diagonal matrix with first -1, then 1.
tests/unit/ad/test_grid_operators.py:        vals = np.hstack((vals, -np.ones(sz), np.ones(sz)))
tests/unit/ad/test_grid_operators.py:    2) Specifically that the top-dimensional grid and one of the fracture grids
tests/unit/ad/test_grid_operators.py:    # Compute geometry for the mixed-dimensional grid. This is needed for
tests/unit/ad/test_grid_operators.py:    # Check that the projection matrix for the top-dimensional grid is non-zero.
tests/unit/ad/test_grid_operators.py:    # Check that the projection matrix for the first fracture is non-zero. Since the
tests/unit/ad/test_grid_operators.py:    # fracture touches the boundary on two sides, we expect two non-zero rows.
tests/unit/ad/test_grid_operators.py:    # Check that the projection matrix for the second fracture is non-zero.
tests/unit/ad/test_grid_operators.py:    # Check that the projection matrix for the top-dimensional grid is non-zero.
tests/unit/ad/test_grid_operators.py:        mdg: Mixed-dimensional grid.
tests/unit/ad/test_grid_operators.py:    to the ones of Trace. Also checks that an error is raised if a non-scalar trace is
tests/unit/ad/test_grid_operators.py:        mdg: Mixed-dimensional grid.
tests/unit/ad/test_grid_operators.py:    integration-type tests e.g. evaluating combinations with other ad entities.
tests/unit/ad/test_grid_operators.py:    # make that class semi-ABC. Still checks the wrap method
tests/unit/ad/test_grid_operators.py:    d = m1 - m2
tests/unit/ad/test_grid_operators.py:        if np.max(np.abs(d.data)) > 1e-10:
tests/unit/ad/test_ad_array_forward_mode.py:def _get_scalar(wrapped: bool) -> float | pp.ad.Scalar:
tests/unit/ad/test_ad_array_forward_mode.py:    this value. The scalar is either returned as-is, or wrapped as an Ad scalar."""
tests/unit/ad/test_ad_array_forward_mode.py:def _get_dense_array(wrapped: bool) -> np.ndarray | pp.ad.DenseArray:
tests/unit/ad/test_ad_array_forward_mode.py:    hardcoded with respect to this value. The array is either returned as-is, or wrapped
tests/unit/ad/test_ad_array_forward_mode.py:def _get_sparse_array(wrapped: bool) -> sps.spmatrix | pp.ad.SparseArray:
tests/unit/ad/test_ad_array_forward_mode.py:    are hardcoded with respect to this value. The array is either returned as-is, or
tests/unit/ad/test_ad_array_forward_mode.py:) -> pp.ad.AdArray | tuple[pp.ad.AdArray, pp.ad.EquationSystem]:
tests/unit/ad/test_ad_array_forward_mode.py:    var_1: AdType, var_2: AdType, op: Literal["+", "-", "*", "/", "**", "@"]
tests/unit/ad/test_ad_array_forward_mode.py:) -> bool | float | np.ndarray | sps.spmatrix | pp.ad.AdArray:
tests/unit/ad/test_ad_array_forward_mode.py:    of if-else statements that checks isinstance), and returns the expected value of the
tests/unit/ad/test_ad_array_forward_mode.py:            are either hard-coded (this is typically the case where it is easy to do the
tests/unit/ad/test_ad_array_forward_mode.py:            derivation (product rule etc.) by hand, but using matrix-vector products and
tests/unit/ad/test_ad_array_forward_mode.py:    # or/else scipy, the evalutaion is surrounded by a try-except block. The except
tests/unit/ad/test_ad_array_forward_mode.py:        elif op == "-":
tests/unit/ad/test_ad_array_forward_mode.py:            # Array - 2.0
tests/unit/ad/test_ad_array_forward_mode.py:        elif op == "-":
tests/unit/ad/test_ad_array_forward_mode.py:            # 2.0 - Array
tests/unit/ad/test_ad_array_forward_mode.py:            val = np.array([-4, -13, -22])
tests/unit/ad/test_ad_array_forward_mode.py:            jac = sps.csr_matrix(np.array([[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]]))
tests/unit/ad/test_ad_array_forward_mode.py:            # The derivative is -2 / Array**2 * dArray
tests/unit/ad/test_ad_array_forward_mode.py:                        -2 / var_2.val[0] ** 2 * var_2.jac[0].A,
tests/unit/ad/test_ad_array_forward_mode.py:                        -2 / var_2.val[1] ** 2 * var_2.jac[1].A,
tests/unit/ad/test_ad_array_forward_mode.py:                        -2 / var_2.val[2] ** 2 * var_2.jac[2].A,
tests/unit/ad/test_ad_array_forward_mode.py:        elif op == "-":
tests/unit/ad/test_ad_array_forward_mode.py:            # Array - np.array([1, 2, 3])
tests/unit/ad/test_ad_array_forward_mode.py:            #    Array**(np.array([1, 2, 3]) - 1) * np.array([1, 2, 3]) * dArray
tests/unit/ad/test_ad_array_forward_mode.py:                        var_2[0] * (var_1.val[0] ** (var_2[0] - 1.0)) * var_1.jac[0].A,
tests/unit/ad/test_ad_array_forward_mode.py:                        var_2[1] * (var_1.val[1] ** (var_2[1] - 1.0)) * var_1.jac[1].A,
tests/unit/ad/test_ad_array_forward_mode.py:                        var_2[2] * (var_1.val[2] ** (var_2[2] - 1.0)) * var_1.jac[2].A,
tests/unit/ad/test_ad_array_forward_mode.py:        elif op == "-":
tests/unit/ad/test_ad_array_forward_mode.py:            # np.array([1, 2, 3]) - Array
tests/unit/ad/test_ad_array_forward_mode.py:            val = np.array([-5, -13, -21])
tests/unit/ad/test_ad_array_forward_mode.py:            jac = sps.csr_matrix(np.array([[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]]))
tests/unit/ad/test_ad_array_forward_mode.py:                        -var_1[0] * var_2.jac[0].A / var_2.val[0] ** 2,
tests/unit/ad/test_ad_array_forward_mode.py:                        -var_1[1] * var_2.jac[1].A / var_2.val[1] ** 2,
tests/unit/ad/test_ad_array_forward_mode.py:                        -var_1[2] * var_2.jac[2].A / var_2.val[2] ** 2,
tests/unit/ad/test_ad_array_forward_mode.py:        # This combination is only allowed for matrix-vector products (op = "@")
tests/unit/ad/test_ad_array_forward_mode.py:        elif op == "-":
tests/unit/ad/test_ad_array_forward_mode.py:            # This evaluates to -Array (since var_2 = 2 * var_1)
tests/unit/ad/test_ad_array_forward_mode.py:            val = np.array([-6, -15, -24])
tests/unit/ad/test_ad_array_forward_mode.py:            jac = sps.csr_matrix(np.array([[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]]))
tests/unit/ad/test_ad_array_forward_mode.py:                        - var_1.val[0] * var_2.jac[0].A / var_2.val[0] ** 2,
tests/unit/ad/test_ad_array_forward_mode.py:                        - var_1.val[1] * var_2.jac[1].A / var_2.val[1] ** 2,
tests/unit/ad/test_ad_array_forward_mode.py:                        - var_1.val[2] * var_2.jac[2].A / var_2.val[2] ** 2,
tests/unit/ad/test_ad_array_forward_mode.py:            #    Array**(2 * Array - 1) * (2 * Array) * dArray
tests/unit/ad/test_ad_array_forward_mode.py:                        * var_1.val[0] ** (var_2.val[0] - 1.0)
tests/unit/ad/test_ad_array_forward_mode.py:                        * var_1.val[1] ** (var_2.val[1] - 1.0)
tests/unit/ad/test_ad_array_forward_mode.py:                        * var_1.val[2] ** (var_2.val[2] - 1.0)
tests/unit/ad/test_ad_array_forward_mode.py:@pytest.mark.parametrize("op", ["+", "-", "*", "/", "**", "@"])
tests/unit/ad/test_ad_array_forward_mode.py:) -> None:
tests/unit/ad/test_ad_array_forward_mode.py:    applied when doing forward-mode algorithmic differentiation), only combinations that
tests/unit/ad/test_ad_array_forward_mode.py:    # hard-coded values for the different operators and their combinations, see the
tests/unit/ad/test_ad_array_forward_mode.py:    a, b = initAdArrays([np.array([1]), np.array([-10])])
tests/unit/ad/test_ad_array_forward_mode.py:    assert c.val == -9 and np.all(c.jac.A == [1, 1])
tests/unit/ad/test_ad_array_forward_mode.py:    assert b.val == -10 and np.all(b.jac.A == [0, 1])
tests/unit/ad/test_ad_array_forward_mode.py:    c = b - a
tests/unit/ad/test_ad_array_forward_mode.py:    assert np.allclose(c.val, -1) and np.all(c.jac.A == [-1, 1])
tests/unit/ad/test_ad_array_forward_mode.py:    x, y = initAdArrays([np.array([-1, 4]), np.array([1, 5])])
tests/unit/ad/test_ad_array_forward_mode.py:    J = np.array([[1, 0, -1, 0], [0, 5, 0, 4]])
tests/unit/ad/test_ad_array_forward_mode.py:    assert np.all(z.val == [-1, 20])
tests/unit/ad/test_ad_array_forward_mode.py:    assert np.sum(y.jac.A - Jy) == 0
tests/unit/ad/test_ad_array_forward_mode.py:    assert np.sum(z.jac.A - Jz) == 0
tests/unit/ad/test_ad_operator_tree.py:    ("-", _operations.sub),
tests/unit/ad/test_ad_operator_tree.py:    # This should not be strictly necessary - the above test should be sufficient,
tests/unit/ad/test_ad_operator_tree.py:    """Test of time-dependent arrays (wrappers around numpy arrays)."""
tests/unit/ad/test_ad_operator_tree.py:    # Time-dependent arrays are defined on grids.
tests/unit/ad/test_ad_operator_tree.py:    # Create and evaluate a time-dependent array that is a function of neither
tests/unit/ad/test_ad_operator_tree.py:    2) Fetching the same mixed-dimensional variable twice should result in objects with
tests/unit/ad/test_ad_operator_tree.py:    # Fetch mixed-dimensional variable representations of the same variables
tests/unit/ad/test_ad_operator_tree.py:    # The two mixed-dimensional variables should have different ids
tests/unit/ad/test_ad_operator_tree.py:    # Then mixed-dimensional variables.
tests/unit/ad/test_ad_operator_tree.py:    Boththe atomic and mixed-dimensional variables are tested. The tests cover both the
tests/unit/ad/test_ad_operator_tree.py:    variables in a setting of multiple variables, including mixed-dimensional variables.
tests/unit/ad/test_ad_operator_tree.py:        d = ja - jb
tests/unit/ad/test_ad_operator_tree.py:            assert np.max(np.abs(d.data)) < 1e-10
tests/unit/ad/test_ad_operator_tree.py:    # It should be possible to avoid this by using dof-indices of the subdomains, but EK
tests/unit/ad/test_ad_operator_tree.py:    # Generate mixed-dimensional variables via the EquationManager.
tests/unit/ad/test_ad_operator_tree.py:    """Test combinations of variables, and mixed-dimensional variables, on different grids.
tests/unit/ad/test_ad_operator_tree.py:    # Next, check that mixed-dimensional variables are handled correctly.
tests/unit/ad/test_ad_operator_tree.py:    # variables (this will cover both variables and mixed-dimensional variable with the
tests/unit/ad/test_ad_operator_tree.py:    time_difference method, however, since the dt-function is a simple extension, full
tests/unit/ad/test_ad_operator_tree.py:    # The highest-dimensional subdomain has both a variable and a time-dependent array,
tests/unit/ad/test_ad_operator_tree.py:    # while the lower-dimensional subdomain has only a variable.
tests/unit/ad/test_ad_operator_tree.py:            vals_sol_foo = -np.ones(sd.num_cells)
tests/unit/ad/test_ad_operator_tree.py:        # Set a numpy array in state, to be represented as a time-dependent array.
tests/unit/ad/test_ad_operator_tree.py:    # Differentiate the variable on the highest-dimensional subdomain
tests/unit/ad/test_ad_operator_tree.py:    assert np.allclose(dt_array.evaluate(eq_system), -0.5)
tests/unit/ad/test_ad_operator_tree.py:    # Also do a test of the mixed-dimensional variable.
tests/unit/ad/test_ad_operator_tree.py:    # Make a combined operator with the mixed-dimensional variable, test this.
tests/unit/test_point_geometry_computations.py:        pts = np.array([[0.0, 2.0, -1.0], [0.0, 4.0, 2.0], [0.0, 0.0, 0.0]])
tests/unit/test_point_geometry_computations.py:                [np.dot(normal, p - pt) for p in pts[:, 1:].T],
tests/unit/test_point_geometry_computations.py:                np.zeros(pts.shape[1] - 1),
tests/unit/test_point_geometry_computations.py:                np.allclose(normal, normal_test), np.allclose(-normal, normal_test)
tests/unit/test_point_geometry_computations.py:            [[2.0, 0.0, 1.0, 1.0], [1.0, -2.0, -1.0, 1.0], [-1.0, 0.0, 2.0, -8.0]]
tests/unit/test_point_geometry_computations.py:        normal_test = np.array([7.0, -5.0, -1.0])
tests/unit/test_point_geometry_computations.py:                [np.dot(normal, p - pt) for p in pts[:, 1:].T],
tests/unit/test_point_geometry_computations.py:                np.zeros(pts.shape[1] - 1),
tests/unit/test_point_geometry_computations.py:            np.allclose(normal, normal_test) or np.allclose(normal, -1.0 * normal_test)
tests/unit/test_point_geometry_computations.py:        pts = np.array([[0.0, 2.0, -1.0], [0.0, 4.0, 2.0], [2.0, 2.0, 2.0]])
tests/unit/test_point_geometry_computations.py:            [[2.0, 0.0, 1.0, 1.0], [1.0, -2.0, -1.0, 1.0], [-1.0, 0.0, 2.0, -8.0]]
tests/unit/test_point_geometry_computations.py:        # Known z-coordinates (up to a sign change) of projected points
tests/unit/test_point_geometry_computations.py:                np.allclose(P_pts[2], known_z), np.allclose(P_pts[2], -known_z)
tests/unit/test_fracture_intersection.py:        # The points are overlapping on the x-axis but not on the y-axis
tests/unit/test_fracture_intersection.py:        # The points are overlapping on the x-axis but not on the y-axis
tests/unit/test_fracture_intersection.py:        p = np.array([[-1, 1, 0, 0], [0, 0, -1, 1]])
tests/unit/test_fracture_intersection.py:        p = np.array([[-1, 1, 0, 0], [0, 0, -1, 1]])
tests/unit/test_fracture_intersection.py:        p = np.array([[-0.6, 0.4, 0.4, -0.6, 0.4], [-0.5, -0.5, 0.5, 0.5, 0.0]])
tests/unit/test_fracture_intersection.py:    def _a_in_b(self, a, b, tol=1e-5):
tests/unit/test_fracture_intersection.py:            if not np.any(np.abs(a[:, i].reshape((-1, 1)) - b).max(axis=0) < tol):
tests/unit/test_fracture_intersection.py:        f.pts[0] -= 2
tests/unit/test_fracture_intersection.py:        f.pts[0] -= 0.5
tests/unit/test_fracture_intersection.py:        f.pts[2] -= 1.5
tests/unit/test_fracture_intersection.py:        f.pts[0] -= 0.5
tests/unit/test_fracture_intersection.py:        f.pts[0, :] = [-0.5, 1.5, 1.5, -0.5]
tests/unit/test_fracture_intersection.py:        f.pts[0] -= 0.5
tests/unit/test_fracture_intersection.py:        f.pts[2, :] = [0, -0.5, 0.5, 1]
tests/unit/test_fracture_intersection.py:        p = np.array([[-0.5, 0.5, 0.5, -0.5], [0.5, 0.5, 1.5, 1.5], [-0.5, -0.5, 1, 1]])
tests/unit/test_snap_points_to_lines.py:# -*- coding: utf-8 -*-
tests/unit/test_snap_points_to_lines.py:        tol = 1e-4
tests/unit/test_snap_points_to_lines.py:        p_snap = np.array([[0.5], [1e-5]])
tests/unit/test_snap_points_to_lines.py:        self.assertTrue(np.allclose(p_known, p_new, rtol=1e-8))
tests/unit/test_snap_points_to_lines.py:        tol = 1e-4
tests/unit/test_snap_points_to_lines.py:        p_snap = np.array([[0.5], [1e-3]])
tests/unit/test_snap_points_to_lines.py:        p = np.array([[0, 1, 0.5, 0.5], [0, 0, 1e-3, 1]])
tests/unit/test_snap_points_to_lines.py:        tol = 1e-2
tests/unit/test_snap_points_to_lines.py:        p = np.array([[0, 1, 0.5, 0.5], [0, 0, 1e-3, 1]])
tests/unit/test_snap_points_to_lines.py:        tol = 1e-4
tests/unit/test_snap_points_to_lines.py:        p = np.array([[0, 1, 0.0, 0.0], [0, 0, 1e-3, 1]])
tests/unit/test_snap_points_to_lines.py:        tol = 1e-2
tests/unit/test_snap_points_to_lines.py:        p = np.array([[0, 1, 0.5, 0.5], [0, 0, 1e-3, 1], [0, 1, 0.5, 1]])
tests/unit/test_snap_points_to_lines.py:        tol = 1e-2
tests/unit/test_ccw.py:        p1, p2, p3 = self.setup_close(1e-6)
tests/unit/test_ccw.py:                p1, p2, p3, tol=1e-4, default=True
tests/unit/test_ccw.py:                p1, p2, p3, tol=1e-4, default=False
tests/unit/test_ccw.py:                p1, p2, p3, tol=1e-8, default=False
tests/unit/test_ccw.py:        p1, p2, p3 = self.setup_close(-1e-6)
tests/unit/test_ccw.py:                p1, p2, p3, tol=1e-4, default=True
tests/unit/test_ccw.py:                p1, p2, p3, tol=1e-4, default=False
tests/unit/test_ccw.py:                p1, p2, p3, tol=1e-8, default=False
tests/unit/test_ccw.py:        p_test = np.array([[0.5, 0.5], [1, -1]])
tests/unit/test_ccw.py:                    p1, p2, p_test, tol=1e-8, default=False
tests/unit/test_hu_15.py:    def initial_condition(self) -> None:
tests/unit/test_hu_15.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_15.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_15.py:            permeability = 1./  5 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_15.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_15.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_15.py:                eps = 1e-6
tests/unit/test_hu_15.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_15.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_15.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_15.py:                eps = 1e-6
tests/unit/test_hu_15.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_15.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_15.py:    def set_geometry(self) -> None:
tests/unit/test_hu_15.py:    def set_domain(self) -> None:
tests/unit/test_hu_15.py:    def set_fractures(self) -> None:
tests/unit/test_hu_15.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_15.py:    dt_init=1e-3,
tests/unit/test_hu_15.py:    # dt_init=1e-2,
tests/unit/test_hu_15.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_15.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_15.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_interpolation_tables.py:        self.tol = 1e-10
tests/unit/test_interpolation_tables.py:    max_size = (high - low) / (num_pt - 1)
tests/unit/test_interpolation_tables.py:        dx=(high - low) / (num_pt - 1), base_point=low, function=function_arg, dim=1
tests/unit/test_interpolation_tables.py:    assert np.allclose(table_vals, adaptive_vals, atol=1e-10)
tests/unit/test_interpolation_tables.py:    assert np.allclose(known_vals, adaptive_vals, atol=1e-10)
tests/unit/test_interpolation_tables.py:    assert np.allclose(known_vals, adaptive_vals, atol=1e-10)
tests/unit/test_interpolation_tables.py:    for ci in range(extended_coords.shape[-1]):
tests/unit/test_interpolation_tables.py:            extended_coords[:, ci].reshape((-1, 1)),
tests/unit/test_interpolation_tables.py:            indices=extended_inds[:, ci].reshape((-1, 1)),
tests/unit/test_interpolation_tables.py:    assert np.allclose(known_vals, adaptive_vals_gradual, atol=1e-10)
tests/unit/test_interpolation_tables.py:    pts = low.reshape((-1, 1)) + np.random.rand(dim, npt) * (high - low).reshape(
tests/unit/test_interpolation_tables.py:        (-1, 1)
tests/unit/test_interpolation_tables.py:    assert num_quad_pts <= np.minimum(npt * np.power(2, dim), table._values.shape[-1])
tests/unit/test_interpolation_tables.py:    # Function values should be reproduced with sufficient accuracy - the tolerance is
tests/unit/test_interpolation_tables.py:    assert np.max(np.abs(table_vals - known_vals)) < function.tol
tests/unit/test_interpolation_tables.py:    assert np.allclose(table_vals, adaptive_vals, atol=1e-10)
tests/unit/test_interpolation_tables.py:        assert np.max(np.abs(diff - known_diff)) < function.diff_tol
tests/unit/test_interpolation_tables.py:        assert np.allclose(diff, adaptive_diff, atol=1e-10)
tests/unit/test_time_step_control.py:`TestTimeControl` contains checks for the correct behaviour of the time-stepping control
tests/unit/test_time_step_control.py:        """The 'schedule' object is supposed to take any array-like object."""
tests/unit/test_time_step_control.py:            ([-1, 10], 0.1),
tests/unit/test_time_step_control.py:            ([0, -3], 0.1),
tests/unit/test_time_step_control.py:            ([1, 2, -100, 3, 4], 0.1),
tests/unit/test_time_step_control.py:            ([0, 1], -1),
tests/unit/test_time_step_control.py:        """An error should be raised if initial time step is non-positive."""
tests/unit/test_time_step_control.py:    @pytest.mark.parametrize("iter_max", [0, -1])
tests/unit/test_time_step_control.py:        iter_optimal_range = (-1, 2)
tests/unit/test_time_step_control.py:        """An error should be raised if under-relaxation factor >= 1"""
tests/unit/test_time_step_control.py:        msg = "Expected under-relaxation factor < 1."
tests/unit/test_time_step_control.py:        """An error should be raised if over-relaxation factor <= 1"""
tests/unit/test_time_step_control.py:        msg = "Expected over-relaxation factor > 1."
tests/unit/test_time_step_control.py:            ([0, 1], 0.1, -1),
tests/unit/test_time_step_control.py:    """The following tests are written to check the overall behavior of the time-stepping
tests/unit/test_time_step_control.py:        #     time to be reduced by old dt (time = 5 - 1 = 4)
tests/unit/test_time_step_control.py:        #     time index to be reduced by one (time_index = 13 - 1 = 12)
tests/unit/test_time_step_control.py:                f"achieved its minimum admissible value -> dt = dt_min = {time_manager.dt}."
tests/unit/test_time_step_control.py:        latter are cut-off accordingly.
tests/unit/test_time_step_control.py:        # Check if single-chosen time and dt are picked correctly.
tests/unit/test_time_step_control.py:        # Check if history has been cut-off correctly.
tests/unit/test_hu_model_pressure_trace.py:- Not sure about the equations, so this test is temporary
tests/unit/test_hu_model_pressure_trace.py:- TODO......
tests/unit/test_hu_model_pressure_trace.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_pressure_trace.py:        # TEST: ---------------------------------------------------------------------------
tests/unit/test_hu_model_pressure_trace.py:        #         sd.nodes[1][internal_nodes_id[1]] -= 0.1
tests/unit/test_hu_model_pressure_trace.py:        # ---------
tests/unit/test_hu_model_pressure_trace.py:            print("\n\n\n TEST PASSED ----------------------------------------")
tests/unit/test_hu_model_pressure_trace.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_pressure_trace.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_pressure_trace.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_pressure_trace.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_pressure_trace.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_pressure_trace.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_model_pressure_trace.py:if case == 5:  # delta p = -1, g = 0
tests/unit/test_hu_model_pressure_trace.py:if case == 8:  # delta p = -1, g = 1
tests/unit/test_fv_disc.py:# -*- coding: utf-8 -*-
tests/unit/test_fv_disc.py:    b = -(div * bound_flux).A
tests/unit/test_fv_disc.py:    assert a[mid - 1, mid] == -1
tests/unit/test_fv_disc.py:    assert a[mid + 1, mid] == -1
tests/unit/test_fv_disc.py:    assert a[mid - 3, mid] == -1
tests/unit/test_fv_disc.py:    assert a[mid + 3, mid] == -1
tests/unit/test_fv_disc.py:    assert a[0, 1] == -1
tests/unit/test_fv_disc.py:    assert a[0, 3] == -1
tests/unit/test_fv_disc.py:    assert a[2, 1] == -1
tests/unit/test_fv_disc.py:    assert a[2, 5] == -1
tests/unit/test_fv_disc.py:    assert b[2, 14] == -1
tests/unit/test_fv_disc.py:    assert a[1, 0] == -1
tests/unit/test_fv_disc.py:    assert a[1, 2] == -1
tests/unit/test_fv_disc.py:    assert a[1, 4] == -1
tests/unit/test_fv_disc.py:    assert b[1, 13] == -1
tests/unit/test_fv_disc.py:    b = -(div * bound_flux).A
tests/unit/test_fv_disc.py:            [4.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0],
tests/unit/test_fv_disc.py:            [-1.0, 4.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0],
tests/unit/test_fv_disc.py:            [-1.0, -1.0, 4.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0],
tests/unit/test_fv_disc.py:            [-1.0, 0.0, 0.0, 4.0, -1.0, -1.0, -1.0, 0.0, 0.0],
tests/unit/test_fv_disc.py:            [0.0, -1.0, 0.0, -1.0, 4.0, -1.0, 0.0, -1.0, 0.0],
tests/unit/test_fv_disc.py:            [0.0, 0.0, -1.0, -1.0, -1.0, 4.0, 0.0, 0.0, -1.0],
tests/unit/test_fv_disc.py:            [-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 4.0, -1.0, -1.0],
tests/unit/test_fv_disc.py:            [0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 4.0, -1.0],
tests/unit/test_fv_disc.py:            [0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 4.0],
tests/unit/test_hu_model_alessio_small.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_alessio_small.py:                eps = 1e-6
tests/unit/test_hu_model_alessio_small.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_model_alessio_small.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_model_alessio_small.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_alessio_small.py:                eps = 1e-6
tests/unit/test_hu_model_alessio_small.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_model_alessio_small.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_model_alessio_small.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_alessio_small.py:                pressure_values = np.ones(sd.num_cells) # ( 2 - 1 * sd.cell_centers[1] / self.ymax ) # np.ones(sd.num_cells)
tests/unit/test_hu_model_alessio_small.py:    def after_nonlinear_iteration(self, solution_vector: np.ndarray) -> None:
tests/unit/test_hu_model_alessio_small.py:        # interface_mortar_flux_equation_phase_0: -------------------------------------
tests/unit/test_hu_model_alessio_small.py:            @ self.aperture(subdomains) ** pp.ad.Scalar(-1)
tests/unit/test_hu_model_alessio_small.py:                    - pressure_l
tests/unit/test_hu_model_alessio_small.py:                    - density_upwinded
tests/unit/test_hu_model_alessio_small.py:        # interface_mortar_flux_equation_phase_1: -------------------------------------
tests/unit/test_hu_model_alessio_small.py:            @ self.aperture(subdomains) ** pp.ad.Scalar(-1)
tests/unit/test_hu_model_alessio_small.py:                    - pressure_l
tests/unit/test_hu_model_alessio_small.py:                    - density_upwinded
tests/unit/test_hu_model_alessio_small.py:        # mob rho: ---------------------------------------------------------------
tests/unit/test_hu_model_alessio_small.py:        # upwind interfaces: --------------------------------------
tests/unit/test_hu_model_alessio_small.py:        # # interface_fluid_mass_flux_phase_1: -------------------------------------
tests/unit/test_hu_model_alessio_small.py:        flux_intf_phase_0_p_val = -flux_intf_phase_0_p.evaluate(self.equation_system).val[[5,7]] # minus because of notation for mortars
tests/unit/test_hu_model_alessio_small.py:        flux_intf_phase_1_p_val = -flux_intf_phase_1_p.evaluate(self.equation_system).val[[5,7]] # [upper face, lower face]
tests/unit/test_hu_model_alessio_small.py:        # flux_intf_phase_0_m_val = -flux_intf_phase_0_m.evaluate(self.equation_system).val[[12,17]] # ok, fluxes from p eq and mass bal are the same
tests/unit/test_hu_model_alessio_small.py:        # flux_intf_phase_1_m_val = -flux_intf_phase_1_m.evaluate(self.equation_system).val[[12,17]]
tests/unit/test_hu_model_alessio_small.py:        # div_flux_0_cell_1_4 = -( div @ flux_intf_phase_0_p ).evaluate(self.equation_system).val[[1,4]] # you know why there is a minus # contribution to cell 1 and 4. positive if exiting the cell
tests/unit/test_hu_model_alessio_small.py:        # div_flux_1_cell_1_4 = -( div @ flux_intf_phase_1_p ).evaluate(self.equation_system).val[[1,4]]
tests/unit/test_hu_model_alessio_small.py:        flux_intf_phase_0_p_val = -flux_intf_phase_0_p.evaluate(self.equation_system).val[[5,7]] # minus because of notation for mortars
tests/unit/test_hu_model_alessio_small.py:        flux_intf_phase_1_p_val = -flux_intf_phase_1_p.evaluate(self.equation_system).val[[5,7]] # [upper face, lower face]
tests/unit/test_hu_model_alessio_small.py:        # flux_intf_phase_0_m_val = -flux_intf_phase_0_m.evaluate(self.equation_system).val[[12,17]] # ok, fluxes from p eq and mass bal are the same
tests/unit/test_hu_model_alessio_small.py:        # flux_intf_phase_1_m_val = -flux_intf_phase_1_m.evaluate(self.equation_system).val[[12,17]]
tests/unit/test_hu_model_alessio_small.py:        # div_flux_0_cell_1_4 = -( div @ flux_intf_phase_0_p ).evaluate(self.equation_system).val[[1,4]] # you know why there is a minus # contribution to cell 1 and 4. positive if exiting the cell
tests/unit/test_hu_model_alessio_small.py:        # div_flux_1_cell_1_4 = -( div @ flux_intf_phase_1_p ).evaluate(self.equation_system).val[[1,4]]
tests/unit/test_hu_model_alessio_small.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_alessio_small.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_alessio_small.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_alessio_small.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_alessio_small.py:            "residual_aperture": 1e-1, 
tests/unit/test_hu_model_alessio_small.py:    dt_init=1e-1,  
tests/unit/test_hu_model_alessio_small.py:    "nl_convergence_tol": 1e-6,
tests/unit/test_hu_model_alessio_small.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_alessio_small.py:wetting_phase = pp.composite.phase.Phase(rho0=1, beta=1e-10)
tests/unit/test_hu_model_alessio_small.py:non_wetting_phase = pp.composite.phase.Phase(rho0=0.5, beta=1e-10)
tests/unit/test_merging_non_conforming_grids.py:            g, g, global_ind_offset=0, tol=1e-4
tests/unit/test_merging_non_conforming_grids.py:        ) = non_conforming.merge_1d_grids(g, h, global_ind_offset=0, tol=1e-4)
tests/unit/test_merging_non_conforming_grids.py:        # Unequal nodes along the x-axis
tests/unit/test_merging_non_conforming_grids.py:        ) = non_conforming.merge_1d_grids(g, h, global_ind_offset=0, tol=1e-4)
tests/unit/test_merging_non_conforming_grids.py:        g.nodes = np.array([[1, -1, 0], [0, 0, 0], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        h = pp.TensorGrid(np.array([-1, 0, 1]))
tests/unit/test_merging_non_conforming_grids.py:        # cell-face
tests/unit/test_merging_non_conforming_grids.py:        # face-nodes
tests/unit/test_merging_non_conforming_grids.py:        # cell-face
tests/unit/test_merging_non_conforming_grids.py:        # face-nodes
tests/unit/test_merging_non_conforming_grids.py:        # cell-face
tests/unit/test_merging_non_conforming_grids.py:        # face-nodes
tests/unit/test_merging_non_conforming_grids.py:        # cell-face
tests/unit/test_merging_non_conforming_grids.py:        # face-nodes
tests/unit/test_merging_non_conforming_grids.py:        # cell-face
tests/unit/test_merging_non_conforming_grids.py:        # face-nodes
tests/unit/test_merging_non_conforming_grids.py:        # face-nodes
tests/unit/test_merging_non_conforming_grids.py:        nodes_2 = np.array([[0, 1, 0], [0, 0, -1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:            gl, intersections, glob_ind, list_of_grids, tol=1e-4
tests/unit/test_merging_non_conforming_grids.py:        nodes_2 = np.array([[0, 1, 0], [0, 0, -1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:            gl, intersections, glob_ind, list_of_grids, tol=1e-4
tests/unit/test_merging_non_conforming_grids.py:        nodes_2 = np.array([[0, 1, 0], [0, 0, -1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        nodes_3 = np.array([[0, 0, -1], [0, 1, 0], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:            gl, intersections, glob_ind, list_of_grids, tol=1e-4
tests/unit/test_merging_non_conforming_grids.py:        nodes_2 = np.array([[0, 2, 1], [0, 0, -1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:            gl, intersections, glob_ind, list_of_grids, tol=1e-4
tests/unit/test_merging_non_conforming_grids.py:        nodes_2 = np.array([[0, 2, 1], [0, 0, -1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:            gl, intersections, glob_ind, list_of_grids, tol=1e-4
tests/unit/test_merging_non_conforming_grids.py:        nodes_1 = np.array([[-1, 0, 1, 0, 0], [0, 0, 0, -1, 1], [0, 0, 0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        nodes_2 = np.array([[-1, 0, 1, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, -1, 1]])
tests/unit/test_merging_non_conforming_grids.py:        nodes_3 = np.array([[0, 0, 0, 0, 0], [-1, 0, 1, 0, 0], [0, 0, 0, -1, 1]])
tests/unit/test_merging_non_conforming_grids.py:        g_1x.nodes = np.array([[-1, 0, 1], [0, 0, 0], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_1y.nodes = np.array([[0, 0, 0], [-1, 0, 1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_2x.nodes = np.array([[-1, 0, 1], [0, 0, 0], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_2z.nodes = np.array([[0, 0, 0], [0, 0, 0], [-1, 0, 1]])
tests/unit/test_merging_non_conforming_grids.py:        g_3y.nodes = np.array([[0, 0, 0], [-1, 0, 1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_3z.nodes = np.array([[0, 0, 0], [0, 0, 0], [-1, 0, 1]])
tests/unit/test_merging_non_conforming_grids.py:            gl, intersections, glob_ind, list_of_grids, tol=1e-4
tests/unit/test_merging_non_conforming_grids.py:        nodes_1 = np.array([[-1, 0, 1, 0, 0], [0, 0, 0, -1, 1], [0, 0, 0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        nodes_2 = np.array([[-1, 0, 1, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, -1, 1]])
tests/unit/test_merging_non_conforming_grids.py:        nodes_3 = np.array([[0, 0, 0, 0, 0], [-1, 0, 1, 0, 0], [0, 0, 0, -1, 1]])
tests/unit/test_merging_non_conforming_grids.py:        g_1x.nodes = np.array([[1, 0, -1], [0, 0, 0], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_1y.nodes = np.array([[0, 0, 0], [-1, 0, 1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_2x.nodes = np.array([[-1, 0, 1], [0, 0, 0], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_2z.nodes = np.array([[0, 0, 0], [0, 0, 0], [-1, 0, 1]])
tests/unit/test_merging_non_conforming_grids.py:        g_3y.nodes = np.array([[0, 0, 0], [-1, 0, 1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_3z.nodes = np.array([[0, 0, 0], [0, 0, 0], [-1, 0, 1]])
tests/unit/test_merging_non_conforming_grids.py:            gl, intersections, glob_ind, list_of_grids, tol=1e-4
tests/unit/test_merging_non_conforming_grids.py:            [[-1, -0.5, 0, 1, 0, 0], [0, 0, 0, 0, -1, 1], [0, 0, 0, 0, 0, 0]]
tests/unit/test_merging_non_conforming_grids.py:        nodes_2 = np.array([[-1, 0, 1, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, -1, 1]])
tests/unit/test_merging_non_conforming_grids.py:        nodes_3 = np.array([[0, 0, 0, 0, 0], [-1, 0, 1, 0, 0], [0, 0, 0, -1, 1]])
tests/unit/test_merging_non_conforming_grids.py:        g_1x.nodes = np.array([[-1, -0.5, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_1y.nodes = np.array([[0, 0, 0], [-1, 0, 1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_2x.nodes = np.array([[-1, 0, 1], [0, 0, 0], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_2z.nodes = np.array([[0, 0, 0], [0, 0, 0], [-1, 0, 1]])
tests/unit/test_merging_non_conforming_grids.py:        g_3y.nodes = np.array([[0, 0, 0], [-1, 0, 1], [0, 0, 0]])
tests/unit/test_merging_non_conforming_grids.py:        g_3z.nodes = np.array([[0, 0, 0], [0, 0, 0], [-1, 0, 1]])
tests/unit/test_merging_non_conforming_grids.py:            gl, intersections, glob_ind, list_of_grids, tol=1e-4
tests/unit/test_md_grid.py:def mock_mortar_grid(sd_primary: pp.Grid, sd_secondary: pp.Grid) -> pp.MortarGrid:
tests/unit/test_md_grid.py:    # ----- Tests of adding nodes and edges ----- #
tests/unit/test_md_grid.py:    # ------ Test of iterators ------*
tests/unit/test_md_grid.py:    # ------------ Tests for removers
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:- permeable k = 10, impermeable k = 0.1
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:- non conforming displacement_max = -0.1, only for permeable fracture
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:- 
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:        # os.system("rm -r " + self.root_path)
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:            saturation_values = 1.0 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    def after_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:        tol = 1e-6
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:        self.x_intersection = self.xmean - displ_x
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:        self.y_intersection = self.ymean - displ_y
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:        )  # -0.1 just to not touch the fracture # Removed
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    def meshing_arguments_ref(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:                - (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:                + (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:                -0.0
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:            #     "./case_1/non-conforming/slanted_hu_Kn"
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    os.system("mkdir -p ./case_1/slanted_hu_Kn" + str(Kn) + "/convergence_results")
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    #     "mkdir -p ./case_1/non-conforming/slanted_hu_Kn"
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:    #     "./case_1/non-conforming/slanted_hu_Kn"
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:        #     "./case_1/non-conforming/slanted_hu_Kn"
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:            schedule=np.array([0, 1e-4]) / t_0,
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:            dt_init=1e-4 / t_0,
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:            dt_min_max=np.array([1e-4, 1e-3]) / t_0,
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:            "nl_convergence_tol": 1e-6,
tests/unit/tests-paper-2/case_1_slanted_hu_convergence.py:        model.cell_size_ref = cell_sizes[-1]
tests/unit/tests-paper-2/plot_chops.py:    linestyle="--",
tests/unit/tests-paper-2/plot_chops.py:    linestyle="-",
tests/unit/tests-paper-2/plot_chops.py:ax_1.grid(linestyle="--", alpha=0.5)
tests/unit/tests-paper-2/plot_chops.py:    bbox_to_anchor=(-0.1, -0.65),
tests/unit/tests-paper-2/plot_chops.py:os.system("pdfcrop --margins '0 -800 0 0' " + filename + " " + filename)
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:- permeable k = 10, impermeable k = 0.1
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:- non conforming displacement_max = -0.1, only for permeable fracture
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:- linear solver is the bottleneck for small mesh size
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:        # os.system("rm -r " + self.root_path)
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:            saturation_values = 1.0 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    def after_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:        tol = 1e-6
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:        self.x_intersection = self.xmean - displ_x
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:        self.y_intersection = self.ymean - displ_y
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    def meshing_arguments_ref(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:                - (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:                + (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:                -0.0
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:            #     "./case_1/non-conforming/slanted_ppu_Kn"
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    os.system("mkdir -p ./case_1/slanted_ppu_Kn" + str(Kn) + "/convergence_results")
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    #     "mkdir -p ./case_1/non-conforming/slanted_ppu_Kn"
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:    #     "./case_1/non-conforming/slanted_ppu_Kn"
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:        #     "./case_1/non-conforming/slanted_ppu_Kn"
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:            schedule=np.array([0, 1e-4]) / t_0,
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:            dt_init=1e-4 / t_0,
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:            dt_min_max=np.array([1e-4, 1e-3]) / t_0,
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:            "nl_convergence_tol": 1e-6,
tests/unit/tests-paper-2/case_1_slanted_ppu_convergence.py:        model.cell_size_ref = cell_sizes[-1]
tests/unit/tests-paper-2/plot_convergence.py:#     "./case_1/non-conforming/slanted_hu_Kn0.1/convergence_results/",
tests/unit/tests-paper-2/plot_convergence.py:#     "./case_1/non-conforming/slanted_ppu_Kn0.1/convergence_results/",
tests/unit/tests-paper-2/plot_convergence.py:    # fine (ref): ------------------------------------------------------
tests/unit/tests-paper-2/plot_convergence.py:    cell_size = cell_sizes[-1]
tests/unit/tests-paper-2/plot_convergence.py:    for cell_size in cell_sizes[:-1]:
tests/unit/tests-paper-2/plot_convergence.py:        # coarse: --------------------------------------------------------
tests/unit/tests-paper-2/plot_convergence.py:            (pressure_2d_proj - pressure_2d_ref) * volumes_2d_ref, ord=2
tests/unit/tests-paper-2/plot_convergence.py:            (pressure_1d_proj - pressure_1d_ref) * volumes_1d_ref, ord=2
tests/unit/tests-paper-2/plot_convergence.py:            (saturation_2d_proj - saturation_2d_ref) * volumes_2d_ref, ord=2
tests/unit/tests-paper-2/plot_convergence.py:            (saturation_1d_proj - saturation_1d_ref) * volumes_1d_ref, ord=2
tests/unit/tests-paper-2/plot_convergence.py:            (mortar_phase_0_proj - mortar_phase_0_ref) * volumes_mortar, ord=2
tests/unit/tests-paper-2/plot_convergence.py:            (mortar_phase_1_proj - mortar_phase_1_ref) * volumes_mortar, ord=2
tests/unit/tests-paper-2/plot_convergence.py:x_ticks = np.linspace(cell_sizes[0], cell_sizes[-2], 3)
tests/unit/tests-paper-2/plot_convergence.py:# save_folder = "./case_1/non-conforming/slanted_ppu_hu_"
tests/unit/tests-paper-2/plot_convergence.py:        cell_sizes[:-1],
tests/unit/tests-paper-2/plot_convergence.py:        linestyle="-",
tests/unit/tests-paper-2/plot_convergence.py:        cell_sizes[:-1],
tests/unit/tests-paper-2/plot_convergence.py:        linestyle="-",
tests/unit/tests-paper-2/plot_convergence.py:        cell_sizes[:-1],
tests/unit/tests-paper-2/plot_convergence.py:        cell_sizes[:-1],
tests/unit/tests-paper-2/plot_convergence.py:        linestyle="--",
tests/unit/tests-paper-2/plot_convergence.py:    ax_1.grid(linestyle="--", alpha=0.5)
tests/unit/tests-paper-2/plot_convergence.py:        bbox_to_anchor=(-0.1, -0.65),
tests/unit/tests-paper-2/plot_convergence.py:    os.system("pdfcrop --margins '0 -800 0 0' " + filename + " " + filename)
tests/unit/tests-paper-2/case_0_ppu.py:- no fractures, only ppu
tests/unit/tests-paper-2/case_0_ppu.py:- change initial condition to have continuous of discontinuous case
tests/unit/tests-paper-2/case_0_ppu.py:- why does ppu crash for small cell_size?
tests/unit/tests-paper-2/case_0_ppu.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_0_ppu.py:        # os.system("rm -r " + self.root_path)
tests/unit/tests-paper-2/case_0_ppu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_0_ppu.py:            saturation_values = 1 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/tests-paper-2/case_0_ppu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_0_ppu.py:    def after_simulation(self) -> None:
tests/unit/tests-paper-2/case_0_ppu.py:        tol = 1e-6
tests/unit/tests-paper-2/case_0_ppu.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_0_ppu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_0_ppu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_0_ppu.py:        self.x_intersection = self.xmean - displ_x
tests/unit/tests-paper-2/case_0_ppu.py:        self.y_intersection = self.ymean - displ_y
tests/unit/tests-paper-2/case_0_ppu.py:            np.array([[self.xmin, self.xmean - 0.1], [self.ymean, self.ymean]])
tests/unit/tests-paper-2/case_0_ppu.py:        )  # -0.1 just to not touch the fracture
tests/unit/tests-paper-2/case_0_ppu.py:    def meshing_arguments_ref(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_0_ppu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_0_ppu.py:rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_0_ppu.py:wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_0_ppu.py:non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_0_ppu.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_0_ppu.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_0_ppu.py:                - (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_0_ppu.py:                + (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_0_ppu.py:                -0.0
tests/unit/tests-paper-2/case_0_ppu.py:            # self.root_path = "./case_0/ppu/convergence_results-disc/"
tests/unit/tests-paper-2/case_0_ppu.py:    os.system("mkdir -p ./case_0/ppu/convergence_results")
tests/unit/tests-paper-2/case_0_ppu.py:    # os.system("mkdir -p ./case_0/ppu/convergence_results-disc")
tests/unit/tests-paper-2/case_0_ppu.py:    # np.savetxt("./case_0/ppu/convergence_results-disc/cell_sizes", cell_sizes)
tests/unit/tests-paper-2/case_0_ppu.py:        # folder_name = "./case_0/ppu/convergence_results-disc/visualization_" + str(
tests/unit/tests-paper-2/case_0_ppu.py:            schedule=np.array([0, 1e-4]) / t_0,
tests/unit/tests-paper-2/case_0_ppu.py:            dt_init=1e-4 / t_0,
tests/unit/tests-paper-2/case_0_ppu.py:            dt_min_max=np.array([1e-4, 1e-3]) / t_0,
tests/unit/tests-paper-2/case_0_ppu.py:            "nl_convergence_tol": 1e-5,
tests/unit/tests-paper-2/case_0_ppu.py:        model.cell_size_ref = cell_sizes[-1]
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        tangent_ref = np.array([1, -normal_ref[0] / normal_ref[1]])
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        # ORIGINAL control points: ----------------------------------
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:            boundary_ctrl_pts[:, 0] < (self.xmax - 1e-10)
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:                boundary_ctrl_pts[:, 0] > (self.xmax - 1e-10),
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:                boundary_ctrl_pts[:, 1] > (self.ymax - 1e-10),
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        ]  # top-right point
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:                boundary_ctrl_pts[:, 0] > (self.xmax - 1e-10),
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:                boundary_ctrl_pts[:, 1] < (self.ymin + 1e-10),
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        ]  # bottom-right point
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:                boundary_ctrl_pts[:, 0] >= (self.xmax - 1e-10),
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:                np.abs(boundary_ctrl_pts[:, 1] - 0.5) < (0.5 - 1e-10),
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        eps = 1e-8
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:                horizon_1_ctrl_pts[:, 0] < self.xmax - eps,
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        # DEFORMED control points: -----------------------------------------
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        horizon_1_ctrl_pts_right[:, 0] += displacement_x + (0 - displacement_x) / (
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:            1 - x_intersection
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        ) * (horizon_1_ctrl_pts_right[:, 0] - x_intersection)
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:            normals=[np.array([-1, 0]), normal_ref],
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        # update the whole grid bucket: -----------------------------------------------
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:    def set_geometry(self) -> None:
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        self.x_intersection = self.xmean - displ_x
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        self.y_intersection = self.ymean - displ_y
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:            np.array([[self.xmin, self.xmean - 0.1], [self.ymean, self.ymean]])
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        )  # -0.1 just to not touch the fracture
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:    dt_init=5e-1 / t_0,
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:    dt_min_max=np.array([1e-1, 5e-1]) / t_0,
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:    "nl_convergence_tol": 1e-5,
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:        self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:            - (self.ymax - self.ymin)
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:            + (self.ymax - self.ymin)
tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py:            -0.1
tests/unit/tests-paper-2/case_2_hu.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_2_hu.py:        # os.system("rm -r " + self.root_path)
tests/unit/tests-paper-2/case_2_hu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_2_hu.py:            # saturation_values = 1.0 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/tests-paper-2/case_2_hu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_2_hu.py:    def intrinsic_permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/tests-paper-2/case_2_hu.py:            permeability = pp.ad.DenseArray(1e-5 * np.ones(sd.num_cells))
tests/unit/tests-paper-2/case_2_hu.py:    def normal_perm(self, interfaces) -> pp.ad.Operator:
tests/unit/tests-paper-2/case_2_hu.py:                perm[id_sd] = 1e-5 * np.ones([sd.num_cells])
tests/unit/tests-paper-2/case_2_hu.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_2_hu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_2_hu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_2_hu.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_2_hu.py:    wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_2_hu.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_2_hu.py:    os.system("mkdir -p ./case_2")
tests/unit/tests-paper-2/case_2_hu.py:        dt_init=1e-1 / t_0,
tests/unit/tests-paper-2/case_2_hu.py:        dt_min_max=np.array([1e-3, 1e-1]) / t_0,
tests/unit/tests-paper-2/case_2_hu.py:        "nl_convergence_tol": 1e-6,
tests/unit/tests-paper-2/case_0_hu.py:- no fractures, only hu
tests/unit/tests-paper-2/case_0_hu.py:- change initial condition to have continuous of discontinuous case
tests/unit/tests-paper-2/case_0_hu.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_0_hu.py:        # os.system("rm -r " + self.root_path)
tests/unit/tests-paper-2/case_0_hu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_0_hu.py:            # saturation_values = 1 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/tests-paper-2/case_0_hu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_0_hu.py:    def after_simulation(self) -> None:
tests/unit/tests-paper-2/case_0_hu.py:        tol = 1e-6
tests/unit/tests-paper-2/case_0_hu.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_0_hu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_0_hu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_0_hu.py:        self.x_intersection = self.xmean - displ_x
tests/unit/tests-paper-2/case_0_hu.py:        self.y_intersection = self.ymean - displ_y
tests/unit/tests-paper-2/case_0_hu.py:    def meshing_arguments_ref(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_0_hu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_0_hu.py:rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_0_hu.py:wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_0_hu.py:non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_0_hu.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_0_hu.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_0_hu.py:                - (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_0_hu.py:                + (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_0_hu.py:                -0.0
tests/unit/tests-paper-2/case_0_hu.py:            self.root_path = "./case_0/hu/convergence_results-disc/"
tests/unit/tests-paper-2/case_0_hu.py:    # os.system("mkdir -p ./case_0/hu/convergence_results")
tests/unit/tests-paper-2/case_0_hu.py:    os.system("mkdir -p ./case_0/hu/convergence_results-disc")
tests/unit/tests-paper-2/case_0_hu.py:    np.savetxt("./case_0/hu/convergence_results-disc/cell_sizes", cell_sizes)
tests/unit/tests-paper-2/case_0_hu.py:        folder_name = "./case_0/hu/convergence_results-disc/visualization_" + str(
tests/unit/tests-paper-2/case_0_hu.py:            schedule=np.array([0, 1e-4]) / t_0,
tests/unit/tests-paper-2/case_0_hu.py:            dt_init=1e-4 / t_0,
tests/unit/tests-paper-2/case_0_hu.py:            dt_min_max=np.array([1e-4, 1e-3]) / t_0,
tests/unit/tests-paper-2/case_0_hu.py:            "nl_convergence_tol": 1e-5,
tests/unit/tests-paper-2/case_0_hu.py:        model.cell_size_ref = cell_sizes[-1]
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/visualization_0.1/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/visualization_0.1/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/visualization_0.2/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/visualization_0.2/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/MASS_OVER_TIME:0.000000000000000000e+00,1.250000000031250003e-01
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/MASS_OVER_TIME:1.000000000000000048e-04,1.250000000031250003e-01
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/cell_sizes:2.000000000000000111e-01
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/cell_sizes:1.000000000000000056e-01
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/cell_sizes:5.000000000000000278e-02
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/cell_sizes:1.000000000000000021e-02
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/OUTPUT_NEWTON_INFO:1.000000000000000048e-04,1.000000000000000048e-04,0.000000000000000000e+00,4.000000000000000000e+00,4.000000000000000000e+00,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/FLIPS:1.000000000000000048e-04,1.400000000000000000e+01,1.800000000000000000e+01,0.000000000000000000e+00,1.400000000000000000e+01,1.800000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/FLIPS:1.000000000000000048e-04,2.000000000000000000e+01,2.800000000000000000e+01,0.000000000000000000e+00,2.000000000000000000e+01,2.800000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/FLIPS:1.000000000000000048e-04,2.860000000000000000e+02,2.740000000000000000e+02,9.000000000000000000e+00,2.860000000000000000e+02,2.740000000000000000e+02,9.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/FLIPS:1.000000000000000048e-04,1.585400000000000000e+04,1.717200000000000000e+04,0.000000000000000000e+00,1.585400000000000000e+04,1.717200000000000000e+04,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/FLIPS:1.000000000000000048e-04,3.200000000000000000e+01,2.600000000000000000e+01,0.000000000000000000e+00,3.200000000000000000e+01,2.600000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/FLIPS:1.000000000000000048e-04,3.400000000000000000e+01,5.600000000000000000e+01,0.000000000000000000e+00,3.400000000000000000e+01,5.600000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/FLIPS:1.000000000000000048e-04,2.240000000000000000e+02,3.080000000000000000e+02,2.000000000000000000e+00,2.240000000000000000e+02,3.080000000000000000e+02,2.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/FLIPS:1.000000000000000048e-04,1.658000000000000000e+03,1.469200000000000000e+04,0.000000000000000000e+00,1.658000000000000000e+03,1.469200000000000000e+04,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/visualization_0.01/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/visualization_0.01/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/visualization_0.05/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results-disc/visualization_0.05/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results/visualization_0.1/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results/visualization_0.1/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results/visualization_0.2/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results/visualization_0.2/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results/MASS_OVER_TIME:0.000000000000000000e+00,1.250000000083332230e-01
tests/unit/tests-paper-2/case_0/hu/convergence_results/MASS_OVER_TIME:1.000000000000000048e-04,1.250000000083332230e-01
tests/unit/tests-paper-2/case_0/hu/convergence_results/cell_sizes:2.000000000000000111e-01
tests/unit/tests-paper-2/case_0/hu/convergence_results/cell_sizes:1.000000000000000056e-01
tests/unit/tests-paper-2/case_0/hu/convergence_results/cell_sizes:5.000000000000000278e-02
tests/unit/tests-paper-2/case_0/hu/convergence_results/cell_sizes:1.000000000000000021e-02
tests/unit/tests-paper-2/case_0/hu/convergence_results/OUTPUT_NEWTON_INFO:1.000000000000000048e-04,1.000000000000000048e-04,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results/FLIPS:1.000000000000000048e-04,8.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,8.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results/FLIPS:1.000000000000000048e-04,2.000000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results/FLIPS:1.000000000000000048e-04,1.060000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,1.060000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results/FLIPS:1.000000000000000048e-04,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_0/hu/convergence_results/visualization_0.01/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results/visualization_0.01/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results/visualization_0.05/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/hu/convergence_results/visualization_0.05/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/ppu/convergence_results/visualization_0.1/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/ppu/convergence_results/visualization_0.1/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/ppu/convergence_results/visualization_0.2/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/ppu/convergence_results/visualization_0.2/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/ppu/convergence_results/MASS_OVER_TIME:0.000000000000000000e+00,1.250000000083332230e-01
tests/unit/tests-paper-2/case_0/ppu/convergence_results/cell_sizes:2.000000000000000111e-01
tests/unit/tests-paper-2/case_0/ppu/convergence_results/cell_sizes:1.000000000000000056e-01
tests/unit/tests-paper-2/case_0/ppu/convergence_results/cell_sizes:5.000000000000000278e-02
tests/unit/tests-paper-2/case_0/ppu/convergence_results/cell_sizes:1.000000000000000021e-02
tests/unit/tests-paper-2/case_0/ppu/convergence_results/FLIPS:1.000000000000000048e-04,7.000000000000000000e+00,5.000000000000000000e+00,7.000000000000000000e+00,5.000000000000000000e+00
tests/unit/tests-paper-2/case_0/ppu/convergence_results/FLIPS:1.000000000000000048e-04,8.000000000000000000e+00,3.000000000000000000e+00,8.000000000000000000e+00,3.000000000000000000e+00
tests/unit/tests-paper-2/case_0/ppu/convergence_results/FLIPS:1.000000000000000048e-04,7.500000000000000000e+01,6.700000000000000000e+01,7.500000000000000000e+01,6.700000000000000000e+01
tests/unit/tests-paper-2/case_0/ppu/convergence_results/visualization_0.01/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/ppu/convergence_results/visualization_0.05/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_0/ppu/convergence_results/visualization_0.05/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/gmsh_frac_file.geo_unrolled:Curve Loop(1) = {1, 2, 3, 4, 5, -10, -9, -8, -7, -6, -18, -17, -16, -15, -14, -13, -12, -11, -24, -23, -22, -21, -20, -19};
tests/unit/tests-paper-2/test_1_paper_hu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/test_1_paper_hu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/test_1_paper_hu.py:    def set_geometry(self) -> None:
tests/unit/tests-paper-2/test_1_paper_hu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/test_1_paper_hu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/test_1_paper_hu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/test_1_paper_hu.py:rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/test_1_paper_hu.py:    dt_init=5e-1 / t_0,
tests/unit/tests-paper-2/test_1_paper_hu.py:    dt_min_max=np.array([1e-1, 5e-1]) / t_0,
tests/unit/tests-paper-2/test_1_paper_hu.py:    "nl_convergence_tol": 1e-5,
tests/unit/tests-paper-2/test_1_paper_hu.py:wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/test_1_paper_hu.py:non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/plot_flip_flop.py:    linestyle="--",
tests/unit/tests-paper-2/plot_flip_flop.py:    linestyle="-",
tests/unit/tests-paper-2/plot_flip_flop.py:    linestyle="-",
tests/unit/tests-paper-2/plot_flip_flop.py:    linestyle="-.",
tests/unit/tests-paper-2/plot_flip_flop.py:    linestyle="--",
tests/unit/tests-paper-2/plot_flip_flop.py:ax_1.grid(linestyle="--", alpha=0.5)
tests/unit/tests-paper-2/plot_flip_flop.py:    bbox_to_anchor=(-0.1, -0.65),
tests/unit/tests-paper-2/plot_flip_flop.py:os.system("pdfcrop --margins '0 -800 0 0' " + filename + " " + filename)
tests/unit/tests-paper-2/test_2_paper_hu_conforming.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/test_2_paper_hu_conforming.py:            np.array([[self.xmin, self.xmean - 0.1], [self.ymean, self.ymean]])
tests/unit/tests-paper-2/test_2_paper_hu_conforming.py:        )  # -0.1 just to not touch the fracture
tests/unit/tests-paper-2/case_1_horizontal_hu.py:- permeable: k = 10 NO, blocking: k = 0.1 YES
tests/unit/tests-paper-2/case_1_horizontal_hu.py:-
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_1_horizontal_hu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_horizontal_hu.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_1_horizontal_hu.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_1_horizontal_hu.py:    os.system("mkdir -p ./case_1/horizontal_hu_Kn" + str(Kn) + "/")
tests/unit/tests-paper-2/case_1_horizontal_hu.py:        dt_init=1e-1 / t_0,
tests/unit/tests-paper-2/case_1_horizontal_hu.py:        dt_min_max=np.array([1e-3, 1e-1]) / t_0,
tests/unit/tests-paper-2/case_1_horizontal_hu.py:        "nl_convergence_tol": 1e-6,
tests/unit/tests-paper-2/case_1_vertical_hu.py:-
tests/unit/tests-paper-2/case_1_vertical_hu.py:-
tests/unit/tests-paper-2/case_1_vertical_hu.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_vertical_hu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_1_vertical_hu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_1_vertical_hu.py:    def after_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_vertical_hu.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_1_vertical_hu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_1_vertical_hu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_1_vertical_hu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_vertical_hu.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_1_vertical_hu.py:    wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_vertical_hu.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_vertical_hu.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_1_vertical_hu.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_1_vertical_hu.py:    os.system("mkdir -p ./case_1/vertical_hu_Kn" + str(Kn) + "/")
tests/unit/tests-paper-2/case_1_vertical_hu.py:        dt_init=1e-1 / t_0,
tests/unit/tests-paper-2/case_1_vertical_hu.py:        dt_min_max=np.array([1e-3, 1e-1]) / t_0,
tests/unit/tests-paper-2/case_1_vertical_hu.py:        "nl_convergence_tol": 1e-6,
tests/unit/tests-paper-2/case_1_slanted_ppu.py:- permeable k = 10, impermeable k = 0.1
tests/unit/tests-paper-2/case_1_slanted_ppu.py:- non conforming displacement_max = -0.1, only for permeable fracture
tests/unit/tests-paper-2/case_1_slanted_ppu.py:- linear solver is the bottleneck for small mesh size
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        # os.system("rm -r " + self.root_path)
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        tangent_ref = np.array([1, -normal_ref[0] / normal_ref[1]])
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        # ORIGINAL control points: ----------------------------------
tests/unit/tests-paper-2/case_1_slanted_ppu.py:            boundary_ctrl_pts[:, 0] < (self.xmax - 1e-10)
tests/unit/tests-paper-2/case_1_slanted_ppu.py:                boundary_ctrl_pts[:, 0] > (self.xmax - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_ppu.py:                boundary_ctrl_pts[:, 1] > (self.ymax - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        ]  # top-right point
tests/unit/tests-paper-2/case_1_slanted_ppu.py:                boundary_ctrl_pts[:, 0] > (self.xmax - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_ppu.py:                boundary_ctrl_pts[:, 1] < (self.ymin + 1e-10),
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        ]  # bottom-right point
tests/unit/tests-paper-2/case_1_slanted_ppu.py:                boundary_ctrl_pts[:, 0] >= (self.xmax - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_ppu.py:                np.abs(boundary_ctrl_pts[:, 1] - 0.5) < (0.5 - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        eps = 1e-8
tests/unit/tests-paper-2/case_1_slanted_ppu.py:                horizon_1_ctrl_pts[:, 0] < self.xmax - eps,
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        # DEFORMED control points: -----------------------------------------
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        horizon_1_ctrl_pts_right[:, 0] += displacement_x + (0 - displacement_x) / (
tests/unit/tests-paper-2/case_1_slanted_ppu.py:            1 - x_intersection
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        ) * (horizon_1_ctrl_pts_right[:, 0] - x_intersection)
tests/unit/tests-paper-2/case_1_slanted_ppu.py:            normals=[np.array([-1, 0]), normal_ref],
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        # update the whole grid bucket: -----------------------------------------------
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu.py:            # saturation_values = 1.0 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/tests-paper-2/case_1_slanted_ppu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        self.x_intersection = self.xmean - displ_x
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        self.y_intersection = self.ymean - displ_y
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_slanted_ppu.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_1_slanted_ppu.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_1_slanted_ppu.py:                - (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_1_slanted_ppu.py:                + (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_1_slanted_ppu.py:            self.displacement_max = -0.0
tests/unit/tests-paper-2/case_1_slanted_ppu.py:            # self.root_path = "./case_1/slanted_ppu_Kn" + str(Kn) + "/non-conforming/"
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    os.system("mkdir -p ./case_1/slanted_ppu_Kn" + str(Kn))
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    # os.system("mkdir -p ./case_1/slanted_ppu_Kn" + str(Kn) + "/non-conforming")
tests/unit/tests-paper-2/case_1_slanted_ppu.py:    # folder_name = "./case_1/slanted_ppu_Kn" + str(Kn) + "/non-conforming/visualization"
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        dt_init=1e-1 / t_0,
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        dt_min_max=np.array([1e-5, 1e-1]) / t_0,
tests/unit/tests-paper-2/case_1_slanted_ppu.py:        "nl_convergence_tol": 1e-6,
tests/unit/tests-paper-2/plot_convergence_2d.py:root_path = "./case_0/hu/convergence_results-disc/"
tests/unit/tests-paper-2/plot_convergence_2d.py:# fine (ref): ------------------------------------------------------
tests/unit/tests-paper-2/plot_convergence_2d.py:cell_size = cell_sizes[-1]
tests/unit/tests-paper-2/plot_convergence_2d.py:for cell_size in cell_sizes[:-1]:
tests/unit/tests-paper-2/plot_convergence_2d.py:    # coarse: --------------------------------------------------------
tests/unit/tests-paper-2/plot_convergence_2d.py:        (pressure_2d_proj - pressure_2d_ref) * volumes_2d_ref, ord=2
tests/unit/tests-paper-2/plot_convergence_2d.py:        (saturation_2d_proj - saturation_2d_ref) * volumes_2d_ref, ord=2
tests/unit/tests-paper-2/plot_convergence_2d.py:x_ticks = np.linspace(cell_sizes[0], cell_sizes[-2], 3)
tests/unit/tests-paper-2/plot_convergence_2d.py:        cell_sizes[:-1],
tests/unit/tests-paper-2/plot_convergence_2d.py:        linestyle="-",
tests/unit/tests-paper-2/plot_convergence_2d.py:        cell_sizes[:-1],
tests/unit/tests-paper-2/plot_convergence_2d.py:        cell_sizes[:-1],
tests/unit/tests-paper-2/plot_convergence_2d.py:        linestyle="--",
tests/unit/tests-paper-2/plot_convergence_2d.py:    ax_1.grid(linestyle="--", alpha=0.5)
tests/unit/tests-paper-2/plot_convergence_2d.py:        bbox_to_anchor=(-0.1, -0.65),
tests/unit/tests-paper-2/plot_convergence_2d.py:    os.system("pdfcrop --margins '0 -800 0 0' " + filename + " " + filename)
tests/unit/tests-paper-2/test_convergence.py:    #             "time_index": -1,
tests/unit/tests-paper-2/test_convergence.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/test_convergence.py:        # os.system("rm -r " + self.root_path)
tests/unit/tests-paper-2/test_convergence.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/test_convergence.py:            saturation_values = 1 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/tests-paper-2/test_convergence.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/test_convergence.py:    def after_simulation(self) -> None:
tests/unit/tests-paper-2/test_convergence.py:        tol = 1e-6
tests/unit/tests-paper-2/test_convergence.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/test_convergence.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/test_convergence.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/test_convergence.py:        self.x_intersection = self.xmean - displ_x
tests/unit/tests-paper-2/test_convergence.py:        self.y_intersection = self.ymean - displ_y
tests/unit/tests-paper-2/test_convergence.py:            np.array([[self.xmin, self.xmean - 0.1], [self.ymean, self.ymean]])
tests/unit/tests-paper-2/test_convergence.py:        )  # -0.1 just to not touch the fracture
tests/unit/tests-paper-2/test_convergence.py:    def meshing_arguments_ref(self) -> dict[str, float]:
tests/unit/tests-paper-2/test_convergence.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/test_convergence.py:rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/test_convergence.py:#     schedule=np.array([0, 1e-2]) / t_0,
tests/unit/tests-paper-2/test_convergence.py:#     dt_init=1e-2 / t_0,
tests/unit/tests-paper-2/test_convergence.py:#     dt_min_max=np.array([1e-3, 1e-2]) / t_0,
tests/unit/tests-paper-2/test_convergence.py:#     "nl_convergence_tol": 1e-5,
tests/unit/tests-paper-2/test_convergence.py:wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/test_convergence.py:non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/test_convergence.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/test_convergence.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/test_convergence.py:                - (self.ymax - self.ymin)
tests/unit/tests-paper-2/test_convergence.py:                + (self.ymax - self.ymin)
tests/unit/tests-paper-2/test_convergence.py:                -0.0
tests/unit/tests-paper-2/test_convergence.py:            schedule=np.array([0, 1e-2]) / t_0,
tests/unit/tests-paper-2/test_convergence.py:            dt_init=1e-2 / t_0,
tests/unit/tests-paper-2/test_convergence.py:            dt_min_max=np.array([1e-3, 1e-2]) / t_0,
tests/unit/tests-paper-2/test_convergence.py:            "nl_convergence_tol": 1e-5,
tests/unit/tests-paper-2/test_convergence.py:        model.cell_size_ref = cell_sizes[-1]
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:0.000000000000000000e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.000000000000000056e-01,1.375000000037496783e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.000000000000000111e-01,1.375000000037494008e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.000000000000000444e-01,1.375000000037490677e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.000000000000000222e-01,1.375000000037488457e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.000000000000000000e-01,1.375000000037485959e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.999999999999999778e-01,1.375000000037483461e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.999999999999999556e-01,1.375000000037481240e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.999999999999999334e-01,1.375000000037479853e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.999999999999999112e-01,1.375000000037477910e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.999999999999998890e-01,1.375000000037476799e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.099999999999999867e+00,1.375000000037475412e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.199999999999999956e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.300000000000000044e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.400000000000000133e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.500000000000000222e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.600000000000000311e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.700000000000000400e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.800000000000000488e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.900000000000000577e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.000000000000000444e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.100000000000000533e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.200000000000000622e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.300000000000000711e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.400000000000000799e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.500000000000000888e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.600000000000000977e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.700000000000001066e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.800000000000001155e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:2.900000000000001243e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.000000000000001332e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.100000000000001421e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.200000000000001510e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.300000000000001599e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.400000000000001688e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.500000000000001776e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.600000000000001865e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.700000000000001954e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.800000000000002043e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:3.900000000000002132e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.000000000000001776e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.100000000000001421e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.200000000000001066e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.300000000000000711e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.400000000000000355e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.500000000000000000e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.599999999999999645e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.699999999999999289e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.799999999999998934e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.899999999999998579e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:4.999999999999998224e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.099999999999997868e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.199999999999997513e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.299999999999997158e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.399999999999996803e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.499999999999996447e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.599999999999996092e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.699999999999995737e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.799999999999995381e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.899999999999995026e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:5.999999999999994671e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.099999999999994316e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.199999999999993960e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.299999999999993605e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.399999999999993250e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.499999999999992895e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.599999999999992539e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.699999999999992184e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.799999999999991829e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.899999999999991473e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:6.999999999999991118e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.099999999999990763e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.199999999999990408e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.299999999999990052e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.399999999999989697e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.499999999999989342e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.599999999999988987e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.699999999999988631e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.799999999999988276e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.899999999999987921e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:7.999999999999987566e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.099999999999987210e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.199999999999986855e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.299999999999986500e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.399999999999986144e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.499999999999985789e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.599999999999985434e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.699999999999985079e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.799999999999984723e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.899999999999984368e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:8.999999999999984013e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.099999999999983658e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.199999999999983302e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.299999999999982947e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.399999999999982592e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.499999999999982236e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.599999999999981881e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.699999999999981526e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.799999999999981171e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.899999999999980815e+00,1.375000000037474579e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:9.999999999999980460e+00,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/MASS_OVER_TIME:1.009999999999998010e+01,1.375000000037474857e-01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.000000000000000056e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,7.000000000000000000e+00,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.000000000000000111e-01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.200000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.000000000000000444e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.000000000000000222e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.000000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.000000000000000000e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.400000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.999999999999999778e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.800000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.999999999999999556e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.200000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.999999999999999334e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.999999999999999112e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,4.000000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.999999999999998890e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,4.400000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.099999999999999867e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,4.800000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.199999999999999956e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,5.200000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.300000000000000044e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,5.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.400000000000000133e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,6.000000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.500000000000000222e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,6.400000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.600000000000000311e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,6.800000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.700000000000000400e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,7.200000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.800000000000000488e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,7.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.900000000000000577e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.000000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.000000000000000444e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.400000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.100000000000000533e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.800000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.200000000000000622e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,9.200000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,9.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.400000000000000799e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.000000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.500000000000000888e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.040000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.600000000000000977e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.080000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.700000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.120000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.800000000000001155e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.160000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.900000000000001243e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.200000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.000000000000001332e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.240000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.280000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.200000000000001510e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.320000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.300000000000001599e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.360000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.400000000000001688e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.400000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.500000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.440000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.600000000000001865e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.480000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.700000000000001954e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.520000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.800000000000002043e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.560000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.900000000000002132e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.600000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.000000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.640000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.680000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.200000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.720000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.760000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.400000000000000355e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.800000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.500000000000000000e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.840000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.599999999999999645e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.880000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.699999999999999289e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.920000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.799999999999998934e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.960000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.899999999999998579e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.000000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.999999999999998224e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.040000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.099999999999997868e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.080000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.199999999999997513e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.120000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.299999999999997158e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.160000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.399999999999996803e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.200000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.499999999999996447e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.240000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.599999999999996092e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.280000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.699999999999995737e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.320000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.799999999999995381e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.350000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.899999999999995026e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.390000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.999999999999994671e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.430000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.099999999999994316e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.470000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.199999999999993960e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.510000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.299999999999993605e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.540000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.399999999999993250e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.580000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.499999999999992895e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.620000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.599999999999992539e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.660000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.699999999999992184e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.700000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.799999999999991829e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.730000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.899999999999991473e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.760000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.999999999999991118e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.790000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.099999999999990763e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.820000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.199999999999990408e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.850000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.299999999999990052e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.880000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.399999999999989697e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.920000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.499999999999989342e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.960000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.599999999999988987e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.990000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.699999999999988631e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.030000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.799999999999988276e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.060000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.899999999999987921e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.090000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.999999999999987566e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.120000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.099999999999987210e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.160000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.199999999999986855e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.190000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.299999999999986500e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.220000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.399999999999986144e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.260000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.499999999999985789e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.300000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.599999999999985434e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.340000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.699999999999985079e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.380000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.799999999999984723e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.410000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.899999999999984368e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.440000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.999999999999984013e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.480000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.099999999999983658e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.510000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.199999999999983302e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.540000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.299999999999982947e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.580000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.399999999999982592e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.620000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.499999999999982236e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.660000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.599999999999981881e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.700000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.699999999999981526e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.730000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.799999999999981171e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.770000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.899999999999980815e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.810000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.999999999999980460e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.840000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.009999999999998010e+01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.880000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:1.000000000000000056e-01,6.700000000000000000e+02,3.600000000000000000e+02,0.000000000000000000e+00,6.700000000000000000e+02,3.600000000000000000e+02,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:2.000000000000000111e-01,8.000000000000000000e+01,1.800000000000000000e+01,3.000000000000000000e+01,7.500000000000000000e+02,3.780000000000000000e+02,3.000000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:3.000000000000000444e-01,4.600000000000000000e+01,1.000000000000000000e+01,9.000000000000000000e+00,7.960000000000000000e+02,3.880000000000000000e+02,3.900000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:4.000000000000000222e-01,5.600000000000000000e+01,4.000000000000000000e+00,1.300000000000000000e+01,8.520000000000000000e+02,3.920000000000000000e+02,5.200000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:5.000000000000000000e-01,5.400000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,9.060000000000000000e+02,3.920000000000000000e+02,5.200000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:5.999999999999999778e-01,4.200000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,9.480000000000000000e+02,3.920000000000000000e+02,5.200000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:6.999999999999999556e-01,4.000000000000000000e+01,0.000000000000000000e+00,4.000000000000000000e+00,9.880000000000000000e+02,3.920000000000000000e+02,5.600000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:7.999999999999999334e-01,4.200000000000000000e+01,0.000000000000000000e+00,6.000000000000000000e+00,1.030000000000000000e+03,3.920000000000000000e+02,6.200000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:8.999999999999999112e-01,2.000000000000000000e+01,0.000000000000000000e+00,3.000000000000000000e+00,1.050000000000000000e+03,3.920000000000000000e+02,6.500000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:9.999999999999998890e-01,3.000000000000000000e+01,0.000000000000000000e+00,4.000000000000000000e+00,1.080000000000000000e+03,3.920000000000000000e+02,6.900000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:1.000000000000000056e-01,6.700000000000000000e+02,3.600000000000000000e+02,0.000000000000000000e+00,6.700000000000000000e+02,3.600000000000000000e+02,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:2.000000000000000111e-01,8.000000000000000000e+01,1.800000000000000000e+01,3.000000000000000000e+01,7.500000000000000000e+02,3.780000000000000000e+02,3.000000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:3.000000000000000444e-01,4.600000000000000000e+01,1.000000000000000000e+01,9.000000000000000000e+00,7.960000000000000000e+02,3.880000000000000000e+02,3.900000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:4.000000000000000222e-01,5.600000000000000000e+01,4.000000000000000000e+00,1.300000000000000000e+01,8.520000000000000000e+02,3.920000000000000000e+02,5.200000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:5.000000000000000000e-01,5.400000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,9.060000000000000000e+02,3.920000000000000000e+02,5.200000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:5.999999999999999778e-01,4.200000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,9.480000000000000000e+02,3.920000000000000000e+02,5.200000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:6.999999999999999556e-01,4.000000000000000000e+01,0.000000000000000000e+00,4.000000000000000000e+00,9.880000000000000000e+02,3.920000000000000000e+02,5.600000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:7.999999999999999334e-01,4.200000000000000000e+01,0.000000000000000000e+00,6.000000000000000000e+00,1.030000000000000000e+03,3.920000000000000000e+02,6.200000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:8.999999999999999112e-01,2.000000000000000000e+01,0.000000000000000000e+00,3.000000000000000000e+00,1.050000000000000000e+03,3.920000000000000000e+02,6.500000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/FLIPS:9.999999999999998890e-01,3.000000000000000000e+01,0.000000000000000000e+00,4.000000000000000000e+00,1.080000000000000000e+03,3.920000000000000000e+02,6.900000000000000000e+01
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_hu_Kn0.1/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:0.000000000000000000e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.000000000000000056e-01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.000000000000000111e-01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.000000000000000444e-01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.000000000000000222e-01,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.000000000000000000e-01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.999999999999999778e-01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.999999999999999556e-01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.999999999999999334e-01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.999999999999999112e-01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.999999999999998890e-01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.099999999999999867e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.199999999999999956e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.300000000000000044e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.400000000000000133e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.500000000000000222e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.600000000000000311e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.700000000000000400e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.800000000000000488e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.900000000000000577e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.000000000000000444e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.100000000000000533e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.200000000000000622e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.300000000000000711e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.400000000000000799e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.500000000000000888e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.600000000000000977e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.700000000000001066e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.800000000000001155e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:2.900000000000001243e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.000000000000001332e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.100000000000001421e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.200000000000001510e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.300000000000001599e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.400000000000001688e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.500000000000001776e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.600000000000001865e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.700000000000001954e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.800000000000002043e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:3.900000000000002132e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.000000000000001776e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.100000000000001421e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.200000000000001066e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.300000000000000711e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.400000000000000355e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.500000000000000000e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.599999999999999645e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.699999999999999289e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.799999999999998934e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.899999999999998579e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:4.999999999999998224e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.099999999999997868e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.199999999999997513e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.299999999999997158e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.399999999999996803e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.499999999999996447e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.599999999999996092e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.699999999999995737e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.799999999999995381e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.899999999999995026e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:5.999999999999994671e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.099999999999994316e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.199999999999993960e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.299999999999993605e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.399999999999993250e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.499999999999992895e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.599999999999992539e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.699999999999992184e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.799999999999991829e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.899999999999991473e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:6.999999999999991118e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.099999999999990763e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.199999999999990408e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.299999999999990052e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.399999999999989697e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.499999999999989342e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.599999999999988987e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.699999999999988631e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.799999999999988276e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.899999999999987921e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:7.999999999999987566e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.099999999999987210e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.199999999999986855e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.299999999999986500e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.399999999999986144e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.499999999999985789e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.599999999999985434e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.699999999999985079e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.799999999999984723e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.899999999999984368e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:8.999999999999984013e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.099999999999983658e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.199999999999983302e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.299999999999982947e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.399999999999982592e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.499999999999982236e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.599999999999981881e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.699999999999981526e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.799999999999981171e+00,1.375000000037499837e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.899999999999980815e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:9.999999999999980460e+00,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/MASS_OVER_TIME:1.009999999999998010e+01,1.375000000037500114e-01
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.000000000000000056e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,7.000000000000000000e+00,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.000000000000000111e-01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.200000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.000000000000000444e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.000000000000000222e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.000000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.000000000000000000e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.400000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.999999999999999778e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,2.800000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.999999999999999556e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.200000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.999999999999999334e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.999999999999999112e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,4.000000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.999999999999998890e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,4.400000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.099999999999999867e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,4.800000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.199999999999999956e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,5.200000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.300000000000000044e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,5.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.400000000000000133e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,6.000000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.500000000000000222e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,6.400000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.600000000000000311e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,6.800000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.700000000000000400e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,7.200000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.800000000000000488e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,7.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.900000000000000577e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.000000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.000000000000000444e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,8.300000000000000000e+01,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.100000000000000533e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.700000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.200000000000000622e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,9.200000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,9.700000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.400000000000000799e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.030000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.500000000000000888e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.090000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.600000000000000977e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.140000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.700000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.190000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.800000000000001155e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.250000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.900000000000001243e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.310000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.000000000000001332e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.360000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.410000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.200000000000001510e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.460000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.300000000000001599e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.520000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.400000000000001688e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.580000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.500000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.640000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.600000000000001865e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.690000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.700000000000001954e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.740000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.800000000000002043e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.800000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.900000000000002132e+00,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,1.870000000000000000e+02,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.000000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.930000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.980000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.200000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.030000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.090000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.400000000000000355e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.150000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.500000000000000000e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.200000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.599999999999999645e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.250000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.699999999999999289e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.300000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.799999999999998934e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.360000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.899999999999998579e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.420000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.999999999999998224e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.470000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.099999999999997868e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.520000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.199999999999997513e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.570000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.299999999999997158e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.620000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.399999999999996803e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.670000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.499999999999996447e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.720000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.599999999999996092e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.770000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.699999999999995737e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.820000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.799999999999995381e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.880000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.899999999999995026e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.940000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.999999999999994671e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.990000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.099999999999994316e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.040000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.199999999999993960e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.090000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.299999999999993605e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.150000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.399999999999993250e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.210000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.499999999999992895e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.260000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.599999999999992539e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.310000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.699999999999992184e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.360000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.799999999999991829e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.420000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.899999999999991473e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.480000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.999999999999991118e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.530000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.099999999999990763e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.580000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.199999999999990408e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.630000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.299999999999990052e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.690000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.399999999999989697e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.750000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.499999999999989342e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.810000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.599999999999988987e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.860000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.699999999999988631e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.910000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.799999999999988276e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.960000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.899999999999987921e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.020000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.999999999999987566e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.080000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.099999999999987210e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.130000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.199999999999986855e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.180000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.299999999999986500e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.230000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.399999999999986144e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.290000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.499999999999985789e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.350000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.599999999999985434e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.400000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.699999999999985079e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.450000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.799999999999984723e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.500000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.899999999999984368e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.560000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.999999999999984013e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.610000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.099999999999983658e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.670000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.199999999999983302e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.730000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.299999999999982947e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.780000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.399999999999982592e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.840000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.499999999999982236e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.890000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.599999999999981881e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,4.940000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.699999999999981526e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,5.000000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.799999999999981171e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,5.050000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.899999999999980815e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,5.110000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.999999999999980460e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,5.170000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.009999999999998010e+01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,5.220000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:1.000000000000000056e-01,2.011000000000000000e+03,1.994000000000000000e+03,2.011000000000000000e+03,1.994000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:2.000000000000000111e-01,1.810000000000000000e+03,1.782000000000000000e+03,3.821000000000000000e+03,3.776000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:3.000000000000000444e-01,1.364000000000000000e+03,1.362000000000000000e+03,5.185000000000000000e+03,5.138000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:4.000000000000000222e-01,1.291000000000000000e+03,1.303000000000000000e+03,6.476000000000000000e+03,6.441000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:5.000000000000000000e-01,1.211000000000000000e+03,1.237000000000000000e+03,7.687000000000000000e+03,7.678000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:5.999999999999999778e-01,1.141000000000000000e+03,1.156000000000000000e+03,8.828000000000000000e+03,8.834000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:6.999999999999999556e-01,1.085000000000000000e+03,1.085000000000000000e+03,9.913000000000000000e+03,9.919000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:7.999999999999999334e-01,1.020000000000000000e+03,1.035000000000000000e+03,1.093300000000000000e+04,1.095400000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:8.999999999999999112e-01,9.430000000000000000e+02,9.710000000000000000e+02,1.187600000000000000e+04,1.192500000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:9.999999999999998890e-01,8.860000000000000000e+02,9.080000000000000000e+02,1.276200000000000000e+04,1.283300000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:1.000000000000000056e-01,2.011000000000000000e+03,1.994000000000000000e+03,2.011000000000000000e+03,1.994000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:2.000000000000000111e-01,1.810000000000000000e+03,1.782000000000000000e+03,3.821000000000000000e+03,3.776000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:3.000000000000000444e-01,1.364000000000000000e+03,1.362000000000000000e+03,5.185000000000000000e+03,5.138000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:4.000000000000000222e-01,1.291000000000000000e+03,1.303000000000000000e+03,6.476000000000000000e+03,6.441000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:5.000000000000000000e-01,1.211000000000000000e+03,1.237000000000000000e+03,7.687000000000000000e+03,7.678000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:5.999999999999999778e-01,1.141000000000000000e+03,1.156000000000000000e+03,8.828000000000000000e+03,8.834000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:6.999999999999999556e-01,1.085000000000000000e+03,1.085000000000000000e+03,9.913000000000000000e+03,9.919000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:7.999999999999999334e-01,1.020000000000000000e+03,1.035000000000000000e+03,1.093300000000000000e+04,1.095400000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:8.999999999999999112e-01,9.430000000000000000e+02,9.710000000000000000e+02,1.187600000000000000e+04,1.192500000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:9.999999999999998890e-01,8.860000000000000000e+02,9.080000000000000000e+02,1.276200000000000000e+04,1.283300000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:1.000000000000000056e-01,2.011000000000000000e+03,1.994000000000000000e+03,2.011000000000000000e+03,1.994000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:2.000000000000000111e-01,1.810000000000000000e+03,1.782000000000000000e+03,3.821000000000000000e+03,3.776000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:3.000000000000000444e-01,1.364000000000000000e+03,1.362000000000000000e+03,5.185000000000000000e+03,5.138000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:4.000000000000000222e-01,1.291000000000000000e+03,1.303000000000000000e+03,6.476000000000000000e+03,6.441000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:5.000000000000000000e-01,1.211000000000000000e+03,1.237000000000000000e+03,7.687000000000000000e+03,7.678000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:5.999999999999999778e-01,1.141000000000000000e+03,1.156000000000000000e+03,8.828000000000000000e+03,8.834000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:6.999999999999999556e-01,1.085000000000000000e+03,1.085000000000000000e+03,9.913000000000000000e+03,9.919000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:7.999999999999999334e-01,1.020000000000000000e+03,1.035000000000000000e+03,1.093300000000000000e+04,1.095400000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:8.999999999999999112e-01,9.430000000000000000e+02,9.710000000000000000e+02,1.187600000000000000e+04,1.192500000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:9.999999999999998890e-01,8.860000000000000000e+02,9.080000000000000000e+02,1.276200000000000000e+04,1.283300000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:1.000000000000000056e-01,2.011000000000000000e+03,1.994000000000000000e+03,2.011000000000000000e+03,1.994000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:2.000000000000000111e-01,1.810000000000000000e+03,1.782000000000000000e+03,3.821000000000000000e+03,3.776000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:3.000000000000000444e-01,1.364000000000000000e+03,1.362000000000000000e+03,5.185000000000000000e+03,5.138000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:4.000000000000000222e-01,1.291000000000000000e+03,1.303000000000000000e+03,6.476000000000000000e+03,6.441000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:5.000000000000000000e-01,1.211000000000000000e+03,1.237000000000000000e+03,7.687000000000000000e+03,7.678000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:5.999999999999999778e-01,1.141000000000000000e+03,1.156000000000000000e+03,8.828000000000000000e+03,8.834000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:6.999999999999999556e-01,1.085000000000000000e+03,1.085000000000000000e+03,9.913000000000000000e+03,9.919000000000000000e+03
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:7.999999999999999334e-01,1.020000000000000000e+03,1.035000000000000000e+03,1.093300000000000000e+04,1.095400000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:8.999999999999999112e-01,9.430000000000000000e+02,9.710000000000000000e+02,1.187600000000000000e+04,1.192500000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/FLIPS:9.999999999999998890e-01,8.860000000000000000e+02,9.080000000000000000e+02,1.276200000000000000e+04,1.283300000000000000e+04
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/horizontal_ppu_Kn0.1/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:0.000000000000000000e+00,1.394337567332297745e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.000000000000000042e-02,1.394337567332120109e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:4.000000000000000777e-02,1.394337567332014638e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:6.000000000000001166e-02,1.394337567331961347e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:8.000000000000002942e-02,1.394337567331913330e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.000000000000000472e-01,1.394337567331880579e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.200000000000000649e-01,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.200000000000000844e-01,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:3.200000000000000622e-01,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:4.200000000000000400e-01,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:5.200000000000000178e-01,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:6.199999999999999956e-01,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:7.199999999999999734e-01,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:8.199999999999999512e-01,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:9.199999999999999289e-01,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.020000000000000018e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.120000000000000107e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.220000000000000195e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.320000000000000284e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.420000000000000373e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.520000000000000462e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.620000000000000551e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.720000000000000639e+00,1.394337567331853656e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.820000000000000728e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:1.920000000000000817e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.020000000000000906e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.120000000000000995e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.220000000000001084e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.320000000000001172e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.420000000000001261e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.520000000000001350e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.620000000000001439e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.720000000000001528e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.820000000000001616e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:2.920000000000001705e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:3.020000000000001794e+00,1.394337567331853933e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:3.120000000000001883e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:3.220000000000001972e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:3.320000000000002061e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:3.420000000000002149e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME:3.520000000000002238e+00,1.394337567331854211e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.000000000000000042e-02,2.000000000000000042e-02,1.000000000000000000e+00,1.200000000000000000e+01,1.200000000000000000e+01,1.100000000000000000e+01,1.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:4.000000000000000777e-02,2.000000000000000042e-02,1.000000000000000000e+00,1.000000000000000000e+01,2.200000000000000000e+01,7.000000000000000000e+00,3.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:6.000000000000001166e-02,2.000000000000000042e-02,1.000000000000000000e+00,2.600000000000000000e+01,4.800000000000000000e+01,5.000000000000000000e+00,2.100000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:8.000000000000002942e-02,2.000000000000000042e-02,1.000000000000000000e+00,8.000000000000000000e+00,5.600000000000000000e+01,4.000000000000000000e+00,4.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.000000000000000472e-01,2.000000000000000042e-02,1.000000000000000000e+00,8.000000000000000000e+00,6.400000000000000000e+01,4.000000000000000000e+00,4.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.200000000000000649e-01,2.000000000000000042e-02,1.000000000000000000e+00,7.000000000000000000e+00,7.100000000000000000e+01,4.000000000000000000e+00,3.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.200000000000000844e-01,1.000000000000000056e-01,0.000000000000000000e+00,8.000000000000000000e+00,7.900000000000000000e+01,8.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:3.200000000000000622e-01,1.000000000000000056e-01,0.000000000000000000e+00,8.000000000000000000e+00,8.700000000000000000e+01,8.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:4.200000000000000400e-01,1.000000000000000056e-01,0.000000000000000000e+00,8.000000000000000000e+00,9.500000000000000000e+01,8.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:5.200000000000000178e-01,1.000000000000000056e-01,0.000000000000000000e+00,8.000000000000000000e+00,1.030000000000000000e+02,8.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:6.199999999999999956e-01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.080000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:7.199999999999999734e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.120000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:8.199999999999999512e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.160000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:9.199999999999999289e-01,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.200000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.020000000000000018e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.240000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.120000000000000107e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.270000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.220000000000000195e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.300000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.320000000000000284e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.330000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.420000000000000373e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.360000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.520000000000000462e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.200000000000000000e+01,1.480000000000000000e+02,1.200000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.620000000000000551e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.520000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.720000000000000639e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.560000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.820000000000000728e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.590000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:1.920000000000000817e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.620000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.020000000000000906e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.650000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.120000000000000995e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.680000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.220000000000001084e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.710000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.320000000000001172e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.760000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.420000000000001261e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.790000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.520000000000001350e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.820000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.620000000000001439e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.850000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.720000000000001528e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.880000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.820000000000001616e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.910000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:2.920000000000001705e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.940000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:3.020000000000001794e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.970000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:3.120000000000001883e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.000000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:3.220000000000001972e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.030000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:3.320000000000002061e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.060000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:3.420000000000002149e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.090000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/OUTPUT_NEWTON_INFO:3.520000000000002238e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,2.120000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:2.000000000000000042e-02,1.080000000000000000e+02,2.360000000000000000e+02,2.000000000000000000e+01,1.080000000000000000e+02,2.360000000000000000e+02,2.000000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:4.000000000000000777e-02,3.000000000000000000e+01,4.600000000000000000e+01,1.900000000000000000e+01,1.380000000000000000e+02,2.820000000000000000e+02,3.900000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:6.000000000000001166e-02,2.000000000000000000e+02,1.290000000000000000e+02,1.570000000000000000e+02,3.380000000000000000e+02,4.110000000000000000e+02,1.960000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:8.000000000000002942e-02,5.000000000000000000e+01,3.700000000000000000e+01,5.000000000000000000e+01,3.880000000000000000e+02,4.480000000000000000e+02,2.460000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:1.000000000000000472e-01,5.800000000000000000e+01,2.200000000000000000e+01,2.900000000000000000e+01,4.460000000000000000e+02,4.700000000000000000e+02,2.750000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:1.200000000000000649e-01,2.400000000000000000e+01,4.000000000000000000e+00,3.000000000000000000e+00,4.700000000000000000e+02,4.740000000000000000e+02,2.780000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:2.200000000000000844e-01,4.000000000000000000e+01,0.000000000000000000e+00,6.000000000000000000e+00,5.100000000000000000e+02,4.740000000000000000e+02,2.840000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:3.200000000000000622e-01,1.000000000000000000e+01,2.000000000000000000e+00,0.000000000000000000e+00,5.200000000000000000e+02,4.760000000000000000e+02,2.840000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:4.200000000000000400e-01,1.200000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,5.320000000000000000e+02,4.760000000000000000e+02,2.840000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:5.200000000000000178e-01,8.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,5.400000000000000000e+02,4.760000000000000000e+02,2.840000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:6.199999999999999956e-01,4.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,5.440000000000000000e+02,4.760000000000000000e+02,2.840000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:7.199999999999999734e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,5.440000000000000000e+02,4.760000000000000000e+02,2.840000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:8.199999999999999512e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,5.440000000000000000e+02,4.760000000000000000e+02,2.840000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/FLIPS:9.199999999999999289e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,5.440000000000000000e+02,4.760000000000000000e+02,2.840000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:0.000000000000000000e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.000000000000000042e-02,1.394337567332056826e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.200000000000000094e-01,1.394337567331591365e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.200000000000000289e-01,1.394337567331399297e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.200000000000000622e-01,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.200000000000000400e-01,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.200000000000000178e-01,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.199999999999999956e-01,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.199999999999999734e-01,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.199999999999999512e-01,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.199999999999999289e-01,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.020000000000000018e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.120000000000000107e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.220000000000000195e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.320000000000000284e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.420000000000000373e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.520000000000000462e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.620000000000000551e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.720000000000000639e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.820000000000000728e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.920000000000000817e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.020000000000000906e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.120000000000000995e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.220000000000001084e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.320000000000001172e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.420000000000001261e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.520000000000001350e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.620000000000001439e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.720000000000001528e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.820000000000001616e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:2.920000000000001705e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.020000000000001794e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.120000000000001883e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.220000000000001972e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.320000000000002061e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.420000000000002149e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.520000000000002238e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.620000000000002327e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.720000000000002416e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.820000000000002505e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:3.920000000000002593e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.020000000000002238e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.120000000000001883e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.220000000000001528e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.320000000000001172e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.420000000000000817e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.520000000000000462e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.620000000000000107e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.719999999999999751e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.819999999999999396e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:4.919999999999999041e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.019999999999998685e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.119999999999998330e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.219999999999997975e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.319999999999997620e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.419999999999997264e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.519999999999996909e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.619999999999996554e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.719999999999996199e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.819999999999995843e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:5.919999999999995488e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.019999999999995133e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.119999999999994778e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.219999999999994422e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.319999999999994067e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.419999999999993712e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.519999999999993356e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.619999999999993001e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.719999999999992646e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.819999999999992291e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:6.919999999999991935e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.019999999999991580e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.119999999999991225e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.219999999999990870e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.319999999999990514e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.419999999999990159e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.519999999999989804e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.619999999999989448e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.719999999999989093e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.819999999999988738e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:7.919999999999988383e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.019999999999988916e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.119999999999988560e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.219999999999988205e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.319999999999987850e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.419999999999987494e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.519999999999987139e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.619999999999986784e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.719999999999986429e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.819999999999986073e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:8.919999999999985718e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.019999999999985363e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.119999999999985008e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.219999999999984652e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.319999999999984297e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.419999999999983942e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.519999999999983586e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.619999999999983231e+00,1.394337567331379590e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.719999999999982876e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.819999999999982521e+00,1.394337567331380145e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:9.919999999999982165e+00,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/MASS_OVER_TIME:1.001999999999998181e+01,1.394337567331379868e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.000000000000000042e-02,2.000000000000000042e-02,1.000000000000000000e+00,1.600000000000000000e+01,1.600000000000000000e+01,8.000000000000000000e+00,8.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.200000000000000094e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.200000000000000000e+01,2.800000000000000000e+01,1.200000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.200000000000000289e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,3.500000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.200000000000000622e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.100000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.200000000000000400e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.700000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.200000000000000178e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,5.300000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.199999999999999956e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.000000000000000000e+01,6.300000000000000000e+01,1.000000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.199999999999999734e-01,1.000000000000000056e-01,0.000000000000000000e+00,9.000000000000000000e+00,7.200000000000000000e+01,9.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.199999999999999512e-01,1.000000000000000056e-01,0.000000000000000000e+00,9.000000000000000000e+00,8.100000000000000000e+01,9.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.199999999999999289e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,8.700000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.020000000000000018e+00,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,9.400000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.120000000000000107e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.000000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.220000000000000195e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.060000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.320000000000000284e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,1.120000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.420000000000000373e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.170000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.520000000000000462e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.220000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.620000000000000551e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.260000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.720000000000000639e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.300000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.820000000000000728e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.340000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.920000000000000817e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.370000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.020000000000000906e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.410000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.120000000000000995e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.440000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.220000000000001084e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.470000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.320000000000001172e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.500000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.420000000000001261e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.530000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.520000000000001350e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.560000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.620000000000001439e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.590000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.720000000000001528e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.620000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.820000000000001616e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.650000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:2.920000000000001705e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.680000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.020000000000001794e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.710000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.120000000000001883e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.740000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.220000000000001972e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.770000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.320000000000002061e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.800000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.420000000000002149e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.830000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.520000000000002238e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.860000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.620000000000002327e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.890000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.720000000000002416e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.920000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.820000000000002505e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.950000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:3.920000000000002593e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.980000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.020000000000002238e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.120000000000001883e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.020000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.220000000000001528e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.040000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.320000000000001172e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.060000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.420000000000000817e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.080000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.520000000000000462e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.100000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.620000000000000107e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.120000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.719999999999999751e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.140000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.819999999999999396e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.160000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:4.919999999999999041e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.180000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.019999999999998685e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.200000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.119999999999998330e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.220000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.219999999999997975e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.240000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.319999999999997620e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.260000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.419999999999997264e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.280000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.519999999999996909e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.300000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.619999999999996554e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.320000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.719999999999996199e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.340000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.819999999999995843e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.360000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:5.919999999999995488e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.380000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.019999999999995133e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.400000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.119999999999994778e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.420000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.219999999999994422e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.440000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.319999999999994067e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.460000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.419999999999993712e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.480000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.519999999999993356e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.500000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.619999999999993001e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.520000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.719999999999992646e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.540000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.819999999999992291e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.560000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:6.919999999999991935e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.580000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.019999999999991580e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.600000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.119999999999991225e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.620000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.219999999999990870e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.640000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.319999999999990514e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.660000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.419999999999990159e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.680000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.519999999999989804e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.700000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.619999999999989448e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.720000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.719999999999989093e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.740000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.819999999999988738e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.760000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:7.919999999999988383e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.780000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.019999999999988916e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.800000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.119999999999988560e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.820000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.219999999999988205e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.840000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.319999999999987850e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.860000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.419999999999987494e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.880000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.519999999999987139e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.900000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.619999999999986784e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.920000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.719999999999986429e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.940000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.819999999999986073e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.960000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:8.919999999999985718e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.980000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.019999999999985363e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.000000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.119999999999985008e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.020000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.219999999999984652e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.040000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.319999999999984297e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.060000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.419999999999983942e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.080000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.519999999999983586e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.100000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.619999999999983231e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.120000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.719999999999982876e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.140000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.819999999999982521e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.160000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:9.919999999999982165e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.180000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/OUTPUT_NEWTON_INFO:1.001999999999998181e+01,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.200000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:2.000000000000000042e-02,2.136000000000000000e+03,1.277000000000000000e+03,1.020000000000000000e+02,2.136000000000000000e+03,1.277000000000000000e+03,1.020000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:1.200000000000000094e-01,6.900000000000000000e+02,1.520000000000000000e+02,1.120000000000000000e+02,2.826000000000000000e+03,1.429000000000000000e+03,2.140000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:2.200000000000000289e-01,1.620000000000000000e+02,1.200000000000000000e+01,3.500000000000000000e+01,2.988000000000000000e+03,1.441000000000000000e+03,2.490000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:3.200000000000000622e-01,1.900000000000000000e+02,2.000000000000000000e+01,3.300000000000000000e+01,3.178000000000000000e+03,1.461000000000000000e+03,2.820000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:4.200000000000000400e-01,1.780000000000000000e+02,0.000000000000000000e+00,1.300000000000000000e+01,3.356000000000000000e+03,1.461000000000000000e+03,2.950000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:5.200000000000000178e-01,1.960000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,3.552000000000000000e+03,1.461000000000000000e+03,2.950000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:6.199999999999999956e-01,2.380000000000000000e+02,2.000000000000000000e+00,2.000000000000000000e+00,3.790000000000000000e+03,1.463000000000000000e+03,2.970000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:7.199999999999999734e-01,2.860000000000000000e+02,8.000000000000000000e+00,6.000000000000000000e+00,4.076000000000000000e+03,1.471000000000000000e+03,3.030000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:8.199999999999999512e-01,4.200000000000000000e+02,4.000000000000000000e+00,2.000000000000000000e+00,4.496000000000000000e+03,1.475000000000000000e+03,3.050000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/FLIPS:9.199999999999999289e-01,1.340000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,4.630000000000000000e+03,1.475000000000000000e+03,3.050000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.1/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.1/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.1/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.1/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.1/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.1/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.2/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.2/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.2/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.2/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.2/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.2/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:-4.273133876507033760e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:-5.020866347268712615e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:-2.869908153254844586e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:-1.237308895769188106e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:-5.760049673032903873e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:-1.241558231248434112e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:4.652911541340045733e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:4.573744638732239222e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:3.478625532491735547e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:1.895810886673267521e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:8.826942365827673224e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.2:-3.830802065342055348e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201481993e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201538892e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202347273e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201750528e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997200905024e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997198917725e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997199969661e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997198872969e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201038945e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997198271367e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997200579243e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997199457571e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201543749e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997199653942e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206271912e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997211482327e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997209166818e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997212835064e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208972529e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997213196234e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208248802e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997213680916e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208243945e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997213628527e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208634605e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997210067140e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997210434901e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997210417554e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997210962604e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206341647e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206162624e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206540100e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205973886e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205789311e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208902793e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205595369e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997209087715e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205416346e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997209285820e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205217894e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997209464844e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997204650639e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997207878266e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997203317331e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206366281e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202003798e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206366281e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202009349e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206360729e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202009349e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206347199e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202028431e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997207291929e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997203262513e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206903351e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997203626111e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997204391471e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997203984158e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:4.869547281630503101e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:3.161790635027051928e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:6.698304518710197710e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:9.564901669284088656e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:5.028562638549928521e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:9.809817522107189703e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:1.359167389765804585e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:1.666550278505555139e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:1.921126344279705869e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:2.009812120632303769e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:2.078858918020290696e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:2.162884775106376986e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-3.390218918187054781e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-3.021931404043770066e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-3.852991862177837317e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-5.709480945809980315e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-6.613158650213115178e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-8.701800253513489701e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-1.136347983149797475e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-1.352460424133818118e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-2.074074831854145432e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-1.861358617927591714e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-2.151573166722375429e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.1:-2.299573189458943828e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486474370289e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486464840412e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486466761098e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486520683242e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486520494504e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486515430500e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486495575549e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486504628030e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486498469067e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486485472519e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486490834896e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486487595821e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.02/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.02/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.02/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.02/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.02/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.02/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/MASS_OVER_TIME:0.000000000000000000e+00,1.394337567390357413e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/MASS_OVER_TIME:1.000000000000000048e-04,1.394337567390357413e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/cell_sizes:2.000000000000000111e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/cell_sizes:1.000000000000000056e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/cell_sizes:5.000000000000000278e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/cell_sizes:2.000000000000000042e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/OUTPUT_NEWTON_INFO:1.000000000000000048e-04,1.000000000000000048e-04,0.000000000000000000e+00,3.000000000000000000e+00,3.000000000000000000e+00,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:5.381183671146846535e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:-2.096141036924849396e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:1.941344090237879030e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:3.573943347661279104e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:4.235247276077754551e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:4.687096420214159447e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:-1.583407022926070764e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:-2.375076048327748215e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:-1.332626711012631533e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:-2.915441356762240362e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:-3.928558006804549509e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.2:-5.194332449885439955e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897293920931e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897298744850e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897303591529e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897300019664e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897298393187e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897297844737e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/FLIPS:1.000000000000000048e-04,3.000000000000000000e+01,3.000000000000000000e+01,3.000000000000000000e+01,3.000000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/FLIPS:1.000000000000000048e-04,7.900000000000000000e+01,7.000000000000000000e+01,7.900000000000000000e+01,7.000000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/FLIPS:1.000000000000000048e-04,2.320000000000000000e+02,2.000000000000000000e+02,2.320000000000000000e+02,2.000000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/FLIPS:1.000000000000000048e-04,2.543000000000000000e+03,2.078000000000000000e+03,2.543000000000000000e+03,2.078000000000000000e+03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243237095633e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243237274656e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243232507636e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243232325837e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243232509718e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243234250686e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243259466627e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243261227024e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243260336764e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243260152883e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243256350369e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243259075967e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243248685667e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243246886412e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243252681776e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243251946253e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243250861010e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243247608057e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243242554461e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243242902793e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243245439653e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243245404958e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243245071891e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243242529480e-02
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:2.233073095976932480e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:1.506370043622385041e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:3.333509952545245171e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:1.520354303806840165e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:1.913371035360151304e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:4.764631456772818103e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:3.491250511762678021e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:2.443318570101883766e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:4.778145112737959403e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:3.236011410208677473e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:4.885479835013623647e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:5.718435816352633290e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:6.302832426532048579e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:6.994327778392409826e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:7.637325242941923019e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:8.143068472902314581e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:8.641803115507452546e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.081310267137782805e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.254643840290498538e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.461886020702010283e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.656961489194211112e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.838582136242027439e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.998123879803478154e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:1.017502777726643926e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.162018809221541373e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.131784912354402488e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.186205697119063577e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.285243520494239242e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.473348903539371031e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.776700669050080530e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-3.270759324048654699e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-3.482532770536193867e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-3.786814240112297341e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-4.286744249614340258e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-4.689434282296264952e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-5.198999395518766114e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-5.881001657227649757e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-6.379731898164065287e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-6.256064543117088178e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-8.377064770411330689e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-7.723117260094481155e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-9.093115669155749179e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-1.038646556835271960e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-9.269414374799911718e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-9.450130949064659055e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-1.063520388571771638e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-9.848427187165774508e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.05:-1.023703475257192264e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.918671393659776916e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-2.089447058298516541e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-2.338643076592824156e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.449135954847723942e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.902769857902815529e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.424644369528556493e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.046458731954158202e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-7.390758432040242434e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-4.844997774171157603e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-3.958140010506579079e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-3.267672036539493331e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:-2.427413465570715182e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:2.066604230008319346e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:2.103432981400264572e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:2.020326935567481365e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.834678027198710475e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.744310256740097499e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.535446096392314910e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.269278138574319540e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.053165697580118023e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:3.315512898467452623e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:5.442675037589482642e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:2.540529549558529464e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.060529322082405664e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.05/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.05/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.05/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.05/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.05/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/visualization_0.05/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-9.795057513156406499e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-1.052176056545838043e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-8.694620656481358983e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-1.050777630517351789e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-1.011475957355103573e-03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-7.263499152110110832e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-8.536880097135884568e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-9.584812038747420266e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-7.249985496070910935e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-8.792119198556924524e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-7.142650773699814673e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-6.309694792329866237e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-5.725298182087662632e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-5.033802830189097353e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-4.390805365622261862e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-3.885062135629544812e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-3.386327492993269645e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.946820341327779252e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.773486768136168850e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.566244587699546440e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.371169119188172038e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.189548472115072117e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.030006728527391569e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:-1.853102831033088074e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.866111799937229195e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.896345696754941471e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.841924911929108340e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.742887088504066694e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.554781705410344758e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.251429939855570573e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:8.757371284872041877e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:8.545597838341889227e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:8.241316368718403949e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:7.741386359172976140e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:7.338696326440078766e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:6.829131213185340478e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:6.147128951414029558e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:5.648398710438375667e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:5.772066065468120467e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:3.651065838141188719e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:4.305013348424172113e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:2.935014939329191907e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:1.641665040092642419e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:2.758716233615941295e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:2.577999659337550358e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:1.392926722658217669e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:2.179703421182328880e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.05:1.791095855745474788e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:8.942315950460967577e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.370559122238216221e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.025728164295341467e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.082030234925804334e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.039138003755752841e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.068531370134301849e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.020568625640875794e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.039078352299835844e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:8.624056497977238553e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.168826606177389080e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.191146313663848309e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.086593475645277271e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.096012551732759925e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.018980711155498427e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.489927155507974330e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.239434840007274383e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.599704830496355304e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.949870269927298102e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.580614171430772452e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.750958799291382642e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.613046356227103078e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.006806347768750622e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.790657391134423864e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.117033913631229418e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.058630393060288948e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.048415766109773484e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.393197639673181351e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.322159059682080585e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.427635727931088490e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.813589672514067350e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.652594356764733079e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.926761460265828218e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.748061744714857049e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.805659759037775836e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.150864750435080686e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.040622410951754166e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.328249215752561679e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.189385087917740130e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.439571408724993078e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.261948714380696283e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.422678345562716858e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.438936720697580358e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.460136670081129088e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.728920308152710640e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.589261957947375453e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.758729558631253276e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.804268004795769440e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.754158096096355543e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.741590133148889525e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.790326768646616086e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.809816070113756972e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.878842493557608812e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.984771111814510358e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:4.008202906166101237e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.940256604853932076e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:4.018891605612709308e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.957799841890659309e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.977974290406825113e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-9.169685015029522504e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-9.464839170230850693e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-9.842351325013354497e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-8.975056798486954535e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.213387202847168765e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.252665186882099125e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.120474702231833141e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.064321607055991782e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.114817351142093310e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.110510796130837353e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.206039125368163175e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.289083547866764167e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.279394591743432516e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.251334875348426932e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.291879830128509236e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.364935352691166645e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.429737534797248901e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.547174001724235348e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.455717664358902508e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.880991974332449129e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.688499383363295850e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.053355637129619822e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.839118081812980156e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.163858382032890677e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.940598651779405542e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.038437363133784258e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.440516070515420756e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.285341970631774803e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.631722326115318094e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.423384514756352342e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.489068281422907643e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.715933274735722255e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.672490559266665661e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.687325549397046910e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.978694637046795570e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.879143301569364122e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.176704350243466095e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.039384343546212971e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.259083201269750833e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.293373400773011938e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.634717116720673907e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.514713583041556696e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.375543194982971230e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.568043837960152131e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.674655780129887426e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.752556644216362104e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.796955039778504353e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.808467191331835634e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.791378091543217105e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.695726976001442407e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.905817117643801072e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-4.079771757019419963e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.876194103635424259e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.907015877050727302e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-4.115119160197968913e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.974559640970706320e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-4.124213998416911158e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.880286611495729204e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-4.082925898392377687e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.606598371193687146e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.951429329130045709e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.895127258487002708e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.938019489647597926e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.908626123255982249e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.956588867743394099e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.938079141073220417e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-4.114751843571675121e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.808330887177220972e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.786011179688359286e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.890564017695318519e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.881144941604849430e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.958176782168393738e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.487230337826192818e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.737722653331385699e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.377452662828720267e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.027287223400334831e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.396543321880393347e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.226198694020137691e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.364111137064531090e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.970351145530232811e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.186500102143352575e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.860123579653898454e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.918527100202885998e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.928741727154752649e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.583959853582387103e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.654998433567220639e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.549521765313100992e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.163567820713099073e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.324563136455354859e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.050396032950006938e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.229095748494167419e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.171497734162435695e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.826292742769071648e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.936535082238348535e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.648908277441732005e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.787772405261865325e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.537586084459646870e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.715208778789468482e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.554479147611569773e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.538220772460430501e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.517020823079937052e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.248237184993081532e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.387895535201258954e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.218427934502566592e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.172889488343408149e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.222999397027872118e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.235567359981724087e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.186830724468818831e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.167341423008107671e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.098314999549330568e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-9.923863813021240932e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-9.689545869352301068e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.036900888252724598e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-9.582658874804002595e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.019357651200763782e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:-9.991832026793969249e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:4.060188991947545319e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:4.030673576418964668e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.992922360934029503e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:4.079651813576599430e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.763770290567549455e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.724492306520212569e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.856682791163801088e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.912835886328236640e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.862340142239172394e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.866646697235008286e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.771118367995071976e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.688073945485929287e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.697762901605847869e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.725822617987692865e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.685277663215953767e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.612222140658328954e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.547419958538480041e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.429983491612454468e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.521439828961630799e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.096165518990487853e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.288658109939413443e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.923801856179380826e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.138039411474596386e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.813299111261319827e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.036558841494561823e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.938720130137439262e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.536641422750175213e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.691815522626882814e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.345435167138511571e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.553772978479247006e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.488089211806167518e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.261224218488005892e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.304666933950822361e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.289831943812218793e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.998462856166168347e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.098014191629536608e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.800453142958911401e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.937773149641330199e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.718074291922352221e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.683784092404931436e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.342440376462580430e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.462443910124491082e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.601614298186314247e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.409113655193333268e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.302501713026537786e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.224600848924401809e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.180202453369191948e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.168690301800241922e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.185779401595145029e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.281430517121562274e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.071340375486088564e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:8.973857360953098154e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.100963389487490297e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.070141616058684330e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:8.620383329161934217e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.002597852130652535e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:8.529434946822642496e-05
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.096870881597691394e-04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:0.000000000000000000e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.000000000000000056e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.000000000000000111e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.000000000000000444e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.000000000000000222e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.000000000000000000e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.999999999999999778e-01,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.999999999999999556e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.999999999999999334e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.999999999999999112e-01,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.999999999999998890e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.099999999999999867e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.119999999999999885e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.219999999999999973e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.320000000000000062e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.420000000000000151e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.520000000000000240e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.620000000000000329e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.720000000000000417e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.820000000000000506e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.920000000000000595e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.020000000000000462e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.120000000000000551e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.220000000000000639e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.320000000000000728e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.420000000000000817e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.520000000000000906e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.620000000000000995e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.720000000000001084e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.820000000000001172e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:2.920000000000001261e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.020000000000001350e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.120000000000001439e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.220000000000001528e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.320000000000001616e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.420000000000001705e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.520000000000001794e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.620000000000001883e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.720000000000001972e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.820000000000002061e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:3.920000000000002149e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.020000000000002238e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.120000000000001883e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.220000000000001528e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.320000000000001172e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.420000000000000817e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.520000000000000462e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.620000000000000107e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.719999999999999751e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.819999999999999396e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:4.919999999999999041e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.019999999999998685e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.119999999999998330e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.219999999999997975e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.319999999999997620e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.419999999999997264e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.519999999999996909e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.619999999999996554e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.719999999999996199e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.819999999999995843e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:5.919999999999995488e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.019999999999995133e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.119999999999994778e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.219999999999994422e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.319999999999994067e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.419999999999993712e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.519999999999993356e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.619999999999993001e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.719999999999992646e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.819999999999992291e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:6.919999999999991935e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.019999999999991580e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.119999999999991225e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.219999999999990870e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.319999999999990514e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.419999999999990159e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.519999999999989804e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.619999999999989448e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.719999999999989093e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.819999999999988738e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:7.919999999999988383e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.019999999999988916e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.119999999999988560e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.219999999999988205e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.319999999999987850e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.419999999999987494e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.519999999999987139e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.619999999999986784e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.719999999999986429e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.819999999999986073e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:8.919999999999985718e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.019999999999985363e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.119999999999985008e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.219999999999984652e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.319999999999984297e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.419999999999983942e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.519999999999983586e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.619999999999983231e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.719999999999982876e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.819999999999982521e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:9.919999999999982165e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/MASS_OVER_TIME:1.001999999999998181e+01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.000000000000000056e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.600000000000000000e+01,1.600000000000000000e+01,1.600000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.000000000000000111e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,2.300000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.000000000000000444e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,3.000000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.000000000000000222e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,3.700000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.000000000000000000e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.300000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.999999999999999778e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.100000000000000000e+01,5.400000000000000000e+01,1.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.999999999999999556e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.100000000000000000e+01,6.500000000000000000e+01,1.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.999999999999999334e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.100000000000000000e+01,7.600000000000000000e+01,1.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.999999999999999112e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.100000000000000000e+01,8.700000000000000000e+01,1.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.999999999999998890e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.200000000000000000e+01,9.900000000000000000e+01,1.200000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.099999999999999867e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.100000000000000000e+01,1.100000000000000000e+02,1.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.119999999999999885e+00,2.000000000000000042e-02,1.000000000000000000e+00,2.500000000000000000e+01,1.350000000000000000e+02,4.000000000000000000e+00,2.100000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.219999999999999973e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.200000000000000000e+01,1.470000000000000000e+02,1.200000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.320000000000000062e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.200000000000000000e+01,1.590000000000000000e+02,1.200000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.420000000000000151e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.100000000000000000e+01,1.700000000000000000e+02,1.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.520000000000000240e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.000000000000000000e+01,1.800000000000000000e+02,1.000000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.620000000000000329e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.000000000000000000e+01,1.900000000000000000e+02,1.000000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.720000000000000417e+00,1.000000000000000056e-01,0.000000000000000000e+00,9.000000000000000000e+00,1.990000000000000000e+02,9.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.820000000000000506e+00,1.000000000000000056e-01,0.000000000000000000e+00,9.000000000000000000e+00,2.080000000000000000e+02,9.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.920000000000000595e+00,1.000000000000000056e-01,0.000000000000000000e+00,8.000000000000000000e+00,2.160000000000000000e+02,8.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.020000000000000462e+00,1.000000000000000056e-01,0.000000000000000000e+00,9.000000000000000000e+00,2.250000000000000000e+02,9.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.120000000000000551e+00,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,2.320000000000000000e+02,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.220000000000000639e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.380000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.320000000000000728e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.440000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.420000000000000817e+00,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,2.510000000000000000e+02,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.520000000000000906e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.560000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.620000000000000995e+00,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,2.630000000000000000e+02,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.720000000000001084e+00,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,2.700000000000000000e+02,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.820000000000001172e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.750000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.920000000000001261e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.800000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.020000000000001350e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.860000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.120000000000001439e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.920000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.220000000000001528e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,2.970000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.320000000000001616e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.010000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.420000000000001705e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.050000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.520000000000001794e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.090000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.620000000000001883e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.130000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.720000000000001972e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.180000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.820000000000002061e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.220000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.920000000000002149e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.260000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.020000000000002238e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.310000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.120000000000001883e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.360000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.220000000000001528e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,3.410000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.320000000000001172e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.440000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.420000000000000817e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.470000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.520000000000000462e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.500000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.620000000000000107e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.530000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.719999999999999751e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.560000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.819999999999999396e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.600000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.919999999999999041e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.640000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.019999999999998685e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.670000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.119999999999998330e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.700000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.219999999999997975e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.730000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.319999999999997620e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.760000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.419999999999997264e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.790000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.519999999999996909e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.820000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.619999999999996554e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.850000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.719999999999996199e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.880000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.819999999999995843e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.910000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.919999999999995488e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.940000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.019999999999995133e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.980000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.119999999999994778e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.010000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.219999999999994422e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.040000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.319999999999994067e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.070000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.419999999999993712e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.100000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.519999999999993356e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,4.140000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.619999999999993001e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.170000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.719999999999992646e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.200000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.819999999999992291e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.230000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.919999999999991935e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.260000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.019999999999991580e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.290000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.119999999999991225e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.320000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.219999999999990870e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.350000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.319999999999990514e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.380000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.419999999999990159e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.410000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.519999999999989804e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.440000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.619999999999989448e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,4.470000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.719999999999989093e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.490000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.819999999999988738e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.510000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.919999999999988383e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.530000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.019999999999988916e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.550000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.119999999999988560e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.570000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.219999999999988205e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.590000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.319999999999987850e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.610000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.419999999999987494e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.630000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.519999999999987139e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.650000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.619999999999986784e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.670000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.719999999999986429e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.690000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.819999999999986073e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.710000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.919999999999985718e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.730000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.019999999999985363e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.750000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.119999999999985008e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.770000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.219999999999984652e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.790000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.319999999999984297e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.810000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.419999999999983942e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.830000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.519999999999983586e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.850000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.619999999999983231e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.870000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.719999999999982876e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.890000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.819999999999982521e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.910000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.919999999999982165e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.930000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.001999999999998181e+01,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.950000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:1.000000000000000056e-01,5.496000000000000000e+03,5.220000000000000000e+03,5.496000000000000000e+03,5.220000000000000000e+03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:2.000000000000000111e-01,1.905000000000000000e+03,1.893000000000000000e+03,7.401000000000000000e+03,7.113000000000000000e+03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:3.000000000000000444e-01,1.598000000000000000e+03,1.584000000000000000e+03,8.999000000000000000e+03,8.697000000000000000e+03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:4.000000000000000222e-01,1.344000000000000000e+03,1.340000000000000000e+03,1.034300000000000000e+04,1.003700000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:5.000000000000000000e-01,9.890000000000000000e+02,9.720000000000000000e+02,1.133200000000000000e+04,1.100900000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:5.999999999999999778e-01,1.649000000000000000e+03,1.627000000000000000e+03,1.298100000000000000e+04,1.263600000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:6.999999999999999556e-01,1.590000000000000000e+03,1.541000000000000000e+03,1.457100000000000000e+04,1.417700000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:7.999999999999999334e-01,1.648000000000000000e+03,1.608000000000000000e+03,1.621900000000000000e+04,1.578500000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:8.999999999999999112e-01,1.694000000000000000e+03,1.633000000000000000e+03,1.791300000000000000e+04,1.741800000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/FLIPS:9.999999999999998890e-01,1.900000000000000000e+03,1.819000000000000000e+03,1.981300000000000000e+04,1.923700000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn0.1/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:0.000000000000000000e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.000000000000000042e-02,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.200000000000000094e-01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.200000000000000289e-01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.200000000000000622e-01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.200000000000000400e-01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.200000000000000178e-01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.199999999999999956e-01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.199999999999999734e-01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.199999999999999512e-01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.199999999999999289e-01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.020000000000000018e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.120000000000000107e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.220000000000000195e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.320000000000000284e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.420000000000000373e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.520000000000000462e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.620000000000000551e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.720000000000000639e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.820000000000000728e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.920000000000000817e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.020000000000000906e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.120000000000000995e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.220000000000001084e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.320000000000001172e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.420000000000001261e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.520000000000001350e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.620000000000001439e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.720000000000001528e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.820000000000001616e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:2.920000000000001705e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.020000000000001794e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.120000000000001883e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.220000000000001972e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.320000000000002061e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.420000000000002149e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.520000000000002238e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.620000000000002327e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.720000000000002416e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.820000000000002505e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:3.920000000000002593e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.020000000000002238e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.120000000000001883e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.220000000000001528e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.320000000000001172e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.420000000000000817e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.520000000000000462e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.620000000000000107e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.719999999999999751e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.819999999999999396e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:4.919999999999999041e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.019999999999998685e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.119999999999998330e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.219999999999997975e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.319999999999997620e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.419999999999997264e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.519999999999996909e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.619999999999996554e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.719999999999996199e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.819999999999995843e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:5.919999999999995488e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.019999999999995133e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.119999999999994778e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.219999999999994422e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.319999999999994067e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.419999999999993712e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.519999999999993356e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.619999999999993001e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.719999999999992646e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.819999999999992291e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:6.919999999999991935e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.019999999999991580e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.119999999999991225e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.219999999999990870e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.319999999999990514e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.419999999999990159e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.519999999999989804e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.619999999999989448e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.719999999999989093e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.819999999999988738e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:7.919999999999988383e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.019999999999988916e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.119999999999988560e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.219999999999988205e+00,1.337500000034312908e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.319999999999987850e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.419999999999987494e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.519999999999987139e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.619999999999986784e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.719999999999986429e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.819999999999986073e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:8.919999999999985718e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.019999999999985363e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.119999999999985008e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.219999999999984652e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.319999999999984297e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.419999999999983942e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.519999999999983586e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.619999999999983231e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.719999999999982876e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.819999999999982521e+00,1.337500000034312631e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:9.919999999999982165e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/MASS_OVER_TIME:1.001999999999998181e+01,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.000000000000000042e-02,2.000000000000000042e-02,1.000000000000000000e+00,1.000000000000000000e+01,1.000000000000000000e+01,6.000000000000000000e+00,4.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.200000000000000094e-01,1.000000000000000056e-01,0.000000000000000000e+00,8.000000000000000000e+00,1.800000000000000000e+01,8.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.200000000000000289e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,2.500000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.200000000000000622e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.000000000000000000e+01,3.500000000000000000e+01,1.000000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.200000000000000400e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.100000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.200000000000000178e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,4.800000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.199999999999999956e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,5.500000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.199999999999999734e-01,1.000000000000000056e-01,0.000000000000000000e+00,9.000000000000000000e+00,6.400000000000000000e+01,9.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.199999999999999512e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.100000000000000000e+01,7.500000000000000000e+01,1.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.199999999999999289e-01,1.000000000000000056e-01,0.000000000000000000e+00,9.000000000000000000e+00,8.400000000000000000e+01,9.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.020000000000000018e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,9.000000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.120000000000000107e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,9.500000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.220000000000000195e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.000000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.320000000000000284e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.050000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.420000000000000373e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.090000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.520000000000000462e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.130000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.620000000000000551e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.170000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.720000000000000639e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.210000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.820000000000000728e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.250000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.920000000000000817e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.290000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.020000000000000906e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.330000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.120000000000000995e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.360000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.220000000000001084e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.390000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.320000000000001172e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.420000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.420000000000001261e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.450000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.520000000000001350e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.480000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.620000000000001439e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.510000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.720000000000001528e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.540000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.820000000000001616e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.570000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:2.920000000000001705e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.600000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.020000000000001794e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.630000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.120000000000001883e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.660000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.220000000000001972e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.690000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.320000000000002061e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.720000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.420000000000002149e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.750000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.520000000000002238e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.780000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.620000000000002327e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.810000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.720000000000002416e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.840000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.820000000000002505e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.870000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:3.920000000000002593e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.900000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.020000000000002238e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.930000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.120000000000001883e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.950000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.220000000000001528e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.970000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.320000000000001172e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.990000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.420000000000000817e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.010000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.520000000000000462e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.030000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.620000000000000107e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.050000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.719999999999999751e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.070000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.819999999999999396e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.090000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:4.919999999999999041e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.110000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.019999999999998685e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.130000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.119999999999998330e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.150000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.219999999999997975e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.170000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.319999999999997620e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.190000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.419999999999997264e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.210000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.519999999999996909e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.230000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.619999999999996554e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.250000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.719999999999996199e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.270000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.819999999999995843e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.290000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:5.919999999999995488e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.310000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.019999999999995133e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.330000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.119999999999994778e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.350000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.219999999999994422e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.370000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.319999999999994067e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.390000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.419999999999993712e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.410000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.519999999999993356e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.430000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.619999999999993001e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.450000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.719999999999992646e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.470000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.819999999999992291e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.490000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:6.919999999999991935e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.510000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.019999999999991580e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.530000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.119999999999991225e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.550000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.219999999999990870e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.570000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.319999999999990514e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.590000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.419999999999990159e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.610000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.519999999999989804e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.630000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.619999999999989448e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.650000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.719999999999989093e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.670000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.819999999999988738e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.690000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:7.919999999999988383e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.710000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.019999999999988916e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.730000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.119999999999988560e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.750000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.219999999999988205e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.770000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.319999999999987850e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.790000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.419999999999987494e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.810000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.519999999999987139e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.830000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.619999999999986784e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.850000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.719999999999986429e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.870000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.819999999999986073e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.890000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:8.919999999999985718e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.910000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.019999999999985363e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.930000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.119999999999985008e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.950000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.219999999999984652e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.970000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.319999999999984297e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.990000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.419999999999983942e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.010000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.519999999999983586e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.030000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.619999999999983231e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.050000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.719999999999982876e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.070000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.819999999999982521e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.090000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:9.919999999999982165e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.110000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/OUTPUT_NEWTON_INFO:1.001999999999998181e+01,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.130000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:2.000000000000000042e-02,1.505000000000000000e+03,2.569000000000000000e+03,1.505000000000000000e+03,2.569000000000000000e+03
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:1.200000000000000094e-01,1.465000000000000000e+03,2.277000000000000000e+03,2.970000000000000000e+03,4.846000000000000000e+03
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:2.200000000000000289e-01,1.180000000000000000e+03,1.374000000000000000e+03,4.150000000000000000e+03,6.220000000000000000e+03
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:3.200000000000000622e-01,1.576000000000000000e+03,1.962000000000000000e+03,5.726000000000000000e+03,8.182000000000000000e+03
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:4.200000000000000400e-01,8.470000000000000000e+02,1.089000000000000000e+03,6.573000000000000000e+03,9.271000000000000000e+03
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:5.200000000000000178e-01,9.470000000000000000e+02,1.187000000000000000e+03,7.520000000000000000e+03,1.045800000000000000e+04
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:6.199999999999999956e-01,8.990000000000000000e+02,1.106000000000000000e+03,8.419000000000000000e+03,1.156400000000000000e+04
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:7.199999999999999734e-01,1.164000000000000000e+03,1.307000000000000000e+03,9.583000000000000000e+03,1.287100000000000000e+04
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:8.199999999999999512e-01,1.521000000000000000e+03,1.679000000000000000e+03,1.110400000000000000e+04,1.455000000000000000e+04
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/FLIPS:9.199999999999999289e-01,1.351000000000000000e+03,1.518000000000000000e+03,1.245500000000000000e+04,1.606800000000000000e+04
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_ppu_Kn0.1/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:0.000000000000000000e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.000000000000000056e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.000000000000000111e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.000000000000000444e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.000000000000000222e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.000000000000000000e-01,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.999999999999999778e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.999999999999999556e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.999999999999999334e-01,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.999999999999999112e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.999999999999998890e-01,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.099999999999999867e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.199999999999999956e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.300000000000000044e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.400000000000000133e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.500000000000000222e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.600000000000000311e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.700000000000000400e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.800000000000000488e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.900000000000000577e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.000000000000000444e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.100000000000000533e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.200000000000000622e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.300000000000000711e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.400000000000000799e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.500000000000000888e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.600000000000000977e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.700000000000001066e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.800000000000001155e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:2.900000000000001243e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.000000000000001332e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.100000000000001421e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.200000000000001510e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.300000000000001599e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.400000000000001688e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.500000000000001776e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.600000000000001865e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.700000000000001954e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.800000000000002043e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:3.900000000000002132e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.000000000000001776e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.100000000000001421e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.200000000000001066e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.300000000000000711e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.400000000000000355e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.500000000000000000e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.599999999999999645e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.699999999999999289e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.799999999999998934e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.899999999999998579e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:4.999999999999998224e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.099999999999997868e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.199999999999997513e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.299999999999997158e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.399999999999996803e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.499999999999996447e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.599999999999996092e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.699999999999995737e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.799999999999995381e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.899999999999995026e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:5.999999999999994671e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.099999999999994316e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.199999999999993960e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.299999999999993605e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.399999999999993250e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.499999999999992895e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.599999999999992539e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.699999999999992184e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.799999999999991829e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.899999999999991473e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:6.999999999999991118e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.099999999999990763e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.199999999999990408e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.299999999999990052e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.399999999999989697e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.499999999999989342e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.599999999999988987e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.699999999999988631e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.799999999999988276e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.899999999999987921e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:7.999999999999987566e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.099999999999987210e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.199999999999986855e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.299999999999986500e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.399999999999986144e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.499999999999985789e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.599999999999985434e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.699999999999985079e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.799999999999984723e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.899999999999984368e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:8.999999999999984013e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.099999999999983658e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.199999999999983302e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.299999999999982947e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.399999999999982592e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.499999999999982236e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.599999999999981881e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.699999999999981526e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.799999999999981171e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.899999999999980815e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:9.999999999999980460e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/MASS_OVER_TIME:1.009999999999998010e+01,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.000000000000000056e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.900000000000000000e+01,1.900000000000000000e+01,1.900000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.000000000000000111e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.500000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.000000000000000444e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.100000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.000000000000000222e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.700000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.000000000000000000e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.300000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.999999999999999778e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.900000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.999999999999999556e-01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,5.400000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.999999999999999334e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.000000000000000000e+01,6.400000000000000000e+01,1.000000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.999999999999999112e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.100000000000000000e+01,7.500000000000000000e+01,1.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.999999999999998890e-01,1.000000000000000056e-01,0.000000000000000000e+00,8.000000000000000000e+00,8.300000000000000000e+01,8.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.099999999999999867e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,8.900000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.199999999999999956e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,9.400000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.300000000000000044e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,9.900000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.400000000000000133e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,1.040000000000000000e+02,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.500000000000000222e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.080000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.600000000000000311e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.120000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.700000000000000400e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.160000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.800000000000000488e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.200000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.900000000000000577e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.240000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.000000000000000444e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.270000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.100000000000000533e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.310000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.200000000000000622e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.350000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.380000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.400000000000000799e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.410000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.500000000000000888e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.440000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.600000000000000977e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.470000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.700000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.500000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.800000000000001155e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.530000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:2.900000000000001243e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.560000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.000000000000001332e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.590000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.620000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.200000000000001510e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.650000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.300000000000001599e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.680000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.400000000000001688e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.710000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.500000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.740000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.600000000000001865e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.770000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.700000000000001954e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.800000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.800000000000002043e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.830000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:3.900000000000002132e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.860000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.000000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.890000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.910000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.200000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.930000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.950000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.400000000000000355e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.970000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.500000000000000000e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.990000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.599999999999999645e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.010000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.699999999999999289e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.030000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.799999999999998934e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.050000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.899999999999998579e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.070000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:4.999999999999998224e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.090000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.099999999999997868e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.110000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.199999999999997513e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.130000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.299999999999997158e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.150000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.399999999999996803e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.170000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.499999999999996447e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.190000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.599999999999996092e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.210000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.699999999999995737e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.230000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.799999999999995381e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.250000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.899999999999995026e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.270000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:5.999999999999994671e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.290000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.099999999999994316e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.310000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.199999999999993960e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.330000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.299999999999993605e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.350000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.399999999999993250e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.370000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.499999999999992895e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.390000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.599999999999992539e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.410000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.699999999999992184e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.430000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.799999999999991829e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.450000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.899999999999991473e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.470000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:6.999999999999991118e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.490000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.099999999999990763e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.510000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.199999999999990408e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.530000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.299999999999990052e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.550000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.399999999999989697e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.570000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.499999999999989342e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.590000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.599999999999988987e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.610000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.699999999999988631e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.630000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.799999999999988276e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.650000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.899999999999987921e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.670000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:7.999999999999987566e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.690000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.099999999999987210e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.710000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.199999999999986855e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.730000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.299999999999986500e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.750000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.399999999999986144e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.770000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.499999999999985789e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.790000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.599999999999985434e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.810000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.699999999999985079e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.830000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.799999999999984723e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.850000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.899999999999984368e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.870000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:8.999999999999984013e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.890000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.099999999999983658e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.910000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.199999999999983302e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.930000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.299999999999982947e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.950000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.399999999999982592e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.970000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.499999999999982236e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.990000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.599999999999981881e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.010000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.699999999999981526e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.030000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.799999999999981171e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.050000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.899999999999980815e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.070000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:9.999999999999980460e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.090000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/OUTPUT_NEWTON_INFO:1.009999999999998010e+01,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.110000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:1.000000000000000056e-01,6.618000000000000000e+03,6.256000000000000000e+03,6.618000000000000000e+03,6.256000000000000000e+03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:2.000000000000000111e-01,1.753000000000000000e+03,1.731000000000000000e+03,8.371000000000000000e+03,7.987000000000000000e+03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:3.000000000000000444e-01,1.484000000000000000e+03,1.456000000000000000e+03,9.855000000000000000e+03,9.443000000000000000e+03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:4.000000000000000222e-01,1.186000000000000000e+03,1.173000000000000000e+03,1.104100000000000000e+04,1.061600000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:5.000000000000000000e-01,9.280000000000000000e+02,9.150000000000000000e+02,1.196900000000000000e+04,1.153100000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:5.999999999999999778e-01,6.900000000000000000e+02,6.620000000000000000e+02,1.265900000000000000e+04,1.219300000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:6.999999999999999556e-01,4.560000000000000000e+02,4.340000000000000000e+02,1.311500000000000000e+04,1.262700000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:7.999999999999999334e-01,8.840000000000000000e+02,8.670000000000000000e+02,1.399900000000000000e+04,1.349400000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:8.999999999999999112e-01,1.190000000000000000e+03,1.185000000000000000e+03,1.518900000000000000e+04,1.467900000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/FLIPS:9.999999999999998890e-01,1.001000000000000000e+03,9.690000000000000000e+02,1.619000000000000000e+04,1.564800000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn1.0/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:0.000000000000000000e+00,1.337500000034312353e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.000000000000000056e-01,1.337500000034291814e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.000000000000000111e-01,1.337500000034284597e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.000000000000000444e-01,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.000000000000000222e-01,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.000000000000000000e-01,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.999999999999999778e-01,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.999999999999999556e-01,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.999999999999999334e-01,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.999999999999999112e-01,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.999999999999998890e-01,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.099999999999999867e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.199999999999999956e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.300000000000000044e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.400000000000000133e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.500000000000000222e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.600000000000000311e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.700000000000000400e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.800000000000000488e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.900000000000000577e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.000000000000000444e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.100000000000000533e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.200000000000000622e+00,1.337500000034282654e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.300000000000000711e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.400000000000000799e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.500000000000000888e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.600000000000000977e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.700000000000001066e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.800000000000001155e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:2.900000000000001243e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.000000000000001332e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.100000000000001421e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.200000000000001510e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.300000000000001599e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.400000000000001688e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.500000000000001776e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.600000000000001865e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.700000000000001954e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.800000000000002043e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:3.900000000000002132e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.000000000000001776e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.100000000000001421e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.200000000000001066e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.300000000000000711e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.400000000000000355e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.500000000000000000e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.599999999999999645e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.699999999999999289e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.799999999999998934e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.899999999999998579e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:4.999999999999998224e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.099999999999997868e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.199999999999997513e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.299999999999997158e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.399999999999996803e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.499999999999996447e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.599999999999996092e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.699999999999995737e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.799999999999995381e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.899999999999995026e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:5.999999999999994671e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.099999999999994316e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.199999999999993960e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.299999999999993605e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.399999999999993250e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.499999999999992895e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.599999999999992539e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.699999999999992184e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.799999999999991829e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.899999999999991473e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:6.999999999999991118e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.099999999999990763e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.199999999999990408e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.299999999999990052e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.399999999999989697e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.499999999999989342e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.599999999999988987e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.699999999999988631e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.799999999999988276e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.899999999999987921e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:7.999999999999987566e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.099999999999987210e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.199999999999986855e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.299999999999986500e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.399999999999986144e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.499999999999985789e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.599999999999985434e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.699999999999985079e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.799999999999984723e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.899999999999984368e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:8.999999999999984013e+00,1.337500000034282654e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.099999999999983658e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.199999999999983302e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.299999999999982947e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.399999999999982592e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.499999999999982236e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.599999999999981881e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.699999999999981526e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.799999999999981171e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.899999999999980815e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:9.999999999999980460e+00,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/MASS_OVER_TIME:1.009999999999998010e+01,1.337500000034282932e-01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.000000000000000056e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.500000000000000000e+01,1.500000000000000000e+01,1.500000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.000000000000000111e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.100000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.000000000000000444e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.700000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.000000000000000222e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.300000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.000000000000000000e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.900000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.999999999999999778e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.500000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.999999999999999556e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,5.100000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.999999999999999334e-01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,5.600000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.999999999999999112e-01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,6.100000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.999999999999998890e-01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,6.600000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.099999999999999867e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,7.100000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.199999999999999956e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,7.500000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.300000000000000044e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,7.900000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.400000000000000133e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.300000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.500000000000000222e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.700000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.600000000000000311e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,9.100000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.700000000000000400e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,9.500000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.800000000000000488e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,9.900000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.900000000000000577e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.030000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.000000000000000444e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.070000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.100000000000000533e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.100000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.200000000000000622e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.130000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.160000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.400000000000000799e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.190000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.500000000000000888e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.220000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.600000000000000977e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.250000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.700000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.280000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.800000000000001155e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.310000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.900000000000001243e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.340000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.000000000000001332e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.370000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.400000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.200000000000001510e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.430000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.300000000000001599e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.460000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.400000000000001688e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.490000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.500000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.520000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.600000000000001865e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.550000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.700000000000001954e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.580000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.800000000000002043e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.610000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.900000000000002132e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.640000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.000000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.670000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.690000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.200000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.710000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.730000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.400000000000000355e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.750000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.500000000000000000e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.770000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.599999999999999645e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.790000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.699999999999999289e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.810000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.799999999999998934e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.830000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.899999999999998579e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.850000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.999999999999998224e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.870000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.099999999999997868e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.890000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.199999999999997513e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.910000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.299999999999997158e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.930000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.399999999999996803e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.950000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.499999999999996447e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.970000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.599999999999996092e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.990000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.699999999999995737e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.010000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.799999999999995381e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.030000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.899999999999995026e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.050000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:5.999999999999994671e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.070000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.099999999999994316e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.090000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.199999999999993960e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.110000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.299999999999993605e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.130000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.399999999999993250e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.150000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.499999999999992895e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.170000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.599999999999992539e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.190000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.699999999999992184e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.210000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.799999999999991829e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.230000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.899999999999991473e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.250000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:6.999999999999991118e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.270000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.099999999999990763e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.290000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.199999999999990408e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.310000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.299999999999990052e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.330000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.399999999999989697e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.350000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.499999999999989342e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.370000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.599999999999988987e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.390000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.699999999999988631e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.410000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.799999999999988276e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.430000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.899999999999987921e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.450000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:7.999999999999987566e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.470000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.099999999999987210e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.490000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.199999999999986855e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.510000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.299999999999986500e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.530000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.399999999999986144e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.550000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.499999999999985789e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.570000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.599999999999985434e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.590000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.699999999999985079e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.610000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.799999999999984723e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.630000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.899999999999984368e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.650000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:8.999999999999984013e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.670000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.099999999999983658e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.690000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.199999999999983302e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.710000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.299999999999982947e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.730000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.399999999999982592e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.750000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.499999999999982236e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.770000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.599999999999981881e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.790000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.699999999999981526e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.810000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.799999999999981171e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.830000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.899999999999980815e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.850000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:9.999999999999980460e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.870000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.009999999999998010e+01,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.890000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:1.000000000000000056e-01,1.748000000000000000e+03,7.690000000000000000e+02,7.800000000000000000e+01,1.748000000000000000e+03,7.690000000000000000e+02,7.800000000000000000e+01
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:2.000000000000000111e-01,3.920000000000000000e+02,8.000000000000000000e+00,2.400000000000000000e+01,2.140000000000000000e+03,7.770000000000000000e+02,1.020000000000000000e+02
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:3.000000000000000444e-01,3.760000000000000000e+02,4.000000000000000000e+00,2.100000000000000000e+01,2.516000000000000000e+03,7.810000000000000000e+02,1.230000000000000000e+02
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:4.000000000000000222e-01,3.160000000000000000e+02,4.000000000000000000e+00,1.100000000000000000e+01,2.832000000000000000e+03,7.850000000000000000e+02,1.340000000000000000e+02
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:5.000000000000000000e-01,2.760000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,3.108000000000000000e+03,7.850000000000000000e+02,1.340000000000000000e+02
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:5.999999999999999778e-01,2.360000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,3.344000000000000000e+03,7.850000000000000000e+02,1.340000000000000000e+02
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:6.999999999999999556e-01,1.100000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,3.454000000000000000e+03,7.850000000000000000e+02,1.340000000000000000e+02
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:7.999999999999999334e-01,4.400000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,3.498000000000000000e+03,7.850000000000000000e+02,1.340000000000000000e+02
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:8.999999999999999112e-01,1.060000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,3.604000000000000000e+03,7.850000000000000000e+02,1.340000000000000000e+02
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/FLIPS:9.999999999999998890e-01,1.580000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,3.762000000000000000e+03,7.850000000000000000e+02,1.340000000000000000e+02
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/vertical_hu_Kn0.1/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.1/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.1/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.1/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.1/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.1/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.1/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.2/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.2/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.2/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.2/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.2/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.2/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:-4.322567823621765656e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:-5.176301486661320957e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:-2.967045850420083064e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:-8.151503236609574645e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:-3.883272281926872910e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:-2.888739094800644308e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:4.453548617232819425e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:4.189439184267955592e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:3.007155212012398594e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:2.006114002353400708e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:1.373900976478802495e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.2:-3.625152975506039149e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201481993e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201538892e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202347273e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201750528e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997200905024e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997198917725e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997199969661e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997198872969e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201038945e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997198271367e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997200579243e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997199457571e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997201543749e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997199653942e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206271912e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997211482327e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997209166818e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997212835064e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208972529e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997213196234e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208248802e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997213680916e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208243945e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997213628527e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208634605e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997210067140e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997210434901e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997210417554e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997210962604e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206341647e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206162624e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206540100e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205973886e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205789311e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997208902793e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205595369e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997209087715e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205416346e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997209285820e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997205217894e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997209464844e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997204650639e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997207878266e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997203317331e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206366281e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202003798e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206366281e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202009349e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206360729e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202009349e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206347199e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997202028431e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997207291929e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997203262513e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997206903351e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997203626111e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997204391471e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.02:1.990862997203984158e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:4.665091169073829055e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:2.899782880089676212e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:2.763856706356447251e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:8.947707071005554357e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:4.715214869398093572e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:9.787626360635039418e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:1.383647955187799952e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:1.711436618761062994e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:1.986128504218573777e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:2.056439542780700343e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:2.092672751540416119e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:2.165740794105212776e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-3.754062828576318518e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-3.496188807953184616e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-4.512035540276231049e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-6.464795984396859777e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-7.299698787398733102e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-8.893710738532116522e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-1.070023366682272895e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-1.212902013388797743e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-1.975659286285513360e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-1.796631155639064493e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-2.135412110670353251e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.1:-2.313522226550569685e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486474370289e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486464840412e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486466761098e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486520683242e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486520494504e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486515430500e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486495575549e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486504628030e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486498469067e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486485472519e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486490834896e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.1:9.622504486487595821e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.02/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.02/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.02/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.02/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.02/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.02/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/MASS_OVER_TIME:0.000000000000000000e+00,1.394337567390357413e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/MASS_OVER_TIME:1.000000000000000048e-04,1.394337567390357413e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/cell_sizes:2.000000000000000111e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/cell_sizes:1.000000000000000056e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/cell_sizes:5.000000000000000278e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/cell_sizes:2.000000000000000042e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/OUTPUT_NEWTON_INFO:1.000000000000000048e-04,1.000000000000000048e-04,0.000000000000000000e+00,3.000000000000000000e+00,3.000000000000000000e+00,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:4.886844200040195993e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:-3.650492430806548286e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:1.844206393075550118e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:3.996101919769691133e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:4.422925015184112074e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:4.522378333852325634e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:-3.577036264043117900e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:-6.218130593020329338e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:-1.804097031495923873e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:-2.805138241080876605e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:-3.437351266903074243e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.2:-4.847503773100136394e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897293920931e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897298744850e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897303591529e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897300019664e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897298393187e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.2:1.924500897297844737e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/FLIPS:1.000000000000000048e-04,6.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,6.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/FLIPS:1.000000000000000048e-04,2.400000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,2.400000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/FLIPS:1.000000000000000048e-04,1.040000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,1.040000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/FLIPS:1.000000000000000048e-04,3.760000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,3.760000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243237095633e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243237274656e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243232507636e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243232325837e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243232509718e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243234250686e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243259466627e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243261227024e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243260336764e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243260152883e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243256350369e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243259075967e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243248685667e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243246886412e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243252681776e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243251946253e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243250861010e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243247608057e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243242554461e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243242902793e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243245439653e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243245404958e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243245071891e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/volumes_1d_0.05:4.811252243242529480e-02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:2.166765860375029868e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:1.440593041534568260e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:3.247102200293697509e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:1.455505726212522413e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:1.820770907205433264e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:4.608562925862954630e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:3.331799896338473259e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:2.276805189001195029e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:4.617718512957346777e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:3.170735238361852221e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:4.857466040412938249e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:5.723417342561958575e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:6.333508712632064100e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:7.083214282315357727e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:7.761141225238783617e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:8.292092626789788513e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:8.802004951437294392e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.204304088899419468e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.364283156887460860e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.561533768820901572e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.738354870359724677e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:9.905912270151519868e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:1.005435435804899382e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:1.022417502093193702e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.239090841446697751e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.217944372939393248e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.283761483328304988e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.400417754552900697e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.604096204228529242e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-2.919495207153514861e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-3.429258885752392138e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-3.641863750085275533e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-3.925633024193149207e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-4.390572452302887881e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-4.731915490392633026e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-5.160628771391135867e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-5.741105114801046527e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-6.132073245426966981e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-5.923085077647917418e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-8.120797843399568628e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-7.452459294451809326e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-8.887939110267462561e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-1.026865040302397773e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-9.205638082006814028e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-9.394817498467021317e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-1.065039710399061455e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-9.900285285215164842e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.05:-1.030777990513851794e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.939117004916613091e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-2.115647833793420605e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-2.377987554717501777e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.510855414676610291e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.934104634818947267e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.426863485676374554e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-1.021978166532238295e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-6.941895029480174388e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-4.194976174772840514e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-3.491865789008961603e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-3.129533701321687129e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:-2.398853275564665269e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:2.030219838970660946e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:2.056007241010620202e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.954422567758971711e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.759146523341309585e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.675656243022628040e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.516255047891078029e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.335602755041774298e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:1.192724108324370565e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:4.299668354141257857e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:6.089949660459103306e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:2.702140110061729814e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.1:9.210389511485883032e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.05/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.05/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.05/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.05/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.05/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/visualization_0.05/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-9.861364748761296088e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-1.058753756754918880e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-8.781028408735855675e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-1.057262488277085650e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-1.020735970170868600e-03
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-7.419567683022720590e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-8.696330712562762430e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-9.751325419850586946e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-7.410412095853768401e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-8.857395370405900291e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-7.170664568302202811e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-6.304713266121691291e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-5.694621895988121992e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-4.944916326265993327e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-4.266989383324556670e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-3.736037981740551912e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-3.226125657061290836e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.823826519563355105e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.663847451535933863e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.466596839577006811e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.289775738018696798e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-2.122218338201401172e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-1.973776250277554272e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:-1.803955587363198488e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.789039767715327321e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.810186236173226628e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.744369125723173746e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.627712854448741871e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.424034404724538358e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:9.108635401755470163e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:8.598871723171570055e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:8.386266858795924642e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:8.102497584640381851e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:7.637558156486840867e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:7.296215118345526730e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:6.867501837314047338e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:6.287025493840857219e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:5.896057363174783336e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:6.105045530935753828e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:3.907332765150733586e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:4.575671314063941533e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:3.140191498214126714e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:1.759480205417672245e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:2.822492526404999790e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:2.633313109930978681e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:1.377733504380983503e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:2.127845323128541022e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.05:1.720350703174454855e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:8.827740399257689508e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.354933554272886871e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.016151169048585374e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.071274076432986665e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.024001706454342477e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.052093084395265663e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.003621324116217188e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.021330077098785724e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:8.447995204634842952e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.149255147662258086e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.168603971242501536e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.061946677904905279e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.070639801230709621e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:9.920233948593153010e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.461482847578102922e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.210572935120553890e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.565781871367540273e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.907997083247185547e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.548868121909688519e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.724274294813455419e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.584943968118521934e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.978793417549557497e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:1.763785242523873895e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.094189036897393117e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.038965070652554125e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.037561059862632554e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.387218946664846481e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.320071023538014358e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.426320725525893472e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.813782577257119624e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.649823756868855502e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.928558887236101262e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.757711978809974625e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:2.821722905709140856e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.175944729774114500e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.060298210868279034e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.351615745171491849e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.209029277505570676e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.458319212289567282e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.284406897543794192e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.455726278675766601e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.473925322480820579e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.486554226271573525e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.754743438215874560e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.610232996066716415e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.778013163381916816e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.829487758895097930e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.781326668743946180e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.766490466994922601e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.812141616645525668e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.827336173721145951e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.894279774795136417e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.998552521320136851e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:4.023893483830965809e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.955269231743508687e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:4.037004438109228544e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.980511743881846799e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:3.999393899683873150e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-9.242987686285823506e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-9.542728663536646306e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-9.932036162134212838e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-9.080912358543732530e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.226870220870096161e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.268172872981496960e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.135006277521370910e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.080283237531685101e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.131705352113700848e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.128121152672557318e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.224330572241903367e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.305749650349658658e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.298085449494745987e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.271028046931897443e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.313491741833426412e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.387373694544794033e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.452214983142183777e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.572503086695998631e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.487288577335219746e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.909513219638608135e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.708871404938121328e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.070430814677728926e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.849689606859950377e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.171636688069826493e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-1.945663925545883840e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.038192899006292943e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.439821984247312454e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.272177741634436000e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.613761446368878744e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.392772527198766888e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.452270697784338874e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.680371049626768375e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.635251251896580872e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.659135422847989884e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.942708678152206308e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-2.839808301194067281e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.140286311109531528e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.002752131781834060e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.228980565927674841e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.267511381053259112e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.620306224833156001e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.496429116928560267e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.353898194763862820e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.547589896939417568e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.655162116518490163e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.736129927480481014e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.786409835224722521e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.801135512000198831e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.783224470853527354e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.688647726898074803e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.903114952225347030e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-4.081010716170782766e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.874573784884271913e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.906947574255300887e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-4.122567256658674615e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.983926374422161617e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-4.134554098726732547e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_0_0.02:-3.888046152074932111e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-4.094383453513217373e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.622223939159520921e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.961006324377320999e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.905883416980337813e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.953155786949513664e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.925064408995522589e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.973536169268556046e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.955827416274772116e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-4.132357972906415176e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.827902345692849886e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.808553522110193950e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.915210815436171083e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.906517692107376919e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.985134098465043071e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.515674645756524741e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.766584558218556136e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.411375621957961389e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.069160410080842036e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.428289371401883586e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.252883198498461191e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.392213525173484929e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.998364075749774507e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-3.213372250754228617e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.882968456388039415e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.938192422610887535e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.939596433402168695e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.589938546590945861e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.657086469711480124e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.550836767718440480e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.163374915970144377e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.327333736351268215e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.048598605979731454e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.219445514399015962e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-2.155434587490981770e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.801212763429923451e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.916859282321646128e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.625541748022581200e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.768128215673757766e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.518838280894745508e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.692750595626017665e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.521431214498139204e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.503232170676779638e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.490603266889022884e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.222414054929415355e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.366924497081373994e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.199144329751328561e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.147669734243491886e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.195830824379679613e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.210667026135066375e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.165015876469261167e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.149821319400045401e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.082877718311112055e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-9.786049717957938170e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-9.532640092696580928e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-1.021888261362434176e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-9.401530549831722263e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-9.966457492088752197e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:-9.777635934016426663e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:4.052858724822468433e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:4.022884627088939269e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.983953877222498781e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:4.069066257571478233e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.750287272545185032e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.708984620421379333e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.842151215874827375e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.896874255853110766e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.845452141268134198e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.849036340693856172e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.752826921121900448e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.671407843003599123e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.679072043855097099e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.706129446404782344e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.663665751511593601e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.589783798805251257e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.524942510194086181e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.404654406641221902e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.489868915985841025e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.067644273684830020e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.268286088365060407e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.906726678631714076e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.127467886428031657e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.805520805224753452e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:3.031493567728412580e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.938964594265215994e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.537335509018525835e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.704979751624402950e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.363396046885075604e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.584384966036891548e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.524886795444735745e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.296786443596903122e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.341906241320804421e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.318022070361112376e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.034448815060542124e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:2.137349192004557520e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.836871182092524230e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.974405361405334248e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.748176927264012963e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.709646112124237570e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.356851268349620746e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.480728376236964113e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.623259298404859685e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.429567596213475044e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.321995376637313260e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.241027565659636443e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.190747657922313501e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.176021981131200963e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.193933022284134385e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.288509766224216473e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.074042540903821747e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:8.961467769432219523e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.102583708237902540e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.070209918853366575e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:8.545902364547461251e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:9.932311186784540183e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:8.426033943716974720e-05
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/convergence_results/mortar_phase_1_0.02:1.089111341017738626e-04
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/MASS_OVER_TIME:0.000000000000000000e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/MASS_OVER_TIME:1.000000000000000056e-01,1.394337567332151473e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/MASS_OVER_TIME:2.000000000000000111e-01,1.394337567332121774e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/MASS_OVER_TIME:3.000000000000000444e-01,1.394337567332112060e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/MASS_OVER_TIME:4.000000000000000222e-01,1.394337567332108729e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/OUTPUT_NEWTON_INFO:1.000000000000000056e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.400000000000000000e+01,1.400000000000000000e+01,1.400000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/OUTPUT_NEWTON_INFO:2.000000000000000111e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,2.100000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/OUTPUT_NEWTON_INFO:3.000000000000000444e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,2.800000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/OUTPUT_NEWTON_INFO:4.000000000000000222e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.400000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/FLIPS:1.000000000000000056e-01,8.300000000000000000e+02,6.240000000000000000e+02,3.300000000000000000e+01,8.300000000000000000e+02,6.240000000000000000e+02,3.300000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/FLIPS:2.000000000000000111e-01,2.280000000000000000e+02,2.200000000000000000e+01,5.800000000000000000e+01,1.058000000000000000e+03,6.460000000000000000e+02,9.100000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/FLIPS:3.000000000000000444e-01,1.540000000000000000e+02,2.600000000000000000e+01,3.900000000000000000e+01,1.212000000000000000e+03,6.720000000000000000e+02,1.300000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/FLIPS:4.000000000000000222e-01,1.020000000000000000e+02,4.000000000000000000e+00,4.000000000000000000e+00,1.314000000000000000e+03,6.760000000000000000e+02,1.340000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:0.000000000000000000e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.000000000000000056e-01,1.394337567331989380e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.000000000000000111e-01,1.394337567331848105e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.000000000000000444e-01,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.000000000000000222e-01,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.000000000000000000e-01,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.999999999999999778e-01,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.999999999999999556e-01,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.999999999999999334e-01,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.999999999999999112e-01,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.999999999999998890e-01,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.099999999999999867e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.199999999999999956e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.300000000000000044e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.400000000000000133e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.500000000000000222e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.600000000000000311e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.700000000000000400e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.800000000000000488e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.900000000000000577e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.000000000000000444e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.100000000000000533e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.200000000000000622e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.300000000000000711e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.400000000000000799e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.500000000000000888e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.600000000000000977e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.700000000000001066e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.800000000000001155e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:2.900000000000001243e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.000000000000001332e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.100000000000001421e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.200000000000001510e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.300000000000001599e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.400000000000001688e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.500000000000001776e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.600000000000001865e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.700000000000001954e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.800000000000002043e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:3.900000000000002132e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.000000000000001776e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.100000000000001421e+00,1.394337567331798700e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.200000000000001066e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.300000000000000711e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.400000000000000355e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.500000000000000000e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.599999999999999645e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.699999999999999289e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.799999999999998934e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.899999999999998579e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:4.999999999999998224e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.099999999999997868e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.199999999999997513e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.299999999999997158e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.399999999999996803e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.499999999999996447e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.599999999999996092e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.699999999999995737e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.799999999999995381e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.899999999999995026e+00,1.394337567331798700e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:5.999999999999994671e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.099999999999994316e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.199999999999993960e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.299999999999993605e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.399999999999993250e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.499999999999992895e+00,1.394337567331798700e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.599999999999992539e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.699999999999992184e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.799999999999991829e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.899999999999991473e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:6.999999999999991118e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.099999999999990763e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.199999999999990408e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.299999999999990052e+00,1.394337567331798700e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.399999999999989697e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.499999999999989342e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.599999999999988987e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.699999999999988631e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.799999999999988276e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.899999999999987921e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:7.999999999999987566e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.099999999999987210e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.199999999999986855e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.299999999999986500e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.399999999999986144e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.499999999999985789e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.599999999999985434e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.699999999999985079e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.799999999999984723e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.899999999999984368e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:8.999999999999984013e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.099999999999983658e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.199999999999983302e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.299999999999982947e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.399999999999982592e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.499999999999982236e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.599999999999981881e+00,1.394337567331798144e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.699999999999981526e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.799999999999981171e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.899999999999980815e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:9.999999999999980460e+00,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/MASS_OVER_TIME:1.009999999999998010e+01,1.394337567331798422e-01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.000000000000000056e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.400000000000000000e+01,1.400000000000000000e+01,1.400000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.000000000000000111e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.000000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.000000000000000444e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,2.600000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.000000000000000222e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.200000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.000000000000000000e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.800000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.999999999999999778e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.400000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.999999999999999556e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,5.000000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.999999999999999334e-01,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,5.700000000000000000e+01,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.999999999999999112e-01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,6.200000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.999999999999998890e-01,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,6.700000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.099999999999999867e+00,1.000000000000000056e-01,0.000000000000000000e+00,5.000000000000000000e+00,7.200000000000000000e+01,5.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.199999999999999956e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,7.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.300000000000000044e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.000000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.400000000000000133e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.400000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.500000000000000222e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,8.800000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.600000000000000311e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,9.200000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.700000000000000400e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,9.600000000000000000e+01,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.800000000000000488e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.000000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.900000000000000577e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,1.040000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.000000000000000444e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.070000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.100000000000000533e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.100000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.200000000000000622e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.130000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.160000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.400000000000000799e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.190000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.500000000000000888e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.220000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.600000000000000977e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.250000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.700000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.280000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.800000000000001155e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.310000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:2.900000000000001243e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.340000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.000000000000001332e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.370000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.400000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.200000000000001510e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.430000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.300000000000001599e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.460000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.400000000000001688e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.490000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.500000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.520000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.600000000000001865e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.550000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.700000000000001954e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.580000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.800000000000002043e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.610000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:3.900000000000002132e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.640000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.000000000000001776e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.670000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.100000000000001421e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,1.700000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.200000000000001066e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.720000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.300000000000000711e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.740000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.400000000000000355e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.760000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.500000000000000000e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.780000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.599999999999999645e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.800000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.699999999999999289e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.820000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.799999999999998934e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.840000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.899999999999998579e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.860000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:4.999999999999998224e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.880000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.099999999999997868e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.900000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.199999999999997513e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.920000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.299999999999997158e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.940000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.399999999999996803e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.960000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.499999999999996447e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,1.980000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.599999999999996092e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.699999999999995737e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.020000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.799999999999995381e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.040000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.899999999999995026e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.060000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:5.999999999999994671e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.080000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.099999999999994316e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.100000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.199999999999993960e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.120000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.299999999999993605e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.140000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.399999999999993250e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.160000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.499999999999992895e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.180000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.599999999999992539e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.200000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.699999999999992184e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.220000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.799999999999991829e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.240000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.899999999999991473e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.260000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:6.999999999999991118e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.280000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.099999999999990763e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.300000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.199999999999990408e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.320000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.299999999999990052e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.340000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.399999999999989697e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.360000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.499999999999989342e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.380000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.599999999999988987e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.400000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.699999999999988631e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.420000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.799999999999988276e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.440000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.899999999999987921e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.460000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:7.999999999999987566e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.480000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.099999999999987210e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.500000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.199999999999986855e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.520000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.299999999999986500e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.540000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.399999999999986144e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.560000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.499999999999985789e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.580000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.599999999999985434e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.600000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.699999999999985079e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.620000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.799999999999984723e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.640000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.899999999999984368e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.660000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:8.999999999999984013e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.680000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.099999999999983658e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.700000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.199999999999983302e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.720000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.299999999999982947e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.740000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.399999999999982592e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.760000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.499999999999982236e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.780000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.599999999999981881e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.800000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.699999999999981526e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.820000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.799999999999981171e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.840000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.899999999999980815e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.860000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:9.999999999999980460e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.880000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/OUTPUT_NEWTON_INFO:1.009999999999998010e+01,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,2.900000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:1.000000000000000056e-01,6.500000000000000000e+02,5.980000000000000000e+02,3.800000000000000000e+01,6.500000000000000000e+02,5.980000000000000000e+02,3.800000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:2.000000000000000111e-01,2.860000000000000000e+02,2.000000000000000000e+00,4.800000000000000000e+01,9.360000000000000000e+02,6.000000000000000000e+02,8.600000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:3.000000000000000444e-01,2.380000000000000000e+02,0.000000000000000000e+00,4.200000000000000000e+01,1.174000000000000000e+03,6.000000000000000000e+02,1.280000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:4.000000000000000222e-01,1.960000000000000000e+02,0.000000000000000000e+00,1.900000000000000000e+01,1.370000000000000000e+03,6.000000000000000000e+02,1.470000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:5.000000000000000000e-01,1.900000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,1.560000000000000000e+03,6.000000000000000000e+02,1.470000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:5.999999999999999778e-01,1.700000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,1.730000000000000000e+03,6.000000000000000000e+02,1.470000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:6.999999999999999556e-01,9.600000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,1.826000000000000000e+03,6.000000000000000000e+02,1.470000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:7.999999999999999334e-01,6.800000000000000000e+01,0.000000000000000000e+00,0.000000000000000000e+00,1.894000000000000000e+03,6.000000000000000000e+02,1.470000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:8.999999999999999112e-01,1.340000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,2.028000000000000000e+03,6.000000000000000000e+02,1.470000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/FLIPS:9.999999999999998890e-01,1.880000000000000000e+02,0.000000000000000000e+00,0.000000000000000000e+00,2.216000000000000000e+03,6.000000000000000000e+02,1.470000000000000000e+02
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_hu_Kn1.0/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:0.000000000000000000e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.000000000000000056e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.000000000000000111e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.000000000000000444e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.000000000000000222e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.000000000000000000e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.999999999999999778e-01,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.999999999999999556e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.999999999999999334e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.999999999999999112e-01,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.999999999999998890e-01,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.019999999999999796e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.039999999999999813e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.059999999999999831e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.159999999999999920e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.179999999999999938e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.199999999999999956e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.300000000000000044e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.400000000000000133e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.500000000000000222e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.520000000000000240e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.620000000000000329e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.720000000000000417e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.820000000000000506e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.920000000000000595e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.020000000000000462e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.120000000000000551e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.220000000000000639e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.320000000000000728e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.420000000000000817e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.520000000000000906e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.620000000000000995e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.720000000000001084e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.820000000000001172e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:2.920000000000001261e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.020000000000001350e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.120000000000001439e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.220000000000001528e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.320000000000001616e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.420000000000001705e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.520000000000001794e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.620000000000001883e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.720000000000001972e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.820000000000002061e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:3.920000000000002149e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.020000000000002238e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.120000000000001883e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.220000000000001528e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.320000000000001172e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.420000000000000817e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.520000000000000462e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.620000000000000107e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.719999999999999751e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.819999999999999396e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:4.919999999999999041e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.019999999999998685e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.119999999999998330e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.219999999999997975e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.319999999999997620e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.419999999999997264e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.519999999999996909e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.619999999999996554e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.719999999999996199e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.819999999999995843e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:5.919999999999995488e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.019999999999995133e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.119999999999994778e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.219999999999994422e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.319999999999994067e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.419999999999993712e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.519999999999993356e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.619999999999993001e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.719999999999992646e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.819999999999992291e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:6.919999999999991935e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.019999999999991580e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.119999999999991225e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.219999999999990870e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.319999999999990514e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.419999999999990159e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.519999999999989804e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.619999999999989448e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.719999999999989093e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.819999999999988738e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:7.919999999999988383e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.019999999999988916e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.119999999999988560e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.219999999999988205e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.319999999999987850e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.419999999999987494e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.519999999999987139e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.619999999999986784e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.719999999999986429e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.819999999999986073e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:8.919999999999985718e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.019999999999985363e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.119999999999985008e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.219999999999984652e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.319999999999984297e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.419999999999983942e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.519999999999983586e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.619999999999983231e+00,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.719999999999982876e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.819999999999982521e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:9.919999999999982165e+00,1.394337567332264993e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/MASS_OVER_TIME:1.001999999999998181e+01,1.394337567332264716e-01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.000000000000000056e-01,1.000000000000000056e-01,0.000000000000000000e+00,2.100000000000000000e+01,2.100000000000000000e+01,2.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.000000000000000111e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.000000000000000000e+01,3.100000000000000000e+01,1.000000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.000000000000000444e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.100000000000000000e+01,4.200000000000000000e+01,1.100000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.000000000000000222e-01,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,4.800000000000000000e+01,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.000000000000000000e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.200000000000000000e+01,6.000000000000000000e+01,1.200000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.999999999999999778e-01,1.000000000000000056e-01,0.000000000000000000e+00,9.000000000000000000e+00,6.900000000000000000e+01,9.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.999999999999999556e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.300000000000000000e+01,8.200000000000000000e+01,1.300000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.999999999999999334e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.200000000000000000e+01,9.400000000000000000e+01,1.200000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.999999999999999112e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.400000000000000000e+01,1.080000000000000000e+02,1.400000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.999999999999998890e-01,1.000000000000000056e-01,0.000000000000000000e+00,1.400000000000000000e+01,1.220000000000000000e+02,1.400000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.019999999999999796e+00,2.000000000000000042e-02,1.000000000000000000e+00,1.600000000000000000e+01,1.380000000000000000e+02,5.000000000000000000e+00,1.100000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.039999999999999813e+00,2.000000000000000042e-02,1.000000000000000000e+00,2.600000000000000000e+01,1.640000000000000000e+02,5.000000000000000000e+00,2.100000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.059999999999999831e+00,2.000000000000000042e-02,1.000000000000000000e+00,2.200000000000000000e+01,1.860000000000000000e+02,5.000000000000000000e+00,1.700000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.159999999999999920e+00,1.000000000000000056e-01,0.000000000000000000e+00,9.000000000000000000e+00,1.950000000000000000e+02,9.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.179999999999999938e+00,2.000000000000000042e-02,1.000000000000000000e+00,2.600000000000000000e+01,2.210000000000000000e+02,5.000000000000000000e+00,2.100000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.199999999999999956e+00,2.000000000000000042e-02,1.000000000000000000e+00,2.600000000000000000e+01,2.470000000000000000e+02,5.000000000000000000e+00,2.100000000000000000e+01
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.300000000000000044e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.200000000000000000e+01,2.590000000000000000e+02,1.200000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.400000000000000133e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.800000000000000000e+01,2.770000000000000000e+02,1.800000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.500000000000000222e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.400000000000000000e+01,2.910000000000000000e+02,1.400000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.520000000000000240e+00,2.000000000000000042e-02,1.000000000000000000e+00,1.000000000000000000e+01,3.010000000000000000e+02,4.000000000000000000e+00,6.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.620000000000000329e+00,1.000000000000000056e-01,0.000000000000000000e+00,1.000000000000000000e+01,3.110000000000000000e+02,1.000000000000000000e+01,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.720000000000000417e+00,1.000000000000000056e-01,0.000000000000000000e+00,6.000000000000000000e+00,3.170000000000000000e+02,6.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.820000000000000506e+00,1.000000000000000056e-01,0.000000000000000000e+00,7.000000000000000000e+00,3.240000000000000000e+02,7.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.920000000000000595e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.280000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.020000000000000462e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.320000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.120000000000000551e+00,1.000000000000000056e-01,0.000000000000000000e+00,4.000000000000000000e+00,3.360000000000000000e+02,4.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.220000000000000639e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.390000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.320000000000000728e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.420000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.420000000000000817e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.450000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.520000000000000906e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.480000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.620000000000000995e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.510000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.720000000000001084e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.540000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.820000000000001172e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.570000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:2.920000000000001261e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.600000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.020000000000001350e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.630000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.120000000000001439e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.660000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.220000000000001528e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.690000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.320000000000001616e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.720000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.420000000000001705e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.750000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.520000000000001794e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.780000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.620000000000001883e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.810000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.720000000000001972e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.840000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.820000000000002061e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.870000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:3.920000000000002149e+00,1.000000000000000056e-01,0.000000000000000000e+00,3.000000000000000000e+00,3.900000000000000000e+02,3.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.020000000000002238e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.920000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.120000000000001883e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.940000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.220000000000001528e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.960000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.320000000000001172e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,3.980000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.420000000000000817e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.000000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.520000000000000462e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.020000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.620000000000000107e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.040000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.719999999999999751e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.060000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.819999999999999396e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.080000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:4.919999999999999041e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.100000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.019999999999998685e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.120000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.119999999999998330e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.140000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.219999999999997975e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.160000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.319999999999997620e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.180000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.419999999999997264e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.200000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.519999999999996909e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.220000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.619999999999996554e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.240000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.719999999999996199e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.260000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.819999999999995843e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.280000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:5.919999999999995488e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.300000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.019999999999995133e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.320000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.119999999999994778e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.340000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.219999999999994422e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.360000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.319999999999994067e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.380000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.419999999999993712e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.400000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.519999999999993356e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.420000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.619999999999993001e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.440000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.719999999999992646e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.460000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.819999999999992291e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.480000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:6.919999999999991935e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.500000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.019999999999991580e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.520000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.119999999999991225e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.540000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.219999999999990870e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.560000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.319999999999990514e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.580000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.419999999999990159e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.600000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.519999999999989804e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.620000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.619999999999989448e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.640000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.719999999999989093e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.660000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.819999999999988738e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.680000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:7.919999999999988383e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.700000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.019999999999988916e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.720000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.119999999999988560e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.740000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.219999999999988205e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.760000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.319999999999987850e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.780000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.419999999999987494e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.800000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.519999999999987139e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.820000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.619999999999986784e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.840000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.719999999999986429e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.860000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.819999999999986073e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.880000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:8.919999999999985718e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.900000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.019999999999985363e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.920000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.119999999999985008e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.940000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.219999999999984652e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.960000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.319999999999984297e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,4.980000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.419999999999983942e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,5.000000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.519999999999983586e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,5.020000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.619999999999983231e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,5.040000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.719999999999982876e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,5.060000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.819999999999982521e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,5.080000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:9.919999999999982165e+00,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,5.100000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/OUTPUT_NEWTON_INFO:1.001999999999998181e+01,1.000000000000000056e-01,0.000000000000000000e+00,2.000000000000000000e+00,5.120000000000000000e+02,2.000000000000000000e+00,0.000000000000000000e+00
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:1.000000000000000056e-01,7.578000000000000000e+03,7.347000000000000000e+03,7.578000000000000000e+03,7.347000000000000000e+03
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:2.000000000000000111e-01,3.082000000000000000e+03,2.998000000000000000e+03,1.066000000000000000e+04,1.034500000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:3.000000000000000444e-01,2.884000000000000000e+03,2.860000000000000000e+03,1.354400000000000000e+04,1.320500000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:4.000000000000000222e-01,1.115000000000000000e+03,1.079000000000000000e+03,1.465900000000000000e+04,1.428400000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:5.000000000000000000e-01,1.967000000000000000e+03,1.864000000000000000e+03,1.662600000000000000e+04,1.614800000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:5.999999999999999778e-01,1.263000000000000000e+03,1.113000000000000000e+03,1.788900000000000000e+04,1.726100000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:6.999999999999999556e-01,1.559000000000000000e+03,1.473000000000000000e+03,1.944800000000000000e+04,1.873400000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:7.999999999999999334e-01,1.601000000000000000e+03,1.573000000000000000e+03,2.104900000000000000e+04,2.030700000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:8.999999999999999112e-01,2.126000000000000000e+03,2.080000000000000000e+03,2.317500000000000000e+04,2.238700000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/FLIPS:9.999999999999998890e-01,2.335000000000000000e+03,2.256000000000000000e+03,2.551000000000000000e+04,2.464300000000000000e+04
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1/slanted_ppu_Kn10.0/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/plot_newton.py:    linestyle="--",
tests/unit/tests-paper-2/plot_newton.py:    linestyle="-",
tests/unit/tests-paper-2/plot_newton.py:ax_1.grid(linestyle="--", alpha=0.5)
tests/unit/tests-paper-2/plot_newton.py:    bbox_to_anchor=(-0.1, -0.65),
tests/unit/tests-paper-2/plot_newton.py:os.system("pdfcrop --margins '0 -800 0 0' " + filename + " " + filename)
tests/unit/tests-paper-2/case_1_vertical_ppu.py:- permeable k = 10, impermeable k = 0.01
tests/unit/tests-paper-2/case_1_vertical_ppu.py:- non conforming displacement_max = -0.1, only for permeable fracture
tests/unit/tests-paper-2/case_1_vertical_ppu.py:- 
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_1_vertical_ppu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_vertical_ppu.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_1_vertical_ppu.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_1_vertical_ppu.py:    os.system("mkdir -p ./case_1/vertical_ppu_Kn" + str(Kn) + "/")
tests/unit/tests-paper-2/case_1_vertical_ppu.py:        dt_init=1e-1 / t_0,
tests/unit/tests-paper-2/case_1_vertical_ppu.py:        dt_min_max=np.array([1e-3, 1e-1]) / t_0,
tests/unit/tests-paper-2/case_1_vertical_ppu.py:        "nl_convergence_tol": 1e-6,
tests/unit/tests-paper-2/test_0_paper_ppu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/test_0_paper_ppu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/test_0_paper_ppu.py:rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_1_slanted_hu.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu.py:        # os.system("rm -r " + self.root_path)
tests/unit/tests-paper-2/case_1_slanted_hu.py:        tangent_ref = np.array([1, -normal_ref[0] / normal_ref[1]])
tests/unit/tests-paper-2/case_1_slanted_hu.py:        # # ORIGINAL control points: ----------------------------------
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #     boundary_ctrl_pts[:, 0] < (self.xmax - 1e-10)
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #         boundary_ctrl_pts[:, 0] > (self.xmax - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #         boundary_ctrl_pts[:, 1] > (self.ymax - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_hu.py:        # ]  # top-right point
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #         boundary_ctrl_pts[:, 0] > (self.xmax - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #         boundary_ctrl_pts[:, 1] < (self.ymin + 1e-10),
tests/unit/tests-paper-2/case_1_slanted_hu.py:        # ]  # bottom-right point
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #         boundary_ctrl_pts[:, 0] >= (self.xmax - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #         np.abs(boundary_ctrl_pts[:, 1] - 0.5) < (0.5 - 1e-10),
tests/unit/tests-paper-2/case_1_slanted_hu.py:        # eps = 1e-8
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #         horizon_1_ctrl_pts[:, 0] < self.xmax - eps,
tests/unit/tests-paper-2/case_1_slanted_hu.py:        # # DEFORMED control points: -----------------------------------------
tests/unit/tests-paper-2/case_1_slanted_hu.py:        # horizon_1_ctrl_pts_right[:, 0] += displacement_x + (0 - displacement_x) / (
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #     1 - x_intersection
tests/unit/tests-paper-2/case_1_slanted_hu.py:        # ) * (horizon_1_ctrl_pts_right[:, 0] - x_intersection)
tests/unit/tests-paper-2/case_1_slanted_hu.py:        #     normals=[np.array([-1, 0]), normal_ref],
tests/unit/tests-paper-2/case_1_slanted_hu.py:        # update the whole grid bucket: -----------------------------------------------
tests/unit/tests-paper-2/case_1_slanted_hu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu.py:            # saturation_values = 1.0 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/tests-paper-2/case_1_slanted_hu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_1_slanted_hu.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_1_slanted_hu.py:        self.x_intersection = self.xmean - displ_x
tests/unit/tests-paper-2/case_1_slanted_hu.py:        self.y_intersection = self.ymean - displ_y
tests/unit/tests-paper-2/case_1_slanted_hu.py:                    [self.xmin, self.xmean - 0.1],
tests/unit/tests-paper-2/case_1_slanted_hu.py:        )  # -0.1 just to not touch the fracture # Removed
tests/unit/tests-paper-2/case_1_slanted_hu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_slanted_hu.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_1_slanted_hu.py:    wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_slanted_hu.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_slanted_hu.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_1_slanted_hu.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_1_slanted_hu.py:                - (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_1_slanted_hu.py:                + (self.ymax - self.ymin)
tests/unit/tests-paper-2/case_1_slanted_hu.py:            self.displacement_max = -0.0
tests/unit/tests-paper-2/case_1_slanted_hu.py:            self.root_path = "./case_1/slanted_hu_Kn" + str(Kn) + "/non-conforming/"
tests/unit/tests-paper-2/case_1_slanted_hu.py:    # os.system("mkdir -p ./case_1/slanted_hu_Kn" + str(Kn))
tests/unit/tests-paper-2/case_1_slanted_hu.py:    os.system("mkdir -p ./case_1/slanted_hu_Kn" + str(Kn) + "/non-conforming")
tests/unit/tests-paper-2/case_1_slanted_hu.py:    folder_name = "./case_1/slanted_hu_Kn" + str(Kn) + "/non-conforming/visualization"
tests/unit/tests-paper-2/case_1_slanted_hu.py:        dt_init=1e-1 / t_0,
tests/unit/tests-paper-2/case_1_slanted_hu.py:        dt_min_max=np.array([1e-5, 1e-1]) / t_0,
tests/unit/tests-paper-2/case_1_slanted_hu.py:        "nl_convergence_tol": 1e-6,
tests/unit/tests-paper-2/network_anna_split.csv:20,-0.2,0.5,1.2,0.5
tests/unit/tests-paper-2/test_1_paper_ppu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/test_1_paper_ppu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/test_1_paper_ppu.py:rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:0.000000000000000000e+00,1.905116657403077007e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:1.600000000000000131e-04,1.905116657397450952e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:3.199999999999934668e-04,1.905116657391964230e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:4.799999999999868391e-04,1.905116657386514978e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:6.399999999999803199e-04,1.905116657381090983e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:7.999999999999738006e-04,1.905116657375963973e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:9.599999999999672814e-04,1.905116657370970190e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:1.119999999999960871e-03,1.905116657366155708e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:1.279999999999954351e-03,1.905116657361712595e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:1.439999999999947832e-03,1.905116657357427135e-01
tests/unit/tests-paper-2/case_2/MASS_OVER_TIME:2.239999999999941257e-03,1.905116657339869790e-01
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:1.600000000000000131e-04,1.600000000000000131e-04,4.000000000000000000e+00,2.400000000000000000e+01,2.400000000000000000e+01,7.000000000000000000e+00,1.700000000000000000e+01
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:3.199999999999934668e-04,1.600000000000000131e-04,4.000000000000000000e+00,1.600000000000000000e+01,4.000000000000000000e+01,5.000000000000000000e+00,1.100000000000000000e+01
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:4.799999999999868391e-04,1.600000000000000131e-04,4.000000000000000000e+00,1.300000000000000000e+01,5.300000000000000000e+01,4.000000000000000000e+00,9.000000000000000000e+00
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:6.399999999999803199e-04,1.600000000000000131e-04,4.000000000000000000e+00,1.300000000000000000e+01,6.600000000000000000e+01,4.000000000000000000e+00,9.000000000000000000e+00
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:7.999999999999738006e-04,1.600000000000000131e-04,4.000000000000000000e+00,1.200000000000000000e+01,7.800000000000000000e+01,4.000000000000000000e+00,8.000000000000000000e+00
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:9.599999999999672814e-04,1.600000000000000131e-04,4.000000000000000000e+00,2.900000000000000000e+01,1.070000000000000000e+02,4.000000000000000000e+00,2.500000000000000000e+01
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:1.119999999999960871e-03,1.600000000000000131e-04,4.000000000000000000e+00,1.400000000000000000e+01,1.210000000000000000e+02,4.000000000000000000e+00,1.000000000000000000e+01
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:1.279999999999954351e-03,1.600000000000000131e-04,4.000000000000000000e+00,1.300000000000000000e+01,1.340000000000000000e+02,4.000000000000000000e+00,9.000000000000000000e+00
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:1.439999999999947832e-03,1.600000000000000131e-04,4.000000000000000000e+00,1.400000000000000000e+01,1.480000000000000000e+02,4.000000000000000000e+00,1.000000000000000000e+01
tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO:2.239999999999941257e-03,8.000000000000000383e-04,3.000000000000000000e+00,1.800000000000000000e+01,1.660000000000000000e+02,1.300000000000000000e+01,5.000000000000000000e+00
tests/unit/tests-paper-2/case_2/FLIPS:1.600000000000000131e-04,6.500000000000000000e+02,1.224000000000000000e+03,2.580000000000000000e+02,6.500000000000000000e+02,1.224000000000000000e+03,2.580000000000000000e+02
tests/unit/tests-paper-2/case_2/FLIPS:3.199999999999934668e-04,6.640000000000000000e+02,5.740000000000000000e+02,3.720000000000000000e+02,1.314000000000000000e+03,1.798000000000000000e+03,6.300000000000000000e+02
tests/unit/tests-paper-2/case_2/FLIPS:4.799999999999868391e-04,6.200000000000000000e+01,5.900000000000000000e+01,8.700000000000000000e+01,1.376000000000000000e+03,1.857000000000000000e+03,7.170000000000000000e+02
tests/unit/tests-paper-2/case_2/FLIPS:6.399999999999803199e-04,6.000000000000000000e+01,1.700000000000000000e+01,9.800000000000000000e+01,1.436000000000000000e+03,1.874000000000000000e+03,8.150000000000000000e+02
tests/unit/tests-paper-2/case_2/FLIPS:7.999999999999738006e-04,3.000000000000000000e+01,3.900000000000000000e+01,9.300000000000000000e+01,1.466000000000000000e+03,1.913000000000000000e+03,9.080000000000000000e+02
tests/unit/tests-paper-2/case_2/FLIPS:9.599999999999672814e-04,3.360000000000000000e+02,3.490000000000000000e+02,2.480000000000000000e+02,1.802000000000000000e+03,2.262000000000000000e+03,1.156000000000000000e+03
tests/unit/tests-paper-2/case_2/FLIPS:1.119999999999960871e-03,1.460000000000000000e+02,1.420000000000000000e+02,9.400000000000000000e+01,1.948000000000000000e+03,2.404000000000000000e+03,1.250000000000000000e+03
tests/unit/tests-paper-2/case_2/FLIPS:1.279999999999954351e-03,1.400000000000000000e+02,1.810000000000000000e+02,1.730000000000000000e+02,2.088000000000000000e+03,2.585000000000000000e+03,1.423000000000000000e+03
tests/unit/tests-paper-2/case_2/FLIPS:1.439999999999947832e-03,5.800000000000000000e+01,6.900000000000000000e+01,6.200000000000000000e+01,2.146000000000000000e+03,2.654000000000000000e+03,1.485000000000000000e+03
tests/unit/tests-paper-2/case_2/FLIPS:2.239999999999941257e-03,1.740000000000000000e+02,2.560000000000000000e+02,1.850000000000000000e+02,2.320000000000000000e+03,2.910000000000000000e+03,1.670000000000000000e+03
tests/unit/tests-paper-2/case_2/visualization/data_1_000119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000109.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000121.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000103.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000119.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000122.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000112.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000105.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000117.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000123.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000110.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000116.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000107.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000111.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000114.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000120.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000106.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000115.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000102.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000118.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000108.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000113.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000104.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_2/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/gmsh_frac_file.msh:1 0 0 0 0.11 0 0 1 33 2 27 -55 
tests/unit/tests-paper-2/gmsh_frac_file.msh:2 0.11 0 0 0.22 0 0 1 33 2 55 -38 
tests/unit/tests-paper-2/gmsh_frac_file.msh:3 0.22 0 0 0.335 0 0 1 33 2 38 -56 
tests/unit/tests-paper-2/gmsh_frac_file.msh:4 0.335 0 0 0.45 0 0 1 33 2 56 -39 
tests/unit/tests-paper-2/gmsh_frac_file.msh:5 0.45 0 0 1 0 0 1 33 2 39 -28 
tests/unit/tests-paper-2/gmsh_frac_file.msh:6 1 0.9077500000000001 0 1 1 0 1 34 2 29 -57 
tests/unit/tests-paper-2/gmsh_frac_file.msh:7 1 0.8155 0 1 0.9077500000000001 0 1 34 2 57 -37 
tests/unit/tests-paper-2/gmsh_frac_file.msh:8 1 0.6577500000000001 0 1 0.8155 0 1 34 2 37 -58 
tests/unit/tests-paper-2/gmsh_frac_file.msh:9 1 0.5 0 1 0.6577500000000001 0 1 34 2 58 -26 
tests/unit/tests-paper-2/gmsh_frac_file.msh:10 1 0 0 1 0.5 0 1 34 2 26 -28 
tests/unit/tests-paper-2/gmsh_frac_file.msh:11 0 1 0 0.15 1 0 1 35 2 30 -40 
tests/unit/tests-paper-2/gmsh_frac_file.msh:12 0.15 1 0 0.25 1 0 1 35 2 40 -59 
tests/unit/tests-paper-2/gmsh_frac_file.msh:13 0.25 1 0 0.35 1 0 1 35 2 59 -41 
tests/unit/tests-paper-2/gmsh_frac_file.msh:14 0.35 1 0 0.4 1 0 1 35 2 41 -43 
tests/unit/tests-paper-2/gmsh_frac_file.msh:15 0.4 1 0 0.575 1 0 1 35 2 43 -60 
tests/unit/tests-paper-2/gmsh_frac_file.msh:16 0.575 1 0 0.75 1 0 1 35 2 60 -42 
tests/unit/tests-paper-2/gmsh_frac_file.msh:17 0.75 1 0 0.875 1 0 1 35 2 42 -61 
tests/unit/tests-paper-2/gmsh_frac_file.msh:18 0.875 1 0 1 1 0 1 35 2 61 -29 
tests/unit/tests-paper-2/gmsh_frac_file.msh:19 0 0 0 0 0.1375 0 1 36 2 27 -62 
tests/unit/tests-paper-2/gmsh_frac_file.msh:20 0 0.1375 0 0 0.275 0 1 36 2 62 -36 
tests/unit/tests-paper-2/gmsh_frac_file.msh:21 0 0.275 0 0 0.3455 0 1 36 2 36 -63 
tests/unit/tests-paper-2/gmsh_frac_file.msh:22 0 0.3455 0 0 0.416 0 1 36 2 63 -35 
tests/unit/tests-paper-2/gmsh_frac_file.msh:23 0 0.416 0 0 0.5 0 1 36 2 35 -25 
tests/unit/tests-paper-2/gmsh_frac_file.msh:24 0 0.5 0 0 1 0 1 36 2 25 -30 
tests/unit/tests-paper-2/gmsh_frac_file.msh:25 0.1050615800540703 0.2034782608695652 0 0.1521739130434783 0.3014719134875338 0 1 38 2 2 -33 
tests/unit/tests-paper-2/gmsh_frac_file.msh:26 0.07753079002703514 0.3014719134875338 0 0.1050615800540703 0.3587359567437669 0 1 38 2 33 -44 
tests/unit/tests-paper-2/gmsh_frac_file.msh:27 0.05 0.3587359567437669 0 0.07753079002703514 0.416 0 1 38 2 44 -1 
tests/unit/tests-paper-2/gmsh_frac_file.msh:28 0.1521739130434783 0.1329391304347826 0 0.1860869565217391 0.2034782608695652 0 1 39 2 2 -45 
tests/unit/tests-paper-2/gmsh_frac_file.msh:29 0.1860869565217391 0.0624 0 0.22 0.1329391304347826 0 1 39 2 45 -3 
tests/unit/tests-paper-2/gmsh_frac_file.msh:30 0.05 0.2034782608695652 0 0.1521739130434783 0.275 0 1 40 2 2 -4 
tests/unit/tests-paper-2/gmsh_frac_file.msh:31 0.1521739130434783 0.135 0 0.25 0.2034782608695652 0 1 41 2 2 -5 
tests/unit/tests-paper-2/gmsh_frac_file.msh:32 0.15 0.5 0 0.2222222222222222 0.63 0 1 42 2 6 -31 
tests/unit/tests-paper-2/gmsh_frac_file.msh:33 0.2222222222222222 0.09 0 0.45 0.5 0 1 42 2 7 -31 
tests/unit/tests-paper-2/gmsh_frac_file.msh:34 0.15 0.8561274453082626 0 0.1863406255649973 0.9167 0 1 43 2 8 -9 
tests/unit/tests-paper-2/gmsh_frac_file.msh:35 0.1863406255649973 0.6780637226541313 0 0.2931703127824987 0.8561274453082626 0 1 44 2 9 -46 
tests/unit/tests-paper-2/gmsh_frac_file.msh:36 0.2931703127824987 0.5 0 0.4000000000000001 0.6780637226541313 0 1 44 2 46 -10 
tests/unit/tests-paper-2/gmsh_frac_file.msh:37 0.65 0.7931108772454312 0 0.6620579744829095 0.8333 0 1 45 2 11 -12 
tests/unit/tests-paper-2/gmsh_frac_file.msh:38 0.7 0.167625 0 0.849723 0.235 0 1 46 2 13 -14 
tests/unit/tests-paper-2/gmsh_frac_file.msh:39 0.8323799622811077 0.167625 0 0.849723 0.2254291919735015 0 1 47 2 13 -47 
tests/unit/tests-paper-2/gmsh_frac_file.msh:40 0.8150369245622153 0.2254291919735015 0 0.8323799622811077 0.283233383947003 0 1 47 2 47 -15 
tests/unit/tests-paper-2/gmsh_frac_file.msh:41 0.7075184622811077 0.283233383947003 0 0.8150369245622153 0.3316166919735015 0 1 48 2 15 -48 
tests/unit/tests-paper-2/gmsh_frac_file.msh:42 0.6 0.3316166919735015 0 0.7075184622811077 0.38 0 1 48 2 48 -16 
tests/unit/tests-paper-2/gmsh_frac_file.msh:43 0.8150369245622153 0.2675 0 0.85 0.283233383947003 0 1 49 2 15 -17 
tests/unit/tests-paper-2/gmsh_frac_file.msh:44 0.35 0.9581107198281008 0 0.3732601169869882 0.9714 0 1 50 2 18 -19 
tests/unit/tests-paper-2/gmsh_frac_file.msh:45 0.6620579744829095 0.7537054386227156 0 0.7310289872414548 0.7931108772454312 0 1 51 2 12 -49 
tests/unit/tests-paper-2/gmsh_frac_file.msh:46 0.7310289872414548 0.7143 0 0.8 0.7537054386227156 0 1 51 2 49 -20 
tests/unit/tests-paper-2/gmsh_frac_file.msh:47 0.75 0.88645 0 0.85 0.9574 0 1 52 2 21 -50 
tests/unit/tests-paper-2/gmsh_frac_file.msh:48 0.85 0.8155 0 0.95 0.88645 0 1 52 2 50 -22 
tests/unit/tests-paper-2/gmsh_frac_file.msh:49 0.15 0.8363 0 0.1863406255649973 0.8561274453082626 0 1 53 2 9 -23 
tests/unit/tests-paper-2/gmsh_frac_file.msh:50 0.3732601169869882 0.9581107198281008 0 0.4 0.9727 0 1 54 2 19 -24 
tests/unit/tests-paper-2/gmsh_frac_file.msh:51 0.1863406255649973 0.8561274453082626 0 0.2798003712759927 0.9071190825681816 0 1 55 2 9 -51 
tests/unit/tests-paper-2/gmsh_frac_file.msh:52 0.2798003712759927 0.9071190825681816 0 0.3732601169869882 0.9581107198281008 0 1 55 2 51 -19 
tests/unit/tests-paper-2/gmsh_frac_file.msh:53 0.6620579744829095 0.6465554386227156 0 0.7060291193629855 0.7931108772454312 0 1 56 2 12 -52 
tests/unit/tests-paper-2/gmsh_frac_file.msh:54 0.7060291193629855 0.5 0 0.7500002642430615 0.6465554386227156 0 1 56 2 52 -32 
tests/unit/tests-paper-2/gmsh_frac_file.msh:55 0.7825185944026385 0.283233383947003 0 0.8150369245622153 0.3916166919735015 0 1 56 2 15 -53 
tests/unit/tests-paper-2/gmsh_frac_file.msh:56 0.7500002642430615 0.3916166919735015 0 0.7825185944026385 0.5 0 1 56 2 53 -32 
tests/unit/tests-paper-2/gmsh_frac_file.msh:57 0.6356565985882152 0.7931108772454312 0 0.6620579744829095 0.8081948633399332 0 1 57 2 12 -34 
tests/unit/tests-paper-2/gmsh_frac_file.msh:58 0.5044583577876017 0.8081948633399332 0 0.6356565985882152 0.8831527915840169 0 1 57 2 34 -54 
tests/unit/tests-paper-2/gmsh_frac_file.msh:59 0.3732601169869882 0.8831527915840169 0 0.5044583577876017 0.9581107198281008 0 1 57 2 54 -19 
tests/unit/tests-paper-2/gmsh_frac_file.msh:60 0.2222222222222222 0.5 0 0.4000000000000001 0.5 0 1 58 2 10 -31 
tests/unit/tests-paper-2/gmsh_frac_file.msh:61 0.4000000000000001 0.5 0 0.7500002642430615 0.5 0 1 58 2 10 -32 
tests/unit/tests-paper-2/gmsh_frac_file.msh:62 0 0.5 0 0.2222222222222222 0.5 0 1 58 2 25 -31 
tests/unit/tests-paper-2/gmsh_frac_file.msh:63 0.7500002642430615 0.5 0 1 0.5 0 1 58 2 26 -32 
tests/unit/tests-paper-2/gmsh_frac_file.msh:1 0 0 0 1 1 0 1 37 24 1 2 3 4 5 -10 -9 -8 -7 -6 -18 -17 -16 -15 -14 -13 -12 -11 -24 -23 -22 -21 -20 -19 
tests/unit/tests-paper-2/test_0_paper_hu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/test_0_paper_hu.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/tests-paper-2/test_0_paper_hu.py:    def set_geometry(self) -> None:
tests/unit/tests-paper-2/test_0_paper_hu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/test_0_paper_hu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/test_0_paper_hu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/test_0_paper_hu.py:rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/test_0_paper_hu.py:    dt_init=1e-1 / t_0,
tests/unit/tests-paper-2/test_0_paper_hu.py:    dt_min_max=np.array([1e-1, 5e-1]) / t_0,
tests/unit/tests-paper-2/test_0_paper_hu.py:    "nl_convergence_tol": 1e-5,
tests/unit/tests-paper-2/test_0_paper_hu.py:wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/test_0_paper_hu.py:non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:- permeable k = 10 NO, impermeable k = 0.1 YES
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:- 
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    def prepare_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    def initial_condition(self) -> None:
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:            pressure_values = (2 - 1 * sd.cell_centers[1] / self.ymax) / self.p_0
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    def after_simulation(self) -> None:
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    def set_geometry(self, mdg_ref=False) -> None:
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    def set_domain(self) -> None:
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    def set_fractures(self) -> None:
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    wetting_phase = pp.composite.phase.Phase(rho0=1 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:            self.xmean = (self.xmax - self.xmin) / 2
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:            self.ymean = (self.ymax - self.ymin) / 2
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:    os.system("mkdir -p ./case_1/horizontal_ppu_Kn" + str(Kn) + "/")
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:        dt_init=1e-1 / t_0,
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:        dt_min_max=np.array([1e-3, 1e-1]) / t_0,
tests/unit/tests-paper-2/case_1_horizontal_ppu.py:        "nl_convergence_tol": 1e-6,
tests/unit/test_hu_model_forlackofabettername.py:- from test_hu_model_mortar_fluid_flux.py
tests/unit/test_hu_model_forlackofabettername.py:- I'd like to test each term of the equation but:
tests/unit/test_hu_model_forlackofabettername.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_forlackofabettername.py:        # TEST: ---------------------------------------------------------------------------
tests/unit/test_hu_model_forlackofabettername.py:        #         sd.nodes[1][internal_nodes_id[1]] -= 0.1
tests/unit/test_hu_model_forlackofabettername.py:        # ---------
tests/unit/test_hu_model_forlackofabettername.py:            # pay attention, you are goning to evaluate the equation "lamnda - rhs = ...". Since lambda = 0 ny initialization the evaluation of thr equations is -mortar
tests/unit/test_hu_model_forlackofabettername.py:            # that's why i'll write -np.array([...
tests/unit/test_hu_model_forlackofabettername.py:            # so mortar > 0 => fluid flux >0 => exiting boundary flux => a minus in the conservation law: div(F-boundary_flux)
tests/unit/test_hu_model_forlackofabettername.py:            mortar_phase_0 = -(
tests/unit/test_hu_model_forlackofabettername.py:            mortar_phase_1 = -(
tests/unit/test_hu_model_forlackofabettername.py:            # PRESSURE EQ: -------------------------
tests/unit/test_hu_model_forlackofabettername.py:            # MASS BAL: ----------------------------
tests/unit/test_hu_model_forlackofabettername.py:            assert np.any( np.isclose( source_phase_0_p_1d[0], (flux_intf_phase_0_p[0] + flux_intf_phase_0_p[2]), rtol=0, atol=1e-10) )
tests/unit/test_hu_model_forlackofabettername.py:            assert np.any( np.isclose( source_phase_0_p_1d[1], (flux_intf_phase_0_p[1] + flux_intf_phase_0_p[3]), rtol=0, atol=1e-10) )
tests/unit/test_hu_model_forlackofabettername.py:            assert np.any( np.isclose( source_phase_1_p_1d[0], (flux_intf_phase_1_p[0] + flux_intf_phase_1_p[2]), rtol=0, atol=1e-10) )
tests/unit/test_hu_model_forlackofabettername.py:            assert np.any( np.isclose( source_phase_1_p_1d[1], (flux_intf_phase_1_p[1] + flux_intf_phase_1_p[3]), rtol=0, atol=1e-10) )
tests/unit/test_hu_model_forlackofabettername.py:            assert np.any( np.isclose( source_phase_0_m_1d[0], (flux_intf_phase_0_m[0] + flux_intf_phase_0_m[2]), rtol=0, atol=1e-10) )
tests/unit/test_hu_model_forlackofabettername.py:            assert np.any( np.isclose( source_phase_0_m_1d[1], (flux_intf_phase_0_m[1] + flux_intf_phase_0_m[3]), rtol=0, atol=1e-10) )
tests/unit/test_hu_model_forlackofabettername.py:            assert np.any( np.isclose( source_phase_1_m_1d[0], (flux_intf_phase_1_m[0] + flux_intf_phase_1_m[2]), rtol=0, atol=1e-10) )
tests/unit/test_hu_model_forlackofabettername.py:            assert np.any( np.isclose( source_phase_1_m_1d[1], (flux_intf_phase_1_m[1] + flux_intf_phase_1_m[3]), rtol=0, atol=1e-10) )
tests/unit/test_hu_model_forlackofabettername.py:                        mortar_phase_0, np.array([1, 1, -1, -1]), rtol=0, atol=1e-10
tests/unit/test_hu_model_forlackofabettername.py:                        rho_mob_phase_0 * np.array([1, 1, -1, -1]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        rho_mob_phase_1 * np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        mortar_phase_0, np.array([1, 1, -1, -1]), rtol=0, atol=1e-10
tests/unit/test_hu_model_forlackofabettername.py:                        rho_mob_phase_0 * np.array([1, 1, -1, -1]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        rho_mob_phase_1 * np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        mortar_phase_0, np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        mortar_phase_0, np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:            if self.case == 5:  # delta p = -1, g = 0, s0=0
tests/unit/test_hu_model_forlackofabettername.py:                        np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        rho_mob_phase_0 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        rho_mob_phase_1 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:            if self.case == 8:  # delta p = -1, g = 1, s0=1
tests/unit/test_hu_model_forlackofabettername.py:                        np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        rho_mob_phase_0 * np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:                        rho_mob_phase_1 * np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_forlackofabettername.py:                        atol=1e-10,
tests/unit/test_hu_model_forlackofabettername.py:            print("\n\n\n TEST PASSED ----------------------------------------")
tests/unit/test_hu_model_forlackofabettername.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_forlackofabettername.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_forlackofabettername.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_forlackofabettername.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_forlackofabettername.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_forlackofabettername.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_model_forlackofabettername.py:if case == 5:  # delta p = -1, g = 0
tests/unit/test_hu_model_forlackofabettername.py:if case == 8:  # delta p = -1, g = 1
tests/unit/test_half_space.py:    n = np.array([[-1], [0], [0]])
tests/unit/test_half_space.py:    pts = np.array([[1, -1], [0, 0], [0, 0]])
tests/unit/test_half_space.py:    n = np.array([[-1, 0], [0, -1], [0, 0]])
tests/unit/test_half_space.py:    pts = np.array([[1, -1, 1, 0], [2, 0, 2, 0], [0, 0, 0, 0]])
tests/unit/test_half_space.py:    n = np.array([[0, 0, 0, 0, 1, -1], [1, 1, -1, -1, 0, 0], [0, 0, 0, 0, 0, 0]])
tests/unit/test_half_space.py:    known_pt = np.array([1.0 / 6.0, 1.0 / 6.0, 0.0]).reshape((-1, 1))
tests/unit/test_half_space.py:    pt = half_space.half_space_interior_point(n, x0, pts).reshape((-1, 1))
tests/unit/test_half_space.py:    # Find interior point in star-shaped, but not convex domain
tests/unit/test_half_space.py:        [[0, 0, 1, 0, -1, 0, 1], [1, 1, 0, 1, 0, -1, 0], [0, 0, 0, 0, 0, 0, 0]]
tests/unit/test_half_space.py:    pt = half_space.half_space_interior_point(n, x0, pts).reshape((-1, 1))
tests/unit/test_half_space.py:    known_pt = np.array([5.0 / 6.0, 1.0 / 2.0, 0.0]).reshape((-1, 1))
tests/unit/test_half_space.py:        np.sign(np.sum(n * (pt - x0), axis=0))
tests/unit/test_half_space.py:        == np.sign(np.sum(n * (known_pt - x0), axis=0))
tests/unit/test_half_space.py:    n = np.array([[1, -1, 0, 0, 0, 0], [0, 0, 1, -1, 0, 0], [0, 0, 0, 0, 1, -1]])
tests/unit/test_half_space.py:    pt = half_space.half_space_interior_point(n, x0, pts).reshape((-1, 1))
tests/unit/test_half_space.py:    known_pt = np.array([1.0 / 2.0, 1.0 / 2.0, 1.0 / 2.0]).reshape((-1, 1))
tests/unit/test_half_space.py:        np.sign(np.sum(n * (pt - x0), axis=0))
tests/unit/test_half_space.py:        == np.sign(np.sum(n * (known_pt - x0), axis=0))
tests/unit/test_half_space.py:            [0, 0, 1, 0, -1, 0, 1, 0, 0],
tests/unit/test_half_space.py:            [1, 1, 0, 1, 0, -1, 0, 0, 0],
tests/unit/test_half_space.py:            [0, 0, 0, 0, 0, 0, 0, 1, -1],
tests/unit/test_half_space.py:    known_pt = np.array([5.0 / 6.0, 1.0 / 2.0, 1.0 / 6.0]).reshape((-1, 1))
tests/unit/test_half_space.py:    pt = half_space.half_space_interior_point(n, x0, pts).reshape((-1, 1))
tests/unit/test_half_space.py:        np.sign(np.sum(n * (pt - x0), axis=0))
tests/unit/test_half_space.py:        == np.sign(np.sum(n * (known_pt - x0), axis=0))
tests/unit/test_half_space.py:                -0.4346322145903923,
tests/unit/test_half_space.py:                -0.5837212981640826,
tests/unit/test_half_space.py:                -0.5545602917404856,
tests/unit/test_half_space.py:                -0.5285915818615673,
tests/unit/test_half_space.py:                -0.9006080379611606,
tests/unit/test_half_space.py:                -0.8119540911096134,
tests/unit/test_half_space.py:                -0.4609417251808932,
tests/unit/test_half_space.py:            [0.0, -0.0, 0.0, -0.0, 0.0, 0.0],
tests/unit/test_half_space.py:                -0.0965964317843146,
tests/unit/test_half_space.py:                -0.8227124789179447,
tests/unit/test_half_space.py:                -0.8663868741056542,
tests/unit/test_half_space.py:                -0.3297308258566596,
tests/unit/test_half_space.py:                -0.0,
tests/unit/test_half_space.py:                -0.7356911994949217,
tests/unit/test_half_space.py:                -0.4993733917395212,
tests/unit/test_half_space.py:                -0.9440749877419088,
tests/unit/test_half_space.py:            [0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0],
tests/unit/test_half_space.py:            np.array([[-1, 0, 1], [0, -1, 1]]).T,
tests/unit/test_half_space.py:            np.array([0, 0, -1]),
tests/unit/test_half_space.py:            np.array([[-1, 0, 1, 0], [0, -1, 1, 1]]).T,
tests/unit/test_half_space.py:            np.array([0, 0, -1, -0.5]),
tests/unit/test_half_space.py:            np.array([[-1, 0, 0, 1], [0, -1, 0, 1], [0, 0, -1, 1]]).T,
tests/unit/test_half_space.py:            np.array([0, 0, 0, -1]),
tests/unit/test_half_space.py:            np.array([[-1, 0, 0, 1, 0], [0, -1, 0, 1, 0], [0, 0, -1, 1, 1]]).T,
tests/unit/test_half_space.py:            np.array([0, 0, 0, -1, -0.5]),
tests/unit/test_hu_hamon_2018_scaled.py:    def initial_condition(self) -> None:
tests/unit/test_hu_hamon_2018_scaled.py:            #     2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_hamon_2018_scaled.py:            -1379,   -1379,   -1381,   -1384,   -1388,   -1392,   -1398,   -1404,
tests/unit/test_hu_hamon_2018_scaled.py:            -1411,   -1419,   -1428,   -1438,   -1449,   -1461,   -1473,   -1487,
tests/unit/test_hu_hamon_2018_scaled.py:            -1501,   -1517,   -1533,   -1550,   -1568,   -1587,   -1606,   -1627,
tests/unit/test_hu_hamon_2018_scaled.py:            -1648,   -1671,   -1694,   -1718,   -1742,   -1768,   -1794,   -1821,
tests/unit/test_hu_hamon_2018_scaled.py:            -1849,   -1877,   -1907,   -1936,   -1967,   -1998,   -2029,   -2061,
tests/unit/test_hu_hamon_2018_scaled.py:            -2094,   -2127,   -2160,   -2194,   -2228,   -2262,   -2297,   -2331,
tests/unit/test_hu_hamon_2018_scaled.py:            -2366,   -2401,   -2436,   -2470,   -2505,   -2539,   -2573,   -2606,
tests/unit/test_hu_hamon_2018_scaled.py:            -2640,   -2673,   -2706,   -2738,   -2770,   -2802,   -2833,   -2864,
tests/unit/test_hu_hamon_2018_scaled.py:            -2894,   -2923,   -2952,   -2980,   -3007,   -3034,   -3060,   -3085,
tests/unit/test_hu_hamon_2018_scaled.py:            -3110,   -3133,   -3156,   -3178,   -3200,   -3220,   -3239,   -3258,
tests/unit/test_hu_hamon_2018_scaled.py:            -3276,   -3293,   -3309,   -3324,   -3338,   -3352,   -3364,   -3376,
tests/unit/test_hu_hamon_2018_scaled.py:            -3387,   -3397,   -3406,   -3414,   -3421,   -3427,   -3432,   -3437,
tests/unit/test_hu_hamon_2018_scaled.py:            -3441,   -3443,   -3445,   -3446,   -4134,   -4137,   -4143,   -4151,
tests/unit/test_hu_hamon_2018_scaled.py:            -4161,   -4175,   -4191,   -4210,   -4232,   -4256,   -4283,   -4313,
tests/unit/test_hu_hamon_2018_scaled.py:            -4345,   -4380,   -4418,   -4458,   -4501,   -4547,   -4595,   -4647,
tests/unit/test_hu_hamon_2018_scaled.py:            -4700,   -4757,   -4816,   -4877,   -4941,   -5008,   -5077,   -5148,
tests/unit/test_hu_hamon_2018_scaled.py:            -5222,   -5298,   -5376,   -5457,   -5540,   -5625,   -5712,   -5800,
tests/unit/test_hu_hamon_2018_scaled.py:            -5891,   -5983,   -6077,   -6173,   -6270,   -6368,   -6468,   -6568,
tests/unit/test_hu_hamon_2018_scaled.py:            -6670,   -6772,   -6875,   -6978,   -7082,   -7186,   -7290,   -7394,
tests/unit/test_hu_hamon_2018_scaled.py:            -7497,   -7599,   -7702,   -7803,   -7904,   -8004,   -8103,   -8201,
tests/unit/test_hu_hamon_2018_scaled.py:            -8298,   -8393,   -8486,   -8578,   -8668,   -8757,   -8843,   -8928,
tests/unit/test_hu_hamon_2018_scaled.py:            -9010,   -9091,   -9169,   -9245,   -9318,   -9390,   -9458,   -9525,
tests/unit/test_hu_hamon_2018_scaled.py:            -9588,   -9650,   -9708,   -9765,   -9818,   -9869,   -9917,   -9963,
tests/unit/test_hu_hamon_2018_scaled.py:            -10006,  -10046,  -10084,  -10119,  -10151,  -10181,  -10208,  -10232,
tests/unit/test_hu_hamon_2018_scaled.py:            -10254,  -10272,  -10288,  -10302,  -10313,  -10321,  -10326,  -10329,
tests/unit/test_hu_hamon_2018_scaled.py:            -6888,   -6893,   -6902,   -6915,   -6933,   -6955,   -6982,   -7014,
tests/unit/test_hu_hamon_2018_scaled.py:            -7050,   -7090,   -7135,   -7185,   -7238,   -7297,   -7360,   -7427,
tests/unit/test_hu_hamon_2018_scaled.py:            -7499,   -7575,   -7656,   -7741,   -7830,   -7924,   -8022,   -8125,
tests/unit/test_hu_hamon_2018_scaled.py:            -8231,   -8342,   -8457,   -8576,   -8699,   -8826,   -8957,   -9091,
tests/unit/test_hu_hamon_2018_scaled.py:            -9229,   -9370,   -9515,   -9663,   -9814,   -9968,  -10125,  -10284,
tests/unit/test_hu_hamon_2018_scaled.py:            -10446,  -10609,  -10775,  -10942,  -11111,  -11282,  -11453,  -11625,
tests/unit/test_hu_hamon_2018_scaled.py:            -11798,  -11972,  -12145,  -12318,  -12490,  -12661,  -12832,  -13002,
tests/unit/test_hu_hamon_2018_scaled.py:            -13170,  -13337,  -13503,  -13666,  -13827,  -13986,  -14142,  -14295,
tests/unit/test_hu_hamon_2018_scaled.py:            -14446,  -14593,  -14738,  -14879,  -15017,  -15151,  -15281,  -15408,
tests/unit/test_hu_hamon_2018_scaled.py:            -15530,  -15649,  -15764,  -15874,  -15981,  -16083,  -16181,  -16275,
tests/unit/test_hu_hamon_2018_scaled.py:            -16364,  -16449,  -16529,  -16605,  -16677,  -16744,  -16807,  -16866,
tests/unit/test_hu_hamon_2018_scaled.py:            -16919,  -16969,  -17014,  -17054,  -17090,  -17121,  -17148,  -17171,
tests/unit/test_hu_hamon_2018_scaled.py:            -17189,  -17202,  -17211,  -17215,   -9638,   -9644,   -9657,   -9675,
tests/unit/test_hu_hamon_2018_scaled.py:            -9701,   -9732,   -9770,   -9814,   -9864,   -9921,   -9984,  -10053,
tests/unit/test_hu_hamon_2018_scaled.py:            -10128,  -10210,  -10298,  -10392,  -10493,  -10600,  -10713,  -10832,
tests/unit/test_hu_hamon_2018_scaled.py:            -10957,  -11088,  -11226,  -11369,  -11519,  -11674,  -11835,  -12001,
tests/unit/test_hu_hamon_2018_scaled.py:            -12174,  -12351,  -12534,  -12722,  -12916,  -13114,  -13317,  -13524,
tests/unit/test_hu_hamon_2018_scaled.py:            -13735,  -13951,  -14170,  -14394,  -14620,  -14849,  -15081,  -15316,
tests/unit/test_hu_hamon_2018_scaled.py:            -15553,  -15791,  -16032,  -16273,  -16515,  -16758,  -17001,  -17243,
tests/unit/test_hu_hamon_2018_scaled.py:            -17485,  -17725,  -17965,  -18203,  -18439,  -18673,  -18905,  -19134,
tests/unit/test_hu_hamon_2018_scaled.py:            -19360,  -19582,  -19801,  -20017,  -20228,  -20435,  -20637,  -20835,
tests/unit/test_hu_hamon_2018_scaled.py:            -21028,  -21216,  -21398,  -21576,  -21748,  -21914,  -22075,  -22230,
tests/unit/test_hu_hamon_2018_scaled.py:            -22379,  -22522,  -22659,  -22790,  -22916,  -23035,  -23147,  -23254,
tests/unit/test_hu_hamon_2018_scaled.py:            -23354,  -23449,  -23536,  -23618,  -23694,  -23763,  -23825,  -23882,
tests/unit/test_hu_hamon_2018_scaled.py:            -23932,  -23976,  -24014,  -24045,  -24070,  -24089,  -24102,  -24108,
tests/unit/test_hu_hamon_2018_scaled.py:            -12382,  -12390,  -12406,  -12431,  -12463,  -12503,  -12552,  -12608,
tests/unit/test_hu_hamon_2018_scaled.py:            -12673,  -12746,  -12827,  -12916,  -13013,  -13118,  -13231,  -13352,
tests/unit/test_hu_hamon_2018_scaled.py:            -13482,  -13619,  -13764,  -13917,  -14079,  -14248,  -14424,  -14609,
tests/unit/test_hu_hamon_2018_scaled.py:            -14801,  -15001,  -15208,  -15422,  -15644,  -15872,  -16108,  -16350,
tests/unit/test_hu_hamon_2018_scaled.py:            -16599,  -16854,  -17115,  -17381,  -17654,  -17931,  -18214,  -18501,
tests/unit/test_hu_hamon_2018_scaled.py:            -18793,  -19088,  -19387,  -19689,  -19994,  -20301,  -20610,  -20921,
tests/unit/test_hu_hamon_2018_scaled.py:            -21233,  -21546,  -21859,  -22171,  -22482,  -22792,  -23101,  -23408,
tests/unit/test_hu_hamon_2018_scaled.py:            -23712,  -24013,  -24312,  -24607,  -24898,  -25184,  -25466,  -25744,
tests/unit/test_hu_hamon_2018_scaled.py:            -26016,  -26282,  -26543,  -26797,  -27046,  -27288,  -27523,  -27751,
tests/unit/test_hu_hamon_2018_scaled.py:            -27972,  -28187,  -28393,  -28593,  -28785,  -28969,  -29146,  -29314,
tests/unit/test_hu_hamon_2018_scaled.py:            -29475,  -29629,  -29774,  -29911,  -30040,  -30161,  -30274,  -30379,
tests/unit/test_hu_hamon_2018_scaled.py:            -30476,  -30565,  -30646,  -30719,  -30783,  -30840,  -30888,  -30929,
tests/unit/test_hu_hamon_2018_scaled.py:            -30961,  -30985,  -31001,  -31009,  -15120,  -15129,  -15149,  -15179,
tests/unit/test_hu_hamon_2018_scaled.py:            -15218,  -15268,  -15327,  -15396,  -15475,  -15564,  -15663,  -15772,
tests/unit/test_hu_hamon_2018_scaled.py:            -15890,  -16019,  -16157,  -16306,  -16464,  -16631,  -16809,  -16996,
tests/unit/test_hu_hamon_2018_scaled.py:            -17194,  -17400,  -17616,  -17842,  -18077,  -18321,  -18575,  -18837,
tests/unit/test_hu_hamon_2018_scaled.py:            -19108,  -19388,  -19676,  -19972,  -20277,  -20589,  -20909,  -21235,
tests/unit/test_hu_hamon_2018_scaled.py:            -21569,  -21908,  -22254,  -22606,  -22963,  -23325,  -23691,  -24061,
tests/unit/test_hu_hamon_2018_scaled.py:            -24434,  -24811,  -25190,  -25570,  -25952,  -26335,  -26719,  -27101,
tests/unit/test_hu_hamon_2018_scaled.py:            -27483,  -27863,  -28241,  -28617,  -28990,  -29359,  -29725,  -30086,
tests/unit/test_hu_hamon_2018_scaled.py:            -30442,  -30793,  -31139,  -31478,  -31811,  -32138,  -32457,  -32769,
tests/unit/test_hu_hamon_2018_scaled.py:            -33073,  -33369,  -33657,  -33936,  -34207,  -34469,  -34722,  -34966,
tests/unit/test_hu_hamon_2018_scaled.py:            -35201,  -35427,  -35643,  -35849,  -36046,  -36233,  -36411,  -36578,
tests/unit/test_hu_hamon_2018_scaled.py:            -36736,  -36885,  -37023,  -37151,  -37270,  -37378,  -37477,  -37566,
tests/unit/test_hu_hamon_2018_scaled.py:            -37645,  -37714,  -37774,  -37823,  -37862,  -37892,  -37912,  -37922,
tests/unit/test_hu_hamon_2018_scaled.py:            -17848,  -17860,  -17884,  -17919,  -17965,  -18024,  -18094,  -18175,
tests/unit/test_hu_hamon_2018_scaled.py:            -18269,  -18374,  -18491,  -18619,  -18760,  -18912,  -19075,  -19250,
tests/unit/test_hu_hamon_2018_scaled.py:            -19437,  -19636,  -19846,  -20067,  -20300,  -20545,  -20801,  -21068,
tests/unit/test_hu_hamon_2018_scaled.py:            -21346,  -21635,  -21934,  -22245,  -22566,  -22897,  -23238,  -23589,
tests/unit/test_hu_hamon_2018_scaled.py:            -23949,  -24319,  -24697,  -25084,  -25479,  -25882,  -26291,  -26708,
tests/unit/test_hu_hamon_2018_scaled.py:            -27131,  -27559,  -27993,  -28432,  -28874,  -29320,  -29769,  -30220,
tests/unit/test_hu_hamon_2018_scaled.py:            -30673,  -31127,  -31581,  -32035,  -32487,  -32938,  -33386,  -33831,
tests/unit/test_hu_hamon_2018_scaled.py:            -34273,  -34711,  -35145,  -35573,  -35995,  -36411,  -36820,  -37223,
tests/unit/test_hu_hamon_2018_scaled.py:            -37617,  -38004,  -38382,  -38751,  -39111,  -39461,  -39802,  -40133,
tests/unit/test_hu_hamon_2018_scaled.py:            -40454,  -40764,  -41064,  -41352,  -41630,  -41897,  -42152,  -42397,
tests/unit/test_hu_hamon_2018_scaled.py:            -42630,  -42851,  -43061,  -43259,  -43446,  -43621,  -43785,  -43937,
tests/unit/test_hu_hamon_2018_scaled.py:            -44077,  -44205,  -44322,  -44427,  -44520,  -44602,  -44672,  -44731,
tests/unit/test_hu_hamon_2018_scaled.py:            -44777,  -44812,  -44836,  -44847,  -20567,  -20581,  -20608,  -20648,
tests/unit/test_hu_hamon_2018_scaled.py:            -20702,  -20770,  -20850,  -20945,  -21053,  -21174,  -21309,  -21457,
tests/unit/test_hu_hamon_2018_scaled.py:            -21619,  -21794,  -21983,  -22186,  -22401,  -22630,  -22873,  -23129,
tests/unit/test_hu_hamon_2018_scaled.py:            -23398,  -23680,  -23976,  -24284,  -24605,  -24939,  -25286,  -25644,
tests/unit/test_hu_hamon_2018_scaled.py:            -26015,  -26398,  -26792,  -27198,  -27615,  -28042,  -28480,  -28927,
tests/unit/test_hu_hamon_2018_scaled.py:            -29384,  -29850,  -30324,  -30806,  -31295,  -31791,  -32294,  -32801,
tests/unit/test_hu_hamon_2018_scaled.py:            -33313,  -33830,  -34349,  -34872,  -35396,  -35921,  -36447,  -36973,
tests/unit/test_hu_hamon_2018_scaled.py:            -37496,  -38018,  -38537,  -39053,  -39564,  -40071,  -40573,  -41068,
tests/unit/test_hu_hamon_2018_scaled.py:            -41557,  -42039,  -42513,  -42978,  -43434,  -43881,  -44319,  -44746,
tests/unit/test_hu_hamon_2018_scaled.py:            -45162,  -45567,  -45962,  -46344,  -46715,  -47073,  -47419,  -47753,
tests/unit/test_hu_hamon_2018_scaled.py:            -48074,  -48382,  -48678,  -48960,  -49229,  -49484,  -49727,  -49956,
tests/unit/test_hu_hamon_2018_scaled.py:            -50171,  -50374,  -50562,  -50738,  -50899,  -51048,  -51183,  -51304,
tests/unit/test_hu_hamon_2018_scaled.py:            -51412,  -51506,  -51587,  -51654,  -51708,  -51748,  -51775,  -51789,
tests/unit/test_hu_hamon_2018_scaled.py:            -23275,  -23290,  -23321,  -23366,  -23428,  -23504,  -23596,  -23702,
tests/unit/test_hu_hamon_2018_scaled.py:            -23825,  -23962,  -24115,  -24283,  -24467,  -24666,  -24880,  -25109,
tests/unit/test_hu_hamon_2018_scaled.py:            -25354,  -25614,  -25889,  -26179,  -26484,  -26805,  -27140,  -27490,
tests/unit/test_hu_hamon_2018_scaled.py:            -27854,  -28234,  -28627,  -29034,  -29455,  -29890,  -30338,  -30799,
tests/unit/test_hu_hamon_2018_scaled.py:            -31272,  -31758,  -32255,  -32764,  -33283,  -33813,  -34352,  -34900,
tests/unit/test_hu_hamon_2018_scaled.py:            -35456,  -36020,  -36591,  -37169,  -37752,  -38339,  -38930,  -39525,
tests/unit/test_hu_hamon_2018_scaled.py:            -40121,  -40719,  -41317,  -41915,  -42511,  -43104,  -43695,  -44282,
tests/unit/test_hu_hamon_2018_scaled.py:            -44864,  -45441,  -46011,  -46575,  -47131,  -47678,  -48217,  -48746,
tests/unit/test_hu_hamon_2018_scaled.py:            -49265,  -49773,  -50270,  -50755,  -51228,  -51689,  -52137,  -52571,
tests/unit/test_hu_hamon_2018_scaled.py:            -52992,  -53399,  -53792,  -54171,  -54535,  -54885,  -55220,  -55540,
tests/unit/test_hu_hamon_2018_scaled.py:            -55845,  -56136,  -56411,  -56670,  -56915,  -57144,  -57358,  -57557,
tests/unit/test_hu_hamon_2018_scaled.py:            -57740,  -57909,  -58061,  -58199,  -58321,  -58428,  -58520,  -58596,
tests/unit/test_hu_hamon_2018_scaled.py:            -58657,  -58703,  -58733,  -58749,  -25969,  -25986,  -26020,  -26072,
tests/unit/test_hu_hamon_2018_scaled.py:            -26140,  -26225,  -26328,  -26447,  -26584,  -26738,  -26908,  -27096,
tests/unit/test_hu_hamon_2018_scaled.py:            -27302,  -27524,  -27763,  -28020,  -28294,  -28584,  -28892,  -29217,
tests/unit/test_hu_hamon_2018_scaled.py:            -29559,  -29917,  -30292,  -30684,  -31092,  -31516,  -31957,  -32413,
tests/unit/test_hu_hamon_2018_scaled.py:            -32885,  -33372,  -33874,  -34390,  -34921,  -35465,  -36022,  -36593,
tests/unit/test_hu_hamon_2018_scaled.py:            -37175,  -37769,  -38374,  -38988,  -39613,  -40246,  -40887,  -41534,
tests/unit/test_hu_hamon_2018_scaled.py:            -42189,  -42848,  -43512,  -44179,  -44848,  -45519,  -46191,  -46862,
tests/unit/test_hu_hamon_2018_scaled.py:            -47531,  -48198,  -48861,  -49519,  -50173,  -50820,  -51461,  -52093,
tests/unit/test_hu_hamon_2018_scaled.py:            -52717,  -53331,  -53936,  -54529,  -55111,  -55681,  -56238,  -56782,
tests/unit/test_hu_hamon_2018_scaled.py:            -57312,  -57828,  -58330,  -58817,  -59288,  -59744,  -60184,  -60609,
tests/unit/test_hu_hamon_2018_scaled.py:            -61016,  -61408,  -61783,  -62141,  -62483,  -62807,  -63115,  -63406,
tests/unit/test_hu_hamon_2018_scaled.py:            -63679,  -63936,  -64175,  -64397,  -64602,  -64790,  -64961,  -65115,
tests/unit/test_hu_hamon_2018_scaled.py:            -65251,  -65371,  -65473,  -65559,  -65627,  -65678,  -65712,  -65729,
tests/unit/test_hu_hamon_2018_scaled.py:            -28649,  -28668,  -28706,  -28762,  -28838,  -28932,  -29045,  -29177,
tests/unit/test_hu_hamon_2018_scaled.py:            -29328,  -29498,  -29687,  -29895,  -30122,  -30368,  -30633,  -30916,
tests/unit/test_hu_hamon_2018_scaled.py:            -31219,  -31541,  -31881,  -32240,  -32618,  -33015,  -33430,  -33864,
tests/unit/test_hu_hamon_2018_scaled.py:            -34316,  -34786,  -35274,  -35779,  -36302,  -36841,  -37398,  -37970,
tests/unit/test_hu_hamon_2018_scaled.py:            -38558,  -39162,  -39780,  -40413,  -41059,  -41718,  -42389,  -43071,
tests/unit/test_hu_hamon_2018_scaled.py:            -43764,  -44467,  -45179,  -45898,  -46624,  -47357,  -48094,  -48835,
tests/unit/test_hu_hamon_2018_scaled.py:            -49578,  -50324,  -51070,  -51816,  -52559,  -53299,  -54036,  -54767,
tests/unit/test_hu_hamon_2018_scaled.py:            -55493,  -56212,  -56923,  -57625,  -58318,  -58999,  -59670,  -60329,
tests/unit/test_hu_hamon_2018_scaled.py:            -60974,  -61606,  -62224,  -62827,  -63415,  -63988,  -64544,  -65083,
tests/unit/test_hu_hamon_2018_scaled.py:            -65605,  -66111,  -66598,  -67068,  -67520,  -67953,  -68368,  -68765,
tests/unit/test_hu_hamon_2018_scaled.py:            -69143,  -69502,  -69842,  -70164,  -70466,  -70750,  -71015,  -71260,
tests/unit/test_hu_hamon_2018_scaled.py:            -71487,  -71695,  -71884,  -72054,  -72205,  -72337,  -72450,  -72544,
tests/unit/test_hu_hamon_2018_scaled.py:            -72620,  -72676,  -72714,  -72733,  -31313,  -31333,  -31374,  -31436,
tests/unit/test_hu_hamon_2018_scaled.py:            -31519,  -31622,  -31746,  -31891,  -32056,  -32243,  -32450,  -32677,
tests/unit/test_hu_hamon_2018_scaled.py:            -32926,  -33195,  -33486,  -33797,  -34128,  -34481,  -34854,  -35248,
tests/unit/test_hu_hamon_2018_scaled.py:            -35663,  -36098,  -36554,  -37029,  -37525,  -38041,  -38576,  -39131,
tests/unit/test_hu_hamon_2018_scaled.py:            -39705,  -40298,  -40909,  -41538,  -42185,  -42848,  -43528,  -44223,
tests/unit/test_hu_hamon_2018_scaled.py:            -44934,  -45658,  -46397,  -47148,  -47910,  -48684,  -49467,  -50259,
tests/unit/test_hu_hamon_2018_scaled.py:            -51058,  -51865,  -52676,  -53492,  -54311,  -55132,  -55954,  -56776,
tests/unit/test_hu_hamon_2018_scaled.py:            -57594,  -58409,  -59220,  -60026,  -60825,  -61616,  -62399,  -63172,
tests/unit/test_hu_hamon_2018_scaled.py:            -63934,  -64685,  -65422,  -66147,  -66857,  -67552,  -68231,  -68894,
tests/unit/test_hu_hamon_2018_scaled.py:            -69540,  -70169,  -70780,  -71372,  -71946,  -72501,  -73036,  -73552,
tests/unit/test_hu_hamon_2018_scaled.py:            -74047,  -74523,  -74978,  -75413,  -75828,  -76222,  -76595,  -76947,
tests/unit/test_hu_hamon_2018_scaled.py:            -77279,  -77590,  -77880,  -78149,  -78398,  -78625,  -78832,  -79019,
tests/unit/test_hu_hamon_2018_scaled.py:            -79184,  -79329,  -79453,  -79556,  -79638,  -79700,  -79742,  -79762,
tests/unit/test_hu_hamon_2018_scaled.py:            -33958,  -33981,  -34026,  -34093,  -34183,  -34295,  -34430,  -34587,
tests/unit/test_hu_hamon_2018_scaled.py:            -34767,  -34969,  -35194,  -35442,  -35712,  -36005,  -36321,  -36659,
tests/unit/test_hu_hamon_2018_scaled.py:            -37020,  -37404,  -37810,  -38239,  -38690,  -39164,  -39660,  -40178,
tests/unit/test_hu_hamon_2018_scaled.py:            -40718,  -41280,  -41863,  -42468,  -43094,  -43740,  -44406,  -45093,
tests/unit/test_hu_hamon_2018_scaled.py:            -45798,  -46522,  -47264,  -48023,  -48798,  -49590,  -50396,  -51217,
tests/unit/test_hu_hamon_2018_scaled.py:            -52050,  -52895,  -53751,  -54617,  -55491,  -56372,  -57260,  -58152,
tests/unit/test_hu_hamon_2018_scaled.py:            -59048,  -59945,  -60844,  -61743,  -62637,  -63529,  -64416,  -65297,
tests/unit/test_hu_hamon_2018_scaled.py:            -66170,  -67036,  -67891,  -68736,  -69568,  -70388,  -71194,  -71985,
tests/unit/test_hu_hamon_2018_scaled.py:            -72760,  -73519,  -74261,  -74984,  -75689,  -76375,  -77041,  -77687,
tests/unit/test_hu_hamon_2018_scaled.py:            -78313,  -78917,  -79500,  -80062,  -80602,  -81120,  -81616,  -82089,
tests/unit/test_hu_hamon_2018_scaled.py:            -82541,  -82969,  -83375,  -83759,  -84120,  -84458,  -84773,  -85066,
tests/unit/test_hu_hamon_2018_scaled.py:            -85337,  -85584,  -85809,  -86011,  -86191,  -86349,  -86483,  -86596,
tests/unit/test_hu_hamon_2018_scaled.py:            -86685,  -86753,  -86797,  -86820,  -36585,  -36609,  -36658,  -36730,
tests/unit/test_hu_hamon_2018_scaled.py:            -36827,  -36949,  -37094,  -37264,  -37458,  -37677,  -37920,  -38187,
tests/unit/test_hu_hamon_2018_scaled.py:            -38479,  -38796,  -39137,  -39503,  -39893,  -40308,  -40747,  -41210,
tests/unit/test_hu_hamon_2018_scaled.py:            -41699,  -42211,  -42748,  -43308,  -43893,  -44501,  -45133,  -45788,
tests/unit/test_hu_hamon_2018_scaled.py:            -46466,  -47166,  -47888,  -48632,  -49397,  -50182,  -50987,  -51810,
tests/unit/test_hu_hamon_2018_scaled.py:            -52652,  -53511,  -54387,  -55277,  -56182,  -57100,  -58030,  -58971,
tests/unit/test_hu_hamon_2018_scaled.py:            -59921,  -60879,  -61844,  -62814,  -63788,  -64763,  -65740,  -66717,
tests/unit/test_hu_hamon_2018_scaled.py:            -67690,  -68660,  -69624,  -70581,  -71530,  -72471,  -73400,  -74318,
tests/unit/test_hu_hamon_2018_scaled.py:            -75222,  -76112,  -76987,  -77846,  -78688,  -79511,  -80315,  -81100,
tests/unit/test_hu_hamon_2018_scaled.py:            -81864,  -82608,  -83330,  -84030,  -84707,  -85362,  -85994,  -86602,
tests/unit/test_hu_hamon_2018_scaled.py:            -87186,  -87747,  -88283,  -88796,  -89284,  -89747,  -90186,  -90601,
tests/unit/test_hu_hamon_2018_scaled.py:            -90991,  -91356,  -91697,  -92014,  -92306,  -92573,  -92816,  -93035,
tests/unit/test_hu_hamon_2018_scaled.py:            -93229,  -93399,  -93545,  -93666,  -93763,  -93835,  -93884,  -93908,
tests/unit/test_hu_hamon_2018_scaled.py:            -39191,  -39217,  -39269,  -39347,  -39451,  -39581,  -39737,  -39920,
tests/unit/test_hu_hamon_2018_scaled.py:            -40129,  -40363,  -40624,  -40912,  -41226,  -41566,  -41932,  -42325,
tests/unit/test_hu_hamon_2018_scaled.py:            -42745,  -43191,  -43663,  -44162,  -44687,  -45238,  -45815,  -46419,
tests/unit/test_hu_hamon_2018_scaled.py:            -47048,  -47703,  -48384,  -49089,  -49820,  -50574,  -51353,  -52155,
tests/unit/test_hu_hamon_2018_scaled.py:            -52980,  -53827,  -54695,  -55584,  -56493,  -57421,  -58367,  -59329,
tests/unit/test_hu_hamon_2018_scaled.py:            -60307,  -61299,  -62305,  -63322,  -64349,  -65385,  -66429,  -67478,
tests/unit/test_hu_hamon_2018_scaled.py:            -68531,  -69587,  -70643,  -71701,  -72753,  -73802,  -74844,  -75880,
tests/unit/test_hu_hamon_2018_scaled.py:            -76907,  -77923,  -78928,  -79920,  -80897,  -81859,  -82804,  -83732,
tests/unit/test_hu_hamon_2018_scaled.py:            -84640,  -85529,  -86397,  -87244,  -88068,  -88870,  -89648,  -90403,
tests/unit/test_hu_hamon_2018_scaled.py:            -91133,  -91838,  -92518,  -93173,  -93803,  -94406,  -94983,  -95534,
tests/unit/test_hu_hamon_2018_scaled.py:            -96059,  -96558,  -97030,  -97476,  -97895,  -98288,  -98655,  -98995,
tests/unit/test_hu_hamon_2018_scaled.py:            -99308,  -99596,  -99857, -100092, -100300, -100483, -100639, -100769,
tests/unit/test_hu_hamon_2018_scaled.py:            -100873, -100951, -101003, -101029,  -41774,  -41802,  -41858,  -41941,
tests/unit/test_hu_hamon_2018_scaled.py:            -42052,  -42191,  -42358,  -42553,  -42776,  -43027,  -43307,  -43614,
tests/unit/test_hu_hamon_2018_scaled.py:            -43949,  -44313,  -44705,  -45125,  -45574,  -46051,  -46557,  -47090,
tests/unit/test_hu_hamon_2018_scaled.py:            -47653,  -48243,  -48861,  -49508,  -50182,  -50884,  -51614,  -52371,
tests/unit/test_hu_hamon_2018_scaled.py:            -53154,  -53964,  -54799,  -55660,  -56546,  -57456,  -58389,  -59344,
tests/unit/test_hu_hamon_2018_scaled.py:            -60321,  -61319,  -62336,  -63371,  -64423,  -65491,  -66573,  -67668,
tests/unit/test_hu_hamon_2018_scaled.py:            -68774,  -69890,  -71014,  -72144,  -73279,  -74416,  -75554,  -76693,
tests/unit/test_hu_hamon_2018_scaled.py:            -77827,  -78956,  -80079,  -81195,  -82300,  -83395,  -84476,  -85544,
tests/unit/test_hu_hamon_2018_scaled.py:            -86595,  -87630,  -88647,  -89644,  -90620,  -91576,  -92508,  -93418,
tests/unit/test_hu_hamon_2018_scaled.py:            -94303,  -95164,  -95999,  -96809,  -97592,  -98348,  -99077,  -99779,
tests/unit/test_hu_hamon_2018_scaled.py:            -100454, -101100, -101718, -102309, -102871, -103404, -103910, -104387,
tests/unit/test_hu_hamon_2018_scaled.py:            -104835, -105256, -105647, -106011, -106347, -106654, -106933, -107184,
tests/unit/test_hu_hamon_2018_scaled.py:            -107407, -107602, -107769, -107908, -108019, -108102, -108158, -108186,
tests/unit/test_hu_hamon_2018_scaled.py:            -44334,  -44363,  -44423,  -44511,  -44630,  -44778,  -44955,  -45163,
tests/unit/test_hu_hamon_2018_scaled.py:            -45400,  -45667,  -45965,  -46292,  -46649,  -47036,  -47454,  -47901,
tests/unit/test_hu_hamon_2018_scaled.py:            -48379,  -48888,  -49426,  -49995,  -50595,  -51224,  -51884,  -52574,
tests/unit/test_hu_hamon_2018_scaled.py:            -53293,  -54043,  -54822,  -55630,  -56467,  -57332,  -58225,  -59146,
tests/unit/test_hu_hamon_2018_scaled.py:            -60093,  -61066,  -62065,  -63088,  -64134,  -65202,  -66292,  -67401,
tests/unit/test_hu_hamon_2018_scaled.py:            -68529,  -69674,  -70835,  -72010,  -73196,  -74394,  -75600,  -76812,
tests/unit/test_hu_hamon_2018_scaled.py:            -78030,  -79251,  -80473,  -81696,  -82913,  -84125,  -85330,  -86527,
tests/unit/test_hu_hamon_2018_scaled.py:            -87713,  -88887,  -90047,  -91191,  -92319,  -93428,  -94517,  -95585,
tests/unit/test_hu_hamon_2018_scaled.py:            -96631,  -97653,  -98651,  -99624, -100571, -101492, -102385, -103250,
tests/unit/test_hu_hamon_2018_scaled.py:            -104086, -104894, -105673, -106422, -107142, -107831, -108491, -109120,
tests/unit/test_hu_hamon_2018_scaled.py:            -109720, -110289, -110827, -111335, -111813, -112261, -112678, -113066,
tests/unit/test_hu_hamon_2018_scaled.py:            -113423, -113750, -114047, -114314, -114551, -114759, -114937, -115085,
tests/unit/test_hu_hamon_2018_scaled.py:            -115203, -115292, -115351, -115380,  -46868,  -46899,  -46962,  -47056,
tests/unit/test_hu_hamon_2018_scaled.py:            -47182,  -47338,  -47527,  -47747,  -47998,  -48282,  -48597,  -48944,
tests/unit/test_hu_hamon_2018_scaled.py:            -49323,  -49733,  -50176,  -50652,  -51159,  -51698,  -52270,  -52875,
tests/unit/test_hu_hamon_2018_scaled.py:            -53511,  -54180,  -54881,  -55615,  -56380,  -57177,  -58006,  -58866,
tests/unit/test_hu_hamon_2018_scaled.py:            -59757,  -60678,  -61629,  -62610,  -63620,  -64658,  -65723,  -66814,
tests/unit/test_hu_hamon_2018_scaled.py:            -67931,  -69071,  -70235,  -71420,  -72625,  -73849,  -75090,  -76346,
tests/unit/test_hu_hamon_2018_scaled.py:            -77615,  -78895,  -80186,  -81483,  -82786,  -84092,  -85400,  -86709,
tests/unit/test_hu_hamon_2018_scaled.py:            -88011,  -89308,  -90597,  -91877,  -93146,  -94401,  -95641,  -96864,
tests/unit/test_hu_hamon_2018_scaled.py:            -98069,  -99254, -100417, -101557, -102673, -103764, -104829, -105866,
tests/unit/test_hu_hamon_2018_scaled.py:            -106876, -107857, -108808, -109729, -110620, -111479, -112308, -113105,
tests/unit/test_hu_hamon_2018_scaled.py:            -113870, -114603, -115304, -115973, -116609, -117214, -117785, -118325,
tests/unit/test_hu_hamon_2018_scaled.py:            -118832, -119307, -119750, -120161, -120540, -120887, -121202, -121485,
tests/unit/test_hu_hamon_2018_scaled.py:            -121737, -121957, -122145, -122302, -122427, -122521, -122584, -122615,
tests/unit/test_hu_hamon_2018_scaled.py:            -49375,  -49408,  -49475,  -49574,  -49706,  -49872,  -50071,  -50304,
tests/unit/test_hu_hamon_2018_scaled.py:            -50569,  -50869,  -51202,  -51568,  -51969,  -52403,  -52872,  -53374,
tests/unit/test_hu_hamon_2018_scaled.py:            -53911,  -54482,  -55087,  -55727,  -56401,  -57109,  -57852,  -58629,
tests/unit/test_hu_hamon_2018_scaled.py:            -59440,  -60285,  -61164,  -62076,  -63021,  -63999,  -65010,  -66052,
tests/unit/test_hu_hamon_2018_scaled.py:            -67125,  -68228,  -69360,  -70521,  -71709,  -72924,  -74163,  -75425,
tests/unit/test_hu_hamon_2018_scaled.py:            -76709,  -78013,  -79336,  -80675,  -82029,  -83395,  -84772,  -86156,
tests/unit/test_hu_hamon_2018_scaled.py:            -87547,  -88940,  -90336,  -91733,  -93123,  -94506,  -95882,  -97248,
tests/unit/test_hu_hamon_2018_scaled.py:            -98601,  -99939, -101261, -102565, -103849, -105111, -106349, -107563,
tests/unit/test_hu_hamon_2018_scaled.py:            -108751, -109911, -111044, -112146, -113219, -114261, -115271, -116249,
tests/unit/test_hu_hamon_2018_scaled.py:            -117194, -118106, -118985, -119830, -120641, -121418, -122160, -122868,
tests/unit/test_hu_hamon_2018_scaled.py:            -123542, -124182, -124787, -125358, -125895, -126397, -126865, -127300,
tests/unit/test_hu_hamon_2018_scaled.py:            -127700, -128067, -128400, -128699, -128965, -129197, -129396, -129562,
tests/unit/test_hu_hamon_2018_scaled.py:            -129694, -129794, -129860, -129893,  -51854,  -51889,  -51959,  -52063,
tests/unit/test_hu_hamon_2018_scaled.py:            -52203,  -52377,  -52587,  -52832,  -53112,  -53427,  -53778,  -54164,
tests/unit/test_hu_hamon_2018_scaled.py:            -54586,  -55044,  -55538,  -56068,  -56634,  -57236,  -57875,  -58550,
tests/unit/test_hu_hamon_2018_scaled.py:            -59261,  -60009,  -60793,  -61614,  -62471,  -63365,  -64294,  -65259,
tests/unit/test_hu_hamon_2018_scaled.py:            -66259,  -67295,  -68365,  -69469,  -70606,  -71775,  -72976,  -74208,
tests/unit/test_hu_hamon_2018_scaled.py:            -75469,  -76758,  -78074,  -79415,  -80780,  -82167,  -83574,  -84998,
tests/unit/test_hu_hamon_2018_scaled.py:            -86438,  -87892,  -89357,  -90831,  -92312,  -93796,  -95281,  -96769,
tests/unit/test_hu_hamon_2018_scaled.py:            -98249,  -99722, -101186, -102640, -104079, -105503, -106909, -108296,
tests/unit/test_hu_hamon_2018_scaled.py:            -109660, -111001, -112316, -113605, -114866, -116097, -117298, -118467,
tests/unit/test_hu_hamon_2018_scaled.py:            -119604, -120708, -121777, -122813, -123813, -124778, -125707, -126600,
tests/unit/test_hu_hamon_2018_scaled.py:            -127457, -128278, -129062, -129810, -130521, -131196, -131835, -132437,
tests/unit/test_hu_hamon_2018_scaled.py:            -133003, -133533, -134026, -134484, -134906, -135292, -135643, -135959,
tests/unit/test_hu_hamon_2018_scaled.py:            -136239, -136483, -136693, -136867, -137007, -137112, -137181, -137216,
tests/unit/test_hu_hamon_2018_scaled.py:            -54303,  -54339,  -54413,  -54522,  -54669,  -54852,  -55072,  -55330,
tests/unit/test_hu_hamon_2018_scaled.py:            -55624,  -55955,  -56323,  -56729,  -57173,  -57654,  -58173,  -58730,
tests/unit/test_hu_hamon_2018_scaled.py:            -59326,  -59959,  -60631,  -61341,  -62090,  -62878,  -63704,  -64569,
tests/unit/test_hu_hamon_2018_scaled.py:            -65472,  -66414,  -67394,  -68413,  -69469,  -70562,  -71692,  -72859,
tests/unit/test_hu_hamon_2018_scaled.py:            -74061,  -75298,  -76568,  -77872,  -79207,  -80573,  -81968,  -83390,
tests/unit/test_hu_hamon_2018_scaled.py:            -84837,  -86308,  -87801,  -89313,  -90842,  -92387,  -93943,  -95509,
tests/unit/test_hu_hamon_2018_scaled.py:            -97082,  -98659, -100237, -101819, -103391, -104956, -106511, -108055,
tests/unit/test_hu_hamon_2018_scaled.py:            -109584, -111095, -112587, -114058, -115505, -116926, -118321, -119686,
tests/unit/test_hu_hamon_2018_scaled.py:            -121021, -122324, -123595, -124831, -126033, -127200, -128330, -129423,
tests/unit/test_hu_hamon_2018_scaled.py:            -130478, -131496, -132477, -133418, -134322, -135186, -136012, -136800,
tests/unit/test_hu_hamon_2018_scaled.py:            -137549, -138259, -138931, -139564, -140160, -140717, -141236, -141717,
tests/unit/test_hu_hamon_2018_scaled.py:            -142160, -142566, -142935, -143266, -143560, -143817, -144037, -144221,
tests/unit/test_hu_hamon_2018_scaled.py:            -144367, -144477, -144550, -144587,  -56720,  -56758,  -56835,  -56950,
tests/unit/test_hu_hamon_2018_scaled.py:            -57104,  -57296,  -57526,  -57795,  -58104,  -58451,  -58837,  -59262,
tests/unit/test_hu_hamon_2018_scaled.py:            -59727,  -60232,  -60776,  -61360,  -61985,  -62650,  -63355,  -64101,
tests/unit/test_hu_hamon_2018_scaled.py:            -64887,  -65714,  -66582,  -67491,  -68441,  -69432,  -70463,  -71535,
tests/unit/test_hu_hamon_2018_scaled.py:            -72647,  -73799,  -74990,  -76220,  -77488,  -78793,  -80135,  -81512,
tests/unit/test_hu_hamon_2018_scaled.py:            -82923,  -84367,  -85842,  -87346,  -88878,  -90436,  -92017,  -93619,
tests/unit/test_hu_hamon_2018_scaled.py:            -95240,  -96877,  -98527, -100188, -101856, -103529, -105204, -106882,
tests/unit/test_hu_hamon_2018_scaled.py:            -108549, -110209, -111859, -113495, -115115, -116717, -118297, -119855,
tests/unit/test_hu_hamon_2018_scaled.py:            -121386, -122890, -124365, -125808, -127219, -128596, -129937, -131242,
tests/unit/test_hu_hamon_2018_scaled.py:            -132510, -133740, -134931, -136082, -137194, -138266, -139297, -140287,
tests/unit/test_hu_hamon_2018_scaled.py:            -141237, -142146, -143014, -143841, -144628, -145374, -146079, -146743,
tests/unit/test_hu_hamon_2018_scaled.py:            -147368, -147952, -148496, -149001, -149466, -149891, -150277, -150624,
tests/unit/test_hu_hamon_2018_scaled.py:            -150933, -151202, -151432, -151624, -151778, -151893, -151969, -152008,
tests/unit/test_hu_hamon_2018_scaled.py:            -59104,  -59144,  -59225,  -59345,  -59505,  -59706,  -59947,  -60228,
tests/unit/test_hu_hamon_2018_scaled.py:            -60550,  -60913,  -61317,  -61761,  -62248,  -62775,  -63345,  -63956,
tests/unit/test_hu_hamon_2018_scaled.py:            -64610,  -65305,  -66044,  -66825,  -67649,  -68516,  -69426,  -70379,
tests/unit/test_hu_hamon_2018_scaled.py:            -71376,  -72416,  -73498,  -74624,  -75793,  -77003,  -78256,  -79550,
tests/unit/test_hu_hamon_2018_scaled.py:            -80885,  -82260,  -83673,  -85125,  -86613,  -88137,  -89694,  -91283,
tests/unit/test_hu_hamon_2018_scaled.py:            -92902,  -94549,  -96221,  -97916,  -99631, -101364, -103111, -104869,
tests/unit/test_hu_hamon_2018_scaled.py:            -106636, -108408, -110182, -111959, -113725, -115483, -117229, -118961,
tests/unit/test_hu_hamon_2018_scaled.py:            -120676, -122371, -124042, -125688, -127307, -128895, -130452, -131975,
tests/unit/test_hu_hamon_2018_scaled.py:            -133463, -134915, -136328, -137703, -139037, -140331, -141584, -142794,
tests/unit/test_hu_hamon_2018_scaled.py:            -143963, -145088, -146171, -147211, -148207, -149160, -150070, -150937,
tests/unit/test_hu_hamon_2018_scaled.py:            -151761, -152542, -153281, -153976, -154630, -155241, -155811, -156338,
tests/unit/test_hu_hamon_2018_scaled.py:            -156824, -157269, -157673, -158036, -158358, -158639, -158880, -159081,
tests/unit/test_hu_hamon_2018_scaled.py:            -159241, -159361, -159441, -159481,  -61454,  -61496,  -61579,  -61705,
tests/unit/test_hu_hamon_2018_scaled.py:            -61872,  -62081,  -62332,  -62626,  -62961,  -63340,  -63761,  -64225,
tests/unit/test_hu_hamon_2018_scaled.py:            -64732,  -65283,  -65877,  -66516,  -67198,  -67925,  -68696,  -69513,
tests/unit/test_hu_hamon_2018_scaled.py:            -70374,  -71281,  -72233,  -73231,  -74274,  -75363,  -76497,  -77677,
tests/unit/test_hu_hamon_2018_scaled.py:            -78903,  -80173,  -81488,  -82847,  -84250,  -85695,  -87182,  -88710,
tests/unit/test_hu_hamon_2018_scaled.py:            -90277,  -91882,  -93523,  -95199,  -96907,  -98645, -100410, -102201,
tests/unit/test_hu_hamon_2018_scaled.py:            -104014, -105845, -107693, -109552, -111421, -113295, -115171, -117052,
tests/unit/test_hu_hamon_2018_scaled.py:            -118920, -120779, -122626, -124457, -126269, -128059, -129824, -131561,
tests/unit/test_hu_hamon_2018_scaled.py:            -133269, -134944, -136585, -138190, -139757, -141284, -142771, -144216,
tests/unit/test_hu_hamon_2018_scaled.py:            -145618, -146977, -148292, -149562, -150787, -151967, -153102, -154191,
tests/unit/test_hu_hamon_2018_scaled.py:            -155234, -156231, -157184, -158090, -158952, -159768, -160539, -161266,
tests/unit/test_hu_hamon_2018_scaled.py:            -161949, -162587, -163181, -163732, -164239, -164703, -165124, -165503,
tests/unit/test_hu_hamon_2018_scaled.py:            -165838, -166132, -166383, -166592, -166759, -166885, -166968, -167010,
tests/unit/test_hu_hamon_2018_scaled.py:            -63768,  -63811,  -63898,  -64029,  -64202,  -64420,  -64681,  -64987,
tests/unit/test_hu_hamon_2018_scaled.py:            -65336,  -65730,  -66168,  -66651,  -67180,  -67753,  -68372,  -69037,
tests/unit/test_hu_hamon_2018_scaled.py:            -69748,  -70506,  -71310,  -72162,  -73061,  -74007,  -75001,  -76043,
tests/unit/test_hu_hamon_2018_scaled.py:            -77133,  -78271,  -79458,  -80693,  -81975,  -83306,  -84684,  -86108,
tests/unit/test_hu_hamon_2018_scaled.py:            -87580,  -89097,  -90658,  -92263,  -93911,  -95599,  -97326,  -99091,
tests/unit/test_hu_hamon_2018_scaled.py:            -100891, -102723, -104585, -106474, -108387, -110321, -112272, -114237,
tests/unit/test_hu_hamon_2018_scaled.py:            -116211, -118191, -120174, -122162, -124135, -126099, -128049, -129982,
tests/unit/test_hu_hamon_2018_scaled.py:            -131895, -133783, -135645, -137477, -139276, -141040, -142767, -144455,
tests/unit/test_hu_hamon_2018_scaled.py:            -146102, -147707, -149269, -150785, -152256, -153681, -155059, -156389,
tests/unit/test_hu_hamon_2018_scaled.py:            -157672, -158906, -160093, -161231, -162321, -163363, -164357, -165303,
tests/unit/test_hu_hamon_2018_scaled.py:            -166202, -167053, -167858, -168615, -169327, -169992, -170611, -171184,
tests/unit/test_hu_hamon_2018_scaled.py:            -171712, -172195, -172634, -173028, -173377, -173682, -173944, -174161,
tests/unit/test_hu_hamon_2018_scaled.py:            -174335, -174465, -174552, -174596,  -66044,  -66090,  -66180,  -66315,
tests/unit/test_hu_hamon_2018_scaled.py:            -66495,  -66721,  -66993,  -67310,  -67673,  -68082,  -68537,  -69039,
tests/unit/test_hu_hamon_2018_scaled.py:            -69588,  -70184,  -70828,  -71519,  -72259,  -73047,  -73884,  -74770,
tests/unit/test_hu_hamon_2018_scaled.py:            -75706,  -76692,  -77728,  -78815,  -79952,  -81139,  -82378,  -83667,
tests/unit/test_hu_hamon_2018_scaled.py:            -85008,  -86399,  -87840,  -89332,  -90872,  -92462,  -94099,  -95783,
tests/unit/test_hu_hamon_2018_scaled.py:            -97513,  -99286, -101102, -102958, -104851, -106780, -108742, -110733,
tests/unit/test_hu_hamon_2018_scaled.py:            -112750, -114790, -116848, -118922, -121006, -123096, -125189, -127288,
tests/unit/test_hu_hamon_2018_scaled.py:            -129372, -131444, -133502, -135541, -137558, -139548, -141509, -143438,
tests/unit/test_hu_hamon_2018_scaled.py:            -145331, -147186, -149002, -150775, -152504, -154188, -155825, -157414,
tests/unit/test_hu_hamon_2018_scaled.py:            -158955, -160446, -161887, -163278, -164619, -165908, -167147, -168334,
tests/unit/test_hu_hamon_2018_scaled.py:            -169471, -170558, -171594, -172579, -173515, -174402, -175239, -176027,
tests/unit/test_hu_hamon_2018_scaled.py:            -176767, -177458, -178102, -178698, -179247, -179749, -180204, -180613,
tests/unit/test_hu_hamon_2018_scaled.py:            -180976, -181293, -181564, -181790, -181971, -182106, -182196, -182241,
tests/unit/test_hu_hamon_2018_scaled.py:            -68282,  -68329,  -68422,  -68562,  -68749,  -68983,  -69265,  -69593,
tests/unit/test_hu_hamon_2018_scaled.py:            -69969,  -70393,  -70866,  -71386,  -71955,  -72574,  -73242,  -73959,
tests/unit/test_hu_hamon_2018_scaled.py:            -74727,  -75546,  -76416,  -77337,  -78309,  -79335,  -80412,  -81543,
tests/unit/test_hu_hamon_2018_scaled.py:            -82727,  -83964,  -85255,  -86599,  -87998,  -89450,  -90955,  -92513,
tests/unit/test_hu_hamon_2018_scaled.py:            -94125,  -95788,  -97502,  -99267, -101080, -102941, -104847, -106796,
tests/unit/test_hu_hamon_2018_scaled.py:            -108786, -110815, -112880, -114976, -117101, -119250, -121421, -123607,
tests/unit/test_hu_hamon_2018_scaled.py:            -125805, -128011, -130219, -132433, -134631, -136817, -138986, -141135,
tests/unit/test_hu_hamon_2018_scaled.py:            -143259, -145355, -147419, -149447, -151437, -153386, -155292, -157152,
tests/unit/test_hu_hamon_2018_scaled.py:            -158965, -160730, -162444, -164107, -165718, -167276, -168782, -170234,
tests/unit/test_hu_hamon_2018_scaled.py:            -171632, -172976, -174267, -175504, -176688, -177819, -178896, -179921,
tests/unit/test_hu_hamon_2018_scaled.py:            -180894, -181815, -182685, -183504, -184272, -184989, -185657, -186276,
tests/unit/test_hu_hamon_2018_scaled.py:            -186845, -187366, -187838, -188262, -188638, -188966, -189248, -189482,
tests/unit/test_hu_hamon_2018_scaled.py:            -189669, -189809, -189902, -189949,  -70479,  -70528,  -70624,  -70769,
tests/unit/test_hu_hamon_2018_scaled.py:            -70963,  -71205,  -71496,  -71836,  -72225,  -72664,  -73152,  -73691,
tests/unit/test_hu_hamon_2018_scaled.py:            -74281,  -74921,  -75613,  -76356,  -77152,  -78001,  -78903,  -79858,
tests/unit/test_hu_hamon_2018_scaled.py:            -80868,  -81932,  -83051,  -84226,  -85456,  -86743,  -88086,  -89486,
tests/unit/test_hu_hamon_2018_scaled.py:            -90942,  -92455,  -94025,  -95652,  -97334,  -99072, -100864, -102711,
tests/unit/test_hu_hamon_2018_scaled.py:            -104609, -106559, -108558, -110603, -112694, -114825, -116996, -119201,
tests/unit/test_hu_hamon_2018_scaled.py:            -121438, -123702, -125988, -128292, -130610, -132935, -135262, -137598,
tests/unit/test_hu_hamon_2018_scaled.py:            -139914, -142218, -144503, -146767, -149003, -151208, -153378, -155509,
tests/unit/test_hu_hamon_2018_scaled.py:            -157599, -159644, -161643, -163592, -165491, -167337, -169129, -170867,
tests/unit/test_hu_hamon_2018_scaled.py:            -172549, -174175, -175745, -177259, -178715, -180115, -181458, -182744,
tests/unit/test_hu_hamon_2018_scaled.py:            -183975, -185149, -186269, -187333, -188342, -189298, -190200, -191048,
tests/unit/test_hu_hamon_2018_scaled.py:            -191844, -192588, -193279, -193920, -194509, -195048, -195537, -195976,
tests/unit/test_hu_hamon_2018_scaled.py:            -196365, -196705, -196996, -197238, -197431, -197576, -197673, -197721,
tests/unit/test_hu_hamon_2018_scaled.py:            -72635,  -72685,  -72785,  -72934,  -73134,  -73384,  -73684,  -74036,
tests/unit/test_hu_hamon_2018_scaled.py:            -74438,  -74891,  -75396,  -75953,  -76562,  -77224,  -77939,  -78708,
tests/unit/test_hu_hamon_2018_scaled.py:            -79532,  -80410,  -81344,  -82333,  -83379,  -84482,  -85642,  -86861,
tests/unit/test_hu_hamon_2018_scaled.py:            -88137,  -89473,  -90869,  -92323,  -93838,  -95413,  -97048,  -98742,
tests/unit/test_hu_hamon_2018_scaled.py:            -100497, -102310, -104182, -106112, -108098, -110138, -112232, -114377,
tests/unit/test_hu_hamon_2018_scaled.py:            -116569, -118808, -121088, -123407, -125760, -128142, -130550, -132977,
tests/unit/test_hu_hamon_2018_scaled.py:            -135418, -137868, -140322, -142784, -145224, -147650, -150057, -152439,
tests/unit/test_hu_hamon_2018_scaled.py:            -154791, -157109, -159389, -161627, -163820, -165964, -168057, -170098,
tests/unit/test_hu_hamon_2018_scaled.py:            -172084, -174013, -175885, -177698, -179453, -181147, -182782, -184357,
tests/unit/test_hu_hamon_2018_scaled.py:            -185871, -187326, -188722, -190057, -191334, -192553, -193713, -194816,
tests/unit/test_hu_hamon_2018_scaled.py:            -195862, -196851, -197785, -198663, -199487, -200256, -200971, -201633,
tests/unit/test_hu_hamon_2018_scaled.py:            -202243, -202799, -203304, -203758, -204160, -204511, -204811, -205061,
tests/unit/test_hu_hamon_2018_scaled.py:            -205261, -205411, -205511, -205560,  -74748,  -74799,  -74902,  -75056,
tests/unit/test_hu_hamon_2018_scaled.py:            -75262,  -75520,  -75829,  -76191,  -76606,  -77073,  -77594,  -78169,
tests/unit/test_hu_hamon_2018_scaled.py:            -78797,  -79481,  -80219,  -81013,  -81864,  -82771,  -83736,  -84759,
tests/unit/test_hu_hamon_2018_scaled.py:            -85841,  -86982,  -88183,  -89445,  -90768,  -92153,  -93600,  -95110,
tests/unit/test_hu_hamon_2018_scaled.py:            -96683,  -98320, -100019, -101783, -103610, -105500, -107452, -109467,
tests/unit/test_hu_hamon_2018_scaled.py:            -111541, -113675, -115866, -118112, -120411, -122759, -125153, -127589,
tests/unit/test_hu_hamon_2018_scaled.py:            -130063, -132570, -135104, -137659, -140231, -142812, -145396, -147991,
tests/unit/test_hu_hamon_2018_scaled.py:            -150561, -153116, -155650, -158155, -160629, -163064, -165458, -167806,
tests/unit/test_hu_hamon_2018_scaled.py:            -170104, -172350, -174541, -176675, -178749, -180763, -182716, -184605,
tests/unit/test_hu_hamon_2018_scaled.py:            -186432, -188196, -189896, -191532, -193105, -194615, -196063, -197447,
tests/unit/test_hu_hamon_2018_scaled.py:            -198770, -200032, -201234, -202375, -203457, -204480, -205444, -206352,
tests/unit/test_hu_hamon_2018_scaled.py:            -207202, -207997, -208735, -209418, -210047, -210622, -211143, -211610,
tests/unit/test_hu_hamon_2018_scaled.py:            -212025, -212387, -212696, -212954, -213160, -213314, -213417, -213469,
tests/unit/test_hu_hamon_2018_scaled.py:            -76816,  -76869,  -76974,  -77133,  -77345,  -77610,  -77929,  -78302,
tests/unit/test_hu_hamon_2018_scaled.py:            -78729,  -79210,  -79746,  -80338,  -80986,  -81690,  -82451,  -83270,
tests/unit/test_hu_hamon_2018_scaled.py:            -84147,  -85083,  -86079,  -87135,  -88252,  -89431,  -90672,  -91977,
tests/unit/test_hu_hamon_2018_scaled.py:            -93345,  -94779,  -96278,  -97842,  -99474, -101172, -102937, -104770,
tests/unit/test_hu_hamon_2018_scaled.py:            -106670, -108637, -110671, -112771, -114936, -117165, -119456, -121806,
tests/unit/test_hu_hamon_2018_scaled.py:            -124214, -126676, -129188, -131747, -134346, -136982, -139648, -142339,
tests/unit/test_hu_hamon_2018_scaled.py:            -145047, -147766, -150488, -153222, -155929, -158618, -161284, -163919,
tests/unit/test_hu_hamon_2018_scaled.py:            -166518, -169076, -171588, -174050, -176457, -178807, -181098, -183327,
tests/unit/test_hu_hamon_2018_scaled.py:            -185492, -187592, -189626, -191593, -193493, -195326, -197091, -198789,
tests/unit/test_hu_hamon_2018_scaled.py:            -200420, -201985, -203484, -204918, -206286, -207591, -208833, -210012,
tests/unit/test_hu_hamon_2018_scaled.py:            -211129, -212185, -213181, -214117, -214994, -215813, -216574, -217278,
tests/unit/test_hu_hamon_2018_scaled.py:            -217926, -218517, -219054, -219535, -219962, -220335, -220654, -220919,
tests/unit/test_hu_hamon_2018_scaled.py:            -221131, -221290, -221395, -221448,  -78838,  -78893,  -79001,  -79165,
tests/unit/test_hu_hamon_2018_scaled.py:            -79382,  -79655,  -79982,  -80365,  -80804,  -81299,  -81851,  -82459,
tests/unit/test_hu_hamon_2018_scaled.py:            -83125,  -83850,  -84633,  -85476,  -86379,  -87343,  -88369,  -89457,
tests/unit/test_hu_hamon_2018_scaled.py:            -90609,  -91825,  -93106,  -94453,  -95867,  -97348,  -98898, -100518,
tests/unit/test_hu_hamon_2018_scaled.py:            -102207, -103966, -105797, -107699, -109672, -111718, -113834, -116021,
tests/unit/test_hu_hamon_2018_scaled.py:            -118278, -120604, -122997, -125455, -127975, -130554, -133189, -135875,
tests/unit/test_hu_hamon_2018_scaled.py:            -138606, -141377, -144182, -147014, -149866, -152730, -155597, -158477,
tests/unit/test_hu_hamon_2018_scaled.py:            -161328, -164159, -166964, -169734, -172465, -175150, -177785, -180364,
tests/unit/test_hu_hamon_2018_scaled.py:            -182884, -185341, -187734, -190060, -192317, -194504, -196621, -198666,
tests/unit/test_hu_hamon_2018_scaled.py:            -200639, -202541, -204372, -206132, -207821, -209440, -210990, -212472,
tests/unit/test_hu_hamon_2018_scaled.py:            -213886, -215233, -216514, -217730, -218882, -219971, -220996, -221960,
tests/unit/test_hu_hamon_2018_scaled.py:            -222864, -223706, -224490, -225214, -225880, -226489, -227041, -227535,
tests/unit/test_hu_hamon_2018_scaled.py:            -227974, -228357, -228685, -228958, -229175, -229338, -229447, -229501,
tests/unit/test_hu_hamon_2018_scaled.py:            -80814,  -80870,  -80981,  -81149,  -81372,  -81652,  -81988,  -82381,
tests/unit/test_hu_hamon_2018_scaled.py:            -82831,  -83339,  -83905,  -84530,  -85214,  -85959,  -86763,  -87630,
tests/unit/test_hu_hamon_2018_scaled.py:            -88558,  -89549,  -90604,  -91724,  -92910,  -94163,  -95483,  -96871,
tests/unit/test_hu_hamon_2018_scaled.py:            -98330,  -99859, -101459, -103132, -104879, -106700, -108595, -110567,
tests/unit/test_hu_hamon_2018_scaled.py:            -112614, -114737, -116937, -119212, -121563, -123987, -126485, -129053,
tests/unit/test_hu_hamon_2018_scaled.py:            -131689, -134390, -137152, -139970, -142838, -145752, -148703, -151684,
tests/unit/test_hu_hamon_2018_scaled.py:            -154687, -157704, -160725, -163760, -166762, -169743, -172693, -175606,
tests/unit/test_hu_hamon_2018_scaled.py:            -178474, -181291, -184053, -186754, -189390, -191958, -194455, -196880,
tests/unit/test_hu_hamon_2018_scaled.py:            -199230, -201506, -203705, -205829, -207876, -209847, -211743, -213564,
tests/unit/test_hu_hamon_2018_scaled.py:            -215311, -216984, -218585, -220114, -221572, -222961, -224281, -225533,
tests/unit/test_hu_hamon_2018_scaled.py:            -226719, -227839, -228895, -229886, -230814, -231681, -232486, -233230,
tests/unit/test_hu_hamon_2018_scaled.py:            -233914, -234539, -235105, -235613, -236064, -236457, -236793, -237073,
tests/unit/test_hu_hamon_2018_scaled.py:            -237296, -237463, -237575, -237630,  -82742,  -82799,  -82913,  -83084,
tests/unit/test_hu_hamon_2018_scaled.py:            -83313,  -83600,  -83944,  -84347,  -84808,  -85329,  -85909,  -86550,
tests/unit/test_hu_hamon_2018_scaled.py:            -87252,  -88015,  -88840,  -89729,  -90682,  -91700,  -92784,  -93935,
tests/unit/test_hu_hamon_2018_scaled.py:            -95154,  -96442,  -97800,  -99229, -100731, -102307, -103957, -105683,
tests/unit/test_hu_hamon_2018_scaled.py:            -107487, -109368, -111329, -113369, -115490, -117692, -119975, -122339,
tests/unit/test_hu_hamon_2018_scaled.py:            -124784, -127310, -129914, -132595, -135350, -138177, -141071, -144027,
tests/unit/test_hu_hamon_2018_scaled.py:            -147040, -150102, -153207, -156346, -159509, -162688, -165872, -169071,
tests/unit/test_hu_hamon_2018_scaled.py:            -172234, -175372, -178476, -181538, -184550, -187506, -190399, -193226,
tests/unit/test_hu_hamon_2018_scaled.py:            -195981, -198662, -201266, -203792, -206237, -208602, -210885, -213087,
tests/unit/test_hu_hamon_2018_scaled.py:            -215208, -217248, -219209, -221090, -222894, -224620, -226271, -227847,
tests/unit/test_hu_hamon_2018_scaled.py:            -229349, -230778, -232136, -233424, -234643, -235794, -236878, -237896,
tests/unit/test_hu_hamon_2018_scaled.py:            -238849, -239738, -240564, -241327, -242029, -242670, -243250, -243771,
tests/unit/test_hu_hamon_2018_scaled.py:            -244232, -244635, -244979, -245266, -245495, -245666, -245780, -245838,
tests/unit/test_hu_hamon_2018_scaled.py:            -84620,  -84678,  -84795,  -84970,  -85204,  -85498,  -85850,  -86262,
tests/unit/test_hu_hamon_2018_scaled.py:            -86734,  -87267,  -87861,  -88517,  -89235,  -90017,  -90863,  -91773,
tests/unit/test_hu_hamon_2018_scaled.py:            -92750,  -93794,  -94905,  -96086,  -97337,  -98659, -100054, -101524,
tests/unit/test_hu_hamon_2018_scaled.py:            -103068, -104689, -106388, -108167, -110026, -111968, -113992, -116101,
tests/unit/test_hu_hamon_2018_scaled.py:            -118295, -120576, -122943, -125397, -127938, -130565, -133278, -136075,
tests/unit/test_hu_hamon_2018_scaled.py:            -138953, -141910, -144941, -148041, -151205, -154424, -157692, -160997,
tests/unit/test_hu_hamon_2018_scaled.py:            -164331, -167682, -171039, -174413, -177746, -181051, -184318, -187537,
tests/unit/test_hu_hamon_2018_scaled.py:            -190700, -193800, -196831, -199787, -202666, -205463, -208176, -210803,
tests/unit/test_hu_hamon_2018_scaled.py:            -213344, -215799, -218166, -220446, -222641, -224750, -226774, -228716,
tests/unit/test_hu_hamon_2018_scaled.py:            -230575, -232354, -234053, -235675, -237219, -238689, -240084, -241406,
tests/unit/test_hu_hamon_2018_scaled.py:            -242658, -243838, -244950, -245994, -246970, -247881, -248727, -249509,
tests/unit/test_hu_hamon_2018_scaled.py:            -250227, -250883, -251477, -252010, -252483, -252895, -253247, -253540,
tests/unit/test_hu_hamon_2018_scaled.py:            -253774, -253950, -254066, -254125,  -86448,  -86507,  -86627,  -86806,
tests/unit/test_hu_hamon_2018_scaled.py:            -87045,  -87344,  -87704,  -88125,  -88607,  -89152,  -89759,  -90430,
tests/unit/test_hu_hamon_2018_scaled.py:            -91164,  -91963,  -92828,  -93760,  -94760,  -95828,  -96966,  -98176,
tests/unit/test_hu_hamon_2018_scaled.py:            -99458, -100814, -102245, -103752, -105338, -107004, -108751, -110580,
tests/unit/test_hu_hamon_2018_scaled.py:            -112494, -114495, -116582, -118759, -121026, -123384, -125835, -128379,
tests/unit/test_hu_hamon_2018_scaled.py:            -131017, -133747, -136571, -139486, -142491, -145582, -148755, -152006,
tests/unit/test_hu_hamon_2018_scaled.py:            -155328, -158714, -162153, -165636, -169151, -172686, -176228, -179789,
tests/unit/test_hu_hamon_2018_scaled.py:            -183303, -186785, -190224, -193609, -196931, -200181, -203355, -206446,
tests/unit/test_hu_hamon_2018_scaled.py:            -209451, -212366, -215190, -217921, -220558, -223103, -225554, -227912,
tests/unit/test_hu_hamon_2018_scaled.py:            -230179, -232356, -234444, -236445, -238359, -240189, -241936, -243602,
tests/unit/test_hu_hamon_2018_scaled.py:            -245188, -246695, -248127, -249483, -250765, -251974, -253113, -254181,
tests/unit/test_hu_hamon_2018_scaled.py:            -255181, -256113, -256978, -257777, -258512, -259182, -259790, -260334,
tests/unit/test_hu_hamon_2018_scaled.py:            -260817, -261238, -261598, -261897, -262136, -262315, -262435, -262494,
tests/unit/test_hu_hamon_2018_scaled.py:            -88224,  -88285,  -88406,  -88589,  -88833,  -89138,  -89505,  -89935,
tests/unit/test_hu_hamon_2018_scaled.py:            -90427,  -90983,  -91602,  -92287,  -93036,  -93853,  -94736,  -95688,
tests/unit/test_hu_hamon_2018_scaled.py:            -96709,  -97801,  -98965, -100203, -101514, -102902, -104368, -105913,
tests/unit/test_hu_hamon_2018_scaled.py:            -107538, -109247, -111040, -112920, -114887, -116945, -119094, -121338,
tests/unit/test_hu_hamon_2018_scaled.py:            -123676, -126112, -128646, -131280, -134014, -136849, -139785, -142821,
tests/unit/test_hu_hamon_2018_scaled.py:            -145955, -149185, -152507, -155915, -159403, -162963, -166585, -170258,
tests/unit/test_hu_hamon_2018_scaled.py:            -173967, -177699, -181440, -185201, -188910, -192581, -196203, -199762,
tests/unit/test_hu_hamon_2018_scaled.py:            -203251, -206659, -209981, -213210, -216345, -219381, -222317, -225152,
tests/unit/test_hu_hamon_2018_scaled.py:            -227887, -230521, -233055, -235491, -237830, -240074, -242224, -244282,
tests/unit/test_hu_hamon_2018_scaled.py:            -246249, -248129, -249922, -251631, -253257, -254802, -256268, -257656,
tests/unit/test_hu_hamon_2018_scaled.py:            -258968, -260205, -261369, -262461, -263483, -264435, -265319, -266135,
tests/unit/test_hu_hamon_2018_scaled.py:            -266885, -267569, -268189, -268744, -269237, -269666, -270033, -270339,
tests/unit/test_hu_hamon_2018_scaled.py:            -270583, -270765, -270887, -270948,  -89948,  -90010,  -90134,  -90320,
tests/unit/test_hu_hamon_2018_scaled.py:            -90568,  -90879,  -91253,  -91690,  -92192,  -92758,  -93389,  -94087,
tests/unit/test_hu_hamon_2018_scaled.py:            -94851,  -95683,  -96584,  -97555,  -98598,  -99712, -100900, -102164,
tests/unit/test_hu_hamon_2018_scaled.py:            -103504, -104923, -106421, -108002, -109666, -111416, -113254, -115181,
tests/unit/test_hu_hamon_2018_scaled.py:            -117200, -119314, -121524, -123832, -126241, -128753, -131370, -134093,
tests/unit/test_hu_hamon_2018_scaled.py:            -136924, -139863, -142913, -146071, -149338, -152710, -156185, -159758,
tests/unit/test_hu_hamon_2018_scaled.py:            -163421, -167167, -170983, -174858, -178776, -182721, -186676, -190653,
tests/unit/test_hu_hamon_2018_scaled.py:            -194571, -198445, -202261, -206006, -209670, -213242, -216718, -220090,
tests/unit/test_hu_hamon_2018_scaled.py:            -223357, -226516, -229566, -232506, -235337, -238060, -240677, -243189,
tests/unit/test_hu_hamon_2018_scaled.py:            -245599, -247907, -250118, -252231, -254251, -256179, -258017, -259767,
tests/unit/test_hu_hamon_2018_scaled.py:            -261431, -263012, -264511, -265930, -267270, -268534, -269722, -270837,
tests/unit/test_hu_hamon_2018_scaled.py:            -271879, -272850, -273751, -274584, -275348, -276046, -276677, -277243,
tests/unit/test_hu_hamon_2018_scaled.py:            -277745, -278182, -278556, -278867, -279116, -279302, -279426, -279488,
tests/unit/test_hu_hamon_2018_scaled.py:            -91618,  -91681,  -91807,  -91996,  -92249,  -92565,  -92946,  -93391,
tests/unit/test_hu_hamon_2018_scaled.py:            -93901,  -94477,  -95119,  -95829,  -96607,  -97454,  -98372,  -99361,
tests/unit/test_hu_hamon_2018_scaled.py:            -100423, -101558, -102770, -104058, -105425, -106873, -108403, -110018,
tests/unit/test_hu_hamon_2018_scaled.py:            -111718, -113508, -115388, -117362, -119431, -121598, -123866, -126238,
tests/unit/test_hu_hamon_2018_scaled.py:            -128715, -131302, -133999, -136810, -139737, -142781, -145944, -149227,
tests/unit/test_hu_hamon_2018_scaled.py:            -152628, -156147, -159781, -163525, -167373, -171315, -175339, -179432,
tests/unit/test_hu_hamon_2018_scaled.py:            -183576, -187751, -191938, -196150, -200293, -204385, -208409, -212351,
tests/unit/test_hu_hamon_2018_scaled.py:            -216199, -219943, -223578, -227097, -230499, -233782, -236945, -239990,
tests/unit/test_hu_hamon_2018_scaled.py:            -242917, -245728, -248426, -251013, -253491, -255863, -258132, -260299,
tests/unit/test_hu_hamon_2018_scaled.py:            -262369, -264342, -266223, -268013, -269714, -271328, -272859, -274306,
tests/unit/test_hu_hamon_2018_scaled.py:            -275674, -276962, -278174, -279310, -280372, -281361, -282279, -283126,
tests/unit/test_hu_hamon_2018_scaled.py:            -283904, -284614, -285257, -285833, -286343, -286788, -287168, -287485,
tests/unit/test_hu_hamon_2018_scaled.py:            -287737, -287927, -288053, -288115,  -93234,  -93298,  -93426,  -93618,
tests/unit/test_hu_hamon_2018_scaled.py:            -93875,  -94196,  -94582,  -95034,  -95553,  -96138,  -96791,  -97512,
tests/unit/test_hu_hamon_2018_scaled.py:            -98303,  -99164, -100097, -101103, -102183, -103339, -104572, -105884,
tests/unit/test_hu_hamon_2018_scaled.py:            -107276, -108751, -110311, -111957, -113693, -115519, -117440, -119457,
tests/unit/test_hu_hamon_2018_scaled.py:            -121574, -123793, -126117, -128549, -131093, -133751, -136528, -139425,
tests/unit/test_hu_hamon_2018_scaled.py:            -142446, -145594, -148870, -152277, -155815, -159484, -163281, -167204,
tests/unit/test_hu_hamon_2018_scaled.py:            -171245, -175396, -179643, -183971, -188360, -192788, -197228, -201696,
tests/unit/test_hu_hamon_2018_scaled.py:            -206085, -210412, -214660, -218811, -222852, -226775, -230573, -234243,
tests/unit/test_hu_hamon_2018_scaled.py:            -237781, -241189, -244466, -247614, -250635, -253533, -256310, -258969,
tests/unit/test_hu_hamon_2018_scaled.py:            -261513, -263946, -266270, -268490, -270607, -272624, -274545, -276372,
tests/unit/test_hu_hamon_2018_scaled.py:            -278108, -279754, -281314, -282790, -284182, -285494, -286728, -287883,
tests/unit/test_hu_hamon_2018_scaled.py:            -288964, -289970, -290903, -291764, -292555, -293277, -293930, -294515,
tests/unit/test_hu_hamon_2018_scaled.py:            -295033, -295485, -295872, -296193, -296449, -296642, -296769, -296833,
tests/unit/test_hu_hamon_2018_scaled.py:            -94795,  -94860,  -94990,  -95184,  -95445,  -95770,  -96162,  -96621,
tests/unit/test_hu_hamon_2018_scaled.py:            -97146,  -97740,  -98402,  -99134,  -99937, -100811, -101759, -102780,
tests/unit/test_hu_hamon_2018_scaled.py:            -103877, -105051, -106305, -107638, -109054, -110555, -112142, -113818,
tests/unit/test_hu_hamon_2018_scaled.py:            -115586, -117448, -119406, -121465, -123626, -125894, -128271, -130761,
tests/unit/test_hu_hamon_2018_scaled.py:            -133368, -136096, -138948, -141929, -145042, -148291, -151680, -155211,
tests/unit/test_hu_hamon_2018_scaled.py:            -158886, -162707, -166672, -170780, -175025, -179397, -183884, -188467,
tests/unit/test_hu_hamon_2018_scaled.py:            -193124, -197828, -202549, -207300, -211957, -216540, -221027, -225400,
tests/unit/test_hu_hamon_2018_scaled.py:            -229645, -233753, -237719, -241541, -245217, -248749, -252138, -255388,
tests/unit/test_hu_hamon_2018_scaled.py:            -258501, -261483, -264336, -267064, -269671, -272162, -274540, -276807,
tests/unit/test_hu_hamon_2018_scaled.py:            -278969, -281028, -282987, -284849, -286617, -288294, -289881, -291382,
tests/unit/test_hu_hamon_2018_scaled.py:            -292798, -294132, -295385, -296560, -297657, -298678, -299626, -300500,
tests/unit/test_hu_hamon_2018_scaled.py:            -301303, -302035, -302698, -303291, -303817, -304276, -304668, -304994,
tests/unit/test_hu_hamon_2018_scaled.py:            -305254, -305448, -305578, -305643,  -96300,  -96366,  -96497,  -96694,
tests/unit/test_hu_hamon_2018_scaled.py:            -96958,  -97288,  -97685,  -98149,  -98681,  -99283,  -99954, -100696,
tests/unit/test_hu_hamon_2018_scaled.py:            -101509, -102395, -103356, -104391, -105504, -106695, -107967, -109320,
tests/unit/test_hu_hamon_2018_scaled.py:            -110758, -112282, -113895, -115599, -117396, -119290, -121284, -123381,
tests/unit/test_hu_hamon_2018_scaled.py:            -125584, -127897, -130324, -132868, -135535, -138328, -141253, -144314,
tests/unit/test_hu_hamon_2018_scaled.py:            -147515, -150863, -154361, -158014, -161826, -165800, -169937, -174236,
tests/unit/test_hu_hamon_2018_scaled.py:            -178693, -183300, -188045, -192907, -197860, -202871, -207904, -212969,
tests/unit/test_hu_hamon_2018_scaled.py:            -217922, -222784, -227529, -232137, -236595, -240895, -245033, -249007,
tests/unit/test_hu_hamon_2018_scaled.py:            -252820, -256474, -259973, -263322, -266524, -269585, -272510, -275304,
tests/unit/test_hu_hamon_2018_scaled.py:            -277972, -280517, -282944, -285257, -287461, -289558, -291552, -293447,
tests/unit/test_hu_hamon_2018_scaled.py:            -295245, -296949, -298562, -300086, -301524, -302878, -304149, -305341,
tests/unit/test_hu_hamon_2018_scaled.py:            -306454, -307489, -308450, -309336, -310150, -310892, -311563, -312164,
tests/unit/test_hu_hamon_2018_scaled.py:            -312697, -313162, -313558, -313888, -314152, -314349, -314481, -314546,
tests/unit/test_hu_hamon_2018_scaled.py:            -97748,  -97815,  -97948,  -98147,  -98413,  -98747,  -99148,  -99618,
tests/unit/test_hu_hamon_2018_scaled.py:            -100157, -100765, -101444, -102195, -103018, -103915, -104887, -105936,
tests/unit/test_hu_hamon_2018_scaled.py:            -107062, -108269, -109557, -110929, -112386, -113931, -115567, -117296,
tests/unit/test_hu_hamon_2018_scaled.py:            -119121, -121045, -123071, -125203, -127444, -129799, -132271, -134866,
tests/unit/test_hu_hamon_2018_scaled.py:            -137588, -140443, -143435, -146571, -149857, -153298, -156902, -160674,
tests/unit/test_hu_hamon_2018_scaled.py:            -164620, -168746, -173055, -177549, -182228, -187084, -192106, -197273,
tests/unit/test_hu_hamon_2018_scaled.py:            -202555, -207913, -213297, -218716, -223998, -229166, -234189, -239047,
tests/unit/test_hu_hamon_2018_scaled.py:            -243726, -248222, -252532, -256659, -260606, -264379, -267984, -271426,
tests/unit/test_hu_hamon_2018_scaled.py:            -274712, -277849, -280842, -283697, -286420, -289016, -291489, -293844,
tests/unit/test_hu_hamon_2018_scaled.py:            -296086, -298218, -300244, -302169, -303994, -305723, -307359, -308905,
tests/unit/test_hu_hamon_2018_scaled.py:            -310362, -311734, -313022, -314229, -315356, -316405, -317377, -318274,
tests/unit/test_hu_hamon_2018_scaled.py:            -319097, -319848, -320527, -321136, -321674, -322144, -322546, -322879,
tests/unit/test_hu_hamon_2018_scaled.py:            -323146, -323345, -323478, -323544,  -99140,  -99207,  -99341,  -99542,
tests/unit/test_hu_hamon_2018_scaled.py:            -99811, -100148, -100553, -101028, -101572, -102187, -102873, -103631,
tests/unit/test_hu_hamon_2018_scaled.py:            -104463, -105369, -106352, -107412, -108551, -109771, -111074, -112462,
tests/unit/test_hu_hamon_2018_scaled.py:            -113936, -115501, -117157, -118908, -120758, -122708, -124763, -126926,
tests/unit/test_hu_hamon_2018_scaled.py:            -129202, -131595, -134109, -136749, -139522, -142432, -145487, -148693,
tests/unit/test_hu_hamon_2018_scaled.py:            -152056, -155586, -159289, -163174, -167250, -171524, -176004, -180695,
tests/unit/test_hu_hamon_2018_scaled.py:            -185601, -190719, -196040, -201543, -207195, -212946, -218734, -224557,
tests/unit/test_hu_hamon_2018_scaled.py:            -230210, -235715, -241037, -246157, -251064, -255757, -260238, -264514,
tests/unit/test_hu_hamon_2018_scaled.py:            -268591, -272477, -276181, -279712, -283076, -286283, -289338, -292250,
tests/unit/test_hu_hamon_2018_scaled.py:            -295023, -297664, -300179, -302572, -304848, -307012, -309067, -311018,
tests/unit/test_hu_hamon_2018_scaled.py:            -312867, -314619, -316276, -317840, -319315, -320703, -322006, -323227,
tests/unit/test_hu_hamon_2018_scaled.py:            -324366, -325426, -326409, -327316, -328148, -328906, -329592, -330207,
tests/unit/test_hu_hamon_2018_scaled.py:            -330751, -331225, -331631, -331968, -332237, -332438, -332572, -332639,
tests/unit/test_hu_hamon_2018_scaled.py:            -100473, -100541, -100676, -100879, -101150, -101490, -101899, -102377,
tests/unit/test_hu_hamon_2018_scaled.py:            -102926, -103546, -104238, -105003, -105842, -106757, -107749, -108819,
tests/unit/test_hu_hamon_2018_scaled.py:            -109969, -111201, -112516, -113918, -115408, -116989, -118663, -120434,
tests/unit/test_hu_hamon_2018_scaled.py:            -122305, -124278, -126358, -128549, -130855, -133281, -135832, -138513,
tests/unit/test_hu_hamon_2018_scaled.py:            -141331, -144291, -147402, -150670, -154105, -157714, -161509, -165500,
tests/unit/test_hu_hamon_2018_scaled.py:            -169697, -174112, -178758, -183644, -188780, -194170, -199809, -205683,
tests/unit/test_hu_hamon_2018_scaled.py:            -211755, -217964, -224225, -230519, -236592, -242468, -248110, -253502,
tests/unit/test_hu_hamon_2018_scaled.py:            -258640, -263528, -268175, -272592, -276791, -280783, -284579, -288190,
tests/unit/test_hu_hamon_2018_scaled.py:            -291625, -294894, -298006, -300967, -303785, -306467, -309018, -311445,
tests/unit/test_hu_hamon_2018_scaled.py:            -313751, -315943, -318024, -319997, -321868, -323639, -325314, -326895,
tests/unit/test_hu_hamon_2018_scaled.py:            -328386, -329787, -331103, -332336, -333486, -334556, -335548, -336463,
tests/unit/test_hu_hamon_2018_scaled.py:            -337302, -338067, -338759, -339379, -339928, -340407, -340816, -341155,
tests/unit/test_hu_hamon_2018_scaled.py:            -341427, -341630, -341765, -341833, -101748, -101816, -101952, -102157,
tests/unit/test_hu_hamon_2018_scaled.py:            -102430, -102772, -103184, -103666, -104219, -104843, -105540, -106311,
tests/unit/test_hu_hamon_2018_scaled.py:            -107157, -108078, -109077, -110156, -111315, -112557, -113883, -115297,
tests/unit/test_hu_hamon_2018_scaled.py:            -116800, -118395, -120084, -121872, -123760, -125753, -127855, -130069,
tests/unit/test_hu_hamon_2018_scaled.py:            -132401, -134856, -137438, -140154, -143010, -146014, -149173, -152495,
tests/unit/test_hu_hamon_2018_scaled.py:            -155992, -159672, -163549, -167634, -171941, -176487, -181288, -186361,
tests/unit/test_hu_hamon_2018_scaled.py:            -191723, -197388, -203364, -209644, -216196, -222950, -229783, -236639,
tests/unit/test_hu_hamon_2018_scaled.py:            -243195, -249478, -255457, -261125, -266489, -271564, -276367, -280915,
tests/unit/test_hu_hamon_2018_scaled.py:            -285224, -289311, -293188, -296870, -300367, -303691, -306851, -309856,
tests/unit/test_hu_hamon_2018_scaled.py:            -312713, -315429, -318012, -320467, -322799, -325014, -327116, -329110,
tests/unit/test_hu_hamon_2018_scaled.py:            -330999, -332787, -334477, -336072, -337575, -338989, -340315, -341557,
tests/unit/test_hu_hamon_2018_scaled.py:            -342717, -343795, -344795, -345716, -346562, -347333, -348030, -348655,
tests/unit/test_hu_hamon_2018_scaled.py:            -349207, -349689, -350101, -350444, -350717, -350921, -351058, -351126,
tests/unit/test_hu_hamon_2018_scaled.py:            -102965, -103033, -103170, -103376, -103651, -103995, -104409, -104894,
tests/unit/test_hu_hamon_2018_scaled.py:            -105450, -106078, -106779, -107554, -108405, -109332, -110337, -111422,
tests/unit/test_hu_hamon_2018_scaled.py:            -112589, -113839, -115174, -116597, -118110, -119717, -121418, -123219,
tests/unit/test_hu_hamon_2018_scaled.py:            -125122, -127132, -129251, -131484, -133837, -136315, -138923, -141667,
tests/unit/test_hu_hamon_2018_scaled.py:            -144555, -147594, -150793, -154162, -157710, -161450, -165395, -169561,
tests/unit/test_hu_hamon_2018_scaled.py:            -173964, -178624, -183563, -188807, -194381, -200315, -206634, -213352,
tests/unit/test_hu_hamon_2018_scaled.py:            -220458, -227876, -235436, -242981, -250092, -256816, -263138, -269076,
tests/unit/test_hu_hamon_2018_scaled.py:            -274653, -279899, -284840, -289502, -293907, -298074, -302021, -305762,
tests/unit/test_hu_hamon_2018_scaled.py:            -309312, -312681, -315881, -318921, -321810, -324555, -327163, -329641,
tests/unit/test_hu_hamon_2018_scaled.py:            -331995, -334229, -336349, -338358, -340262, -342063, -343765, -345372,
tests/unit/test_hu_hamon_2018_scaled.py:            -346885, -348308, -349644, -350894, -352061, -353146, -354152, -355079,
tests/unit/test_hu_hamon_2018_scaled.py:            -355930, -356705, -357406, -358034, -358590, -359075, -359489, -359834,
tests/unit/test_hu_hamon_2018_scaled.py:            -360108, -360314, -360451, -360519, -104123, -104192, -104329, -104536,
tests/unit/test_hu_hamon_2018_scaled.py:            -104812, -105157, -105573, -106060, -106618, -107249, -107953, -108732,
tests/unit/test_hu_hamon_2018_scaled.py:            -109586, -110518, -111528, -112618, -113790, -115046, -116388, -117818,
tests/unit/test_hu_hamon_2018_scaled.py:            -119339, -120954, -122665, -124476, -126390, -128412, -130544, -132792,
tests/unit/test_hu_hamon_2018_scaled.py:            -135161, -137657, -140284, -143050, -145963, -149029, -152259, -155662,
tests/unit/test_hu_hamon_2018_scaled.py:            -159251, -163037, -167036, -171266, -175745, -180498, -185552, -190938,
tests/unit/test_hu_hamon_2018_scaled.py:            -196698, -202875, -209523, -216694, -224426, -232684, -241239, -249661,
tests/unit/test_hu_hamon_2018_scaled.py:            -257401, -264578, -271230, -277411, -283174, -288564, -293619, -298374,
tests/unit/test_hu_hamon_2018_scaled.py:            -302856, -307087, -311087, -314875, -318465, -321869, -325100, -328167,
tests/unit/test_hu_hamon_2018_scaled.py:            -331081, -333847, -336475, -338971, -341341, -343590, -345723, -347744,
tests/unit/test_hu_hamon_2018_scaled.py:            -349659, -351470, -353182, -354797, -356318, -357749, -359091, -360347,
tests/unit/test_hu_hamon_2018_scaled.py:            -361519, -362610, -363620, -364551, -365406, -366185, -366889, -367520,
tests/unit/test_hu_hamon_2018_scaled.py:            -368078, -368565, -368981, -369327, -369603, -369809, -369947, -370016,
tests/unit/test_hu_hamon_2018_scaled.py:            -105222, -105291, -105429, -105636, -105913, -106259, -106676, -107164,
tests/unit/test_hu_hamon_2018_scaled.py:            -107724, -108357, -109063, -109844, -110701, -111636, -112649, -113742,
tests/unit/test_hu_hamon_2018_scaled.py:            -114918, -116178, -117524, -118960, -120486, -122106, -123824, -125642,
tests/unit/test_hu_hamon_2018_scaled.py:            -127563, -129593, -131734, -133992, -136372, -138879, -141520, -144301,
tests/unit/test_hu_hamon_2018_scaled.py:            -147229, -150315, -153565, -156993, -160609, -164427, -168464, -172737,
tests/unit/test_hu_hamon_2018_scaled.py:            -177270, -182088, -187224, -192716, -198615, -204984, -211908, -219497,
tests/unit/test_hu_hamon_2018_scaled.py:            -227890, -237215, -247347, -256894, -265295, -272890, -279819, -286192,
tests/unit/test_hu_hamon_2018_scaled.py:            -292094, -297589, -302727, -307548, -312082, -316358, -320396, -324216,
tests/unit/test_hu_hamon_2018_scaled.py:            -327833, -331261, -334513, -337599, -340529, -343310, -345952, -348459,
tests/unit/test_hu_hamon_2018_scaled.py:            -350840, -353098, -355240, -357270, -359192, -361010, -362728, -364349,
tests/unit/test_hu_hamon_2018_scaled.py:            -365875, -367311, -368657, -369918, -371094, -372187, -373201, -374135,
tests/unit/test_hu_hamon_2018_scaled.py:            -374992, -375773, -376480, -377112, -377672, -378161, -378578, -378924,
tests/unit/test_hu_hamon_2018_scaled.py:            -379201, -379408, -379546, -379615, -106262, -106331, -106469, -106677,
tests/unit/test_hu_hamon_2018_scaled.py:            -106954, -107301, -107718, -108207, -108768, -109402, -110109, -110891,
tests/unit/test_hu_hamon_2018_scaled.py:            -111749, -112685, -113700, -114795, -115973, -117235, -118583, -120021,
tests/unit/test_hu_hamon_2018_scaled.py:            -121550, -123173, -124894, -126715, -128640, -130674, -132820, -135083,
tests/unit/test_hu_hamon_2018_scaled.py:            -137468, -139981, -142628, -145417, -148354, -151448, -154710, -158149,
tests/unit/test_hu_hamon_2018_scaled.py:            -161779, -165614, -169669, -173966, -178526, -183378, -188557, -194105,
tests/unit/test_hu_hamon_2018_scaled.py:            -200080, -206558, -213647, -221515, -230442, -240962, -254270, -265091,
tests/unit/test_hu_hamon_2018_scaled.py:            -274022, -281895, -288989, -295471, -301449, -307000, -312181, -317035,
tests/unit/test_hu_hamon_2018_scaled.py:            -321598, -325896, -329953, -333789, -337420, -340861, -344123, -347219,
tests/unit/test_hu_hamon_2018_scaled.py:            -350157, -352946, -355594, -358107, -360493, -362757, -364903, -366937,
tests/unit/test_hu_hamon_2018_scaled.py:            -368863, -370684, -372405, -374029, -375558, -376996, -378345, -379607,
tests/unit/test_hu_hamon_2018_scaled.py:            -380785, -381881, -382895, -383831, -384690, -385472, -386179, -386813,
tests/unit/test_hu_hamon_2018_scaled.py:            -387374, -387863, -388280, -388628, -388905, -389112, -389250, -389319] )
tests/unit/test_hu_hamon_2018_scaled.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_hamon_2018_scaled.py:        darcy_to_m2 = 9.869233e-13 * 1e9
tests/unit/test_hu_hamon_2018_scaled.py:            permeability = 100 * 1e-3 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_hamon_2018_scaled.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_hamon_2018_scaled.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_hamon_2018_scaled.py:                eps = 1e-6
tests/unit/test_hu_hamon_2018_scaled.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_hamon_2018_scaled.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_hamon_2018_scaled.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_hamon_2018_scaled.py:                eps = 1e-6
tests/unit/test_hu_hamon_2018_scaled.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_hamon_2018_scaled.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_hamon_2018_scaled.py:    def set_geometry(self) -> None:
tests/unit/test_hu_hamon_2018_scaled.py:    def set_domain(self) -> None:
tests/unit/test_hu_hamon_2018_scaled.py:    def set_fractures(self) -> None:
tests/unit/test_hu_hamon_2018_scaled.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_hamon_2018_scaled.py:    # dt_init=1e-2,
tests/unit/test_hu_hamon_2018_scaled.py:    "nl_convergence_tol": 1e-6,
tests/unit/test_hu_hamon_2018_scaled.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_hamon_2018_scaled.py:        self.dynamic_viscosity = 5e-2 # 1e-3 [kg / (m*s)] water        
tests/unit/test_is_point_in_cell.py:        pt = np.array([-0.1, 0.5, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([0.5, -0.1, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([-0.1, 1.1, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([-0.1, -0.1, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([1.1, -0.1, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([-0.1, 0.5, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([0.5, -0.1, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([-0.1, 1.1, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([-0.1, -0.1, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([1.1, -0.1, 0])
tests/unit/test_is_point_in_cell.py:            [[0, 1, 1.2, 0.5, -0.2], [0, 0, 1, 1.2, 1], [0, 0, 0, 0, 0]], dtype=np.float
tests/unit/test_is_point_in_cell.py:        pt = np.array([-0.1, 0.5, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([1.1, -0.1, 0])
tests/unit/test_is_point_in_cell.py:            [[0, 0.5, 1, 1.2, 0.5, -0.2], [0, 0, 0, 1, 1.2, 1], [0, 0, 0, 0, 0, 0]],
tests/unit/test_is_point_in_cell.py:        pt = np.array([-0.1, 0.5, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([1.1, -0.1, 0])
tests/unit/test_is_point_in_cell.py:            [[0, 0.5, 1, 0.4, 0.5, -0.2], [0, 0, 0, 1, 1.2, 1], [0, 0, 0, 0, 0, 0]],
tests/unit/test_is_point_in_cell.py:        pt = np.array([-0.1, 0.5, 0])
tests/unit/test_is_point_in_cell.py:        pt = np.array([1.1, -0.1, 0])
tests/unit/test_grid_extrusion.py:        c = np.array([x, y, 0]).reshape((-1, 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_cell_map(cell_map, self.g, z.size - 1))
tests/unit/test_grid_extrusion.py:        # Assign non-zero z-coordinate of the point grid. This should be ignored
tests/unit/test_grid_extrusion.py:        z = np.array([0, -1])
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_cell_map(cell_map, self.g, z.size - 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_face_map(face_map, self.g, z.size - 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_cell_map(cell_map, self.g, z.size - 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_face_map(face_map, self.g, z.size - 1))
tests/unit/test_grid_extrusion.py:        z = np.array([0, -1, -3])
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_cell_map(cell_map, self.g, z.size - 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_face_map(face_map, self.g, z.size - 1))
tests/unit/test_grid_extrusion.py:        cf_2d = sps.csc_matrix(np.array([[-1], [1], [-1]]))
tests/unit/test_grid_extrusion.py:                [-1, 0],
tests/unit/test_grid_extrusion.py:                [-1, 0],
tests/unit/test_grid_extrusion.py:                [0, -1],
tests/unit/test_grid_extrusion.py:                [0, -1],
tests/unit/test_grid_extrusion.py:                [-1, 0],
tests/unit/test_grid_extrusion.py:                [1, -1],
tests/unit/test_grid_extrusion.py:                [1, -1, 0],
tests/unit/test_grid_extrusion.py:                [2, -2, 0],
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_cell_map(cell_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_face_map(face_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:        cf_2d = sps.csc_matrix(np.array([[-1], [1], [-1]]))
tests/unit/test_grid_extrusion.py:        cf_3d = np.array([[-1], [1], [-1], [-1], [1]])
tests/unit/test_grid_extrusion.py:        normals = np.array([[1, -1, 0], [1, 1, 0], [0, 2, 0], [0, 0, 1], [0, 0, 1]]).T
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_cell_map(cell_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_face_map(face_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:        cf_2d = sps.csc_matrix(np.array([[-1], [1], [-1]]))
tests/unit/test_grid_extrusion.py:        z = np.array([0, -1, -3])
tests/unit/test_grid_extrusion.py:                [-1, 0],
tests/unit/test_grid_extrusion.py:                [-1, 0],
tests/unit/test_grid_extrusion.py:                [0, -1],
tests/unit/test_grid_extrusion.py:                [0, -1],
tests/unit/test_grid_extrusion.py:                [-1, 0],
tests/unit/test_grid_extrusion.py:                [1, -1],
tests/unit/test_grid_extrusion.py:        cc = np.array([[1, 1], [1 / 3, 1 / 3], [-0.5, -2]])
tests/unit/test_grid_extrusion.py:                [1, 0, -0.5],
tests/unit/test_grid_extrusion.py:                [1.5, 0.5, -0.5],
tests/unit/test_grid_extrusion.py:                [0.5, 0.5, -0.5],
tests/unit/test_grid_extrusion.py:                [1, 0, -2],
tests/unit/test_grid_extrusion.py:                [1.5, 0.5, -2],
tests/unit/test_grid_extrusion.py:                [0.5, 0.5, -2],
tests/unit/test_grid_extrusion.py:                [1, 1 / 3, -1],
tests/unit/test_grid_extrusion.py:                [1, 1 / 3, -3],
tests/unit/test_grid_extrusion.py:                [1, -1, 0],
tests/unit/test_grid_extrusion.py:                [2, -2, 0],
tests/unit/test_grid_extrusion.py:                [0, 0, -1],
tests/unit/test_grid_extrusion.py:                [0, 0, -1],
tests/unit/test_grid_extrusion.py:                [0, 0, -1],
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_cell_map(cell_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_face_map(face_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:        cf_2d = sps.csc_matrix(np.array([[1, 0], [0, 1], [0, 1], [1, 0], [-1, 1]]))
tests/unit/test_grid_extrusion.py:            [[1, 0], [0, 1], [0, 1], [1, 0], [-1, 1], [-1, 0], [0, -1], [1, 0], [0, 1]]
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_cell_map(cell_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_face_map(face_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:            np.array([[1, 0], [0, -1], [0, 1], [0, 1], [-1, 0], [1, -1]])
tests/unit/test_grid_extrusion.py:                [0, -1],
tests/unit/test_grid_extrusion.py:                [-1, 0],
tests/unit/test_grid_extrusion.py:                [1, -1],
tests/unit/test_grid_extrusion.py:                [-1, 0],
tests/unit/test_grid_extrusion.py:                [0, -1],
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_cell_map(cell_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:        self.assertTrue(check_face_map(face_map, g_2d, nz - 1))
tests/unit/test_grid_extrusion.py:        # mixed-dimensional grid, so make a loop and abort it.
tests/unit/test_grid_extrusion.py:        ## Check that the + and - sides of the extruded mortar grid are correct
tests/unit/test_grid_extrusion.py:        dist = np.sum(cc - fc)
tests/unit/test_grid_extrusion.py:        """2d mdg with T-intersection. Mainly ensure that the code runs (it did not
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                [0.05555556, 0.22222222, 0.05555556, 0.0, -1.0, 1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.05555556, 0.22222222, 0.05555556, 0.0, -1.0, 1.0],
tests/unit/test_rt0.py:                [0.0, 0.0, 0.05555556, 0.11111111, 0.0, 0.0, -1.0],
tests/unit/test_rt0.py:                [1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [5.0000e-01, 5.0000e-01, 0.0000e00, 0.0000e00],
tests/unit/test_rt0.py:                [-5.5511e-17, -5.5511e-17, 0.0000e00, 0.0000e00],
tests/unit/test_rt0.py:                [0.0000e00, 5.0000e-01, 5.0000e-01, 0.0000e00],
tests/unit/test_rt0.py:                [0.0000e00, -5.5511e-17, -5.5511e-17, 0.0000e00],
tests/unit/test_rt0.py:                [0.0000e00, 0.0000e00, 5.0000e-01, 5.0000e-01],
tests/unit/test_rt0.py:                [0.0000e00, 0.0000e00, -5.5511e-17, -5.5511e-17],
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                [0.06477201, 0.29392463, 0.08219031, 0.0, -1.0, 1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.08219031, 0.3577336, 0.09667649, 0.0, -1.0, 1.0],
tests/unit/test_rt0.py:                [0.0, 0.0, 0.09667649, 0.19335298, 0.0, 0.0, -1.0],
tests/unit/test_rt0.py:                [1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [5.0000e-01, 5.0000e-01, 0.0000e00, 0.0000e00],
tests/unit/test_rt0.py:                [-5.5511e-17, -5.5511e-17, 0.0000e00, 0.0000e00],
tests/unit/test_rt0.py:                [0.0000e00, 5.0000e-01, 5.0000e-01, 0.0000e00],
tests/unit/test_rt0.py:                [0.0000e00, -5.5511e-17, -5.5511e-17, 0.0000e00],
tests/unit/test_rt0.py:                [0.0000e00, 0.0000e00, 5.0000e-01, 5.0000e-01],
tests/unit/test_rt0.py:                [0.0000e00, 0.0000e00, -5.5511e-17, -5.5511e-17],
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                [0.33333333, 0.0, -0.16666667, -1.0],
tests/unit/test_rt0.py:                [0.0, 0.16666667, 0.0, -1.0],
tests/unit/test_rt0.py:                [-0.16666667, 0.0, 0.33333333, -1.0],
tests/unit/test_rt0.py:                [-1.0, -1.0, -1.0, 0.0],
tests/unit/test_rt0.py:                [0.33333333, 0.33333333, -0.66666667],
tests/unit/test_rt0.py:                [-0.66666667, 0.33333333, 0.33333333],
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                [0.33333333, 0.0, 0.0, -0.16666667, 0.0, -1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.33333333, 0.0, 0.0, -0.16666667, 0.0, 1.0],
tests/unit/test_rt0.py:                [0.0, 0.0, 0.33333333, 0.0, 0.0, 1.0, -1.0],
tests/unit/test_rt0.py:                [-0.16666667, 0.0, 0.0, 0.33333333, 0.0, -1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, -0.16666667, 0.0, 0.0, 0.33333333, 0.0, 1.0],
tests/unit/test_rt0.py:                [-1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 1.0, -1.0, 0.0, 1.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [-0.33333333, 0.0, 0.33333333, 0.66666667, 0.0],
tests/unit/test_rt0.py:                [-0.66666667, 0.0, -0.33333333, 0.33333333, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.66666667, 0.33333333, 0.0, -0.33333333],
tests/unit/test_rt0.py:                [0.0, 0.33333333, -0.33333333, 0.0, -0.66666667],
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:        tol = 1e-6
tests/unit/test_rt0.py:        right = bf_centers[0, :] > 1 - tol
tests/unit/test_rt0.py:        p_ex = 1 - g.cell_centers[0, :]
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -0.16666667,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                [0.39814815, 0.0, 0.0462963, -0.15740741, 0.0, -1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.39814815, 0.0462963, 0.0, -0.15740741, 0.0, 1.0],
tests/unit/test_rt0.py:                [0.0462963, 0.0462963, 0.46296296, -0.00925926, -0.00925926, 1.0, -1.0],
tests/unit/test_rt0.py:                [-0.15740741, 0.0, -0.00925926, 0.34259259, 0.0, -1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, -0.15740741, -0.00925926, 0.0, 0.34259259, 0.0, 1.0],
tests/unit/test_rt0.py:                [-1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 1.0, -1.0, 0.0, 1.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [-0.33333333, 0.0, 0.33333333, 0.66666667, 0.0],
tests/unit/test_rt0.py:                [-0.66666667, 0.0, -0.33333333, 0.33333333, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.66666667, 0.33333333, 0.0, -0.33333333],
tests/unit/test_rt0.py:                [0.0, 0.33333333, -0.33333333, 0.0, -0.66666667],
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                [0.53333333, 0.03333333, -0.13333333, -0.13333333, -1.0],
tests/unit/test_rt0.py:                [0.03333333, 0.2, 0.03333333, 0.03333333, -1.0],
tests/unit/test_rt0.py:                [-0.13333333, 0.03333333, 0.53333333, -0.13333333, -1.0],
tests/unit/test_rt0.py:                [-0.13333333, 0.03333333, -0.13333333, 0.53333333, -1.0],
tests/unit/test_rt0.py:                [-1.0, -1.0, -1.0, -1.0, 0.0],
tests/unit/test_rt0.py:            [[0.5, 0.5, -1.5, 0.5], [0.5, 0.5, 0.5, -1.5], [-1.5, 0.5, 0.5, 0.5]]
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                [0.05555556, 0.22222222, 0.05555556, 0.0, -1.0, 1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.05555556, 0.22222222, 0.05555556, 0.0, -1.0, 1.0],
tests/unit/test_rt0.py:                [0.0, 0.0, 0.05555556, 0.11111111, 0.0, 0.0, -1.0],
tests/unit/test_rt0.py:                [1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [4.33012702e-01, 4.33012702e-01, 0.00000000e00, 0.00000000e00],
tests/unit/test_rt0.py:                [2.50000000e-01, 2.50000000e-01, 0.00000000e00, 0.00000000e00],
tests/unit/test_rt0.py:                [5.55111512e-17, 5.55111512e-17, 0.00000000e00, 0.00000000e00],
tests/unit/test_rt0.py:                [0.00000000e00, 4.33012702e-01, 4.33012702e-01, 0.00000000e00],
tests/unit/test_rt0.py:                [0.00000000e00, 2.50000000e-01, 2.50000000e-01, 0.00000000e00],
tests/unit/test_rt0.py:                [0.00000000e00, 5.55111512e-17, 5.55111512e-17, 0.00000000e00],
tests/unit/test_rt0.py:                [0.00000000e00, 0.00000000e00, 4.33012702e-01, 4.33012702e-01],
tests/unit/test_rt0.py:                [0.00000000e00, 0.00000000e00, 2.50000000e-01, 2.50000000e-01],
tests/unit/test_rt0.py:                [0.00000000e00, 0.00000000e00, 5.55111512e-17, 5.55111512e-17],
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:        R = pp.map_geometry.rotation_matrix(-np.pi / 4.0, [1, 1, -1])
tests/unit/test_rt0.py:                [0.33333333, 0.0, 0.0, -0.16666667, 0.0, -1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.33333333, 0.0, 0.0, -0.16666667, 0.0, 1.0],
tests/unit/test_rt0.py:                [0.0, 0.0, 0.33333333, 0.0, 0.0, 1.0, -1.0],
tests/unit/test_rt0.py:                [-0.16666667, 0.0, 0.0, 0.33333333, 0.0, -1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, -0.16666667, 0.0, 0.0, 0.33333333, 0.0, 1.0],
tests/unit/test_rt0.py:                [-1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 1.0, -1.0, 0.0, 1.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [-0.06116781, 0.0, 0.37178502, 0.43295283, 0.0],
tests/unit/test_rt0.py:                [-0.70511836, 0.0, -0.0996195, 0.60549886, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.43295283, 0.37178502, 0.0, -0.06116781],
tests/unit/test_rt0.py:                [0.0, 0.60549886, -0.0996195, 0.0, -0.70511836],
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                [0.39814815, 0.0, 0.0462963, -0.15740741, 0.0, -1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.39814815, 0.0462963, 0.0, -0.15740741, 0.0, 1.0],
tests/unit/test_rt0.py:                [0.0462963, 0.0462963, 0.46296296, -0.00925926, -0.00925926, 1.0, -1.0],
tests/unit/test_rt0.py:                [-0.15740741, 0.0, -0.00925926, 0.34259259, 0.0, -1.0, 0.0],
tests/unit/test_rt0.py:                [0.0, -0.15740741, -0.00925926, 0.0, 0.34259259, 0.0, 1.0],
tests/unit/test_rt0.py:                [-1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [0.0, 1.0, -1.0, 0.0, 1.0, 0.0, 0.0],
tests/unit/test_rt0.py:                [-0.41666667, 0.0, 0.16666667, 0.58333333, 0.0],
tests/unit/test_rt0.py:                [-0.58333333, 0.0, -0.16666667, 0.41666667, 0.0],
tests/unit/test_rt0.py:                [-0.20412415, 0.0, -0.40824829, -0.20412415, 0.0],
tests/unit/test_rt0.py:                [0.0, 0.58333333, 0.16666667, 0.0, -0.41666667],
tests/unit/test_rt0.py:                [0.0, 0.41666667, -0.16666667, 0.0, -0.58333333],
tests/unit/test_rt0.py:                [0.0, -0.20412415, -0.40824829, 0.0, -0.20412415],
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:        p_ex = lambda pt: 2 * pt[0, :] - 3 * pt[1, :] - 9
tests/unit/test_rt0.py:        u_ex = np.array([-2, 3, 0])
tests/unit/test_rt0.py:            err = np.sum(np.abs(p - p_ex(g.cell_centers)))
tests/unit/test_rt0.py:                np.abs(P0u - np.tile(u_ex, g.num_cells).reshape((3, -1), order="F"))
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                -np.cos(2 * np.pi * pt[0, :]), np.sin(2 * np.pi * pt[1, :])
tests/unit/test_rt0.py:                -np.sin(2 * np.pi * pt[0, :]), np.cos(2 * np.pi * pt[1, :])
tests/unit/test_rt0.py:                    np.multiply(g.cell_volumes, np.power(p - p_ex(g.cell_centers), 2))
tests/unit/test_rt0.py:                        g.cell_volumes, np.sum(np.power(P0u - uu_ex, 2), axis=0)
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:            - 6 * np.power(pt[1, :], 2)
tests/unit/test_rt0.py:        u_ex_0 = lambda pt: -9 * pt[0, :] + 10 * pt[1, :]
tests/unit/test_rt0.py:        u_ex_1 = lambda pt: -6 * pt[0, :] + 23 * pt[1, :]
tests/unit/test_rt0.py:                    np.multiply(g.cell_volumes, np.power(p - p_ex(g.cell_centers), 2))
tests/unit/test_rt0.py:                        g.cell_volumes, np.sum(np.power(P0u - uu_ex, 2), axis=0)
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:        b_known = np.array([-0.83333333, 0.66666667, 0.16666667, 0.0])
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:            [-1.33333333, 1.16666667, -0.33333333, 1.16666667, -1.33333333, 0.0, 0.0]
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:        b_known = np.array([0.41666667, 0.41666667, -0.25, -0.58333333, 0.0])
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:        p_ex = lambda pt: 2 * pt[0, :] - 3 * pt[1, :] - 9
tests/unit/test_rt0.py:        u_ex = np.array([-1, 4, 0])
tests/unit/test_rt0.py:            err = np.sum(np.abs(p - p_ex(g.cell_centers)))
tests/unit/test_rt0.py:                np.abs(P0u - np.tile(u_ex, g.num_cells).reshape((3, -1), order="F"))
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                -0.16666667,
tests/unit/test_rt0.py:                -0.16666667,
tests/unit/test_rt0.py:                -1.5,
tests/unit/test_rt0.py:                -2.0,
tests/unit/test_rt0.py:                -0.08333333,
tests/unit/test_rt0.py:                -0.58333333,
tests/unit/test_rt0.py:                -1.75,
tests/unit/test_rt0.py:                -1.16666667,
tests/unit/test_rt0.py:                -0.08333333,
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:        R = pp.map_geometry.rotation_matrix(-np.pi / 4.0, [1, 1, -1])
tests/unit/test_rt0.py:            [-0.73570226, 0.82197528, 0.17254603, 0.82197528, -0.73570226, 0.0, 0.0]
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:                -np.cos(2 * np.pi * pt[0, :]), np.sin(2 * np.pi * pt[1, :])
tests/unit/test_rt0.py:                -np.sin(2 * np.pi * pt[0, :]), np.cos(2 * np.pi * pt[1, :])
tests/unit/test_rt0.py:                    np.multiply(g.cell_volumes, np.power(p - p_ex(g.cell_centers), 2))
tests/unit/test_rt0.py:                        g.cell_volumes, np.sum(np.power(P0u - uu_ex, 2), axis=0)
tests/unit/test_rt0.py:    # ------------------------------------------------------------------------------#
tests/unit/test_rt0.py:            - 6 * np.power(pt[1, :], 2)
tests/unit/test_rt0.py:        u_ex_0 = lambda pt: -9 * pt[0, :] + 10 * pt[1, :] + 4
tests/unit/test_rt0.py:        u_ex_1 = lambda pt: -6 * pt[0, :] + 23 * pt[1, :] + 5
tests/unit/test_rt0.py:                    np.multiply(g.cell_volumes, np.power(p - p_ex(g.cell_centers), 2))
tests/unit/test_rt0.py:                        g.cell_volumes, np.sum(np.power(P0u - uu_ex, 2), axis=0)
tests/unit/test_rt0.py:                    -0.13333333,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.13333333,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -0.13333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.13333333,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -0.13333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.13333333,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -0.13333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.03333333,
tests/unit/test_rt0.py:                    -0.13333333,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -1.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -1.5,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -1.5,
tests/unit/test_rt0.py:                    -1.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -1.0,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -1.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -0.5,
tests/unit/test_rt0.py:                    -1.5,
tests/unit/test_matrix_operations.py:    # ----------Zero out rows---------------
tests/unit/test_matrix_operations.py:    # ------------------- get slicing indices ------------------
tests/unit/test_matrix_operations.py:    # ------------------ Test sliced_mat() -----------------------
tests/unit/test_matrix_operations.py:    # ------------------ Test stack_mat() -----------------------
tests/unit/test_matrix_operations.py:    # ------------------ Test merge_matrices() -----------------------
tests/unit/test_grid.py:    return 1e-8
tests/unit/test_grid.py:        p = np.array([[0.5, -0.5], [0.5, 0.5]])
tests/unit/test_grid.py:        known = np.array([[-1, 0, 1, -1, -1, 0, 1], [0, 1, -1, 0, 1, -1, -1]])
tests/unit/test_grid.py:            [[0.0, -0.0, -1.0, 1.0], [-1.0, 1.0, -0.0, 0.0], [0.0, -0.0, -0.0, 0.0]]
tests/unit/test_grid.py:            [[0.5, -0.5, 1.0, -1.0], [-0.5, -0.5, 0.5, 0.5], [0.0, 0.0, -0.0, 0.0]]
tests/unit/test_grid.py:            [[0.75, -0.75, 1.0, -1.0], [-0.5, -0.5, 0.5, 0.5], [0.0, 0.0, -0.0, 0.0]]
tests/unit/test_grid.py:            [[0, 0.5, 1, 0.5, 0.5, 0.5], [0, 0.5, 0, 1, -0.5, -1], np.zeros(6)]
tests/unit/test_grid.py:        cell_faces_v = np.array([1, 1, 1, 1, -1, -1, -1, -1, 1, 1, 1, 1])
tests/unit/test_grid.py:            [[0.5, 0.5, 0.5], [0.5, 0.0, -0.5], [0.0, 0.0, 0.0]]
tests/unit/test_grid.py:                [0.5, -0.5, 1.0, -1.0, -1.0, 1.0, -0.5, 0.5],
tests/unit/test_grid.py:                [-0.5, -0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 0.5],
tests/unit/test_grid.py:                [0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0],
tests/unit/test_grid.py:        ny = np.array([0, -0.5, 0, 0, 0.5, 0, 1, 1, 1.5, 0.5, 1, 1])
tests/unit/test_grid.py:        g.nodes[:, -1] = [2, 2, 2]
tests/unit/test_grid.py:        nx = np.array([1, 2, 0, -0.5, 0, -0.5])
tests/unit/test_grid.py:        ny = np.array([0, -0.5, 1, 2, 0, -0.5])
tests/unit/test_grid.py:        nz = np.array([0, -0.5, 0, -0.5, 1, 2])
tests/unit/test_grid.py:        fn = np.array([[0, 1, 1, 1, 0], [-1, 0, -1, 0, -1], [0, 0, 0, 0, 0]])
tests/unit/test_grid.py:        # The ordering of faces may differ depending on the test system (presumably version of scipy or similar). Below are hard-coded combination of face-nodes, and the corresponding faces and face_areas.
tests/unit/test_grid.py:        self.assertTrue(np.abs(domain.prod() - np.sum(g.cell_volumes)) < 1e-10)
tests/unit/test_grid.py:        self.assertTrue(np.abs(domain.prod() - np.sum(g.cell_volumes)) < 1e-10)
tests/unit/test_grid.py:        self.assertTrue(g1.id == g2.id - 1)
tests/unit/test_grid.py:        self.assertTrue(g2.id == g3.id - 1)
tests/unit/test_grid.py:        self.assertTrue(g3.id == g4.id - 1)
tests/unit/test_grid.py:        self.assertTrue(g4.id == g5.id - 1)
tests/unit/test_grid.py:        self.assertTrue(g5.id == g6.id - 1)
tests/unit/test_grid.py:        self.assertTrue(mg1.id == mg2.id - 1)
tests/unit/test_grid.py:        self.assertTrue(g1.id == g2.id - 1)
tests/unit/test_grid.py:                        |--|--|--| ( grid )
tests/unit/test_grid.py:                        |--|--| ( left grid)
tests/unit/test_grid.py:                          |--|  (right grid)
tests/unit/test_dof_manager.py:def test_get_variable_values() -> None:
tests/unit/test_dof_manager.py:    This is  only tested for a single-dimensional grid and one variable. Different
tests/unit/test_dof_manager.py:    combinations of variables or a multi-dimensional grid are NOT tested.
tests/unit/test_hu_16.py:    def initial_condition(self) -> None:
tests/unit/test_hu_16.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_16.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_16.py:            permeability = 1./1 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_16.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_16.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_16.py:                eps = 1e-6
tests/unit/test_hu_16.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_16.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_16.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_16.py:                eps = 1e-6
tests/unit/test_hu_16.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_16.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_16.py:    def set_geometry(self) -> None:
tests/unit/test_hu_16.py:    def set_domain(self) -> None:
tests/unit/test_hu_16.py:    def set_fractures(self) -> None:
tests/unit/test_hu_16.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_16.py:    dt_init=1e-3,
tests/unit/test_hu_16.py:    # dt_init=1e-2,
tests/unit/test_hu_16.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_16.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_16.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_graph.py:# ------------------------------------------------------------------------------#
tests/unit/test_graph.py:    # ------------------------------------------------------------------------------#
tests/unit/test_graph.py:    # ------------------------------------------------------------------------------#
tests/unit/test_graph.py:    # ------------------------------------------------------------------------------#
tests/unit/test_graph.py:    # ------------------------------------------------------------------------------#
tests/unit/test_graph.py:    # ------------------------------------------------------------------------------#
tests/unit/test_graph.py:# ------------------------------------------------------------------------------#
tests/unit/test_hu_9.py:    def initial_condition(self) -> None:
tests/unit/test_hu_9.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_9.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_9.py:            permeability = 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_9.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_9.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_9.py:                eps = 1e-6
tests/unit/test_hu_9.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_9.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_9.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_9.py:                eps = 1e-6
tests/unit/test_hu_9.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_9.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_9.py:    def set_geometry(self) -> None:
tests/unit/test_hu_9.py:    def set_domain(self) -> None:
tests/unit/test_hu_9.py:    def set_fractures(self) -> None:
tests/unit/test_hu_9.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_9.py:    dt_init=1e-3,
tests/unit/test_hu_9.py:    # dt_init=1e-2,
tests/unit/test_hu_9.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_9.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_9.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_permutations.py:        # Compare a pre-defined list with the result of multinary_permutations
tests/unit/test_array_operations.py:    max_coords = np.max(all_coords, axis=1).reshape((-1, 1))
tests/unit/test_array_operations.py:            np.sum((c.reshape((-1, 1)) - all_coords) ** 2, axis=0) < 0.5
tests/unit/test_array_operations.py:        last_written = all_occurrences[-1]
tests/unit/test_array_operations.py:            [coord], values[:, ind].reshape((-1, 1)), additive=True
tests/unit/test_array_operations.py:            [coord], values[:, ind].reshape((-1, 1)), additive=False
tests/unit/test_array_operations.py:    # Non-intersecting 1d
tests/unit/test_array_operations.py:    # Non-intersecting 2d, single dimension
tests/unit/test_array_operations.py:    # Non-intersecting 2d, several dimensions and items
tests/unit/test_array_operations.py:    # Same numbers, but rows switched. Failure signifies sorting along 0-axis
tests/unit/test_array_operations.py:    a_in_b_known = np.zeros(a.shape[-1])
tests/unit/test_hu_model_conservation.py:- the idea is to solve the stationary equations by setting the accumulation ther by zero
tests/unit/test_hu_model_conservation.py:- test after one timestep that the flux is zero
tests/unit/test_hu_model_conservation.py:- I'm using both equaitons from test_hu_model and test_hu_model_conservation. I need to run one time iteration and check the flux. NOT ANYMORWE
tests/unit/test_hu_model_conservation.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_conservation.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_model_conservation.py:        print('\n\n --------- inside before_nonlinear_iteration: -----------')
tests/unit/test_hu_model_conservation.py:        # PRESSURE EQ: ----------------
tests/unit/test_hu_model_conservation.py:        net_flux_pressure = net_flux_pressure[0] - net_flux_pressure[1] + net_flux_pressure[2] - net_flux_pressure[3]
tests/unit/test_hu_model_conservation.py:        net_flux_pressure = net_flux_pressure[0] - net_flux_pressure[1]
tests/unit/test_hu_model_conservation.py:        # MASS BALANCE: ---------------
tests/unit/test_hu_model_conservation.py:        net_flux_mass = flux_V_G - flux_intf_phase_0 # ell = 0
tests/unit/test_hu_model_conservation.py:        net_flux_mass = net_flux_mass[0] - net_flux_mass[1] + net_flux_mass[2] - net_flux_mass[3]
tests/unit/test_hu_model_conservation.py:        net_flux_mass = flux_V_G - flux_intf_phase_0 # ell = 0
tests/unit/test_hu_model_conservation.py:        net_flux_mass = net_flux_mass[0] - net_flux_mass[1]
tests/unit/test_hu_model_conservation.py:        print('\n\n -------------- inside eb_after_timestep: -------------------')
tests/unit/test_hu_model_conservation.py:        # TEST SECTION: ---------------------------------------------------------
tests/unit/test_hu_model_conservation.py:        #         sd.nodes[1][[8, 10]] -= 0.1
tests/unit/test_hu_model_conservation.py:        # PRESSURE EQ: -----------------------
tests/unit/test_hu_model_conservation.py:        net_flux_pressure = flux_cell_7_pressure[0] - flux_cell_7_pressure[1] + flux_cell_7_pressure[2] - flux_cell_7_pressure[3] 
tests/unit/test_hu_model_conservation.py:        # print(div.evaluate(self.equation_system)) # 2D: 8-1, 9+1, 19-1, 24+1. # 1D: 31-1, 32+1
tests/unit/test_hu_model_conservation.py:        assert net_flux_pressure == -(div @ flux_pressure).evaluate(self.equation_system).val[7]
tests/unit/test_hu_model_conservation.py:        net_flux_pressure = flux_cell_7_pressure[0] - flux_cell_7_pressure[1]
tests/unit/test_hu_model_conservation.py:        assert net_flux_pressure == -(div @ flux_pressure).evaluate(self.equation_system).val[11]
tests/unit/test_hu_model_conservation.py:        # MASS BALANCE: -----------------------
tests/unit/test_hu_model_conservation.py:        flux_mass_op = flux_V_G - flux_intf_phase_0
tests/unit/test_hu_model_conservation.py:        net_flux_mass = flux_cell_7_mass[0] - flux_cell_7_mass[1] + flux_cell_7_mass[2] - flux_cell_7_mass[3]
tests/unit/test_hu_model_conservation.py:        assert net_flux_mass == -(div @ flux_mass_op).evaluate(self.equation_system).val[7]        
tests/unit/test_hu_model_conservation.py:        flux_mass_op = flux_V_G - flux_intf_phase_0
tests/unit/test_hu_model_conservation.py:        net_flux_mass = flux_cell_7_mass[0] - flux_cell_7_mass[1]
tests/unit/test_hu_model_conservation.py:        assert net_flux_mass == -(div @ flux_mass_op).evaluate(self.equation_system).val[11]        
tests/unit/test_hu_model_conservation.py:        print("\n\n TEST PASSED ------------------- ")
tests/unit/test_hu_model_conservation.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_conservation.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_conservation.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_conservation.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_conservation.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_model_contributions.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_contributions.py:        print('\n\n         ------- inside before_nonlinear_iteration: ---------- ')
tests/unit/test_hu_model_contributions.py:        # TEST SECTION: --------------------------------------------------------------
tests/unit/test_hu_model_contributions.py:    def after_nonlinear_iteration(self, solution_vector: np.ndarray) -> None:
tests/unit/test_hu_model_contributions.py:        print('\n\n             ----------- inside_after_nonlinear_iteration: ---------------')
tests/unit/test_hu_model_contributions.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_contributions.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_contributions.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_contributions.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_contributions.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_grid_refinement.py:            intf.update_mortar(new_side_grids, 1e-4)
tests/unit/test_grid_refinement.py:    # ------------------------------------------------------------------------------#
tests/unit/test_grid_refinement.py:            intf.update_mortar(new_side_grids, 1e-4)
tests/unit/test_grid_refinement.py:    # ------------------------------------------------------------------------------#
tests/unit/test_grid_refinement.py:        """Refine the lower-dimensional grid so that it is matching with the
tests/unit/test_grid_refinement.py:            # refine the 1d-physical grid
tests/unit/test_grid_refinement.py:            intf.update_secondary(new_g, 1e-4)
tests/unit/test_grid_refinement.py:                        intf.secondary_to_mortar_avg().A[::-1],
tests/unit/test_grid_refinement.py:    # ------------------------------------------------------------------------------#
tests/unit/test_grid_refinement.py:            # refine the 1d-physical grid
tests/unit/test_grid_refinement.py:            intf.update_secondary(new_g, 1e-4)
tests/unit/test_grid_refinement.py:                        intf.secondary_to_mortar_avg().A[::-1],
tests/unit/test_grid_refinement.py:                        intf.secondary_to_mortar_int().A[::-1],
tests/unit/test_grid_refinement.py:    # ------------------------------------------------------------------------------#
tests/unit/test_hu_model_delta_p.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_delta_p.py:            #     2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_model_delta_p.py:        # TEST: ---------------------------------------------------------------------------
tests/unit/test_hu_model_delta_p.py:        if np.isclose(np.mod(self.time_manager.time, 0.1), 0, rtol=0, atol=1e-4):
tests/unit/test_hu_model_delta_p.py:                assert np.isclose( 0, 0, rtol=0, atol=1e-10 )
tests/unit/test_hu_model_delta_p.py:        print("\n\n\n TEST PASSED ----------------------------------------")
tests/unit/test_hu_model_delta_p.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_delta_p.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_delta_p.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_delta_p.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_delta_p.py:    dt_init=1e-1,
tests/unit/test_hu_model_delta_p.py:    "nl_convergence_tol": 1e-11,
tests/unit/test_stencil_partial_update_fv_discr.py:        # Nodes of cell 12 (middle one) - from counting
tests/unit/test_stencil_partial_update_fv_discr.py:        # Nodes of cell 13 (middle one) - from counting
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:    # other methods not called in prepared_simulation: -------------------------------------------------
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:        # TEST: ---------------------------------------------------------------------------
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:        #         sd.nodes[0][internal_nodes_id[0]] -= 0.1
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:        # ---------
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:            # so mortar > 0 => fluid flux >0 => exiting boundary flux => a minus in the conservation law: div(F-boundary_flux)
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:            mortar_phase_0 = -(
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:            mortar_phase_1 = -(
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        mortar_phase_0, np.array([0,0,0,0]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        mortar_phase_0, np.array([0,0,0,0]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        mortar_phase_0, np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        mortar_phase_0, np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:            if self.case == 5:  # delta p = -1, g = 0, s0=0
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        rho_mob_phase_0 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        rho_mob_phase_1 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:            if self.case == 8:  # delta p = -1, g = 1, s0=1
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        rho_mob_phase_0 * np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        rho_mob_phase_1 * np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        mortar_phase_0, 2*np.array([1, 1, -1, -1]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*rho_mob_phase_0 * np.array([1, 1, -1, -1]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*rho_mob_phase_1 * np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        mortar_phase_0, 2*np.array([1, 1, -1, -1]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*rho_mob_phase_0 * np.array([1, 1, -1, -1]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*rho_mob_phase_1 * np.array([0.5, 0.5, -0.5, -0.5]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        mortar_phase_0, 2*np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        mortar_phase_0, 2*np.array([20, 20, 20, 20]), rtol=0, atol=1e-10
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:            if self.case == 13:  # delta p = -1, g = 0, s0=0
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*rho_mob_phase_0 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*rho_mob_phase_1 * np.array([-20, -20, -20, -20]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:            if self.case == 16:  # delta p = -1, g = 1, s0=1
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                       2* np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                       2* rho_mob_phase_0 * np.array([-19, -19, -21, -21]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        2*rho_mob_phase_1 * np.array([-19.5, -19.5, -20.5, -20.5]),
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:                        atol=1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:            print("\n\n\n TEST PASSED ----------------------------------------")
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:            "cell_size_y": self.ymax/2-0.1,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:if case == 5:  # delta p = -1, g = 0
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:if case == 8:  # delta p = -1, g = 1
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:if case == 13:  # delta p = -1, g = 0
tests/unit/test_hu_model_mortar_fluid_flux_vertical.py:if case == 16:  # delta p = -1, g = 1
tests/unit/test_upwind.py:        M_known = np.array([[2, 0, 0], [-2, 2, 0], [0, -2, 0]])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        dis = solver.darcy_flux(g, [-2, 0, 0])
tests/unit/test_upwind.py:        M_known = np.array([[0, -2, 0], [0, 2, -2], [0, 0, 2]])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:                [-1, 1, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, -1, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, -1, 1, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, -1, 0],
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        dis = solver.darcy_flux(g, [-2, 0, 0])
tests/unit/test_upwind.py:                [0, -1, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 1, -1, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, -1, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, 1, -1],
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        M_known = np.array([[1, -1, 0, 0], [0, 1, 0, 0], [0, 0, 0, -1], [-1, 0, 0, 1]])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        dis = solver.darcy_flux(g, [-1, 0, 0])
tests/unit/test_upwind.py:        M_known = np.array([[1, 0, 0, -1], [-1, 0, 0, 0], [0, 0, 1, 0], [0, 0, -1, 1]])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        dis = solver.darcy_flux(g, [-1, 0, 0])
tests/unit/test_upwind.py:        # Faces with a non-zero flux
tests/unit/test_upwind.py:                [0, -1, 0, 0, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, -1, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, 0, -1, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, 0, 0, 0, -1],
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:                [-1, 0, 0, 0, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, -1, 0, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, -1, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, 0, 0, -1, 0],
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        R = pp.map_geometry.rotation_matrix(-np.pi / 5.0, [0, 1, -1])
tests/unit/test_upwind.py:        M_known = np.array([[1, 0, 0], [-1, 1, 0], [0, -1, 0]])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        R = pp.map_geometry.rotation_matrix(-np.pi / 8.0, [-1, 1, -1])
tests/unit/test_upwind.py:        dis = solver.darcy_flux(g, np.dot(R, [-1, 0, 0]))
tests/unit/test_upwind.py:        M_known = np.array([[0, -1, 0], [0, 1, -1], [0, 0, 1]])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:                [-1, 1, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, -1, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, -1, 1, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, -1, 0],
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        dis = solver.darcy_flux(g, np.dot(R, [-1, 0, 0]))
tests/unit/test_upwind.py:                [0, -1, 0, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 1, -1, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, -1, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, 1, -1],
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        M_known = np.array([[1, -1, 0, 0], [0, 1, 0, 0], [0, 0, 0, -1], [-1, 0, 0, 1]])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        R = pp.map_geometry.rotation_matrix(-np.pi / 5.0, [1, 1, -1])
tests/unit/test_upwind.py:        dis = solver.darcy_flux(g, np.dot(R, [-1, 0, 0]))
tests/unit/test_upwind.py:        M_known = np.array([[1, 0, 0, -1], [-1, 0, 0, 0], [0, 0, 1, 0], [0, 0, -1, 1]])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        dis = solver.darcy_flux(g, [-2, 0, 0])
tests/unit/test_upwind.py:        M_known = np.array([[2, -2, 0], [0, 2, -2], [0, 0, 2]])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        dis = solver.darcy_flux(g, [-2, 0, 0])
tests/unit/test_upwind.py:        bc_val = np.array([2, 0, 0, -2]).ravel("F")
tests/unit/test_upwind.py:        M_known = np.array([[0, -2, 0], [0, 2, -2], [0, 0, 2]])
tests/unit/test_upwind.py:        rhs_known = np.array([-2, 0, 2])
tests/unit/test_upwind.py:        rtol = 1e-15
tests/unit/test_upwind.py:        bc_val = np.hstack(([1], np.zeros(g.num_faces - 1)))
tests/unit/test_upwind.py:        M_minus_U = M - U
tests/unit/test_upwind.py:        bc_val = np.hstack(([1], np.zeros(g.num_faces - 1)))
tests/unit/test_upwind.py:            return -np.sin(pt[0]) * np.sin(pt[1]) - pt[0]
tests/unit/test_upwind.py:        bc_val = np.hstack(([1], np.zeros(g.num_faces - 1)))
tests/unit/test_upwind.py:        M_minus_U = M - U
tests/unit/test_upwind.py:                9.63168200e-01,
tests/unit/test_upwind.py:                8.64054875e-01,
tests/unit/test_upwind.py:                7.25390695e-01,
tests/unit/test_upwind.py:                5.72228235e-01,
tests/unit/test_upwind.py:                4.25640080e-01,
tests/unit/test_upwind.py:                2.99387331e-01,
tests/unit/test_upwind.py:                1.99574336e-01,
tests/unit/test_upwind.py:                1.26276876e-01,
tests/unit/test_upwind.py:                7.59011550e-02,
tests/unit/test_upwind.py:                4.33431230e-02,
tests/unit/test_upwind.py:                3.30416807e-02,
tests/unit/test_upwind.py:                1.13058617e-01,
tests/unit/test_upwind.py:                2.05372538e-01,
tests/unit/test_upwind.py:                2.78382057e-01,
tests/unit/test_upwind.py:                3.14035373e-01,
tests/unit/test_upwind.py:                3.09920132e-01,
tests/unit/test_upwind.py:                2.75024694e-01,
tests/unit/test_upwind.py:                2.23163145e-01,
tests/unit/test_upwind.py:                1.67386939e-01,
tests/unit/test_upwind.py:                1.16897527e-01,
tests/unit/test_upwind.py:                1.06111312e-03,
tests/unit/test_upwind.py:                1.11951850e-02,
tests/unit/test_upwind.py:                3.87907727e-02,
tests/unit/test_upwind.py:                8.38516119e-02,
tests/unit/test_upwind.py:                1.36617802e-01,
tests/unit/test_upwind.py:                1.82773271e-01,
tests/unit/test_upwind.py:                2.10446545e-01,
tests/unit/test_upwind.py:                2.14651936e-01,
tests/unit/test_upwind.py:                1.97681518e-01,
tests/unit/test_upwind.py:                1.66549151e-01,
tests/unit/test_upwind.py:                3.20751341e-05,
tests/unit/test_upwind.py:                9.85780113e-04,
tests/unit/test_upwind.py:                6.07062715e-03,
tests/unit/test_upwind.py:                1.99393042e-02,
tests/unit/test_upwind.py:                4.53237556e-02,
tests/unit/test_upwind.py:                8.00799828e-02,
tests/unit/test_upwind.py:                1.17199623e-01,
tests/unit/test_upwind.py:                1.47761481e-01,
tests/unit/test_upwind.py:                1.64729339e-01,
tests/unit/test_upwind.py:                1.65390555e-01,
tests/unit/test_upwind.py:                9.18585872e-07,
tests/unit/test_upwind.py:                8.08267622e-05,
tests/unit/test_upwind.py:                8.47227168e-04,
tests/unit/test_upwind.py:                4.08879583e-03,
tests/unit/test_upwind.py:                1.26336029e-02,
tests/unit/test_upwind.py:                2.88705048e-02,
tests/unit/test_upwind.py:                5.27841497e-02,
tests/unit/test_upwind.py:                8.10459333e-02,
tests/unit/test_upwind.py:                1.07956484e-01,
tests/unit/test_upwind.py:                1.27665318e-01,
tests/unit/test_upwind.py:                2.51295298e-08,
tests/unit/test_upwind.py:                6.29844122e-06,
tests/unit/test_upwind.py:                1.09361990e-04,
tests/unit/test_upwind.py:                7.56743783e-04,
tests/unit/test_upwind.py:                3.11384414e-03,
tests/unit/test_upwind.py:                9.04446601e-03,
tests/unit/test_upwind.py:                2.03443897e-02,
tests/unit/test_upwind.py:                3.75208816e-02,
tests/unit/test_upwind.py:                5.89595194e-02,
tests/unit/test_upwind.py:                8.11457277e-02,
tests/unit/test_upwind.py:                6.63498510e-10,
tests/unit/test_upwind.py:                4.73075468e-07,
tests/unit/test_upwind.py:                1.33728945e-05,
tests/unit/test_upwind.py:                1.30243418e-04,
tests/unit/test_upwind.py:                7.01905707e-04,
tests/unit/test_upwind.py:                2.55272292e-03,
tests/unit/test_upwind.py:                6.96686157e-03,
tests/unit/test_upwind.py:                1.52290448e-02,
tests/unit/test_upwind.py:                2.78607282e-02,
tests/unit/test_upwind.py:                4.40402650e-02,
tests/unit/test_upwind.py:                1.71197497e-11,
tests/unit/test_upwind.py:                3.47118057e-08,
tests/unit/test_upwind.py:                1.57974045e-06,
tests/unit/test_upwind.py:                2.13489614e-05,
tests/unit/test_upwind.py:                1.48634295e-04,
tests/unit/test_upwind.py:                6.68104990e-04,
tests/unit/test_upwind.py:                2.18444135e-03,
tests/unit/test_upwind.py:                5.58646819e-03,
tests/unit/test_upwind.py:                1.17334966e-02,
tests/unit/test_upwind.py:                2.09744728e-02,
tests/unit/test_upwind.py:                4.37822313e-13,
tests/unit/test_upwind.py:                2.52373622e-09,
tests/unit/test_upwind.py:                1.83589660e-07,
tests/unit/test_upwind.py:                3.40553325e-06,
tests/unit/test_upwind.py:                3.02948532e-05,
tests/unit/test_upwind.py:                1.66504215e-04,
tests/unit/test_upwind.py:                6.45119867e-04,
tests/unit/test_upwind.py:                1.90731440e-03,
tests/unit/test_upwind.py:                4.53436628e-03,
tests/unit/test_upwind.py:                8.99977737e-03,
tests/unit/test_upwind.py:                1.12627412e-14,
tests/unit/test_upwind.py:                1.84486857e-10,
tests/unit/test_upwind.py:                2.13562387e-08,
tests/unit/test_upwind.py:                5.39492977e-07,
tests/unit/test_upwind.py:                6.08223906e-06,
tests/unit/test_upwind.py:                4.05535296e-05,
tests/unit/test_upwind.py:                1.84731221e-04,
tests/unit/test_upwind.py:                6.25871542e-04,
tests/unit/test_upwind.py:                1.66459389e-03,
tests/unit/test_upwind.py:                3.59980231e-03,
tests/unit/test_upwind.py:        # ---------
tests/unit/test_upwind.py:        # --------- horizontal fracture
tests/unit/test_upwind.py:        # --------
tests/unit/test_upwind.py:            [[0, 0, 0, 0, 0, 0, -1, 0, -1, 0], [0, 0, 0, 0, 0, 0, 0, -1, 0, -1]]
tests/unit/test_upwind.py:                [0, 0, 0, 0, 0, 0, -1, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 1, 0, 0, 0, 0, -1, 0, 0],
tests/unit/test_upwind.py:                [0, 2, 0, 0, 0, 0, 0, 0, -1, 0],
tests/unit/test_upwind.py:                [3, 0, 0, 0, 0, 0, 0, 0, 0, -1],
tests/unit/test_upwind.py:        data_intf[pp.PARAMETERS] = {"transport": {"darcy_flux": -lam}}
tests/unit/test_upwind.py:            [[0, 0, 0, 0, 0, 0, -1, 0, -1, 0], [0, 0, 0, 0, 0, 0, 0, -1, 0, -1]]
tests/unit/test_upwind.py:                [0, 0, 0, 0, 0, 0, -1, 0, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, 0, -1, 0, -1, 0, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, -2, 0, 0, 0, -1, 0],
tests/unit/test_upwind.py:                [0, 0, 0, 0, 0, -3, 0, 0, 0, -1],
tests/unit/test_hu_model_fluid_flux.py:- I check that the interface (noun "interface" missing everywhere) fluid flux of the non-present phase is actually zero
tests/unit/test_hu_model_fluid_flux.py:- test after one, or more, timesteps. Density is constant. It shouldn't conferge but id does, sometimes..?
tests/unit/test_hu_model_fluid_flux.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_fluid_flux.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_model_fluid_flux.py:        # TEST SECTION: ---------------------------------------------------------
tests/unit/test_hu_model_fluid_flux.py:        #         sd.nodes[1][[9, 11]] -= 0.1
tests/unit/test_hu_model_fluid_flux.py:        print("\n\n TEST PASSED ------------------- ")
tests/unit/test_hu_model_fluid_flux.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_fluid_flux.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_fluid_flux.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_fluid_flux.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_fluid_flux.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_plotting.py:        (mdg.dim_max(), -1), order="F"
tests/unit/test_plotting.py:        [vector_data, np.zeros((3 - vector_data.shape[0], vector_data.shape[1]))]
tests/unit/test_plotting.py:        if sd.dim in (mdg_.dim_max(), mdg_.dim_max() - 1):
tests/unit/test_map_geometry.py:        # pts in xy-plane
tests/unit/test_map_geometry.py:        # pts in xz-plane
tests/unit/test_map_geometry.py:        # pts in yz-plane
tests/unit/test_map_geometry.py:            or np.allclose(nz, -np.array([0, 0, 1]))
tests/unit/test_map_geometry.py:            or np.allclose(ny, -np.array([0, 1, 0]))
tests/unit/test_map_geometry.py:            or np.allclose(nx, -np.array([1, 0, 0]))
tests/unit/test_map_geometry.py:        # pts in xy-plane
tests/unit/test_mortars.py:        replace_subdomains_and_interfaces in a mixed-dimensional grid applied to
tests/unit/test_mortars.py:        the highest-dimensional grid. In practice, this only applies to 2d domains,
tests/unit/test_mortars.py:        mat = pp.match_grids.match_1d(g, g, tol=1e-4)
tests/unit/test_mortars.py:        mat = pp.match_grids.match_1d(g, h, tol=1e-4, scaling="averaged")
tests/unit/test_mortars.py:        h.nodes = h.nodes[:, ::-1]
tests/unit/test_mortars.py:        mat = pp.match_grids.match_1d(g, h, tol=1e-4, scaling="averaged")
tests/unit/test_mortars.py:        self.assertTrue(np.allclose(mat.row[::-1], mat.col))
tests/unit/test_mortars.py:        mat_g_2_h = pp.match_grids.match_1d(h, g, tol=1e-4, scaling="averaged")
tests/unit/test_mortars.py:        mat_h_2_g = pp.match_grids.match_1d(g, h, tol=1e-4, scaling="averaged")
tests/unit/test_mortars.py:    """Test of functionality to replace the higher-dimensional grid in a MixedDimensionalGrid.
tests/unit/test_mortars.py:    Replacement of the highest-dimensional grid in a 1d domain is not checked, but that
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[0, 8] - 0.7 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[0, 9] - 0.3 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[1, 12] - 0.2 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[1, 13] - 0.8 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[0, 8] - 0.4 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[0, 9] - 0.6 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[1, 9] - 1 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[2, 13] - 1 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[3, 12] - 0.4 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[3, 13] - 0.6 < 1e-6))
tests/unit/test_mortars.py:        # Replacements: along lower segment (3, 5, 7) -> (7, 5, 3)
tests/unit/test_mortars.py:        # On upper segment: (4, 6, 8) -> (8, 4, 6)
tests/unit/test_mortars.py:        # Replacements: along lower segment (3, 5, 7) -> (7, 5, 3)
tests/unit/test_mortars.py:        # On upper segment: (4, 6, 8) -> (8, 4, 6)
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[0, 8] - 0.4 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[0, 9] - 0.6 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[1, 9] - 1 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[2, 13] - 1 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[3, 12] - 0.4 < 1e-6))
tests/unit/test_mortars.py:        self.assertTrue(np.abs(new_projection_avg[3, 13] - 0.6 < 1e-6))
tests/unit/test_mortars.py:    """Various tests for replacing subdomain and interface grids in a 3d mixed-dimensional
tests/unit/test_mortars.py:        the grid has 5 nodes (four of them along y=0, the fifth is at y=+-1) and two cells.
tests/unit/test_mortars.py:            1) One with four nodes, at {(0, 0), (1, 0), (1, 1), (0, 1)} - the third node
tests/unit/test_mortars.py:               is moved to (1, 2) if pert=True - and two cells formed by the sets of nodes
tests/unit/test_mortars.py:               (0, 0) and now (1, 2) - or else the 1d grid defined below will not conform
tests/unit/test_mortars.py:        At the 3d-2d and 2d-1d interfaces, there are of course mortar grids that will have
tests/unit/test_mortars.py:    IMPLEMENTATION NOTE: When perturbing the grid (moving (1, 1) -> (1, 2)), several updates
tests/unit/test_mortars.py:                [0, -1, 0],
tests/unit/test_mortars.py:                [-0.25, 0.75, 0.25],
tests/unit/test_mortars.py:                [-0.25, 0.5, 0.5],
tests/unit/test_mortars.py:                [-0.25, 0.75, 0.25],
tests/unit/test_mortars.py:            # highest-dimensional, 3d grid)
tests/unit/test_mortars.py:                [0, -1, 0],
tests/unit/test_mortars.py:                [-0.25, 0.75, 0.25],
tests/unit/test_mortars.py:                [-0.25, 0.5, 0.5],
tests/unit/test_mortars.py:                [-0.25, 0.75, 0.25],
tests/unit/test_mortars.py:        face_normals = np.array([[0, -1], [1, 0], [-1, 1], [-1, 1], [0, 1], [-1, 0]]).T
tests/unit/test_mortars.py:            face_normals[0, 2] = -2
tests/unit/test_mortars.py:            face_normals[0, 3] = -2
tests/unit/test_mortars.py:        face_normals = np.array([[0, -1], [1, 0], [0, 1], [-1, 0], [-1, 1]]).T
tests/unit/test_mortars.py:        # pert: Move the point (1, 0 1) -> (1, 0, 2)
tests/unit/test_mortars.py:        # move_interior_point: Move the point (0.5, 0, 0.5) -> (0.5, 0, 1). Should only
tests/unit/test_mortars.py:                [0, -1],
tests/unit/test_mortars.py:                [-1, 1],
tests/unit/test_mortars.py:                [-1, 1],
tests/unit/test_mortars.py:                [-1, 0],
tests/unit/test_mortars.py:                [1, -1],
tests/unit/test_mortars.py:                [1, -1],
tests/unit/test_mortars.py:                face_normals[0, 2] = -2
tests/unit/test_mortars.py:                face_normals[0, 4] = -2
tests/unit/test_mortars.py:            [[0, -1], [1, 0], [0, 1], [-1, 0], [-1, 1], [1, 1], [1, -1], [1, 1]]
tests/unit/test_vtk_reference/mdg_nontrivial_data_grid_2.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/mdg_grid_1.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/mdg_nontrivial_data_grid_1.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/mdg_nontrivial_data_grid_mortar_1.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/constant_data_test_grid_constant_2.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/single_subdomain_2d_polytop_grid.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/constant_data_test_grid_2.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/mdg_data_selection_grid_1.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/single_subdomain_1d.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/mdg_data_selection_grid_2.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/single_subdomain_3d_cart_grid.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/fractures_2d.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/mdg_data_selection_grid_mortar_1.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/mdg_grid_2.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/fractures_3d.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/restart/grid_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/restart/grid_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/restart/grid_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/restart/grid_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/restart/grid_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/restart/grid_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/single_subdomain_2d_cart_grid.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/single_subdomain_3d_polytop_grid.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/mdg_grid_mortar_1.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/single_subdomain_2d_simplex_grid.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/test_vtk_reference/single_subdomain_3d_simplex_grid.vtu:<!--This file was created by meshio v5.3.4-->
tests/unit/gmsh_frac_file.geo_unrolled:Curve Loop(1) = {1, 2, 3, -5, 4};
tests/unit/test_hu_6.py:    def initial_condition(self) -> None:
tests/unit/test_hu_6.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_6.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_6.py:            permeability = 10 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_6.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_6.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_6.py:                eps = 1e-6
tests/unit/test_hu_6.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_6.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_6.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_6.py:                eps = 1e-6
tests/unit/test_hu_6.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_6.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_6.py:    def set_geometry(self) -> None:
tests/unit/test_hu_6.py:    def set_domain(self) -> None:
tests/unit/test_hu_6.py:    def set_fractures(self) -> None:
tests/unit/test_hu_6.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_6.py:    dt_init=1e-3,
tests/unit/test_hu_6.py:    # dt_init=1e-2,
tests/unit/test_hu_6.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_6.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_6.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_hu_model_V_G.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_V_G.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_model_V_G.py:        # TEST: --------------------------------------------------------------------------------------------
tests/unit/test_hu_model_V_G.py:                rho_G, np.array([0, 0, 0, 0, 0, -0.5, 0]), rtol=0, atol=1e-3 )) # PASSED. if compressible not exaclty -0.5
tests/unit/test_hu_model_V_G.py:            assert np.all(np.isclose(rho_V, self.x_multiplier*np.array([0, 0, 0, 0, 0, 1, 0]), rtol=0, atol=1e-14))
tests/unit/test_hu_model_V_G.py:                rho_G, self.x_multiplier*np.array([0, 0, 0, 0, 0, -0.5, 0]), rtol=0, atol=1e-8 )) # atol = 1e-3 if compressible    
tests/unit/test_hu_model_V_G.py:        print("\n\n TEST PASSED ------------------- ")
tests/unit/test_hu_model_V_G.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_V_G.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_V_G.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_intersections.py:        p = np.array([[-1, 1, 0, 0], [0, 0, -1, 1]])
tests/unit/test_intersections.py:        # Same partly overlapping test, but switch order of edge-point
tests/unit/test_intersections.py:        s = np.array([0.5, 0.5, -0.5])
tests/unit/test_intersections.py:        s = np.array([1.5, 0.5, -0.5])
tests/unit/test_intersections.py:        s = np.array([1, 1, -0.5])
tests/unit/test_intersections.py:        s = np.array([1, 0.5, -0.5])
tests/unit/test_intersections.py:            np.array([[0, -1, 0], [0, 1, 2]]),
tests/unit/test_intersections.py:        # Non-convex intersection. Should return an error
tests/unit/test_hu_model_dirty.py:- is it ok to consider mu (dynamic viscosity, mu = nu/rho) constant? 
tests/unit/test_hu_model_dirty.py:- inside var_upwinded_interfaces there should be ..._int not avg. Doesn't matter as long as the grids are conforming.
tests/unit/test_hu_model_dirty.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_dirty.py:           (sd.dim-1)*np.ones(sd.num_cells) for sd in self.subdomains
tests/unit/test_hu_model_dirty.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_dirty.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_dirty.py:        - I rely on the fact the _parse first calld get_values and THEN get_jacobian
tests/unit/test_hu_model_dirty.py:            )  # equation_system.assemble_subsystem will add the "-", so it will actually become a rhs
tests/unit/test_hu_model_dirty.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_dirty.py:        - I rely on the fact the _parse first calls get_values and THEN get_jacobian
tests/unit/test_hu_model_dirty.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_dirty.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_dirty.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_dirty.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_dirty.py:    def create_variables(self) -> None:
tests/unit/test_hu_model_dirty.py:    def pressure(self, subdomains: list[pp.Grid]) -> pp.ad.MixedDimensionalVariable:
tests/unit/test_hu_model_dirty.py:    ) -> pp.ad.MixedDimensionalVariable:
tests/unit/test_hu_model_dirty.py:    ) -> pp.ad.MixedDimensionalVariable:
tests/unit/test_hu_model_dirty.py:    # PRESSURE EQUATION: -------------------------------------------------------------------------------------------------
tests/unit/test_hu_model_dirty.py:        # accumulation term: ------------------------------
tests/unit/test_hu_model_dirty.py:        # subdoamins flux: ---------------------------------------------------------
tests/unit/test_hu_model_dirty.py:        # interfaces flux contribution (copied from mass bal): ------------------------------------
tests/unit/test_hu_model_dirty.py:        flux = ( flux_tot - flux_intf_phase_0 - flux_intf_phase_1
tests/unit/test_hu_model_dirty.py:                - neu_boundary_matrix @ self.bc_neu_phase_0(subdomains)
tests/unit/test_hu_model_dirty.py:                - neu_boundary_matrix @ self.bc_neu_phase_1(subdomains) ) 
tests/unit/test_hu_model_dirty.py:        # flux = ( flux_tot - flux_intf_phase_0 - flux_intf_phase_1
tests/unit/test_hu_model_dirty.py:        #         - discr_phase_0.bound_transport_neu @ self.bc_neu_phase_0(subdomains)
tests/unit/test_hu_model_dirty.py:        #         - discr_phase_1.bound_transport_neu @ self.bc_neu_phase_1(subdomains) ) 
tests/unit/test_hu_model_dirty.py:        # sources: --------------------------------------------------------------
tests/unit/test_hu_model_dirty.py:    def pressure_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:    # MASS BALANCE: ----------------------------------------------------------------------------------------------------------------
tests/unit/test_hu_model_dirty.py:        # accumulation term: ------------------------------------------------
tests/unit/test_hu_model_dirty.py:        # subdomains flux contribution: -------------------------------------
tests/unit/test_hu_model_dirty.py:        # interfaces flux contribution: ------------------------------------
tests/unit/test_hu_model_dirty.py:            neu_boundary_matrix  # -1,0,1 matrix
tests/unit/test_hu_model_dirty.py:            flux = flux_V_G - flux_intf_phase_0 - neu_boundary_matrix @ self.bc_neu_phase_0(subdomains) 
tests/unit/test_hu_model_dirty.py:            # flux = self.specific_volume(subdomains) * flux_V_G - flux_intf_phase_0 - discr_phase_0.bound_transport_neu @ self.bc_neu_phase_0(subdomains) 
tests/unit/test_hu_model_dirty.py:            flux = flux_V_G - flux_intf_phase_1 - neu_boundary_matrix @ self.bc_neu_phase_1(subdomains)
tests/unit/test_hu_model_dirty.py:            # flux = self.specific_volume(subdomains) * flux_V_G - flux_intf_phase_1 - discr_phase_1.bound_transport_neu @ self.bc_neu_phase_1(subdomains)
tests/unit/test_hu_model_dirty.py:        # sources: ---------------------------------------
tests/unit/test_hu_model_dirty.py:    def mass_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:    # DARCY LAWS (to be imporeved): ----------------------------------------------------------------------------------------------------------
tests/unit/test_hu_model_dirty.py:        - mortar flux is integrated mortar flux
tests/unit/test_hu_model_dirty.py:        - mobility, Kr(s)/mu, is not included into this definition of mortar flux
tests/unit/test_hu_model_dirty.py:            interfaces, "cell_volumes", dim=1  # type: ignore[call-arg]
tests/unit/test_hu_model_dirty.py:            @ self.aperture(subdomains) ** pp.ad.Scalar(-1)
tests/unit/test_hu_model_dirty.py:        delta_p = pressure_h - pressure_l
tests/unit/test_hu_model_dirty.py:        eq = self.interface_mortar_flux_phase_0(interfaces) - (
tests/unit/test_hu_model_dirty.py:                    - density_upwinded
tests/unit/test_hu_model_dirty.py:            interfaces, "cell_volumes", dim=1  # type: ignore[call-arg]
tests/unit/test_hu_model_dirty.py:            @ self.aperture(subdomains) ** pp.ad.Scalar(-1)
tests/unit/test_hu_model_dirty.py:        eq = self.interface_mortar_flux_phase_1(interfaces) - (
tests/unit/test_hu_model_dirty.py:                    - pressure_l
tests/unit/test_hu_model_dirty.py:                    - density_upwinded
tests/unit/test_hu_model_dirty.py:    # MISCELLANEA FOR EQUATIONS: -------------------------------------------------------------------------------------------------
tests/unit/test_hu_model_dirty.py:    ) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:        - it's stupid to have mortar as input, I need more flexibility for the tests
tests/unit/test_hu_model_dirty.py:    ) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:    ) -> pp.ad.UpwindAd:
tests/unit/test_hu_model_dirty.py:    ) -> pp.ad.UpwindCouplingAd:
tests/unit/test_hu_model_dirty.py:        # print('\n inside interface_ppu_discretization: ------------------------')
tests/unit/test_hu_model_dirty.py:        # print("---------------------------\n")
tests/unit/test_hu_model_dirty.py:    ) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:        ref F17 f3 ->->
tests/unit/test_hu_model_dirty.py:        # epsilon = 1e-10 # avoid division by zero # TODO: NO... they shouldnt be zero
tests/unit/test_hu_model_dirty.py:        #     discr.bound_pressure_face # not 0, 1 matrix, this is -1/half_transmissibilities
tests/unit/test_hu_model_dirty.py:            - discr.bound_pressure_face @ ( projection.mortar_to_primary_int @ ( ( ( rho_mob_rho_upwinded_phase_0 + rho_mob_rho_upwinded_phase_1 ) / ( rho_mob_upwinded_phase_0 + rho_mob_upwinded_phase_1 ) ) ) * ( discr.vector_source @ self.vector_source(subdomains) ) )  
tests/unit/test_hu_model_dirty.py:            # - projection.mortar_to_primary_int @ ( ( ( rho_mob_rho_upwinded_phase_0 + rho_mob_rho_upwinded_phase_1 ) / ( rho_mob_upwinded_phase_0 + rho_mob_upwinded_phase_1 ) ) ) * ( XXX @ self.vector_source(subdomains_vector_source) )  # third version, ref F19f2, subdomains_vector_source are fractures domains, XXX 
tests/unit/test_hu_model_dirty.py:    def pressure_trace(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:    def darcy_flux_phase_0(self, subdomains: list[pp.Grid], phase) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:    def darcy_flux_phase_1(self, subdomains: list[pp.Grid], phase) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:    def darcy_flux_discretization(self, subdomains: list[pp.Grid]) -> pp.ad.MpfaAd:
tests/unit/test_hu_model_dirty.py:    ) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:        #     source_sd[self.nd-1] = self.gravity_value * np.ones(sd.num_cells) # gravity acts on the last coordinate. This is an implicit notation in HU and pp (not 100% sure about the latter)
tests/unit/test_hu_model_dirty.py:        # for i in np.arange(self.nd-1):
tests/unit/test_hu_model_dirty.py:        source_cell[self.nd-1] = self.gravity_value 
tests/unit/test_hu_model_dirty.py:    ) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:            interfaces, unitary=True  # type: ignore[call-arg]
tests/unit/test_hu_model_dirty.py:            [e.T for e in self.basis(interfaces, dim=self.nd)]  # type: ignore[call-arg]
tests/unit/test_hu_model_dirty.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_dirty.py:                eps = 1e-6
tests/unit/test_hu_model_dirty.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_model_dirty.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_model_dirty.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_dirty.py:                eps = 1e-6
tests/unit/test_hu_model_dirty.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_model_dirty.py:                vals[left_boundary] = -0*1.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_model_dirty.py:    def __init__(self, params: Optional[dict] = None) -> None:
tests/unit/test_hu_model_dirty.py:    def prepare_simulation(self) -> None:
tests/unit/test_hu_model_dirty.py:    # methods called in prepare_simulation: ------------------------------------------------------
tests/unit/test_hu_model_dirty.py:    def set_equation_system_manager(self) -> None:
tests/unit/test_hu_model_dirty.py:    def reset_state_from_file(self) -> None:
tests/unit/test_hu_model_dirty.py:                time_index = self.restart_options.get("time_index", -1)
tests/unit/test_hu_model_dirty.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_dirty.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_model_dirty.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_model_dirty.py:    def set_discretization_parameters(self) -> None:
tests/unit/test_hu_model_dirty.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/unit/test_hu_model_dirty.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_dirty.py:    def intrinsic_permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_dirty.py:    def intrinsic_permeability_tensor(self, sd: pp.Grid) -> pp.SecondOrderTensor:
tests/unit/test_hu_model_dirty.py:    def discretize(self) -> None:
tests/unit/test_hu_model_dirty.py:    def rediscretize(self) -> None:
tests/unit/test_hu_model_dirty.py:        #     "Re-discretized nonlinear terms in {} seconds".format(time.time() - tic)
tests/unit/test_hu_model_dirty.py:    def _initialize_linear_solver(self) -> None:
tests/unit/test_hu_model_dirty.py:    # other methods not called in prepared_simulation: -------------------------------------------------
tests/unit/test_hu_model_dirty.py:    # def set_nonlinear_discretizations(self) -> None:
tests/unit/test_hu_model_dirty.py:    def after_nonlinear_iteration(self, solution_vector: np.ndarray) -> None:
tests/unit/test_hu_model_dirty.py:        # if np.isclose(np.mod(self.time_manager.time, 0.002), 0, rtol=0, atol=1e-5):
tests/unit/test_hu_model_dirty.py:        # if np.isclose(np.mod(self.time_manager.time, 0.5), 0, rtol=0, atol=1e-4) or self.time_manager.time == self.time_manager.dt:
tests/unit/test_hu_model_dirty.py:            #         # sd.nodes[1][27] -= 0.04
tests/unit/test_hu_model_dirty.py:            #         # sd.nodes[1][29] -= 0.04
tests/unit/test_hu_model_dirty.py:            #         sd.nodes[1][side_1_nodes] -= 0.01
tests/unit/test_hu_model_dirty.py:            #     dp = pressure_h - pressure_l
tests/unit/test_hu_model_dirty.py:            #         ff0_from_p = -flux_intf_phase_0.evaluate(self.equation_system).val # "-" bcs weird pp notation, you know
tests/unit/test_hu_model_dirty.py:            #         ff1_from_p = -flux_intf_phase_1.evaluate(self.equation_system).val
tests/unit/test_hu_model_dirty.py:        #         sd.nodes[1][26] -= 0.04
tests/unit/test_hu_model_dirty.py:        #         sd.nodes[1][28] -= 0.04
tests/unit/test_hu_model_dirty.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_dirty.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_dirty.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_dirty.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_dirty.py:    dt_init= 1 * 1e-3 ,
tests/unit/test_hu_model_dirty.py:    "nl_convergence_tol": 5e-3,
tests/unit/test_hu_model_dirty.py:wetting_phase = pp.composite.phase.Phase(rho0=1, beta=1e-10)
tests/unit/test_hu_model_dirty.py:non_wetting_phase = pp.composite.phase.Phase(rho0=0.5, beta=1e-10)
tests/unit/test_hu_2.py:    def initial_condition(self) -> None:
tests/unit/test_hu_2.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_2.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_2.py:            permeability = 1/50 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_2.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_2.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_2.py:                eps = 1e-6
tests/unit/test_hu_2.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_2.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_2.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_2.py:                eps = 1e-6
tests/unit/test_hu_2.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_2.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_2.py:    def set_geometry(self) -> None:
tests/unit/test_hu_2.py:    def set_domain(self) -> None:
tests/unit/test_hu_2.py:    def set_fractures(self) -> None:
tests/unit/test_hu_2.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_2.py:    dt_init=1e-3,
tests/unit/test_hu_2.py:    # dt_init=1e-2,
tests/unit/test_hu_2.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_2.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_2.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_fracture_network.py:        return pp.PlaneFracture(np.array([[0, 2, 2, 0], [0, 2, 2, 0], [-1, -1, 1, 1]]))
tests/unit/test_fracture_network.py:    # -----> Test #1
tests/unit/test_fracture_network.py:    # -----> Test #2
tests/unit/test_fracture_network.py:        non-homogeneous types, e.g., it should be all PlaneFractures or
tests/unit/test_fracture_network.py:    # -----> Test #3
tests/unit/test_fracture_network.py:    # -----> Test #4
tests/unit/test_fracture_network.py:    # -----> Test #5
tests/unit/test_fracture_network.py:    # -----> Test #6
tests/unit/test_fracture_network.py:    # -----> Test #7
tests/unit/test_fracture_network.py:        common = set(a) - (set(a) - set(b))
tests/unit/test_fracture_network.py:        self.domain = pp.Domain({"xmin": 0, "xmax": 5, "ymin": -1, "ymax": 5})
tests/unit/test_fracture_network.py:        self.small_domain = pp.Domain({"xmin": -1, "xmax": 1.5, "ymin": -1, "ymax": 5})
tests/unit/test_fracture_network.py:        p = np.array([[0, 2, 1, 1], [0, 0, 1e-3, 1]])
tests/unit/test_fracture_network.py:        snapped = network.snapped_copy(tol=1e-2)
tests/unit/test_fracture_network.py:        snapped_2 = network.snapped_copy(tol=1e-4)
tests/unit/test_fracture_network.py:        self.assertTrue(test_utils.compare_arrays(start, p[:, 0].reshape((-1, 1))))
tests/unit/test_fracture_network.py:        self.assertTrue(test_utils.compare_arrays(end, p[:, 1].reshape((-1, 1))))
tests/unit/test_fracture_network.py:        end = 2 * np.random.rand(2, num_frac) - 1
tests/unit/test_fracture_network.py:                angle == known_orientation, angle - np.pi == known_orientation
tests/unit/test_fracture_network.py:        combined_domain = pp.Domain({"xmin": -1, "xmax": 5.0, "ymin": -1, "ymax": 5})
tests/unit/test_fracture_network.py:        pn, conv = network._snap_fracture_set(p, snap_tol=1e-3)
tests/unit/test_fracture_network.py:        p = np.array([[0, 1, 0, 1], [0, 0, 1e-4, 1]])
tests/unit/test_fracture_network.py:        pn, conv = network._snap_fracture_set(p, snap_tol=1e-3)
tests/unit/test_fracture_network.py:        p = np.array([[0, 1, 0, 1], [0, 0, 1e-4, 1]])
tests/unit/test_fracture_network.py:        pn, conv = network._snap_fracture_set(p, snap_tol=1e-5)
tests/unit/test_fracture_network.py:        p = np.array([[0, 1, 0.5, 1], [0, 0, 1e-4, 1]])
tests/unit/test_fracture_network.py:        pn, conv = network._snap_fracture_set(p, snap_tol=1e-3)
tests/unit/test_fracture_network.py:            np.array([[0, 1, 1, 0], [0, 0, 1, 1], [-1, -1, 1, 1]]),
tests/unit/test_fracture_network.py:        self.assertTrue(d["zmin"] == -1)
tests/unit/test_fracture_network.py:            "xmin": -1,
tests/unit/test_fracture_network.py:            "ymin": -1,
tests/unit/test_fracture_network.py:            "zmin": -1,
tests/unit/test_fracture_network.py:        tol = 1e-12
tests/unit/test_fracture_network.py:                self.assertTrue(abs(domain.pop(key) - values[dim]) < tol)
tests/unit/test_fracture_network.py:        physdims = [1, -1]
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        M_known = 1e-2 * np.array(
tests/unit/test_dual_vem.py:                [25, -(8 + 1 / 3.0), 0, 0, 1e2, 0, 0],
tests/unit/test_dual_vem.py:                [-(8 + 1 / 3.0), 50, -(8 + 1 / 3.0), 0, -1e2, 1e2, 0],
tests/unit/test_dual_vem.py:                [0, -(8 + 1 / 3.0), 50, -(8 + 1 / 3.0), 0, -1e2, 1e2],
tests/unit/test_dual_vem.py:                [0, 0, -(8 + 1 / 3.0), 25, 0, 0, -1e2],
tests/unit/test_dual_vem.py:                [1e2, -1e2, 0, 0, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 1e2, -1e2, 0, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 0, 1e2, -1e2, 0, 0, 0],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        M_known = 1e-2 * np.array(
tests/unit/test_dual_vem.py:                [21.4427334468001192, -7.14757781560004, 0, 0, 1e2, 0, 0],
tests/unit/test_dual_vem.py:                    -7.14757781560004,
tests/unit/test_dual_vem.py:                    -5.6328170062520355,
tests/unit/test_dual_vem.py:                    -1e2,
tests/unit/test_dual_vem.py:                    -5.6328170062520355,
tests/unit/test_dual_vem.py:                    -4.788785299625264,
tests/unit/test_dual_vem.py:                    -1e2,
tests/unit/test_dual_vem.py:                [0, 0, -4.7887852996252649, 14.3663558988757991, 0, 0, -1e2],
tests/unit/test_dual_vem.py:                [1e2, -1e2, 0, 0, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 1e2, -1e2, 0, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 0, 1e2, -1e2, 0, 0, 0],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:                [0.625, -0.375, 0, 0, 0, 0, 0, 1, 0],
tests/unit/test_dual_vem.py:                [-0.375, 1.25, -0.375, 0, 0, 0, 0, -1, 1],
tests/unit/test_dual_vem.py:                [0, -0.375, 0.625, 0, 0, 0, 0, 0, -1],
tests/unit/test_dual_vem.py:                [0, 0, 0, 0, 0, 1, 0, -1, 0],
tests/unit/test_dual_vem.py:                [0, 0, 0, 0, 0, 0, 1, 0, -1],
tests/unit/test_dual_vem.py:                [1, -1, 0, 1, 0, -1, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 1, -1, 0, 1, 0, -1, 0, 0],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        kxy = -np.multiply(g.cell_centers[0, :], g.cell_centers[1, :])
tests/unit/test_dual_vem.py:                    -0.422619047619048,
tests/unit/test_dual_vem.py:                    -0.422619047619048,
tests/unit/test_dual_vem.py:                    -0.426724137931035,
tests/unit/test_dual_vem.py:                    -1,
tests/unit/test_dual_vem.py:                    -0.426724137931035,
tests/unit/test_dual_vem.py:                    -1,
tests/unit/test_dual_vem.py:                    -0.047619047619048,
tests/unit/test_dual_vem.py:                    -0.189655172413793,
tests/unit/test_dual_vem.py:                    -0.047619047619048,
tests/unit/test_dual_vem.py:                    -1,
tests/unit/test_dual_vem.py:                    -0.189655172413793,
tests/unit/test_dual_vem.py:                    -1,
tests/unit/test_dual_vem.py:                [1, -1, 0, 1, 0, -1, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 1, -1, 0, 1, 0, -1, 0, 0],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:                [0.611111111111111, 0.0, -0.277777777777778, 0.111111111111111, 0.0],
tests/unit/test_dual_vem.py:                [0.0, 0.611111111111111, -0.277777777777778, 0.0, 0.111111111111111],
tests/unit/test_dual_vem.py:                    -0.277777777777778,
tests/unit/test_dual_vem.py:                    -0.277777777777778,
tests/unit/test_dual_vem.py:                    -0.277777777777778,
tests/unit/test_dual_vem.py:                    -0.277777777777778,
tests/unit/test_dual_vem.py:                [0.111111111111111, 0.0, -0.277777777777778, 0.611111111111111, 0.0],
tests/unit/test_dual_vem.py:                [0.0, 0.111111111111111, -0.277777777777778, 0.0, 0.611111111111111],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:        # We test only the mass-Hdiv part
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        tol = 1e-6
tests/unit/test_dual_vem.py:        right = bf_centers[0, :] > 1 - tol
tests/unit/test_dual_vem.py:        p_ex = 1 - g.cell_centers[0, :]
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        kxy = -np.multiply(g.cell_centers[0, :], g.cell_centers[1, :])
tests/unit/test_dual_vem.py:                [0.599206349206349, 0.0, -0.337301587301587, 0.134920634920635, 0.0],
tests/unit/test_dual_vem.py:                [0.0, 0.599206349206349, -0.337301587301587, 0.0, 0.134920634920635],
tests/unit/test_dual_vem.py:                    -0.337301587301587,
tests/unit/test_dual_vem.py:                    -0.337301587301587,
tests/unit/test_dual_vem.py:                    -0.301587301587302,
tests/unit/test_dual_vem.py:                    -0.301587301587302,
tests/unit/test_dual_vem.py:                [0.134920634920635, 0.0, -0.301587301587302, 0.634920634920635, 0.0],
tests/unit/test_dual_vem.py:                [0.0, 0.134920634920635, -0.301587301587302, 0.0, 0.634920634920635],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:        # We test only the mass-Hdiv part
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        rtol = 1e-14
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        kxy = -np.multiply(g.cell_centers[0, :], g.cell_centers[1, :])
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        M_known = 1e-2 * np.array(
tests/unit/test_dual_vem.py:                [25, -(8 + 1 / 3.0), 0, 0, 1e2, 0, 0],
tests/unit/test_dual_vem.py:                [-(8 + 1 / 3.0), 50, -(8 + 1 / 3.0), 0, -1e2, 1e2, 0],
tests/unit/test_dual_vem.py:                [0, -(8 + 1 / 3.0), 50, -(8 + 1 / 3.0), 0, -1e2, 1e2],
tests/unit/test_dual_vem.py:                [0, 0, -(8 + 1 / 3.0), 25, 0, 0, -1e2],
tests/unit/test_dual_vem.py:                [1e2, -1e2, 0, 0, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 1e2, -1e2, 0, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 0, 1e2, -1e2, 0, 0, 0],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:                [0.625, -0.375, 0, 0, 0, 0, 0, 1, 0],
tests/unit/test_dual_vem.py:                [-0.375, 1.25, -0.375, 0, 0, 0, 0, -1, 1],
tests/unit/test_dual_vem.py:                [0, -0.375, 0.625, 0, 0, 0, 0, 0, -1],
tests/unit/test_dual_vem.py:                [0, 0, 0, 0, 0, 1, 0, -1, 0],
tests/unit/test_dual_vem.py:                [0, 0, 0, 0, 0, 0, 1, 0, -1],
tests/unit/test_dual_vem.py:                [1, -1, 0, 1, 0, -1, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 1, -1, 0, 1, 0, -1, 0, 0],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        kxy = -np.multiply(g.cell_centers[0, :], g.cell_centers[1, :])
tests/unit/test_dual_vem.py:                    -0.422619047619048,
tests/unit/test_dual_vem.py:                    -0.422619047619048,
tests/unit/test_dual_vem.py:                    -0.426724137931035,
tests/unit/test_dual_vem.py:                    -1,
tests/unit/test_dual_vem.py:                    -0.426724137931035,
tests/unit/test_dual_vem.py:                    -1,
tests/unit/test_dual_vem.py:                    -0.047619047619048,
tests/unit/test_dual_vem.py:                    -0.189655172413793,
tests/unit/test_dual_vem.py:                    -0.047619047619048,
tests/unit/test_dual_vem.py:                    -1,
tests/unit/test_dual_vem.py:                    -0.189655172413793,
tests/unit/test_dual_vem.py:                    -1,
tests/unit/test_dual_vem.py:                [1, -1, 0, 1, 0, -1, 0, 0, 0],
tests/unit/test_dual_vem.py:                [0, 1, -1, 0, 1, 0, -1, 0, 0],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        R = pp.map_geometry.rotation_matrix(-np.pi / 4.0, [1, 1, -1])
tests/unit/test_dual_vem.py:                [0.611111111111111, 0.0, -0.277777777777778, 0.111111111111111, 0.0],
tests/unit/test_dual_vem.py:                [0.0, 0.611111111111111, -0.277777777777778, 0.0, 0.111111111111111],
tests/unit/test_dual_vem.py:                    -0.277777777777778,
tests/unit/test_dual_vem.py:                    -0.277777777777778,
tests/unit/test_dual_vem.py:                    -0.277777777777778,
tests/unit/test_dual_vem.py:                    -0.277777777777778,
tests/unit/test_dual_vem.py:                [0.111111111111111, 0.0, -0.277777777777778, 0.611111111111111, 0.0],
tests/unit/test_dual_vem.py:                [0.0, 0.111111111111111, -0.277777777777778, 0.0, 0.611111111111111],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:        # We test only the mass-Hdiv part
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        kxy = -np.multiply(g.cell_centers[0, :], g.cell_centers[1, :])
tests/unit/test_dual_vem.py:                [0.59920634920635, 0.0, -0.337301587301588, 0.134920634920635, 0.0],
tests/unit/test_dual_vem.py:                [0.0, 0.599206349206349, -0.337301587301588, 0.0, 0.134920634920635],
tests/unit/test_dual_vem.py:                    -0.337301587301588,
tests/unit/test_dual_vem.py:                    -0.337301587301588,
tests/unit/test_dual_vem.py:                    -0.301587301587301,
tests/unit/test_dual_vem.py:                    -0.301587301587302,
tests/unit/test_dual_vem.py:                [0.134920634920635, 0.0, -0.301587301587301, 0.634920634920635, 0.0],
tests/unit/test_dual_vem.py:                [0.0, 0.134920634920635, -0.301587301587302, 0.0, 0.634920634920634],
tests/unit/test_dual_vem.py:        rtol = 1e-15
tests/unit/test_dual_vem.py:        # We test only the mass-Hdiv part
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        b_known = np.array([-0.83333333, 0.66666667, 0.16666667, 0.0])
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:            [-1.33333333, 1.16666667, -0.33333333, 1.16666667, -1.33333333, 0.0, 0.0]
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        b_known = np.array([0.41666667, 0.41666667, -0.25, -0.58333333, 0.0])
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        p_ex = lambda pt: 2 * pt[0, :] - 3 * pt[1, :] - 9
tests/unit/test_dual_vem.py:        u_ex = np.array([-1, 4, 0])
tests/unit/test_dual_vem.py:            err = np.sum(np.abs(p - p_ex(g.cell_centers)))
tests/unit/test_dual_vem.py:                np.abs(P0u - np.tile(u_ex, g.num_cells).reshape((3, -1), order="F"))
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:                -0.16666667,
tests/unit/test_dual_vem.py:                -0.16666667,
tests/unit/test_dual_vem.py:                -1.5,
tests/unit/test_dual_vem.py:                -2.0,
tests/unit/test_dual_vem.py:                -0.08333333,
tests/unit/test_dual_vem.py:                -0.58333333,
tests/unit/test_dual_vem.py:                -1.75,
tests/unit/test_dual_vem.py:                -1.16666667,
tests/unit/test_dual_vem.py:                -0.08333333,
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:        R = pp.map_geometry.rotation_matrix(-np.pi / 4.0, [1, 1, -1])
tests/unit/test_dual_vem.py:            [-0.73570226, 0.82197528, 0.17254603, 0.82197528, -0.73570226, 0.0, 0.0]
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:                -np.cos(2 * np.pi * pt[0, :]), np.sin(2 * np.pi * pt[1, :])
tests/unit/test_dual_vem.py:                -np.sin(2 * np.pi * pt[0, :]), np.cos(2 * np.pi * pt[1, :])
tests/unit/test_dual_vem.py:                    np.multiply(g.cell_volumes, np.power(p - p_ex(g.cell_centers), 2))
tests/unit/test_dual_vem.py:                        g.cell_volumes, np.sum(np.power(P0u - uu_ex, 2), axis=0)
tests/unit/test_dual_vem.py:    # ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:            - 6 * np.power(pt[1, :], 2)
tests/unit/test_dual_vem.py:        u_ex_0 = lambda pt: -9 * pt[0, :] + 10 * pt[1, :] + 4
tests/unit/test_dual_vem.py:        u_ex_1 = lambda pt: -6 * pt[0, :] + 23 * pt[1, :] + 5
tests/unit/test_dual_vem.py:                    np.multiply(g.cell_volumes, np.power(p - p_ex(g.cell_centers), 2))
tests/unit/test_dual_vem.py:                        g.cell_volumes, np.sum(np.power(P0u - uu_ex, 2), axis=0)
tests/unit/test_dual_vem.py:# ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -0.277777777777778,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:                -1.0,
tests/unit/test_dual_vem.py:# ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962584208e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -7.735026918962539799e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:# ------------------------------------------------------------------------------#
tests/unit/test_dual_vem.py:                -1.051280469674036322e-01,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                -1.051280469674036322e-01,
tests/unit/test_dual_vem.py:                -1.409925975888278171e-01,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                5.769230769230768163e-02,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                5.769230769230768163e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.409925975888278171e-01,
tests/unit/test_dual_vem.py:                5.769230769230768163e-02,
tests/unit/test_dual_vem.py:                5.769230769230768163e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                9.486849052811356930e-01,
tests/unit/test_dual_vem.py:                -2.948387514349815053e-01,
tests/unit/test_dual_vem.py:                5.769230769230771633e-02,
tests/unit/test_dual_vem.py:                5.769230769230771633e-02,
tests/unit/test_dual_vem.py:                -2.948387514349815053e-01,
tests/unit/test_dual_vem.py:                -2.097032103660962377e-01,
tests/unit/test_dual_vem.py:                5.769230769230771633e-02,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                5.769230769230771633e-02,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -2.097032103660962377e-01,
tests/unit/test_dual_vem.py:                9.449973280131553910e-01,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.051280469674036322e-01,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                -1.051280469674036322e-01,
tests/unit/test_dual_vem.py:                -1.409925975888278171e-01,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                5.769230769230768163e-02,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                5.769230769230768163e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.409925975888278171e-01,
tests/unit/test_dual_vem.py:                5.769230769230768163e-02,
tests/unit/test_dual_vem.py:                5.769230769230768163e-02,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                9.486849052811356930e-01,
tests/unit/test_dual_vem.py:                -2.948387514349815053e-01,
tests/unit/test_dual_vem.py:                5.769230769230771633e-02,
tests/unit/test_dual_vem.py:                5.769230769230771633e-02,
tests/unit/test_dual_vem.py:                -2.948387514349815053e-01,
tests/unit/test_dual_vem.py:                -2.097032103660962377e-01,
tests/unit/test_dual_vem.py:                5.769230769230771633e-02,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                5.769230769230771633e-02,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -2.097032103660962377e-01,
tests/unit/test_dual_vem.py:                9.449973280131553910e-01,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                -1.051280469674036322e-01,
tests/unit/test_dual_vem.py:                5.769230769230767469e-02,
tests/unit/test_dual_vem.py:                5.769230769230767469e-02,
tests/unit/test_dual_vem.py:                9.486849052811355820e-01,
tests/unit/test_dual_vem.py:                -2.948387514349816163e-01,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                5.769230769230770939e-02,
tests/unit/test_dual_vem.py:                5.769230769230770939e-02,
tests/unit/test_dual_vem.py:                -1.051280469674036322e-01,
tests/unit/test_dual_vem.py:                -1.409925975888275951e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                5.769230769230767469e-02,
tests/unit/test_dual_vem.py:                5.769230769230767469e-02,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                -2.948387514349816163e-01,
tests/unit/test_dual_vem.py:                -2.097032103660961266e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                5.769230769230770939e-02,
tests/unit/test_dual_vem.py:                5.769230769230770939e-02,
tests/unit/test_dual_vem.py:                -1.409925975888275951e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                -2.097032103660961266e-01,
tests/unit/test_dual_vem.py:                9.449973280131556130e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                -1.051280469674036322e-01,
tests/unit/test_dual_vem.py:                5.769230769230767469e-02,
tests/unit/test_dual_vem.py:                5.769230769230767469e-02,
tests/unit/test_dual_vem.py:                9.486849052811355820e-01,
tests/unit/test_dual_vem.py:                -2.948387514349816163e-01,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                2.777777777777776930e-02,
tests/unit/test_dual_vem.py:                5.769230769230770939e-02,
tests/unit/test_dual_vem.py:                5.769230769230770939e-02,
tests/unit/test_dual_vem.py:                -1.051280469674036322e-01,
tests/unit/test_dual_vem.py:                -1.409925975888275951e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                5.769230769230767469e-02,
tests/unit/test_dual_vem.py:                5.769230769230767469e-02,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                -2.948387514349816163e-01,
tests/unit/test_dual_vem.py:                -2.097032103660961266e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                5.769230769230770939e-02,
tests/unit/test_dual_vem.py:                5.769230769230770939e-02,
tests/unit/test_dual_vem.py:                -1.409925975888275951e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                1.323529411764707009e-01,
tests/unit/test_dual_vem.py:                -2.097032103660961266e-01,
tests/unit/test_dual_vem.py:                9.449973280131556130e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                9.773502691896260863e-01,
tests/unit/test_dual_vem.py:                -1.773502691896255978e-01,
tests/unit/test_dual_vem.py:                -2.217618283580583549e-01,
tests/unit/test_dual_vem.py:                -2.217618283580584104e-01,
tests/unit/test_dual_vem.py:                9.773502691896260863e-01,
tests/unit/test_dual_vem.py:                -1.773502691896256533e-01,
tests/unit/test_dual_vem.py:                -1.773502691896255978e-01,
tests/unit/test_dual_vem.py:                -2.916359834753400326e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -2.217618283580583549e-01,
tests/unit/test_dual_vem.py:                -3.360475426437727897e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -2.217618283580584104e-01,
tests/unit/test_dual_vem.py:                -3.360475426437727897e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.773502691896256533e-01,
tests/unit/test_dual_vem.py:                -2.916359834753400326e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -2.916359834753400326e-01,
tests/unit/test_dual_vem.py:                8.630645549039116515e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -3.360475426437727897e-01,
tests/unit/test_dual_vem.py:                9.074761140723444086e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -3.360475426437727897e-01,
tests/unit/test_dual_vem.py:                9.074761140723444086e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -2.916359834753400326e-01,
tests/unit/test_dual_vem.py:                8.630645549039116515e-01,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:                -1.000000000000000000e00,
tests/unit/test_dual_vem.py:# ------------------------------------------------------------------------------#
tests/unit/test_segment_intersection_3d.py:        p_1 = np.array([0, -1, -1])
tests/unit/test_segment_intersection_3d.py:        p_3 = np.array([-1, 0, 1])
tests/unit/test_segment_intersection_3d.py:        p_4 = np.array([1, 0, -1])
tests/unit/test_segment_intersection_3d.py:        p_1 = np.array([0, -1, -1])
tests/unit/test_segment_intersection_3d.py:        p_3 = np.array([-1, 0, 1])
tests/unit/test_segment_intersection_3d.py:        p_4 = np.array([1, 0, -1])
tests/unit/test_segment_intersection_3d.py:        p_1 = np.array([-1, -1, -1])
tests/unit/test_segment_intersection_3d.py:        p_2 = np.array([1, 1, -1])
tests/unit/test_segment_intersection_3d.py:        p_3 = np.array([1, -1, 1])
tests/unit/test_segment_intersection_3d.py:        p_4 = np.array([-1, 1, 1])
tests/unit/test_segment_intersection_3d.py:        p_1 = np.array([-1, 0, -1])
tests/unit/test_segment_intersection_3d.py:        p_3 = np.array([1, -1, 1])
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.allclose(p_i, p_2.reshape((-1, 1))))
tests/unit/test_segment_intersection_3d.py:        p_1 = np.array([-1, -1, 0])
tests/unit/test_segment_intersection_3d.py:        p_2 = np.array([-1, 1, 0])
tests/unit/test_segment_intersection_3d.py:        p_3 = np.array([-1, 0, -1])
tests/unit/test_segment_intersection_3d.py:        p_4 = np.array([-1, 0, 1])
tests/unit/test_segment_intersection_3d.py:        p_known = np.array([-1, 0, 0]).reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        p_known_1 = p_1.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        p_known_2 = p_2.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int - p_known_1), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int - p_known_2), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        p_known_1 = p_1.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        p_known_2 = p_2.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int_1 - p_known_1), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int_1 - p_known_2), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int_2 - p_known_1), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int_2 - p_known_2), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int_3 - p_known_1), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int_3 - p_known_2), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int_4 - p_known_1), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int_4 - p_known_2), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        p_known_1 = p_1.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        p_known_2 = p_4.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int - p_known_1), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int - p_known_2), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        p_known_1 = p_1.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        p_known_2 = p_4.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int - p_known_1), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int - p_known_2), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        p_known_1 = p_1.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        p_known_2 = p_4.reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int - p_known_1), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int - p_known_2), axis=0)) < 1e-8)
tests/unit/test_segment_intersection_3d.py:        p_1 = np.array([1, 0, -1])
tests/unit/test_segment_intersection_3d.py:        p_known = np.array([1, 0, 0.5]).reshape((-1, 1))
tests/unit/test_segment_intersection_3d.py:        self.assertTrue(np.min(np.sum(np.abs(p_int - p_known), axis=0)) < 1e-8)
tests/unit/test_tangential_normal_projection.py:# -*- coding: utf-8 -*-
tests/unit/test_tangential_normal_projection.py:        self.n2 = np.array([[0, 1, -2], [1, 1, 0]])
tests/unit/test_tangential_normal_projection.py:        self.n2_normalized = np.array([[0, 1.0 / s2, -1.0], [1, 1.0 / s2, 0]])
tests/unit/test_tangential_normal_projection.py:            [[0, 1.0 / s3, -1.0], [1, 1.0 / s3, 0], [0, 1.0 / s3, 0]]
tests/unit/test_tangential_normal_projection.py:        # Only a single vector is projected, the multi-vector option is handled in
tests/unit/test_tangential_normal_projection.py:        vecs = [n, np.array([[1], [0]]), np.array([[0], [1]]), np.array([[-s], [s]])]
tests/unit/test_tangential_normal_projection.py:        # Only a single vector is projected, the multi-vector option is handled in
tests/unit/test_tangential_normal_projection.py:        vecs = [n, np.array([[1], [0]]), np.array([[0], [1]]), np.array([[-s], [c]])]
tests/unit/test_tangential_normal_projection.py:        vec = np.array([1, 0, 0, 1, 1, 1]).reshape((-1, 1))
tests/unit/test_tangential_normal_projection.py:        known_tangential_parts = np.array([0, 1, 1]).reshape((-1, 1))
tests/unit/test_tangential_normal_projection.py:        known_normal_parts = np.array([1, 0, 1]).reshape((-1, 1))
tests/unit/test_tangential_normal_projection.py:        known_tangential_normal = np.array([[0, 1, 1, 0, 1, 1]]).reshape((-1, 1))
tests/unit/test_tangential_normal_projection.py:        # Only a single vector is projected, the multi-vector option is handled in
tests/unit/test_tangential_normal_projection.py:            np.array([[-1 / np.sqrt(2)], [1 / np.sqrt(2)], [0]]),
tests/unit/test_tangential_normal_projection.py:        vec = np.array([1, 0, 0, 0, 1, 0, 1, 1, 0]).reshape((-1, 1))
tests/unit/test_tangential_normal_projection.py:        # Two 2d vectors stacked. Both have x-component 1, y 0
tests/unit/test_tangential_normal_projection.py:        v = np.array([1, 0, 1, 0]).reshape((-1, 1))
tests/unit/test_hu_11.py:    def initial_condition(self) -> None:
tests/unit/test_hu_11.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_11.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_11.py:            permeability = 1/50 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_11.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_11.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_11.py:                eps = 1e-6
tests/unit/test_hu_11.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_11.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_11.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_11.py:                eps = 1e-6
tests/unit/test_hu_11.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_11.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_11.py:    def set_geometry(self) -> None:
tests/unit/test_hu_11.py:    def set_domain(self) -> None:
tests/unit/test_hu_11.py:    def set_fractures(self) -> None:
tests/unit/test_hu_11.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_11.py:    dt_init=1e-3,
tests/unit/test_hu_11.py:    # dt_init=1e-2,
tests/unit/test_hu_11.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_11.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_11.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_hu_4.py:    def initial_condition(self) -> None:
tests/unit/test_hu_4.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_4.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_4.py:            permeability = 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_4.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_4.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_4.py:                eps = 1e-6
tests/unit/test_hu_4.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_4.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_4.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_4.py:                eps = 1e-6
tests/unit/test_hu_4.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_4.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_4.py:    def set_geometry(self) -> None:
tests/unit/test_hu_4.py:    def set_domain(self) -> None:
tests/unit/test_hu_4.py:    def set_fractures(self) -> None:
tests/unit/test_hu_4.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_4.py:    dt_init=1e-3 / 50,
tests/unit/test_hu_4.py:    # dt_init=1e-2,
tests/unit/test_hu_4.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_4.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_4.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_hu_model_neu_hu.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_neu_hu.py:                eps = 1e-6
tests/unit/test_hu_model_neu_hu.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] 
tests/unit/test_hu_model_neu_hu.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_neu_hu.py:                eps = 1e-6
tests/unit/test_hu_model_neu_hu.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_model_neu_hu.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_neu_hu.py:            #     2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_model_neu_hu.py:        if np.isclose(np.mod(self.time_manager.time, 0.05), 0, rtol=0, atol=1e-4) or self.time_manager.time == self.time_manager.dt:
tests/unit/test_hu_model_neu_hu.py:        # TEST: ---------------------------------------------------------------------------
tests/unit/test_hu_model_neu_hu.py:            ff0 = - self.neu_val_left_phase_0 # inlet boundary condition
tests/unit/test_hu_model_neu_hu.py:            delta_m_phase_0 = m_new_phase_0 - m_old_phase_0
tests/unit/test_hu_model_neu_hu.py:            assert np.isclose( delta_m_phase_0, delta_m_ex_phase_0, rtol=0, atol=1e-10 )
tests/unit/test_hu_model_neu_hu.py:            ff0 = - self.neu_val_left_phase_0 # inlet boundary condition
tests/unit/test_hu_model_neu_hu.py:            delta_m_phase_0 = m_new_phase_0 - m_old_phase_0
tests/unit/test_hu_model_neu_hu.py:            assert np.isclose( delta_m_phase_0, delta_m_ex_phase_0, rtol=0, atol=1e-10 )
tests/unit/test_hu_model_neu_hu.py:            ff0 = -2 * self.neu_val_left_phase_0 # inlet boundary condition
tests/unit/test_hu_model_neu_hu.py:            delta_m_phase_0 = m_new_phase_0 - m_old_phase_0
tests/unit/test_hu_model_neu_hu.py:            assert np.isclose( delta_m_phase_0, delta_m_ex_phase_0, rtol=0, atol=1e-10 )
tests/unit/test_hu_model_neu_hu.py:            ff0 = -2 * self.neu_val_left_phase_0 # inlet boundary condition
tests/unit/test_hu_model_neu_hu.py:            delta_m_phase_0 = m_new_phase_0 - m_old_phase_0
tests/unit/test_hu_model_neu_hu.py:            assert np.isclose( delta_m_phase_0, delta_m_ex_phase_0, rtol=0, atol=1e-10 )
tests/unit/test_hu_model_neu_hu.py:            ff0 = -self.neu_val_left_phase_0 # inlet boundary condition
tests/unit/test_hu_model_neu_hu.py:            delta_m_phase_0 = m_new_phase_0 - m_old_phase_0
tests/unit/test_hu_model_neu_hu.py:            assert np.isclose( delta_m_phase_0, delta_m_ex_phase_0, rtol=0, atol=1e-10 )
tests/unit/test_hu_model_neu_hu.py:        print("\n\n\n TEST PASSED ----------------------------------------")
tests/unit/test_hu_model_neu_hu.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_neu_hu.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_neu_hu.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_neu_hu.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_neu_hu.py:    dt_init=1e-1,
tests/unit/test_hu_model_neu_hu.py:    "nl_convergence_tol": 1e-11,
tests/unit/test_hu_model_neu_hu.py:- newton converges to a non-physical solution for high dt. IT CONVERGES. Sometimes.
tests/unit/test_hu_model_neu_hu.py:- missing tests at successive timesteps
tests/unit/test_hu_model_neu_hu.py:    # model.time_manager.dt_init = 1e-2 # YOU WISH! Why can't I modify the timestep after the creation of the time manager?
tests/unit/test_hu_model_neu_hu.py:    model.neu_val_left_phase_1  = -1 
tests/unit/test_hu_model_neu_hu.py:    model.neu_val_left_phase_0  = -1 # immetto fase presente
tests/unit/test_hu_model_neu_hu.py:    model.neu_val_left_phase_0  = -1.0
tests/unit/test_hu_model_neu_hu.py:    model.neu_val_left_phase_0  = -1.0
tests/unit/test_hu_model_neu_hu.py:    model.neu_val_left_phase_0  = -1.0
tests/unit/test_hu_model_neu_hu.py:    model.neu_val_left_phase_0  = -1.0
tests/unit/test_hu_model_neu_hu.py:    model.neu_val_left_phase_0  = -1.0
tests/unit/test_hu_model_upwind_dir_3x3.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def pressure_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def mass_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def create_variables(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def pressure(self, subdomains: list[pp.Grid]) -> pp.ad.MixedDimensionalVariable:
tests/unit/test_hu_model_upwind_dir_3x3.py:    ) -> pp.ad.MixedDimensionalVariable:
tests/unit/test_hu_model_upwind_dir_3x3.py:    # def reference_pressure(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def bc_values(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def __init__(self, params: Optional[dict] = None) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def prepare_simulation(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    # methods called in prepare_simulation: ------------------------------------------------------
tests/unit/test_hu_model_upwind_dir_3x3.py:    def set_equation_system_manager(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def reset_state_from_file(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:                time_index = self.restart_options.get("time_index", -1)
tests/unit/test_hu_model_upwind_dir_3x3.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def set_discretization_parameters(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def permeability_tensor(self, sd: pp.Grid) -> pp.SecondOrderTensor:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def discretize(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def _initialize_linear_solver(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    # other methods not called in prepared_simulation: -------------------------------------------------
tests/unit/test_hu_model_upwind_dir_3x3.py:    def set_nonlinear_discretizations(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:            # some plot: ---------------
tests/unit/test_hu_model_upwind_dir_3x3.py:        # TEST SECTION: -----------------------
tests/unit/test_hu_model_upwind_dir_3x3.py:                np.array([0, 0, 0, 0, 0, 0, -1, -1, -1, 0, 0, 0]),
tests/unit/test_hu_model_upwind_dir_3x3.py:                atol=1e-9,
tests/unit/test_hu_model_upwind_dir_3x3.py:        print("\n\n TEST PASSED ------------------- ")
tests/unit/test_hu_model_upwind_dir_3x3.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_upwind_dir_3x3.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_upwind_dir_3x3.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_upwind_dir_3x3.py:        self.gravity_value = -1
tests/unit/test_mass_matrix.py:""" Tests for mass matrix discretization. Both mono- and mixed-dimensional
tests/unit/test_mass_matrix.py:        specified_parameters = {"mass_weight": 0.5 * 1e-2}
tests/unit/test_mass_matrix.py:        specified_parameters = {"mass_weight": 0.5 * 1e-2}
tests/unit/test_mass_matrix.py:        specified_parameters = {"mass_weight": 0.5 * 1e-2}
tests/unit/test_mass_matrix.py:        # Mass weight is scaled by aperture 1e-2
tests/unit/test_mass_matrix.py:        specified_parameters = {"mass_weight": 0.5 * 1e-2}
tests/unit/test_darcy_mortar.py:        # Set up flow field with uniform flow in y-direction
tests/unit/test_darcy_mortar.py:        intf.update_mortar(new_side_grids, tol=1e-4)
tests/unit/test_darcy_mortar.py:        # refine the 1d-physical grid
tests/unit/test_darcy_mortar.py:        intf.update_secondary(new_g, tol=1e-4)
tests/unit/test_darcy_mortar.py:            self.assertTrue(np.allclose(p, g.cell_centers[1], rtol=1e-3, atol=1e-3))
tests/unit/test_darcy_mortar.py:        mdg.replace_subdomains_and_interfaces(sd_map=gmap, intf_map=mg_map, tol=1e-4)
tests/unit/test_darcy_mortar.py:                np.where(np.abs(yf - 1) < 1e-4)[0],
tests/unit/test_darcy_mortar.py:                np.where(np.abs(yf) < 1e-4)[0],
tests/unit/test_darcy_mortar.py:            bound_faces = np.where(np.abs(yf - 1) < 1e-4)[0]
tests/unit/test_darcy_mortar.py:    def verify_cv(self, mdg, tol=1e-2):
tests/unit/test_darcy_mortar.py:        self.verify_cv(mdg, tol=1e-7)
tests/unit/test_darcy_mortar.py:                np.where(np.abs(yf - 1) < 1e-4)[0],
tests/unit/test_darcy_mortar.py:                np.where(np.abs(yf) < 1e-4)[0],
tests/unit/test_darcy_mortar.py:            bound_faces = np.where(np.abs(yf - 1) < 1e-4)[0]
tests/unit/test_darcy_mortar.py:            self.assertTrue(np.allclose(p, g.cell_centers[1], rtol=1e-3, atol=1e-3))
tests/unit/test_darcy_mortar.py:    The flow regime imposed is uniform in the y-direction. The computed pressure
tests/unit/test_darcy_mortar.py:    should then be equal to the y-coordinates of the cells.
tests/unit/test_darcy_mortar.py:        # pert_node pertubes one node in the grid. Leads to non-matching cells.
tests/unit/test_darcy_mortar.py:        data = np.array([1, 1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1])
tests/unit/test_darcy_mortar.py:            g.face_normals[:, [2]] *= -1
tests/unit/test_darcy_mortar.py:            g.cell_faces[2, 2] *= -1
tests/unit/test_darcy_mortar.py:        # Set up flow field with uniform flow in y-direction
tests/unit/test_darcy_mortar.py:    def verify_cv(self, mdg, tol=1e-6):
tests/unit/test_darcy_mortar.py:        # symmetry of the grid, and lead to non-mathching grids.
tests/unit/test_darcy_mortar.py:        # symmetry of the grid, and lead to non-mathching grids.
tests/unit/test_darcy_mortar.py:        # symmetry of the grid, and lead to non-mathching grids.
tests/unit/test_darcy_mortar.py:        # symmetry of the grid, and lead to non-mathching grids.
tests/unit/test_darcy_mortar.py:        # symmetry of the grid, and lead to non-mathching grids.
tests/unit/test_darcy_mortar.py:        # symmetry of the grid, and lead to non-mathching grids.
tests/unit/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/unit/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/unit/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpsa.py:                [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(rhs_known - rhs) < 1e-12))
tests/unit/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/unit/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/unit/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpsa.py:                [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(rhs_known - rhs) < 1e-12))
tests/unit/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/unit/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/unit/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpsa.py:                [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0],
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(rhs_known - rhs) < 1e-12))
tests/unit/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/unit/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/unit/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(rhs_known - rhs) < 1e-12))
tests/unit/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/unit/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/unit/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(rhs_known - rhs) < 1e-12))
tests/unit/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/unit/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/unit/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpsa.py:                [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(rhs_known - rhs) < 1e-12))
tests/unit/test_mpsa.py:        bot = g.face_centers[1] < 1e-10
tests/unit/test_mpsa.py:        top = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpsa.py:        left = g.face_centers[0] < 1e-10
tests/unit/test_mpsa.py:        right = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpsa.py:                [0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:                [0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(rhs_known - rhs) < 1e-12))
tests/unit/test_mpsa.py:        bot = g.face_centers[2] < 1e-10
tests/unit/test_mpsa.py:        top = g.face_centers[2] > 1 - 1e-10
tests/unit/test_mpsa.py:        south = g.face_centers[1] < 1e-10
tests/unit/test_mpsa.py:        north = g.face_centers[1] > 1 - 1e-10
tests/unit/test_mpsa.py:        west = g.face_centers[0] < 1e-10
tests/unit/test_mpsa.py:        east = g.face_centers[0] > 1 - 1e-10
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs((rhs_known - rhs).data) < 1e-12))
tests/unit/test_mpsa.py:                    -1.0,
tests/unit/test_mpsa.py:                    -1.0,
tests/unit/test_mpsa.py:                    -1.0,
tests/unit/test_mpsa.py:                    -1.0,
tests/unit/test_mpsa.py:                    -1.0,
tests/unit/test_mpsa.py:                    -1.0,
tests/unit/test_mpsa.py:                    -1.0,
tests/unit/test_mpsa.py:                    -1.0,
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(D_g - D_g_known) < 1e-12))
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(CC - CC_known) < 1e-12))
tests/unit/test_mpsa.py:                    -1 / 6,
tests/unit/test_mpsa.py:                    -1 / 3,
tests/unit/test_mpsa.py:                    -1 / 6,
tests/unit/test_mpsa.py:                    -1 / 3,
tests/unit/test_mpsa.py:                    -1 / 6,
tests/unit/test_mpsa.py:                    -1 / 3,
tests/unit/test_mpsa.py:                    -1 / 6,
tests/unit/test_mpsa.py:                    -1 / 3,
tests/unit/test_mpsa.py:                    -1 / 3,
tests/unit/test_mpsa.py:                    -1 / 6,
tests/unit/test_mpsa.py:                    -1 / 3,
tests/unit/test_mpsa.py:                    -1 / 6,
tests/unit/test_mpsa.py:                    -1 / 3,
tests/unit/test_mpsa.py:                    -1 / 6,
tests/unit/test_mpsa.py:                    -1 / 3,
tests/unit/test_mpsa.py:                    -1 / 6,
tests/unit/test_mpsa.py:                    -1 / 12,
tests/unit/test_mpsa.py:                    -1 / 12,
tests/unit/test_mpsa.py:                    -1 / 12,
tests/unit/test_mpsa.py:                    -1 / 12,
tests/unit/test_mpsa.py:                    -1 / 12,
tests/unit/test_mpsa.py:                    -1 / 12,
tests/unit/test_mpsa.py:                    -1 / 12,
tests/unit/test_mpsa.py:                    -1 / 12,
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(D_g - D_g_known).A < 1e-12))
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(CC - CC_known) < 1e-12))
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:                -1.0,
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(D_g - D_g_known).A < 1e-12))
tests/unit/test_mpsa.py:        self.assertTrue(np.all(np.abs(CC - CC_known) < 1e-12))
tests/unit/test_hu_7.py:    def initial_condition(self) -> None:
tests/unit/test_hu_7.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_7.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_7.py:            permeability = 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_7.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_7.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_7.py:                eps = 1e-6
tests/unit/test_hu_7.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_7.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_7.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_7.py:                eps = 1e-6
tests/unit/test_hu_7.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_7.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_7.py:    def set_geometry(self) -> None:
tests/unit/test_hu_7.py:    def set_domain(self) -> None:
tests/unit/test_hu_7.py:    def set_fractures(self) -> None:
tests/unit/test_hu_7.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_7.py:    dt_init=1e-3,
tests/unit/test_hu_7.py:    # dt_init=1e-2,
tests/unit/test_hu_7.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_7.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_7.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_mpfa_gravity.py:            (g.nodes[0] < 1 - 1e-10)
tests/unit/test_mpfa_gravity.py:            & (g.nodes[0] > 1e-10)
tests/unit/test_mpfa_gravity.py:            & (g.nodes[1] < 0.5 - 1e-10)
tests/unit/test_mpfa_gravity.py:            & (g.nodes[1] > 1e-10)
tests/unit/test_mpfa_gravity.py:            (g.nodes[0] < 1 - 1e-10)
tests/unit/test_mpfa_gravity.py:            & (g.nodes[0] > 1e-10)
tests/unit/test_mpfa_gravity.py:            & (g.nodes[1] < 1.0 - 1e-10)
tests/unit/test_mpfa_gravity.py:            & (g.nodes[1] > 0.5 + 1e-10)
tests/unit/test_mpfa_gravity.py:    # r3 = np.ravel(np.argwhere((g.nodes[0] < 1 - 1e-10) & (g.nodes[0] > 1e-10) & (g.nodes[1] < 0.75 - 1e-10) & (g.nodes[1] > 0.5 + 1e-10)))
tests/unit/test_mpfa_gravity.py:    # r4 = np.ravel(np.argwhere((g.nodes[0] < 1 - 1e-10) & (g.nodes[0] > 1e-10) & (g.nodes[1] < 1.0 - 1e-10) & (g.nodes[1] > 0.75 + 1e-10)))
tests/unit/test_mpfa_gravity.py:    g.nodes[:, pert_nodes] += rate * dx * (rand - 0.5)
tests/unit/test_mpfa_gravity.py:    # Ensure there are no perturbations in the z-coordinate
tests/unit/test_mpfa_gravity.py:            ((1 - x) * g1, x >= 0.5), (0.5 * g1 + (0.5 - x) * g2, x < 0.5)
tests/unit/test_mpfa_gravity.py:        b = -div * bound_flux * p_bound - div * flux_g
tests/unit/test_mpfa_gravity.py:            ((1 - y) * g1, y >= 0.5), (0.5 * g1 + (0.5 - y) * g2, y < 0.5)
tests/unit/test_mpfa_gravity.py:            left_faces = np.ravel(np.argwhere(g.face_centers[0] < 1e-10))
tests/unit/test_mpfa_gravity.py:            right_faces = np.ravel(np.argwhere(g.face_centers[0] > domain[0] - 1e-10))
tests/unit/test_mpfa_gravity.py:            b = -div * bound_flux * p_bound - div * flux_g
tests/unit/test_mpfa_gravity.py:        south = g.face_centers[1] < np.min(g.nodes[1]) + 1e-8
tests/unit/test_mpfa_gravity.py:        north = g.face_centers[1] > np.max(g.nodes[1]) - 1e-8
tests/unit/test_mpfa_gravity.py:    rhs = -div * vector_source_discr
tests/unit/test_mpfa_gravity.py:    # introduce a source term in x-direction
tests/unit/test_mpfa_gravity.py:    g_x[::ambient_dim] = -1 * grav_strength  # /2 * dx
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[0] - p_x[1], dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    rhs = -div * vector_source_discr
tests/unit/test_mpfa_gravity.py:    # introduce a source term in x-direction
tests/unit/test_mpfa_gravity.py:    g_x[::ambient_dim] = -1 * grav_strength  # /2 * dx
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[0] - p_x[1], dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    # introduce a source term in y-direction
tests/unit/test_mpfa_gravity.py:    g_y[1::ambient_dim] = -1 * grav_strength
tests/unit/test_mpfa_gravity.py:    g = pp.TensorGrid(np.array([0, -dx, -2 * dx]))
tests/unit/test_mpfa_gravity.py:    rhs = -div * vector_source_discr
tests/unit/test_mpfa_gravity.py:    # introduce a source term in x-direction
tests/unit/test_mpfa_gravity.py:    g_x[::ambient_dim] = -1 * grav_strength  # /2 * dx
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[0] - p_x[1], -dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    # introduce a source term in y-direction
tests/unit/test_mpfa_gravity.py:    g_y[1::ambient_dim] = -1 * grav_strength
tests/unit/test_mpfa_gravity.py:    rhs = -div * vector_source_discr
tests/unit/test_mpfa_gravity.py:    # introduce a source term in x-direction
tests/unit/test_mpfa_gravity.py:    g_x[::ambient_dim] = -1 * grav_strength  # /2 * dx
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[0] - p_x[1], dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    # introduce a source term in y-direction
tests/unit/test_mpfa_gravity.py:    g_y[1::ambient_dim] = -1 * grav_strength
tests/unit/test_mpfa_gravity.py:    # Cartesian grid in xy-plane. The rotation of the grid in the mpfa discretization
tests/unit/test_mpfa_gravity.py:    # Embed in 3d, this means that the vector source is a 3-vector per cell
tests/unit/test_mpfa_gravity.py:    rhs = -div * vector_source_discr
tests/unit/test_mpfa_gravity.py:    # First set source in z-direction. This should have no impact on the solution
tests/unit/test_mpfa_gravity.py:    g_z[2::ambient_dim] = -1
tests/unit/test_mpfa_gravity.py:    # Next a source term in x-direction
tests/unit/test_mpfa_gravity.py:    g_x[::ambient_dim] = -1 * grav_strength
tests/unit/test_mpfa_gravity.py:    # The solution should be higher in the first x-row of cells, with magnitude
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[0] - p_x[1], dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[2] - p_x[3], dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    # The solution should be equal for equal x-coordinate
tests/unit/test_mpfa_gravity.py:    # Cartesian grid in xy-plane. The rotation of the grid in the mpfa discretization
tests/unit/test_mpfa_gravity.py:    # The vector source is a 2-vector per cell
tests/unit/test_mpfa_gravity.py:    rhs = -div * vector_source_discr
tests/unit/test_mpfa_gravity.py:    # introduce a source term in x-direction
tests/unit/test_mpfa_gravity.py:    g_x[::ambient_dim] = -1 * grav_strength
tests/unit/test_mpfa_gravity.py:    # The solution should be higher in the first x-row of cells, with magnitude
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[0] - p_x[1], dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[2] - p_x[3], dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    # The solution should be equal for equal x-coordinate
tests/unit/test_mpfa_gravity.py:    # Cartesian grid in xy-plane with periodic boundary conditions.
tests/unit/test_mpfa_gravity.py:    # The vector source is a 2-vector per cell
tests/unit/test_mpfa_gravity.py:    rhs = -div * vector_source_discr
tests/unit/test_mpfa_gravity.py:    # introduce a source term in x-direction
tests/unit/test_mpfa_gravity.py:    g_x[::ambient_dim] = -1 * grav_strength
tests/unit/test_mpfa_gravity.py:    # The solution should be higher in the first x-row of cells, with magnitude
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[0] - p_x[1], dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    assert np.allclose(p_x[2] - p_x[3], dx * grav_strength)
tests/unit/test_mpfa_gravity.py:    # The solution should be equal for equal x-coordinate
tests/unit/test_mpfa_gravity.py:            [3.0, -1.0, -2.0, 0.0],
tests/unit/test_mpfa_gravity.py:            [-1.0, 3.0, 0.0, -2.0],
tests/unit/test_mpfa_gravity.py:            [-2.0, 0.0, 3.0, -1.0],
tests/unit/test_mpfa_gravity.py:            [0.0, -2.0, -1.0, 3.0],
tests/unit/test_mpfa_gravity.py:        # Hhe vector source is a 2-vector per cell
tests/unit/test_mpfa_gravity.py:        # introduce a source term in x-direction
tests/unit/test_mpfa_gravity.py:        g_x[::ambient_dim] = -1 * grav_strength
tests/unit/test_mpfa_gravity.py:        # The solution should be higher in the first x-row of cells, with magnitude
tests/unit/test_mpfa_gravity.py:        self.assertTrue(np.allclose(p_x[0] - p_x[1], dx * grav_strength))
tests/unit/test_mpfa_gravity.py:        self.assertTrue(np.allclose(p_x[2] - p_x[3], dx * grav_strength))
tests/unit/test_mpfa_gravity.py:        # The solution should be equal for equal x-coordinate
tests/unit/test_setmembership.py:# -*- coding: utf-8 -*-
tests/unit/test_setmembership.py:        self.assertTrue(np.sum(np.abs(ua) - np.abs(ua_expected)) == 0)
tests/unit/test_setmembership.py:        self.assertTrue(np.all(ia - ia_expected == 0))
tests/unit/test_setmembership.py:        self.assertTrue(np.all(ic - ic_expected == 0))
tests/unit/test_setmembership.py:                np.min(np.sum(np.abs(p_known - p_unique[:, i]), axis=0)) == 0
tests/unit/test_setmembership.py:                np.min(np.sum(np.abs(p_known[:, i] - p_unique), axis=0)) == 0
tests/unit/test_hu_3.py:    def initial_condition(self) -> None:
tests/unit/test_hu_3.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_3.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_3.py:            permeability = 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_3.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_3.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_3.py:                eps = 1e-6
tests/unit/test_hu_3.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_3.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_3.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_3.py:                eps = 1e-6
tests/unit/test_hu_3.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_3.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_3.py:    def set_geometry(self) -> None:
tests/unit/test_hu_3.py:    def set_domain(self) -> None:
tests/unit/test_hu_3.py:    def set_fractures(self) -> None:
tests/unit/test_hu_3.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_3.py:    dt_init=1e-3,
tests/unit/test_hu_3.py:    # dt_init=1e-2,
tests/unit/test_hu_3.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_3.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_3.py:        self.dynamic_viscosity = 50*1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_equation_system.py:    # Fetch a version of var_1. It should have the same sub-variables as the md-variable
tests/unit/test_equation_system.py:    # However, if we fetch a new md-variable representing var_1, it should have the tag.
tests/unit/test_equation_system.py:    # Filter on a non-existing tags
tests/unit/test_equation_system.py:    # Filter on a tag that exists, but with a non-exiting value
tests/unit/test_equation_system.py:        # Also generate a variable on the top-dimensional domain
tests/unit/test_equation_system.py:        intf_top = mdg.interfaces(dim=mdg.dim_max() - 1)[0]
tests/unit/test_equation_system.py:    d = m1 - m2
tests/unit/test_equation_system.py:        if np.max(np.abs(d.data)) > 1e-10:
tests/unit/test_equation_system.py:    # Finally test setting and getting values at a non-zero storage index
tests/unit/test_equation_system.py:    # Also remove an non-existing equation, check that an error is raised.
tests/unit/test_equation_system.py:        grids=setup.interfaces[::-1],
tests/unit/test_equation_system.py:    # Pass an md-variable with one sub-variable, check we get back the sub-variable
tests/unit/test_equation_system.py:    # Send an md-variable with two sub-variables
tests/unit/test_equation_system.py:    # Send in the md-variable as a string, it should not make a difference
tests/unit/test_equation_system.py:    # Send in two md-variables
tests/unit/test_equation_system.py:    # Send in a combination of string and md-variables
tests/unit/test_equation_system.py:        # will be 0-offset.
tests/unit/test_equation_system.py:        # present, thus the indices should cover all cells in the md-grid. Moreover,
tests/unit/test_equation_system.py:        eq_def = {eq: setup.subdomains[::-1]}
tests/unit/test_equation_system.py:        ["y"],  # mixed-dimensional variable
tests/unit/test_equation_system.py:    This test is run on a relatively limited set of equation-variable combinations
tests/unit/test_equation_system.py:        # Do not sort row indices - these are allowed to change.
tests/unit/test_equation_system.py:    This test is run on a relatively limited set of equation-variable combinations
tests/unit/test_equation_system.py:        # If we have let the all-subdomanis equation be present on the top subdomain,
tests/unit/test_equation_system.py:    S_known = A - B * inverter(D) * C
tests/unit/test_equation_system.py:    b_known = b_2 - B * inverter(D) * b_1
tests/unit/test_hu_model_full_jac_frac.py:    def pressure_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_full_jac_frac.py:    def mass_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_full_jac_frac.py:        flux = flux_V_G - flux_intf_phase_0  # self.ell = 0
tests/unit/test_hu_model_full_jac_frac.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_full_jac_frac.py:        # TEST SECTION: --------------------------------------------------------------
tests/unit/test_hu_model_full_jac_frac.py:        assert np.all(np.isclose(A_ad, A_exact, rtol=0, atol=1e-10))
tests/unit/test_hu_model_full_jac_frac.py:        print("\n\n TEST PASSED ----------------------------------------- ")
tests/unit/test_hu_model_full_jac_frac.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_full_jac_frac.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_full_jac_frac.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_full_jac_frac.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_full_jac_frac.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_model_full_jac_frac.py:model.pressure_values_2d = np.array([-541.0, 550])
tests/unit/test_hu_model_full_jac_frac.py:model.pressure_values_1d = np.array([-60.0])
tests/unit/test_hybrid_vem.py:            [[-1, 1, 0, 0], [1, -2, 1, 0], [0, 1, -2, 1], [0, 0, 1, -1]]
tests/unit/test_hybrid_vem.py:        rtol = 1e-15
tests/unit/test_hybrid_vem.py:                [-3.4976883980802449, 3.4976883980802453, 0, 0],
tests/unit/test_hybrid_vem.py:                [3.4976883980802453, -7.9359650138928544, 4.4382766158126081, 0],
tests/unit/test_hybrid_vem.py:                [0, 4.4382766158126081, -9.6588071754007174, 5.2205305595881093],
tests/unit/test_hybrid_vem.py:                [0, 0, 5.2205305595881093, -5.2205305595881093],
tests/unit/test_hybrid_vem.py:        rtol = 1e-15
tests/unit/test_hybrid_vem.py:                [-2.25, 1.75, 0.0, 0.25, 0.0, 0.25, 0.0],
tests/unit/test_hybrid_vem.py:                [1.75, -4.5, 1.75, 0.25, 0.25, 0.25, 0.25],
tests/unit/test_hybrid_vem.py:                [0.0, 1.75, -2.25, 0.0, 0.25, 0.0, 0.25],
tests/unit/test_hybrid_vem.py:                [0.25, 0.25, 0.0, -0.75, 0.0, 0.25, 0.0],
tests/unit/test_hybrid_vem.py:                [0.0, 0.25, 0.25, 0.0, -0.75, 0.0, 0.25],
tests/unit/test_hybrid_vem.py:                [0.25, 0.25, 0.0, 0.25, 0.0, -0.75, 0.0],
tests/unit/test_hybrid_vem.py:                [0.0, 0.25, 0.25, 0.0, 0.25, 0.0, -0.75],
tests/unit/test_hybrid_vem.py:        rtol = 1e-15
tests/unit/test_hybrid_vem.py:        kxy = -np.multiply(g.cell_centers[0, :], g.cell_centers[1, :])
tests/unit/test_hybrid_vem.py:                    -2.7386363636363646,
tests/unit/test_hybrid_vem.py:                    -5.472507331378301,
tests/unit/test_hybrid_vem.py:                    -0.1411290322580648,
tests/unit/test_hybrid_vem.py:                    -2.7338709677419368,
tests/unit/test_hybrid_vem.py:                    -0.1411290322580644,
tests/unit/test_hybrid_vem.py:                    -0.7698863636363639,
tests/unit/test_hybrid_vem.py:                    -0.1411290322580645,
tests/unit/test_hybrid_vem.py:                    -1.0151209677419353,
tests/unit/test_hybrid_vem.py:                    -0.7698863636363638,
tests/unit/test_hybrid_vem.py:                    -0.1411290322580647,
tests/unit/test_hybrid_vem.py:                    -1.0151209677419353,
tests/unit/test_hybrid_vem.py:        rtol = 1e-15
tests/unit/test_hybrid_vem.py:                [-2, 0, 2, 0, 0],
tests/unit/test_hybrid_vem.py:                    -1.9999999999999996e00,
tests/unit/test_hybrid_vem.py:                    4.9960036108132044e-16,
tests/unit/test_hybrid_vem.py:                    -7.9999999999999982e00,
tests/unit/test_hybrid_vem.py:                    -1.1102230246251565e-16,
tests/unit/test_hybrid_vem.py:                    -2.0000000000000000e00,
tests/unit/test_hybrid_vem.py:                    2.2204460492503131e-16,
tests/unit/test_hybrid_vem.py:                    -1.9999999999999998e00,
tests/unit/test_hybrid_vem.py:        rtol = 1e-15
tests/unit/test_hybrid_vem.py:        # We test only the mass-Hdiv part
tests/unit/test_hybrid_vem.py:        kxy = -np.multiply(g.cell_centers[0, :], g.cell_centers[1, :])
tests/unit/test_hybrid_vem.py:                [-2.888888888888888, 0.0, 3.3333333333333326, -0.4444444444444444, 0.0],
tests/unit/test_hybrid_vem.py:                [0.0, -2.888888888888888, 3.3333333333333321, 0.0, -0.4444444444444441],
tests/unit/test_hybrid_vem.py:                    -11.9999999999999964,
tests/unit/test_hybrid_vem.py:                [-0.4444444444444447, 0.0, 2.666666666666667, -2.2222222222222223, 0.0],
tests/unit/test_hybrid_vem.py:                    -0.4444444444444439,
tests/unit/test_hybrid_vem.py:                    -2.2222222222222214,
tests/unit/test_hybrid_vem.py:        rtol = 1e-15
tests/unit/test_hybrid_vem.py:        # We test only the mass-Hdiv part
tests/unit/test_hybrid_vem.py:        rtol = 1e-14
tests/unit/test_hybrid_vem.py:        kxy = -np.multiply(g.cell_centers[0, :], g.cell_centers[1, :])
tests/unit/test_hybrid_vem.py:        rtol = 1e-15
tests/unit/test_hybrid_vem.py:                [-2.25, 1.75, 0.0, 0.25, 0.0, 0.25, 0.0],
tests/unit/test_hybrid_vem.py:                [1.75, -4.5, 1.75, 0.25, 0.25, 0.25, 0.25],
tests/unit/test_hybrid_vem.py:                [0.0, 1.75, -2.25, 0.0, 0.25, 0.0, 0.25],
tests/unit/test_hybrid_vem.py:                [0.25, 0.25, 0.0, -0.75, 0.0, 0.25, 0.0],
tests/unit/test_hybrid_vem.py:                [0.0, 0.25, 0.25, 0.0, -0.75, 0.0, 0.25],
tests/unit/test_hybrid_vem.py:                [0.25, 0.25, 0.0, 0.25, 0.0, -0.75, 0.0],
tests/unit/test_hybrid_vem.py:                [0.0, 0.25, 0.25, 0.0, 0.25, 0.0, -0.75],
tests/unit/test_hybrid_vem.py:        rtol = 1e-15
tests/unit/test_hybrid_vem.py:                [-3.0, 3.0, 0.0, 0.0],
tests/unit/test_hybrid_vem.py:                [3.0, -6.0, 3.0, 0.0],
tests/unit/test_hybrid_vem.py:                [0.0, 3.0, -6.0, 3.0],
tests/unit/test_hybrid_vem.py:                [0.0, 0.0, 3.0, -3.0],
tests/unit/test_hybrid_vem.py:        rtol = 1e-15
tests/unit/test_hybrid_vem.py:                -7.886751345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189625731e00,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948129766e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948124214e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189624843e00,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948125325e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189625731e00,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948129766e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948124214e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189624843e00,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948125325e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189625287e00,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189625287e00,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948125325e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948125325e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189625287e00,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189625287e00,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948125325e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948125325e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948124214e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948124214e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189625731e00,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189625731e00,
tests/unit/test_hybrid_vem.py:                2.113248654051872177e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189624843e00,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -1.577350269189624843e00,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948129766e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051871900e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948129766e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948125325e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.113248654051867459e-01,
tests/unit/test_hybrid_vem.py:                -7.886751345948125325e-01,
tests/unit/test_hybrid_vem.py:                -8.199251345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.425748654051871900e-01,
tests/unit/test_hybrid_vem.py:                1.755875672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.130875672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064883e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.425748654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.619230616718567273e00,
tests/unit/test_hybrid_vem.py:                2.631945178762451487e-01,
tests/unit/test_hybrid_vem.py:                1.130875672974064189e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                1.755875672974064328e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187737013e-02,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773424e-01,
tests/unit/test_hybrid_vem.py:                2.631945178762451487e-01,
tests/unit/test_hybrid_vem.py:                -7.993054821237547403e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187746728e-02,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                -1.049305482123754185e00,
tests/unit/test_hybrid_vem.py:                5.131945178762447046e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187742564e-02,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                5.131945178762448156e-01,
tests/unit/test_hybrid_vem.py:                -2.119230616718566829e00,
tests/unit/test_hybrid_vem.py:                4.925748654051868014e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187743952e-02,
tests/unit/test_hybrid_vem.py:                4.255875672974062662e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                -1.369124327025934840e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                4.925748654051868014e-01,
tests/unit/test_hybrid_vem.py:                -1.069925134594812643e00,
tests/unit/test_hybrid_vem.py:                -1.369124327025934285e-01,
tests/unit/test_hybrid_vem.py:                4.255875672974062662e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                -8.199251345948128655e-01,
tests/unit/test_hybrid_vem.py:                2.425748654051871900e-01,
tests/unit/test_hybrid_vem.py:                1.755875672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.130875672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.425748654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.619230616718567273e00,
tests/unit/test_hybrid_vem.py:                2.631945178762451487e-01,
tests/unit/test_hybrid_vem.py:                1.130875672974064189e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                1.755875672974064328e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187737013e-02,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773146e-01,
tests/unit/test_hybrid_vem.py:                2.631945178762451487e-01,
tests/unit/test_hybrid_vem.py:                -7.993054821237547403e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187746728e-02,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                -1.049305482123754185e00,
tests/unit/test_hybrid_vem.py:                5.131945178762447046e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187742564e-02,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                5.131945178762448156e-01,
tests/unit/test_hybrid_vem.py:                -2.119230616718566829e00,
tests/unit/test_hybrid_vem.py:                4.925748654051868014e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187743952e-02,
tests/unit/test_hybrid_vem.py:                4.255875672974062662e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                -1.369124327025934840e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                4.925748654051868014e-01,
tests/unit/test_hybrid_vem.py:                -1.069925134594812643e00,
tests/unit/test_hybrid_vem.py:                -1.369124327025934285e-01,
tests/unit/test_hybrid_vem.py:                4.255875672974062662e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.755875672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.130875672974064328e-01,
tests/unit/test_hybrid_vem.py:                -8.199251345948127545e-01,
tests/unit/test_hybrid_vem.py:                2.425748654051871900e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187749503e-02,
tests/unit/test_hybrid_vem.py:                -1.049305482123754629e00,
tests/unit/test_hybrid_vem.py:                5.131945178762450377e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.130875672974064744e-01,
tests/unit/test_hybrid_vem.py:                1.755875672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618772869e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187745340e-02,
tests/unit/test_hybrid_vem.py:                2.425748654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.619230616718567273e00,
tests/unit/test_hybrid_vem.py:                2.631945178762449267e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064883e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187741177e-02,
tests/unit/test_hybrid_vem.py:                2.277777410618772869e-01,
tests/unit/test_hybrid_vem.py:                4.255875672974062107e-01,
tests/unit/test_hybrid_vem.py:                -1.369124327025934007e-01,
tests/unit/test_hybrid_vem.py:                5.131945178762450377e-01,
tests/unit/test_hybrid_vem.py:                -2.119230616718566829e00,
tests/unit/test_hybrid_vem.py:                4.925748654051864683e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187745340e-02,
tests/unit/test_hybrid_vem.py:                2.277777410618772869e-01,
tests/unit/test_hybrid_vem.py:                2.631945178762449267e-01,
tests/unit/test_hybrid_vem.py:                -7.993054821237544072e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                -1.369124327025934562e-01,
tests/unit/test_hybrid_vem.py:                4.255875672974062662e-01,
tests/unit/test_hybrid_vem.py:                4.925748654051864683e-01,
tests/unit/test_hybrid_vem.py:                -1.069925134594812199e00,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.755875672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.130875672974064328e-01,
tests/unit/test_hybrid_vem.py:                -8.199251345948127545e-01,
tests/unit/test_hybrid_vem.py:                2.425748654051871900e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618773146e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187749503e-02,
tests/unit/test_hybrid_vem.py:                -1.049305482123754629e00,
tests/unit/test_hybrid_vem.py:                5.131945178762450377e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.130875672974064744e-01,
tests/unit/test_hybrid_vem.py:                1.755875672974064605e-01,
tests/unit/test_hybrid_vem.py:                2.277777410618772869e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187745340e-02,
tests/unit/test_hybrid_vem.py:                2.425748654051871900e-01,
tests/unit/test_hybrid_vem.py:                -1.619230616718567273e00,
tests/unit/test_hybrid_vem.py:                2.631945178762449267e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187741177e-02,
tests/unit/test_hybrid_vem.py:                2.277777410618772869e-01,
tests/unit/test_hybrid_vem.py:                4.255875672974062107e-01,
tests/unit/test_hybrid_vem.py:                -1.369124327025934007e-01,
tests/unit/test_hybrid_vem.py:                5.131945178762450377e-01,
tests/unit/test_hybrid_vem.py:                -2.119230616718566829e00,
tests/unit/test_hybrid_vem.py:                4.925748654051864683e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773424e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                4.027774106187745340e-02,
tests/unit/test_hybrid_vem.py:                2.277777410618772869e-01,
tests/unit/test_hybrid_vem.py:                2.631945178762449267e-01,
tests/unit/test_hybrid_vem.py:                -7.993054821237544072e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                -1.369124327025934562e-01,
tests/unit/test_hybrid_vem.py:                4.255875672974062662e-01,
tests/unit/test_hybrid_vem.py:                4.925748654051864683e-01,
tests/unit/test_hybrid_vem.py:                -1.069925134594812199e00,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                -9.136751345948124214e-01,
tests/unit/test_hybrid_vem.py:                3.363248654051868014e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                -8.930554821237545182e-01,
tests/unit/test_hybrid_vem.py:                3.569445178762449267e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                -8.930554821237545182e-01,
tests/unit/test_hybrid_vem.py:                3.569445178762449822e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                -9.136751345948125325e-01,
tests/unit/test_hybrid_vem.py:                3.363248654051868569e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                3.363248654051868014e-01,
tests/unit/test_hybrid_vem.py:                -2.077350269189624843e00,
tests/unit/test_hybrid_vem.py:                5.863248654051869124e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                3.569445178762449267e-01,
tests/unit/test_hybrid_vem.py:                -2.036110964247509258e00,
tests/unit/test_hybrid_vem.py:                6.069445178762449267e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618774256e-01,
tests/unit/test_hybrid_vem.py:                3.569445178762449822e-01,
tests/unit/test_hybrid_vem.py:                -2.036110964247508814e00,
tests/unit/test_hybrid_vem.py:                6.069445178762449267e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974063773e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974063773e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                3.363248654051868569e-01,
tests/unit/test_hybrid_vem.py:                -2.077350269189625287e00,
tests/unit/test_hybrid_vem.py:                5.863248654051868014e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064605e-01,
tests/unit/test_hybrid_vem.py:                5.863248654051869124e-01,
tests/unit/test_hybrid_vem.py:                -1.163675134594812421e00,
tests/unit/test_hybrid_vem.py:                1.340277410618773424e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773424e-01,
tests/unit/test_hybrid_vem.py:                6.069445178762449267e-01,
tests/unit/test_hybrid_vem.py:                -1.143055482123754407e00,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773701e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                1.340277410618773979e-01,
tests/unit/test_hybrid_vem.py:                6.069445178762449267e-01,
tests/unit/test_hybrid_vem.py:                -1.143055482123754407e00,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064050e-01,
tests/unit/test_hybrid_vem.py:                1.443375672974064328e-01,
tests/unit/test_hybrid_vem.py:                5.863248654051869124e-01,
tests/unit/test_hybrid_vem.py:                -1.163675134594812643e00,
tests/unit/test_assembler.py:    cross-variable couplinsd.
tests/unit/test_assembler.py:7. Same as 6, but also including cross-variable coupling on the edge.
tests/unit/test_assembler.py:        A_known = np.array([[0, 0, 1], [0, 0, 1], [-1, -1, 1]])
tests/unit/test_assembler.py:        A_known = np.array([[0, 0, 1], [0, 0, 1], [-1, -1, 1]])
tests/unit/test_assembler.py:        A_known = np.array([[0, 0, 1], [0, 0, 1], [-1, -1, 1]])
tests/unit/test_assembler.py:        A_known = np.array([[1, 0, 1], [0, 2, 1], [-1, -1, 1]])
tests/unit/test_assembler.py:        """Define edge-variable as inactive. The resulting system should have
tests/unit/test_assembler.py:        A_known = np.array([[0, 0, 1], [0, 0, 1], [-1, -1, 1]])
tests/unit/test_assembler.py:                    intf: (variable_name_edge, MockEdgeDiscretization(-3, 1)),
tests/unit/test_assembler.py:        A_known = np.array([[0, 0, 2], [0, 0, 2], [-2, -2, -2]])
tests/unit/test_assembler.py:                    intf: (variable_name_edge, MockEdgeDiscretization(-3, 1)),
tests/unit/test_assembler.py:        A_known = np.array([[0, 0, 2], [0, 0, 2], [-2, -2, -2]])
tests/unit/test_assembler.py:        of them. Should result in what is effectively a 1-variable system
tests/unit/test_assembler.py:        # Off-diagonal elements internal to the nodes: For the first node,
tests/unit/test_assembler.py:    # Tests with node-edge couplings
tests/unit/test_assembler.py:        # Off-diagonal elements internal to the nodes: For the first node,
tests/unit/test_assembler.py:        A_known[4, 0] = -2
tests/unit/test_assembler.py:        A_known[4, 2] = -2
tests/unit/test_assembler.py:        # Off-diagonal elements internal to the nodes: For the first node,
tests/unit/test_assembler.py:        A_known[4, 0] = -2
tests/unit/test_assembler.py:        A_known[4, 3] = -2
tests/unit/test_assembler.py:        # Off-diagonal elements internal to the nodes: For the first node,
tests/unit/test_assembler.py:        A_known[3, 0] = -2
tests/unit/test_assembler.py:        A_known[3, 2] = -2
tests/unit/test_assembler.py:                    intf: (key_1, MockEdgeDiscretization(2, -4)),
tests/unit/test_assembler.py:        # Off-diagonal elements internal to the nodes: For the first node,
tests/unit/test_assembler.py:        A_known[0, 3] = -2
tests/unit/test_assembler.py:        A_known[2, 3] = -2
tests/unit/test_assembler.py:        # Off-diagonal elements internal to the nodes: For the first node,
tests/unit/test_assembler.py:        A_known[3, 0] = -2
tests/unit/test_assembler.py:        A_known[3, 1] = -3
tests/unit/test_assembler.py:        A_known[3, 2] = -5
tests/unit/test_assembler.py:        # Off-diagonal elements internal to the nodes: For the first node,
tests/unit/test_assembler.py:        A_known[e1_ind, g11_ind] = -1
tests/unit/test_assembler.py:        # Off-diagonal elements internal to the nodes: For the first node,
tests/unit/test_assembler.py:        A_known[e1_ind, g11_ind] = -1
tests/unit/test_assembler.py:                A, _ = MockNodeDiscretization(-1).assemble_matrix_rhs(sd, data)
tests/unit/test_assembler.py:        A_known[g2_ind, g2_ind] = -1
tests/unit/test_assembler.py:        edge_other_val = -1
tests/unit/test_assembler.py:                                node_discretization, edge_self_val, -edge_other_val
tests/unit/test_assembler.py:        self.assertTrue(A[e2_ind, e1_ind] == -edge_other_val)
tests/unit/test_assembler.py:        # Assembler.__str__ will be the same as in the above two-node test. Focus on
tests/unit/test_assembler.py:        cc[2, 0] = sps.coo_matrix(-self.off_diag_val)
tests/unit/test_assembler.py:        cc[2, 1] = sps.coo_matrix(-self.off_diag_val)
tests/unit/test_assembler.py:        cc[2, 0] = sps.coo_matrix(-self.off_diag_val)
tests/unit/test_assembler.py:        cc[2, 1] = sps.coo_matrix(-self.off_diag_val)
tests/unit/test_assembler.py:        cc[1, 0] = sps.coo_matrix(-self.off_diag_val)
tests/unit/test_assembler.py:        cc[1, 0] = sps.coo_matrix(-self.off_diag_val)
tests/unit/test_fvutils.py:        A = np.array([[1, 2, 3], [0, -5, 6], [-7, 8, 0]])
tests/unit/test_hu_10.py:    def initial_condition(self) -> None:
tests/unit/test_hu_10.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_10.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_10.py:            permeability = 1/50 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_10.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_10.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_10.py:                eps = 1e-6
tests/unit/test_hu_10.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_10.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_10.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_10.py:                eps = 1e-6
tests/unit/test_hu_10.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_10.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_10.py:    def set_geometry(self) -> None:
tests/unit/test_hu_10.py:    def set_domain(self) -> None:
tests/unit/test_hu_10.py:    def set_fractures(self) -> None:
tests/unit/test_hu_10.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_10.py:    dt_init=1e-3,
tests/unit/test_hu_10.py:    # dt_init=1e-2,
tests/unit/test_hu_10.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_10.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_10.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_hu_13.py:    def initial_condition(self) -> None:
tests/unit/test_hu_13.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_13.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_13.py:            permeability = 1./25 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_13.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_13.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_13.py:                eps = 1e-6
tests/unit/test_hu_13.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_13.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_13.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_13.py:                eps = 1e-6
tests/unit/test_hu_13.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_13.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_13.py:    def set_geometry(self) -> None:
tests/unit/test_hu_13.py:    def set_domain(self) -> None:
tests/unit/test_hu_13.py:    def set_fractures(self) -> None:
tests/unit/test_hu_13.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_13.py:    dt_init=1e-3,
tests/unit/test_hu_13.py:    # dt_init=1e-2,
tests/unit/test_hu_13.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_13.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_13.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_rock.py:        self.assertEqual(R.PERMEABILITY, 1 * 9.869233e-13)
tests/unit/test_rock.py:        self.assertEqual(R.PERMEABILITY, 1e-8 * pp.DARCY)
tests/unit/test_rock.py:        self.assertEqual(R.PERMEABILITY, 1e-5 * 9.869233e-13)
tests/unit/test_fracture_utils.py:# -*- coding: utf-8 -*-
tests/unit/test_fracture_utils.py:def arrays_equal(a, b, tol=1e-5):
tests/unit/test_fracture_utils.py:            x = np.reshape(x, (-1, 1))
tests/unit/test_fracture_utils.py:        return np.sqrt(np.sum(np.power(x - y, 2), axis=0))
tests/unit/test_fracture_utils.py:        up, ue, deleted = pp.frac_utils.uniquify_points(p, e, tol=1e-4)
tests/unit/test_fracture_utils.py:        up, ue, deleted = pp.frac_utils.uniquify_points(p, e, tol=1e-4)
tests/unit/test_fracture_utils.py:        p = np.array([[0, 1, 0, 0], [0, 1, 1e-3, 1]])
tests/unit/test_fracture_utils.py:        up, ue, deleted = pp.frac_utils.uniquify_points(p, e, tol=1e-2)
tests/unit/test_fracture_utils.py:        up, ue, deleted = pp.frac_utils.uniquify_points(p, e, tol=1e-4)
tests/unit/test_fracture_utils.py:        up, ue, deleted = pp.frac_utils.uniquify_points(p, e, tol=1e-2)
tests/unit/test_fracture_utils.py:        - pts_edges_to_linefractures(), and
tests/unit/test_fracture_utils.py:        - linefractures_to_pts_edges().
tests/unit/test_fracture_utils.py:        frac1 = pp.LineFracture([[0, 2], [1, 3]], tags=[-1, -1, 2])
tests/unit/test_fracture_utils.py:        frac4 = pp.LineFracture([[0, 4], [1, 5]], tags=[2, 2, 2, -1])
tests/unit/test_fracture_utils.py:                [-1, -1, 1, 2],
tests/unit/test_fracture_utils.py:                [-1, -1, 1, 2],
tests/unit/test_fracture_utils.py:                [2, -1, -1, 2],
tests/unit/test_fracture_utils.py:                [-1, -1, -1, -1],
tests/unit/test_fracture_utils.py:        frac1 = pp.LineFracture([[0, 2], [1, 3]], tags=[-1, 2, -1])
tests/unit/test_fracture_utils.py:            [[0, 1, 0], [1, 2, 2], [-1, 1, -1], [2, -1, -1], [-1, -1, -1]], dtype=int
tests/unit/test_fracture_utils.py:        # Default tolerance (1e-8).
tests/unit/test_fracture_utils.py:        frac2 = pp.LineFracture([[1, 1], [1, 3 + 1e-9]])
tests/unit/test_fracture_utils.py:        frac3 = pp.LineFracture([[2, 1], [2, 3 + 1e-10]])
tests/unit/test_fracture_utils.py:        assert np.allclose(converted_pts, pts, atol=1e-20)
tests/unit/test_fracture_utils.py:        frac2 = pp.LineFracture([[2, 3], [1, 3 + 1e-5]])
tests/unit/test_fracture_utils.py:        frac3 = pp.LineFracture([[4, 5], [1, 3 + 1e-5]])
tests/unit/test_fracture_utils.py:        frac2 = pp.LineFracture([[1, 1], [1, 3 + 1e-6]])
tests/unit/test_fracture_utils.py:        frac3 = pp.LineFracture([[2, 1], [2, 3 + 1e-7]])
tests/unit/test_fracture_utils.py:        converted_pts, _ = linefractures_to_pts_edges([frac1, frac2, frac3], tol=1e-5)
tests/unit/test_fracture_utils.py:        assert np.allclose(converted_pts, pts, atol=1e-20)
tests/unit/test_mixed_dim_gravity.py:    def mortar_nodes(self) -> List:
tests/unit/test_mixed_dim_gravity.py:    def fracture_nodes(self) -> List:
tests/unit/test_mixed_dim_gravity.py:    def discretizations(self) -> List:
tests/unit/test_mixed_dim_gravity.py:        aperture: float = 1e-1,
tests/unit/test_mixed_dim_gravity.py:    ) -> None:
tests/unit/test_mixed_dim_gravity.py:        # Set up flow field with uniform flow in y-direction
tests/unit/test_mixed_dim_gravity.py:            a = np.power(aperture, mdg.dim_max() - sd.dim)
tests/unit/test_mixed_dim_gravity.py:            # Angle of zero means force vector of [0, -1]
tests/unit/test_mixed_dim_gravity.py:            gravity[1, :] = -np.cos(gravity_angle)
tests/unit/test_mixed_dim_gravity.py:            # Angle of zero means force vector of [0, -1]
tests/unit/test_mixed_dim_gravity.py:            gravity[1, :] = -np.cos(gravity_angle)
tests/unit/test_mixed_dim_gravity.py:    def grid_2d(self, pert_node: bool = False) -> pp.Grid:
tests/unit/test_mixed_dim_gravity.py:        |--------|
tests/unit/test_mixed_dim_gravity.py:        ----------
tests/unit/test_mixed_dim_gravity.py:        pert_node perturbs one node in the grid. Leads to non-matching cells.
tests/unit/test_mixed_dim_gravity.py:        data = np.array([1, 1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1])
tests/unit/test_mixed_dim_gravity.py:    def grid_1d(self, num_pts=3) -> pp.Grid:
tests/unit/test_mixed_dim_gravity.py:    def simplex_mdg(self, num_1d=3, num_nodes_mortar=3, pert_node=False) -> None:
tests/unit/test_mixed_dim_gravity.py:        |--------|
tests/unit/test_mixed_dim_gravity.py:        ----------
tests/unit/test_mixed_dim_gravity.py:        intf.update_mortar(new_side_grids, tol=1e-4)
tests/unit/test_mixed_dim_gravity.py:            intf.update_mortar(new_side_grids, tol=1e-4)
tests/unit/test_mixed_dim_gravity.py:            # refine the 1d-physical grid
tests/unit/test_mixed_dim_gravity.py:            intf.update_secondary(new_g, tol=1e-4)
tests/unit/test_mixed_dim_gravity.py:            self.assertTrue(np.allclose(p, p_known, rtol=1e-3, atol=1e-3))
tests/unit/test_mixed_dim_gravity.py:            self.assertTrue(np.allclose(u, u_known, rtol=1e-3, atol=1e-3))
tests/unit/test_mixed_dim_gravity.py:    def verify_hydrostatic(self, angle=0, a=1e-1):
tests/unit/test_mixed_dim_gravity.py:        0 (bottom) to -1- aperture (top).
tests/unit/test_mixed_dim_gravity.py:        p_known = -(a * ind + h) * np.cos(angle)
tests/unit/test_mixed_dim_gravity.py:        self.assertTrue(np.allclose(p_primary, p_known, rtol=1e-3, atol=1e-3))
tests/unit/test_mixed_dim_gravity.py:        sd_secondary = mdg.subdomains(dim=mdg.dim_max() - 1)[0]
tests/unit/test_mixed_dim_gravity.py:        p_known = -(a / 2 + h) * np.cos(angle)
tests/unit/test_mixed_dim_gravity.py:        self.assertTrue(np.allclose(p_secondary, p_known, rtol=1e-3, atol=1e-3))
tests/unit/test_mixed_dim_gravity.py:            self.assertTrue(np.allclose(lmbda, 0, rtol=1e-3, atol=1e-3))
tests/unit/test_mixed_dim_gravity.py:                        self.set_parameters(dir_val_top=-1.1)
tests/unit/test_mixed_dim_gravity.py:        a = 1e-2
tests/unit/test_mixed_dim_gravity.py:                        val = -1 if simplex else -1 / nx
tests/unit/test_mixed_dim_gravity.py:                        self.verify_mortar_flux(1 / (num_nodes_mortar - 1))
tests/unit/test_mixed_dim_gravity.py:        a = 3e-3
tests/unit/test_mixed_dim_gravity.py:                        self.verify_mortar_flux(1 / (num_nodes_mortar - 1))
tests/unit/test_mixed_dim_gravity.py:    # --3d section. See analogous methods/tests above for documentation --#
tests/unit/test_mixed_dim_gravity.py:            self.set_parameters(dir_val_top=-1.1)
tests/unit/test_polygon_intersection.py:                [0.0, 1.0, 0.0, 2.0, 0.5, 0.0, -0.5, 0.3],
tests/unit/test_polygon_intersection.py:                [0.0, 1.0, 0.0, 2.0, 1.0, 0.0, -0.5, 0.6],
tests/unit/test_polygon_intersection.py:                [0.0, 1.0, 0.0, 2.0, 0.5, 0.0, -0.5, 0.3, -1, 0.0],
tests/unit/test_polygon_intersection.py:                [0.0, 1.0, 0.0, 2.0, 1.0, 0.0, -0.5, 0.6, -1, 0.0],
tests/unit/test_polygon_intersection.py:        # non-convex polygon
tests/unit/test_polygon_intersection.py:                [0.0, 1.0, 0.0, 2.0, 0.5, 0.0, -0.5, 0.3, -1, 0.0, 0.0, 2.0, -0.1, 1.1],
tests/unit/test_polygon_intersection.py:                [0.0, 1.0, 0.0, 2.0, 1.0, 0.0, -0.5, 0.6, -1, 0.0, 0.2, 0.2, 0.0, 0.0],
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_2 = np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-0.7, -0.7, 0.8, 0.8]])
tests/unit/test_polygon_intersection.py:        known_points = np.array([[0, 0, -0.7], [0, 0, 0.8]]).T
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_2 = np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-0.7, -0.7, 0.8, 0.8]])
tests/unit/test_polygon_intersection.py:        f_3 = np.array([[-1, 1, 1, -1], [-1, -1, 1, 1], [0, 0, 0, 0]])
tests/unit/test_polygon_intersection.py:            [[0, 0, -0.7], [0, 0, 0.8], [1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, -1, 0]]
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_2 = np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-0.7, -0.7, 0.8, 0.8]])
tests/unit/test_polygon_intersection.py:        f_3 = f_2 + np.array([0.5, 0, 0]).reshape((-1, 1))
tests/unit/test_polygon_intersection.py:            [[0, 0, -0.7], [0, 0, 0.8], [0.5, 0.0, -0.7], [0.5, 0.0, 0.8]]
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_2 = np.array([[-1, 1, 1, -1], [-1, 1, 1, -1], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_3 = np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:                [0, 0, -1],
tests/unit/test_polygon_intersection.py:                [0.0, 0.0, -1],
tests/unit/test_polygon_intersection.py:                [0.0, 0.0, -1],
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, 1, 1, -1], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_2 = np.array([[-0.5, 0.5, 0.5, -0.5], [-1, -1, 1, 1], [-2, -2, 2, 2]])
tests/unit/test_polygon_intersection.py:        f_3 = np.array([[-1, 1, 1, -1], [-1, -1, 1, 1], [0, 0, 0, 0]])
tests/unit/test_polygon_intersection.py:                [-1, 0, 0],
tests/unit/test_polygon_intersection.py:                [-0.5, 0.0, 0],
tests/unit/test_polygon_intersection.py:                [-0.5, 0.0, 0],
tests/unit/test_polygon_intersection.py:        Two fractures. One has two (non-consecutive) vertexes in the plane
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-0.5, 0.5, 0.5, -0.5], [-1, -1, 1, 1], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_2 = np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        known_points = np.array([[0, -1, -1], [0, 1, 1]]).T
tests/unit/test_polygon_intersection.py:        Two fractures. One has two (non-consecutive) vertexes in the plane
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-0.5, 0.5, 0.5, -0.5], [-1, -1, 1, 1], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_2 = np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        known_points = np.array([[0, -1, -1], [0, 1, 1]]).T
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-0.5, 0.5, 0.5, -0.5], [-1, -1, 1, 1], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_2 = np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 2, 1]])
tests/unit/test_polygon_intersection.py:        known_points = np.array([[0, -1, -1], [0, 1, 1]]).T
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-0.5, 0.5, 0.5, -0.5], [-1, -1, 1, 1], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_2 = np.array([[0, 0, 0, 0], [-1, 1, 1, -1], [-1, -1, 2, 1]])
tests/unit/test_polygon_intersection.py:        known_points = np.array([[0, -1, -1], [0, 1, 1]]).T
tests/unit/test_polygon_intersection.py:        Two fractures, L-intersection.
tests/unit/test_polygon_intersection.py:        Two fractures, L-intersection.
tests/unit/test_polygon_intersection.py:        Two fractures, L-intersection, one common node.
tests/unit/test_polygon_intersection.py:        Two fractures, L-intersection, partly overlapping segments
tests/unit/test_polygon_intersection.py:        Two fractures, T-intersection, segment contained within the other polygon.
tests/unit/test_polygon_intersection.py:        Two fractures, L-intersection, partly overlapping segments
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-2, -2, 2, 2], [-2, -2, 1, 1], [-2, 2, 2, -2]])
tests/unit/test_polygon_intersection.py:            [[2.0, 2.0, 2.0, 2.0], [-2.0, -2.0, 2.0, 2.0], [2.0, -2.0, -2.0, 2.0]]
tests/unit/test_polygon_intersection.py:        known_points = np.array([[2, 1, 2], [2, 1.0, -2]]).T
tests/unit/test_polygon_intersection.py:        Two fractures, L-intersection, partly overlapping segments
tests/unit/test_polygon_intersection.py:        Two fractures, L-intersection, partly overlapping segments
tests/unit/test_polygon_intersection.py:        Two fractures, L-intersection, partly overlapping segments
tests/unit/test_polygon_intersection.py:            [[-0.2, 1.8, 1.8, -0.2], [0.5, 0.5, 0.5, 0.5], [-0.2, -0.2, 1.8, 1.8]]
tests/unit/test_polygon_intersection.py:            [[0.2, 1.8, 1.8, 0.2], [0.5, 0.5, 0.5, 0.5], [-0.2, -0.2, 1.8, 1.8]]
tests/unit/test_polygon_intersection.py:        # Polygon extends outside on x-planes, but not on z
tests/unit/test_polygon_intersection.py:            [[-0.2, 1.8, 1.8, -0.2], [0.5, 0.5, 0.5, 0.5], [0.2, 0.2, 0.8, 0.8]]
tests/unit/test_polygon_intersection.py:            [[-0.2, 1.8, 1.8, -0.2], [0.5, 0.5, 0.5, 0.5], [-0.2, -0.2, 1.8, 1.8]]
tests/unit/test_polygon_intersection.py:        # Permute the vertexes of the boundary - this used to be an issue.
tests/unit/test_polygon_intersection.py:        poly = np.array([[-1, 2, 2, -1], [0.5, 0.5, 0.5, 0.5], [-1, -1, 2, 2]])
tests/unit/test_polygon_intersection.py:        poly = np.array([[-1, 2, 2, -1], [0.5, 0.5, 0.5, 0.5], [-1, -1, 0.3, 0.3]])
tests/unit/test_polygon_intersection.py:            [[-0.1, 0.9, 0.9, 0.1], [0.5, 0.5, 0.5, 0.5], [0.2, 0.2, 0.4, 0.4]]
tests/unit/test_polygon_intersection.py:            [[-0.1, 1.1, 1.1, -0.1], [0.5, 0.5, 0.5, 0.5], [0.2, 0.2, 0.4, 0.4]]
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, 2, 2, -1], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        #        f_2 = np.array([[-1, -1, 2, 2], [-1, 1, 1, -1], [0, 0, 0, 0]])
tests/unit/test_polygon_intersection.py:            np.array([[-2, -2, -2, -2], [-2, 2, 2, -2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[2, 2, 2, 2], [-2, 2, 2, -2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [-2, -2, -2, -2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [2, 2, 2, 2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [-2, -2, 2, 2], [-2, -2, -2, -2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [-2, -2, 2, 2], [2, 2, 2, 2]]),
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, 3, 3, -1], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:            np.array([[-2, -2, -2, -2], [-2, 2, 2, -2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[2, 2, 2, 2], [-2, 2, 2, -2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [-2, -2, -2, -2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [2, 2, 2, 2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [-2, -2, 2, 2], [-2, -2, -2, -2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [-2, -2, 2, 2], [2, 2, 2, 2]]),
tests/unit/test_polygon_intersection.py:        known_poly = np.array([[-1, 2, 2, -1], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-2, 2, 2, -2], [0, 0, 0, 0], [-1, -1, 1, 1]])
tests/unit/test_polygon_intersection.py:            np.array([[-2, -2, -2, -2], [-2, 2, 2, -2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[2, 2, 2, 2], [-2, 2, 2, -2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [-2, -2, -2, -2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [2, 2, 2, 2], [-2, -2, 2, 2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [-2, -2, 2, 2], [-2, -2, -2, -2]]),
tests/unit/test_polygon_intersection.py:            np.array([[-2, 2, 2, -2], [-2, -2, 2, 2], [2, 2, 2, 2]]),
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, 2, 2, -1], [0.5, 0.5, 0.5, 0.5], [0.2, 0.2, 0.8, 0.8]])
tests/unit/test_polygon_intersection.py:            # base in the yz-plane with corners y=(1, 2), z=(0, 1) (then combine)
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, -1, 0], [0.5, 0.5, 0.5], [0.2, 0.8, 0]])
tests/unit/test_polygon_intersection.py:        f_1 = np.array([[-1, -1, 1], [0.5, 0.5, 0.5], [0.0, 1, 0.5]])
tests/unit/setup_grids_mpfa_mpsa_tests.py:    g_cart_rpert.nodes = g_cart_rpert.nodes + dx * pert * (0.5 - rand)
tests/unit/setup_grids_mpfa_mpsa_tests.py:    # No perturbations of the z-coordinate (which is not active in this case)
tests/unit/setup_grids_mpfa_mpsa_tests.py:    g.nodes += rate * dx * (rand - 0.5)
tests/unit/setup_grids_mpfa_mpsa_tests.py:    # Ensure there are no perturbations in the z-coordinate
tests/unit/test_inside_polygon.py:        p = np.array([0.5, 1e-6])
tests/unit/test_inside_polygon.py:                    -2.04462568e-01,
tests/unit/test_inside_polygon.py:                    -1.88898782e-01,
tests/unit/test_inside_polygon.py:                    -1.65916617e-01,
tests/unit/test_inside_polygon.py:                    -1.44576869e-01,
tests/unit/test_inside_polygon.py:                    -7.82444375e-02,
tests/unit/test_inside_polygon.py:                    -1.44018389e-16,
tests/unit/test_inside_polygon.py:                    7.82444375e-02,
tests/unit/test_inside_polygon.py:                    1.03961083e-01,
tests/unit/test_inside_polygon.py:                    1.44576869e-01,
tests/unit/test_inside_polygon.py:                    1.88898782e-01,
tests/unit/test_inside_polygon.py:                    2.04462568e-01,
tests/unit/test_inside_polygon.py:                    1.88898782e-01,
tests/unit/test_inside_polygon.py:                    1.44576869e-01,
tests/unit/test_inside_polygon.py:                    7.82444375e-02,
tests/unit/test_inside_polygon.py:                    1.44018389e-16,
tests/unit/test_inside_polygon.py:                    -7.82444375e-02,
tests/unit/test_inside_polygon.py:                    -1.44576869e-01,
tests/unit/test_inside_polygon.py:                    -1.88898782e-01,
tests/unit/test_inside_polygon.py:                    -1.10953147e-16,
tests/unit/test_inside_polygon.py:                    7.82444375e-02,
tests/unit/test_inside_polygon.py:                    1.19484803e-01,
tests/unit/test_inside_polygon.py:                    1.44576869e-01,
tests/unit/test_inside_polygon.py:                    1.88898782e-01,
tests/unit/test_inside_polygon.py:                    2.04462568e-01,
tests/unit/test_inside_polygon.py:                    1.88898782e-01,
tests/unit/test_inside_polygon.py:                    1.76059749e-01,
tests/unit/test_inside_polygon.py:                    1.44576869e-01,
tests/unit/test_inside_polygon.py:                    7.82444375e-02,
tests/unit/test_inside_polygon.py:                    1.31179355e-16,
tests/unit/test_inside_polygon.py:                    -7.82444375e-02,
tests/unit/test_inside_polygon.py:                    -1.44576869e-01,
tests/unit/test_inside_polygon.py:                    -1.88898782e-01,
tests/unit/test_inside_polygon.py:                    -2.04462568e-01,
tests/unit/test_inside_polygon.py:                    -1.88898782e-01,
tests/unit/test_inside_polygon.py:                    -1.44576869e-01,
tests/unit/test_inside_polygon.py:                    -7.82444375e-02,
tests/unit/test_inside_polygon.py:        b = np.array([[0.1281648, 0.04746067], [-0.22076491, 0.16421546]])
tests/unit/test_hu_hamon_2018.py:    def initial_condition(self) -> None:
tests/unit/test_hu_hamon_2018.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_hamon_2018.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_hamon_2018.py:        darcy_to_m2 = 9.869233e-13
tests/unit/test_hu_hamon_2018.py:            permeability = 100 * 1e-3 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_hamon_2018.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_hamon_2018.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_hamon_2018.py:                eps = 1e-6
tests/unit/test_hu_hamon_2018.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_hamon_2018.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_hamon_2018.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_hamon_2018.py:                eps = 1e-6
tests/unit/test_hu_hamon_2018.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_hamon_2018.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_hamon_2018.py:    def set_geometry(self) -> None:
tests/unit/test_hu_hamon_2018.py:    def set_domain(self) -> None:
tests/unit/test_hu_hamon_2018.py:    def set_fractures(self) -> None:
tests/unit/test_hu_hamon_2018.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_hamon_2018.py:    # dt_init=1e-2,
tests/unit/test_hu_hamon_2018.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_hamon_2018.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_hamon_2018.py:        self.dynamic_viscosity = 1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_hu_model_alessio.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_alessio.py:                eps = 1e-6
tests/unit/test_hu_model_alessio.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_model_alessio.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_model_alessio.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_model_alessio.py:                eps = 1e-6
tests/unit/test_hu_model_alessio.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_model_alessio.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_model_alessio.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_alessio.py:                pressure_values = ( 2 - 1 * sd.cell_centers[1] / self.ymax ) 
tests/unit/test_hu_model_alessio.py:    def after_nonlinear_iteration(self, solution_vector: np.ndarray) -> None:
tests/unit/test_hu_model_alessio.py:        # # face 12 cell 4 and -1 (boundary) 
tests/unit/test_hu_model_alessio.py:        # # face 17 cell 1 and -1
tests/unit/test_hu_model_alessio.py:        flux_intf_phase_0_p_val = -flux_intf_phase_0_p.evaluate(self.equation_system).val[[12,17]] # minus because of notation for mortars
tests/unit/test_hu_model_alessio.py:        flux_intf_phase_1_p_val = -flux_intf_phase_1_p.evaluate(self.equation_system).val[[12,17]] # [upper face, lower face]
tests/unit/test_hu_model_alessio.py:        flux_intf_phase_0_m_val = -flux_intf_phase_0_m.evaluate(self.equation_system).val[[12,17]] # ok, fluxes from p eq and mass bal are the same
tests/unit/test_hu_model_alessio.py:        flux_intf_phase_1_m_val = -flux_intf_phase_1_m.evaluate(self.equation_system).val[[12,17]]
tests/unit/test_hu_model_alessio.py:        div_flux_0_cell_1_4 = -( div @ flux_intf_phase_0_p ).evaluate(self.equation_system).val[[1,4]] # you know why there is a minus # contribution to cell 1 and 4. positive if exiting the cell
tests/unit/test_hu_model_alessio.py:        div_flux_1_cell_1_4 = -( div @ flux_intf_phase_1_p ).evaluate(self.equation_system).val[[1,4]]
tests/unit/test_hu_model_alessio.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_alessio.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_alessio.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_alessio.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_alessio.py:    dt_init=5e-1 ,  
tests/unit/test_hu_model_alessio.py:    "nl_convergence_tol": 1e-6,
tests/unit/test_hu_model_alessio.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_alessio.py:wetting_phase = pp.composite.phase.Phase(rho0=1, beta=1e-10)
tests/unit/test_hu_model_alessio.py:non_wetting_phase = pp.composite.phase.Phase(rho0=0.5, beta=1e-10)
tests/unit/test_hu_model_darcy_flux.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_darcy_flux.py:    # other methods not called in prepared_simulation: -------------------------------------------------
tests/unit/test_hu_model_darcy_flux.py:        # TEST: ---------------------------------------------------------------------------
tests/unit/test_hu_model_darcy_flux.py:                sd.nodes[1][internal_nodes_id[0]] -= 0.1
tests/unit/test_hu_model_darcy_flux.py:        # ---------
tests/unit/test_hu_model_darcy_flux.py:                        darcy_phase_0, 0*darcy_phase_0, rtol=0, atol=1e-10
tests/unit/test_hu_model_darcy_flux.py:                        np.array([0,0,0,0,0, 0,0,0,-1,-1, 0,0,1,1]),
tests/unit/test_hu_model_darcy_flux.py:                        atol=1e-10,
tests/unit/test_hu_model_darcy_flux.py:        print("\n\n\n TEST PASSED ----------------------------------------")
tests/unit/test_hu_model_darcy_flux.py:    def set_geometry(self) -> None:
tests/unit/test_hu_model_darcy_flux.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_darcy_flux.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_darcy_flux.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_darcy_flux.py:            "cell_size_x": self.xmax/2-0.1,
tests/unit/test_hu_model_darcy_flux.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_darcy_flux.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_model_darcy_flux.py:if case == 5:  # delta p = -1, g = 0
tests/unit/test_hu_model_darcy_flux.py:if case == 8:  # delta p = -1, g = 1
tests/unit/test_hu_model_darcy_flux.py:if case == 13:  # delta p = -1, g = 0
tests/unit/test_hu_model_darcy_flux.py:if case == 16:  # delta p = -1, g = 1
tests/unit/test_hu_model_darcy_flux.py:    #model.darcy_flux_phase_1_values_2d = np.array([0.,0,0,0,0, 0,0,0,-1,-1, 0,0,-1,-1])
tests/unit/test_hu_8.py:    def initial_condition(self) -> None:
tests/unit/test_hu_8.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_8.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_8.py:            permeability = 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_8.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_8.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_8.py:                eps = 1e-6
tests/unit/test_hu_8.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_8.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_8.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_8.py:                eps = 1e-6
tests/unit/test_hu_8.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_8.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_8.py:    def set_geometry(self) -> None:
tests/unit/test_hu_8.py:    def set_domain(self) -> None:
tests/unit/test_hu_8.py:    def set_fractures(self) -> None:
tests/unit/test_hu_8.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_8.py:    dt_init=1e-3,
tests/unit/test_hu_8.py:    # dt_init=1e-2,
tests/unit/test_hu_8.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_8.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_8.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_distance_computations.py:        p3 = np.array([2, -1])
tests/unit/test_distance_computations.py:        self.assertTrue(np.allclose(cp1, p2.reshape((-1, 1))))
tests/unit/test_distance_computations.py:        self.assertTrue(np.allclose(cp2, p2.reshape((-1, 1))))
tests/unit/test_distance_computations.py:        self.assertTrue(np.allclose(cp1, np.array([0.5, 0.5, 0.5]).reshape((-1, 1))))
tests/unit/test_distance_computations.py:        self.assertTrue(np.allclose(cp2, np.array([0.5, 0.5, 0.5]).reshape((-1, 1))))
tests/unit/test_distance_computations.py:        known_d = np.array([np.sqrt(2), 1, 1, 1, np.sqrt(2)]).reshape((-1, 1))
tests/unit/test_distance_computations.py:        start = np.array([[0, 0, -1], [0, 1, 1]]).T
tests/unit/test_distance_computations.py:                [0, -1, 0.5],
tests/unit/test_distance_computations.py:        start = np.array([0.5, 0.5, -1])
tests/unit/test_distance_computations.py:        known_cp = np.array([0.5, 0.5, 0]).reshape((-1, 1))
tests/unit/test_distance_computations.py:        known_cp = np.array([0.5, 0.5, 0]).reshape((-1, 1))
tests/unit/test_distance_computations.py:        known_cp = np.array([0.5, 0.5, 0]).reshape((-1, 1))
tests/unit/test_distance_computations.py:        start = np.array([1.5, 0.5, -1])
tests/unit/test_distance_computations.py:        known_cp = np.array([1.5, 0.5, 0]).reshape((-1, 1))
tests/unit/test_distance_computations.py:        start = np.array([-0.5, -0.5, 0])
tests/unit/test_hu_1.py:    def initial_condition(self) -> None:
tests/unit/test_hu_1.py:            pressure_values = 1./50 * ( 2 - 1 * sd.cell_centers[1] / self.ymax  )  
tests/unit/test_hu_1.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_1.py:            permeability = 1./50 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_1.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_1.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_1.py:                eps = 1e-6
tests/unit/test_hu_1.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_1.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_1.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_1.py:                eps = 1e-6
tests/unit/test_hu_1.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_1.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_1.py:    def set_geometry(self) -> None:
tests/unit/test_hu_1.py:    def set_domain(self) -> None:
tests/unit/test_hu_1.py:    def set_fractures(self) -> None:
tests/unit/test_hu_1.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_1.py:    dt_init=1e-3,
tests/unit/test_hu_1.py:    # dt_init=1e-2,
tests/unit/test_hu_1.py:    "nl_convergence_tol": 1e-5,
tests/unit/test_hu_1.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_1.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_hu_5.py:    def initial_condition(self) -> None:
tests/unit/test_hu_5.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_5.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_5.py:            permeability = 1/1000 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_5.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_5.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_5.py:                eps = 1e-6
tests/unit/test_hu_5.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_5.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_5.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_5.py:                eps = 1e-6
tests/unit/test_hu_5.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_5.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_5.py:    def set_geometry(self) -> None:
tests/unit/test_hu_5.py:    def set_domain(self) -> None:
tests/unit/test_hu_5.py:    def set_fractures(self) -> None:
tests/unit/test_hu_5.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_5.py:    dt_init=1e-3,
tests/unit/test_hu_5.py:    # dt_init=1e-2,
tests/unit/test_hu_5.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_5.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_5.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_fv_face_pressure_reconstruction.py:                [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_fv_face_pressure_reconstruction.py:                [0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0],
tests/unit/test_fv_face_pressure_reconstruction.py:                [0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_fv_face_pressure_reconstruction.py:                [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.all(np.abs(D_g - D_g_known) < 1e-12))
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.all(np.abs(CC - CC_known) < 1e-12))
tests/unit/test_fv_face_pressure_reconstruction.py:                [-1 / 6, -1 / 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0],
tests/unit/test_fv_face_pressure_reconstruction.py:                [0, 0, -1 / 6, -1 / 3, 0, 0, 0, 0, 0, 0, 0, 0.0],
tests/unit/test_fv_face_pressure_reconstruction.py:                [0, 0, 0, 0, 0, 0, -1 / 3, -1 / 6, 0, 0, 0, 0.0],
tests/unit/test_fv_face_pressure_reconstruction.py:                [0, 0, 0, 0, 0, 0, 0, 0, -1 / 3, -1 / 6, 0, 0.0],
tests/unit/test_fv_face_pressure_reconstruction.py:                [-1 / 12, 1 / 12, 0, 0, 0, 0, 1 / 12, -1 / 12, 0, 0, 0, 0],
tests/unit/test_fv_face_pressure_reconstruction.py:                [0, 0, 0, 0, -1 / 12, 1 / 12, 0, 0, 0, 0, 1 / 12, -1 / 12],
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.all(np.abs(D_g - D_g_known).A < 1e-12))
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.all(np.abs(CC - CC_known) < 1e-12))
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:                    -1,
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.all(np.abs(D_g - D_g_known).A < 1e-12))
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.all(np.abs(CC - CC_known) < 1e-12))
tests/unit/test_fv_face_pressure_reconstruction.py:        # Set up unit pressure gradient in x-direction
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.allclose(bound_p[bf], -g.face_centers[0, bf]))
tests/unit/test_fv_face_pressure_reconstruction.py:        # Set up unit pressure gradient in x-direction
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.allclose(bound_p[bf], -2 * g.face_centers[0, bf]))
tests/unit/test_fv_face_pressure_reconstruction.py:        # Set up pressure gradient in x-direction, with value -1
tests/unit/test_fv_face_pressure_reconstruction.py:        bc_val[[2, 5]] = -1
tests/unit/test_fv_face_pressure_reconstruction.py:        # Set up unit pressure gradient in x-direction
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.allclose(bound_p[bf], -g.face_centers[0, bf]))
tests/unit/test_fv_face_pressure_reconstruction.py:        bc_val[[2, 5]] = -1
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(bound_p[0] == x[0] - 0.5)
tests/unit/test_fv_face_pressure_reconstruction.py:        # Set up unit flow in x-direction, thus pressure gradient the other way
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.allclose(bound_p[bf], -g.face_centers[0, bf]))
tests/unit/test_fv_face_pressure_reconstruction.py:        # Set up flow in negative x-direction, thus positive gradient of value 1
tests/unit/test_fv_face_pressure_reconstruction.py:        bc_val[[2, 5]] = -1
tests/unit/test_fv_face_pressure_reconstruction.py:        # Set up unit pressure gradient in x-direction
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.allclose(bound_p[bf], -g.face_centers[0, bf]))
tests/unit/test_fv_face_pressure_reconstruction.py:        bc_val[[2, 5]] = -1
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(bound_p[0] == x[0] - 0.5)
tests/unit/test_fv_face_pressure_reconstruction.py:        xleft = np.where(xf[0] < 1e-3 + xf[0].min())[0]
tests/unit/test_fv_face_pressure_reconstruction.py:        xright = np.where(xf[0] > xf[0].max() - 1e-3)[0]
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.allclose(bound_p[bf], -g.face_centers[0, bf]))
tests/unit/test_fv_face_pressure_reconstruction.py:        xleft = np.where(xf[0] < 1e-3 + xf[0].min())[0]
tests/unit/test_fv_face_pressure_reconstruction.py:        xright = np.where(xf[0] > xf[0].max() - 1e-3)[0]
tests/unit/test_fv_face_pressure_reconstruction.py:        bc_val[bf[xright]] = -1
tests/unit/test_fv_face_pressure_reconstruction.py:        xleft = np.where(xf[0] < 1e-3 + xf[0].min())[0]
tests/unit/test_fv_face_pressure_reconstruction.py:        xright = np.where(xf[0] > xf[0].max() - 1e-3)[0]
tests/unit/test_fv_face_pressure_reconstruction.py:        self.assertTrue(np.allclose(bound_p[bf], -g.face_centers[0, bf]))
tests/unit/gmsh_frac_file.msh:1 0 0 0 1 0 0 1 13 2 10 -11 
tests/unit/gmsh_frac_file.msh:2 1 0 0 1 1 0 1 14 2 11 -12 
tests/unit/gmsh_frac_file.msh:3 0 1 0 1 1 0 1 15 2 12 -13 
tests/unit/gmsh_frac_file.msh:4 0 0 0 0 0.09999999999999998 0 1 16 2 8 -10 
tests/unit/gmsh_frac_file.msh:5 0 0.09999999999999998 0 0 1 0 1 16 2 8 -13 
tests/unit/gmsh_frac_file.msh:6 0.2 0.6 0 0.5 0.6 0 1 18 2 1 -15 
tests/unit/gmsh_frac_file.msh:7 0.6 0.6 0 0.8 0.6 0 1 18 2 2 -14 
tests/unit/gmsh_frac_file.msh:8 0.5 0.6 0 0.6 0.6 0 1 18 2 14 -15 
tests/unit/gmsh_frac_file.msh:9 0.2 0.2 0 0.4000000000000001 0.2 0 1 19 2 3 -16 
tests/unit/gmsh_frac_file.msh:10 0.5 0.2 0 0.8 0.2 0 1 19 2 4 -5 
tests/unit/gmsh_frac_file.msh:11 0.4000000000000001 0.2 0 0.5 0.2 0 1 19 2 5 -16 
tests/unit/gmsh_frac_file.msh:12 0.5 0.2 0 0.5 0.225 0 1 20 2 5 -18 
tests/unit/gmsh_frac_file.msh:13 0.5 0.6 0 0.5 0.8 0 1 20 2 6 -15 
tests/unit/gmsh_frac_file.msh:14 0.5 0.5 0 0.5 0.6 0 1 20 2 15 -17 
tests/unit/gmsh_frac_file.msh:15 0.5 0.225 0 0.5 0.5 0 1 20 2 17 -18 
tests/unit/gmsh_frac_file.msh:16 0.2 0.2 0 0.5 0.5 0 1 21 2 3 -17 
tests/unit/gmsh_frac_file.msh:17 0.6 0.6 0 0.8 0.8 0 1 21 2 7 -14 
tests/unit/gmsh_frac_file.msh:18 0.5 0.5 0 0.6 0.6 0 1 21 2 14 -17 
tests/unit/gmsh_frac_file.msh:19 0 0.09999999999999998 0 0.4000000000000001 0.2 0 1 22 2 8 -16 
tests/unit/gmsh_frac_file.msh:20 0.5 0.225 0 0.8 0.3 0 1 22 2 9 -18 
tests/unit/gmsh_frac_file.msh:21 0.4000000000000001 0.2 0 0.5 0.225 0 1 22 2 16 -18 
tests/unit/gmsh_frac_file.msh:1 0 0 0 1 1 0 1 17 5 1 2 3 -5 4 
tests/unit/test_sort_points.py:        # first column, thus re-arrangement should be automatic
tests/unit/test_sort_points.py:        # first column, thus re-arrangement is needed
tests/unit/test_hu_14.py:    def initial_condition(self) -> None:
tests/unit/test_hu_14.py:                2 - 1 * sd.cell_centers[1] / self.ymax
tests/unit/test_hu_14.py:            #     7e-2, self.mdg.dim_max() - sd.dim
tests/unit/test_hu_14.py:            permeability = 1./10 * 1e-4 * np.ones(sd.num_cells) * darcy_to_m2 # bottom # 100 mD
tests/unit/test_hu_14.py:            # permeability[np.where(sd.cell_centers[1] >= self.ymax / 2)] = 50 * 1e-3 * darcy_to_m2 # top
tests/unit/test_hu_14.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_14.py:                eps = 1e-6
tests/unit/test_hu_14.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0] # add xmax as in the tests pls
tests/unit/test_hu_14.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_14.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
tests/unit/test_hu_14.py:                eps = 1e-6
tests/unit/test_hu_14.py:                right_boundary = np.where(sd.face_centers[0]>(self.xmax-eps))[0]
tests/unit/test_hu_14.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary] # inlet
tests/unit/test_hu_14.py:    def set_geometry(self) -> None:
tests/unit/test_hu_14.py:    def set_domain(self) -> None:
tests/unit/test_hu_14.py:    def set_fractures(self) -> None:
tests/unit/test_hu_14.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_14.py:    dt_init=1e-3,
tests/unit/test_hu_14.py:    # dt_init=1e-2,
tests/unit/test_hu_14.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu_14.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_14.py:        self.dynamic_viscosity = 1e-1 # 1e-3 [kg / (m*s)] water        
tests/unit/test_hu_model_full_jac_frac_mod.py:    def pressure_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_full_jac_frac_mod.py:    def mass_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
tests/unit/test_hu_model_full_jac_frac_mod.py:        flux = flux_V_G - flux_intf_phase_0  # self.ell = 0
tests/unit/test_hu_model_full_jac_frac_mod.py:    def initial_condition(self) -> None:
tests/unit/test_hu_model_full_jac_frac_mod.py:        # TEST SECTION: --------------------------------------------------------------
tests/unit/test_hu_model_full_jac_frac_mod.py:        assert np.all(np.isclose(A_ad, A_exact, rtol=0, atol=1e-10))
tests/unit/test_hu_model_full_jac_frac_mod.py:        print("\n\n TEST PASSED ----------------------------------------- ")
tests/unit/test_hu_model_full_jac_frac_mod.py:    def set_domain(self) -> None:
tests/unit/test_hu_model_full_jac_frac_mod.py:    def set_fractures(self) -> None:
tests/unit/test_hu_model_full_jac_frac_mod.py:    def meshing_arguments(self) -> dict[str, float]:
tests/unit/test_hu_model_full_jac_frac_mod.py:        self.ell = 0  # 0 = wetting, 1 = non-wetting
tests/unit/test_hu_model_full_jac_frac_mod.py:    "nl_convergence_tol": 1e-10,
tests/unit/test_hu.py:# official tests: ----------------------------------------------------------------------------
tests/unit/test_hu.py:print("\n\nTESTS: -------------------\n")
tests/unit/test_hu.py:            np.ones(sd.num_cells) - wetting_saturation_val
tests/unit/test_hu.py:        non_wetting_phase._s = 1 - primary_vars[1]
tests/unit/test_hu.py:        non_wetting_phase._s = np.ones(sd.num_cells) - wetting_phase._s
tests/unit/test_hu.py:            1 - primary_vars[1]
tests/unit/test_hu.py:        non_wetting_phase._s = np.ones(sd.num_cells) - wetting_phase._s
tests/unit/test_hu.py:        assert np.isclose(qt_internal.val, np.array([-1.0]), rtol=0, atol=1e-10)
tests/unit/test_hu.py:            qt_internal, np.array([-1.0]), rtol=0, atol=1e-10
tests/unit/test_hu.py:            1 - primary_vars[1]
tests/unit/test_hu.py:        non_wetting_phase._s = np.ones(sd.num_cells) - wetting_phase._s
tests/unit/test_hu.py:        assert np.isclose(qt_internal.val, np.array([0.0]), rtol=0, atol=1e-10)
tests/unit/test_hu.py:            qt_internal, np.array([0.0]), rtol=0, atol=1e-10
tests/unit/test_hu.py:    # ad: ------------------
tests/unit/test_hu.py:        1 - primary_vars[1]
tests/unit/test_hu.py:    # complex step: ----------------------
tests/unit/test_hu.py:    non_wetting_phase._s = np.ones(sd.num_cells) - wetting_phase._s
tests/unit/test_hu.py:    # finite difference: ----------------------
tests/unit/test_hu.py:        [[1, -1, 0, 0], [-1, 1, 0, 0]]
tests/unit/test_hu.py:    )  # remeber that delta_Phi = 0, lamnda = 1 or 0, pressure is in beta,  delta = i-j and first row is about i and second about j
tests/unit/test_hu.py:            qt_jacobian_ad - qt_jacobian_exact,
tests/unit/test_hu.py:            atol=1e-10,
tests/unit/test_hu.py:            qt_jacobian_complex - qt_jacobian_exact,
tests/unit/test_hu.py:            atol=1e-10,
tests/unit/test_hu.py:            qt_jacobian_finite_diff - qt_jacobian_exact,
tests/unit/test_hu.py:            atol=1e-5,
tests/unit/test_hu.py:        1 - primary_vars[1]
tests/unit/test_hu.py:        1 - primary_vars[1]
tests/unit/test_hu.py:        1 - primary_vars[1]
tests/unit/test_hu.py:    # V: ------------------------------------------------
tests/unit/test_hu.py:    qt_internal = np.array([-1])
tests/unit/test_hu.py:    assert V.val == np.array([-1])
tests/unit/test_hu.py:    # G: ----------------------------------------------------------
tests/unit/test_hu.py:    gravity_value = -1
tests/unit/test_hu.py:        G.val, np.array([-1]), rtol=0, atol=1e-9
tests/unit/test_hu.py:    )  # 1e-9? why? isn't it a bit high?
tests/unit/test_hu.py:        G.val, np.array([1]), rtol=0, atol=1e-9
tests/unit/test_hu.py:        1 - primary_vars[1]
tests/unit/test_hu.py:    # V: ------------------------------------------------
tests/unit/test_hu.py:    qt_internal = np.array([0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1])
tests/unit/test_hu.py:    assert np.all(V.val == np.array([0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1]))
tests/unit/test_hu.py:    # G: ----------------------------------------------------------
tests/unit/test_hu.py:    gravity_value = -1
tests/unit/test_hu.py:            G.val, np.array([0, 0, 0, 0, 0, 0, -1, -1, -1, 0, 0, 0]), rtol=0, atol=1e-9
tests/unit/test_hu.py:    )  # 1e-9? why? isn't it a bit high?
tests/unit/test_hu.py:            G.val, np.array([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]), rtol=0, atol=1e-9
tests/unit/test_hu.py:    # ad: ------------------
tests/unit/test_hu.py:        1 - primary_vars[1]
tests/unit/test_hu.py:    # complex: ---------------------------
tests/unit/test_hu.py:    non_wetting_phase._s = np.ones(sd.num_cells) - wetting_phase._s
tests/unit/test_hu.py:    # finite differnce: -------------------------
tests/unit/test_hu.py:    A_exact = np.array([[1, -1, 0, 0], [-1, 1, 0, 0], [1, -1, 0, 0], [-1, 1, 0, 0]])
tests/unit/test_hu.py:        np.isclose(A_ad, A_exact, rtol=0, atol=1e-10)
tests/unit/test_hu.py:    assert np.all(np.isclose(A_complex, A_exact, rtol=0, atol=1e-10))
tests/unit/test_hu.py:    assert np.all(np.isclose(A_finite_diff, A_exact, rtol=0, atol=1e-5))
tests/unit/test_hu.py:                tmp = -pp.ad.functions.maximum(-tmp, -1e6)  # TODO: improve it
tests/unit/test_hu.py:# solve one iteration: ---------------------------------------------------------------------
tests/unit/test_hu.py:    - Strongly hardcoded
tests/unit/test_hu.py:    - null bc
tests/unit/test_hu.py:    - equation order: pressure eq, mass balance
tests/unit/test_hu.py:    - primary vars order: pressure, saturation
tests/unit/test_hu.py:    - initial_guess = solution at previous timestep
tests/unit/test_hu.py:    - it is a mess but it is temporary...
tests/unit/test_hu.py:    toll = 1e-12  # no comment...
tests/unit/test_hu.py:    mixture.get_phase(m)._s = 1 - u_old[1]
tests/unit/test_hu.py:        mixture.get_phase(m)._s = 1 - u_old[1]
tests/unit/test_hu.py:        residual = np.linalg.solve(full_J, timestep * F + val_unstationary - rhs)
tests/unit/test_hu.py:        u_new[0].val -= residual[0:length]  # sorry...
tests/unit/test_hu.py:        u_new[1].val -= residual[length : 2 * length]
tests/unit/test_hu.py:    # pressure_val = 2 - 1 * sd.cell_centers[1] / y_max  # the initial guess counts! (?)
tests/unit/test_hu.py:    wetting_saturation_val = np.ones(sd.num_cells) - non_wetting_saturation_val
tests/unit/test_hu.py:    wetting_phase._s = 1 - primary_vars[1]  # useless for newton. TODO: remove it
tests/unit/test_hu.py:    # let's try newton: --------------------------------------------------
tests/unit/test_hu.py:    ell = 1  # 0 = wetting phase, 1 = non-wetting phase
tests/unit/test_hu.py:            # let's plot the solution: ----------------
tests/unit/test_hu.py:            #     1 - sol[1].val,
tests/unit/test_hu.py:            #     title="saturation " + str(m) + " = " + str(1 - sol[1].val),
tests/unit/test_hu.py:    # # HU discretization: -------------------------------------------------------------
tests/unit/test_hu.py:# unofficial tests: ---------------------------------------------------------------------------------------------------------
tests/unit/test_hu.py:print("\n\nUNOFFICIAL TESTS: ---------------------\n")
tests/unit/test_hu.py:    # TEST 1: horizontal stratification, stable/unstable initial conditions --------------------------------------------------------------------------------------
tests/unit/test_hu.py:    print("\n unofficial test 1: ---------------------")
tests/unit/test_hu.py:    - grad P = 0, g = 1. upwind is as expected for different g_ref (thus different ratio centered/upwind discr method)
tests/unit/test_hu.py:    - both for unstable and stable ic 
tests/unit/test_hu.py:    - the norm 1 for rho0 = 1 and 2 for rho0 = 2, ok
tests/unit/test_hu.py:    - ovv, no qt across vertical faces
tests/unit/test_hu.py:    - grad P ~=, g = 0. qt is constant and respects the grad directions as expected. 
tests/unit/test_hu.py:    - both for unstable and stable ic
tests/unit/test_hu.py:    - the norm 1 for rho0 = 1 and 2 for rho0 = 2, ok (remember that delta z and delta p are = 1)
tests/unit/test_hu.py:    - pressure = -sd.cell_centers[1] and gravity_value = 0.5 or 1. Some fluxes are null (1e-9), as expected.
tests/unit/test_hu.py:    - checked also vertical stratification but it is meaningless
tests/unit/test_hu.py:    # pressure_val = -sd.cell_centers[1]  # just to have a gradient
tests/unit/test_hu.py:        1 - primary_vars[1]
tests/unit/test_hu.py:        zlim=(-1, 1),
tests/unit/test_hu.py:    # TEST 2: V flux --------------------------------------------------------------------------------------
tests/unit/test_hu.py:    print("\nunofficial test 2: --------------")
tests/unit/test_hu.py:        zlim=(-1, 1),
tests/unit/test_hu.py:    # TEST 3: G flux --------------------------------------------------------------------------------------
tests/unit/test_hu.py:    print("\nunofficial test 3: ---------------------")
tests/unit/test_hu.py:    - when the phases are completely separeted G is zero, right? either lambda_ell(S=0,1)*lambda_m(S=0,1) = 0, or g_ell-g_m = 0 
tests/unit/test_hu.py:    - with saturations = 0.1, 0.9 the flux directions is right. I havent checked anything more.
tests/unit/test_hu.py:        zlim=(-1, 1),
tests/unit/test_hu.py:    - horizontal pressure gradient 
tests/unit/test_hu.py:    - simplex grid
tests/unit/test_hu.py:    - better test...
tests/unit/test_hu.py:    - find a way to check omega, G, ...
tests/unit/test_hu.py:    - ell is defined when you define the mixture. Which pahse is the primary varible is up to you. The link between ell and primary is not evident. 
tests/unit/test_hu.py:    - I dont like the input.                                                        #
tests/unit/test_hu.py:    - Do I like more an integer index to indentify each phase? Yes, I do.           # DONE
tests/unit/test_hu.py:    - Inside the code it's not clear what is primary variable and what is not.       #
tests/unit/test_hu.py:    - same for contraints  
tests/unit/test_hu.py:    # left = -1
tests/unit/test_hu.py:    # right = -1
tests/unit/test_tag.py:        p = known_tips[:, i].reshape((-1, 1))
tests/unit/test_tag.py:        tip_ind.append(np.argmin(np.sum(np.power(p - g.nodes, 2), axis=0)))
tests/unit/test_tag.py:    # Check that all other nodes are tagged as non-tips
tests/unit/test_tag.py:    # T-intersection between 1 and 4.
tests/unit/test_tag.py:    # L-intersection between 1 and 3
tests/unit/test_tag.py:    # X-intersection between 2 and 4
tests/unit/test_tag.py:    # 4 has one node at the domain boundary - should not be a tip node
tests/unit/test_tag.py:    # Nodes 1 and 2 of f3 are tips, 0 and 3 ends in a T-intersection with f2
tests/unit/test_tag.py:    # f4 has an X-intersection with f2, and L-intersection with f5
tests/unit/test_tag.py:    # f5 has an L-intersection with f4, but since f5 is taller than f4, the
tests/unit/test_tag.py:    # ------------------------------------------------------------------------------#
tests/unit/test_partition.py:        # the  y-direction should redirect to a 10x2.
tests/unit/test_partition.py:        # the z-dimension has only 1, thus the two other have to do 30 each. y
tests/unit/test_partition.py:        f = g.face_centers[1] < 1e-10
tests/unit/test_partition.py:        true_nodes = np.where(g.nodes[1] < 1e-10)[0]
tests/unit/test_partition.py:        f = g.face_centers[2] < 1e-10
tests/unit/test_partition.py:        true_nodes = np.where(g.nodes[2] < 1e-10)[0]
tests/unit/test_partition.py:        grid: |----|----|
tests/unit/test_partition.py:              -----------
tests/unit/test_partition.py:              -----------
tests/unit/test_partition.py:                   -----|
tests/unit/test_partition.py:                        -
tests/unit/test_partition.py:        # y-faces start on 45
tests/unit/test_partition.py:        # z-faces start on 93
tests/unit/test_partition.py:            self.assertTrue(np.all(np.abs(pvec[k] - pvec[k[0]]) < 1e-4))
tests/unit/test_partition.py:                np.all(np.abs(pvec[k] - pvec[k[0]]) < 1e-4)
tests/unit/test_partition.py:                or np.all(np.abs(pvec[k2] - pvec[k2[0]]) < 1e-4)
src/porepy/utils/default_domains.py:def CubeDomain(physdims: Sequence[Union[int, float]]) -> Dict["str", Union[int, float]]:
src/porepy/utils/default_domains.py:) -> Dict["str", Union[int, float]]:
src/porepy/utils/default_domains.py:def UnitCubeDomain() -> Dict["str", Union[int, float]]:
src/porepy/utils/default_domains.py:def UnitSquareDomain() -> Dict["str", Union[int, float]]:
src/porepy/utils/adtree.py:              F   -1     C     D
src/porepy/utils/adtree.py:which level and coordinate a node has. For the multi-dimension case we alternate
src/porepy/utils/adtree.py:In the multi-dimensional case, the ADT is organized in the same way, but
src/porepy/utils/adtree.py:if the structure must contain n-dimensional points, at the i-th level
src/porepy/utils/adtree.py:of the tree the subdivision is carried out with respect to the j-th
src/porepy/utils/adtree.py:We immediately observe that the n-dimensional "points", the structure
src/porepy/utils/adtree.py:            present is marked as -1.
src/porepy/utils/adtree.py:        parent (int): identification of the parent node, marked -1 if not present (the root
src/porepy/utils/adtree.py:    def __init__(self, key: Any, box: np.ndarray) -> None:
src/porepy/utils/adtree.py:        self.child: List[int] = [-1, -1]
src/porepy/utils/adtree.py:        self.parent: int = -1
src/porepy/utils/adtree.py:    def __str__(self) -> str:
src/porepy/utils/adtree.py:    def __repr__(self) -> str:
src/porepy/utils/adtree.py:    # Pre-defined ordering of left and right node
src/porepy/utils/adtree.py:    def __init__(self, tree_dim: int, phys_dim: int) -> None:
src/porepy/utils/adtree.py:    def __str__(self) -> str:
src/porepy/utils/adtree.py:    def __repr__(self) -> str:
src/porepy/utils/adtree.py:    def add_node(self, node: ADTNode) -> None:
src/porepy/utils/adtree.py:        while next_node_id != -1:
src/porepy/utils/adtree.py:                box[search_dim] -= 1.0
src/porepy/utils/adtree.py:    def search(self, node: ADTNode, tol: float = 2.0e-6) -> np.ndarray:
src/porepy/utils/adtree.py:        box[: self.phys_dim] = self._scale(box[: self.phys_dim]) - tol
src/porepy/utils/adtree.py:        # Origin of the sub-tree
src/porepy/utils/adtree.py:        # To traverse a non-empty binary tree in preorder,
src/porepy/utils/adtree.py:        while node_id != -1:
src/porepy/utils/adtree.py:            next_node_id = -1
src/porepy/utils/adtree.py:                # Go to the left part of the sub-tree, and check if
src/porepy/utils/adtree.py:                if next_node_id != -1:
src/porepy/utils/adtree.py:                            next_node_id = -1
src/porepy/utils/adtree.py:                        if origin[search_dim] + delta < box[search_dim - self.phys_dim]:
src/porepy/utils/adtree.py:                            next_node_id = -1
src/porepy/utils/adtree.py:                # Left sub-tree is neither null nor external, push info onto the stack
src/porepy/utils/adtree.py:                if next_node_id != -1:
src/porepy/utils/adtree.py:                while node_id == -1:
src/porepy/utils/adtree.py:                # Check if the subtree intersects the box. Otherwise set right_link = -1,
src/porepy/utils/adtree.py:                # lev-1 is the level of the parent node, which directs the search.
src/porepy/utils/adtree.py:                search_dim = (level - 1) % self.tree_dim
src/porepy/utils/adtree.py:                delta = self._delta(level - 1, self.tree_dim)
src/porepy/utils/adtree.py:                        node_id = -1
src/porepy/utils/adtree.py:                    if origin[search_dim] + delta < box[search_dim - self.phys_dim]:
src/porepy/utils/adtree.py:                        node_id = -1
src/porepy/utils/adtree.py:                if node_id != -1:
src/porepy/utils/adtree.py:    def from_grid(self, g: pp.Grid, only_cells: Optional[np.ndarray] = None) -> None:
src/porepy/utils/adtree.py:                due to some a-priori estimates of the searching elements.
src/porepy/utils/adtree.py:        # Get the geometrical information cell-to-nodes
src/porepy/utils/adtree.py:        self.delta = 1.0 / (region_max - self.region_min)
src/porepy/utils/adtree.py:    def _scale(self, x: np.ndarray) -> np.ndarray:
src/porepy/utils/adtree.py:        return self.delta * (x - self.region_min)
src/porepy/utils/adtree.py:    def _box_intersect(self, box1: np.ndarray, box2: np.ndarray) -> bool:
src/porepy/utils/adtree.py:    def _delta(self, level: int, dim: int) -> float:
src/porepy/utils/graph.py:        node_connections (sps.csc-matrix): Should be given at construction.
src/porepy/utils/error.py:) -> dict:
src/porepy/utils/error.py:        mdg: "Coarse" mixed-dimensional grid.
src/porepy/utils/error.py:        mdg_ref: "Fine" mixed-dimensional grid.
src/porepy/utils/error.py:            # TODO: If scaling is used, consider that - or use the export-ready variables,
src/porepy/utils/error.py:                solutions[var][0].reshape((var_dof, -1), order="F").T
src/porepy/utils/error.py:                solutions_ref[var][0].reshape((var_dof, -1), order="F").T
src/porepy/utils/error.py:            # axis=0 gives component-wise norm.
src/porepy/utils/error.py:            absolute_error = np.linalg.norm(mapped_sol - sol_ref, axis=0)
src/porepy/utils/error.py:            if np.any(norm_ref < 1e-10):
src/porepy/utils/error.py:    ----------
src/porepy/utils/error.py:    ------
src/porepy/utils/error.py:    --------
src/porepy/utils/error.py:                      -2*np.pi*np.cos(2*np.pi*pt[0])*np.sin(2*np.pi*pt[1]),
src/porepy/utils/error.py:                      -2*np.pi*np.sin(2*np.pi*pt[0])*np.cos(2*np.pi*pt[1])]
src/porepy/utils/error.py:    ----------
src/porepy/utils/error.py:    ------
src/porepy/utils/error.py:    --------
src/porepy/utils/error.py:    ----------
src/porepy/utils/error.py:    ------
src/porepy/utils/error.py:    --------
src/porepy/utils/grid_utils.py:) -> sps.spmatrix:
src/porepy/utils/grid_utils.py:            number of components in a face-vector.
src/porepy/utils/grid_utils.py:        faces (np.array-like of ints): Index for which faces to be considered. Should only
src/porepy/utils/grid_utils.py:def star_shape_cell_centers(g: "pp.Grid", as_nan: bool = False) -> np.ndarray:
src/porepy/utils/grid_utils.py:    ----------
src/porepy/utils/grid_utils.py:         star-shaped. Otherwise, an exception is raised (default behaviour).
src/porepy/utils/grid_utils.py:    -------
src/porepy/utils/grid_utils.py:    xn -= np.tile(xn_shift, (xn.shape[1], 1)).T
src/porepy/utils/grid_utils.py:            # the cell is not star-shaped
src/porepy/utils/grid_utils.py:                    "Cell not star-shaped impossible to compute the center."
src/porepy/utils/array_operations.py:    """Data structure for representing N-dimensional sparse arrays.
src/porepy/utils/array_operations.py:    The underlying data format is a generalization of the COO-format (in the
src/porepy/utils/array_operations.py:    integers, thus, if the data to be stored lives a grid with non-integer 'grid-lines',
src/porepy/utils/array_operations.py:    # IMPLEMENTATION NOTE: It would be feasible to allow for non-integer coordinates,
src/porepy/utils/array_operations.py:    # self._values a 2d-array, but this has not been prioritized.
src/porepy/utils/array_operations.py:    def __init__(self, dim: int, value_dim: int = 1) -> None:
src/porepy/utils/array_operations.py:    ) -> np.ndarray:
src/porepy/utils/array_operations.py:                    unique_values[:, i] = values[:, np.where(all_2_unique == i)[0][-1]]
src/porepy/utils/array_operations.py:            new_coord = new_coord.reshape((-1, 1))
src/porepy/utils/array_operations.py:    def get(self, coords: list[np.ndarray]) -> np.ndarray:
src/porepy/utils/array_operations.py:        # Convert coordinates to numpy nd-array.
src/porepy/utils/array_operations.py:        # Make an intersection between the sought-after coordinates and the coordinates
src/porepy/utils/array_operations.py:    def __repr__(self) -> str:
src/porepy/utils/array_operations.py:        s += f"The values in the array are {self._values.shape[0]}-dimensional."
src/porepy/utils/array_operations.py:    a: np.ndarray, b: np.ndarray, tol: float = 1e-10
src/porepy/utils/array_operations.py:) -> tuple[np.ndarray, np.ndarray, np.ndarray, list]:
src/porepy/utils/array_operations.py:            1e-10.
src/porepy/utils/array_operations.py:    # Uniquify ia and ib - this will also sort them.
src/porepy/utils/array_operations.py:    a_in_b = np.zeros(a.shape[-1], dtype=bool)
src/porepy/utils/examples_utils.py:    representing fluid-related quantities. Normally, this is set by an instance of
src/porepy/utils/examples_utils.py:    """Mixed-dimensional grid for the current model. Normally defined in a mixin
src/porepy/utils/examples_utils.py:    representing solid-related quantities. Normally, this is set by an instance of
src/porepy/utils/examples_utils.py:    """Values of the mechanical boundary conditions for a time-dependent problem.
src/porepy/utils/examples_utils.py:    def face_displacement(self, sd: pp.Grid) -> np.ndarray:
src/porepy/utils/examples_utils.py:             Exception if the mixed-dimensional grid contains more that one subdomain
src/porepy/utils/examples_utils.py:             dimension of the mixed-dimensional grid.
src/porepy/utils/examples_utils.py:        # Compute the pseudo-trace of the displacement
src/porepy/utils/examples_utils.py:    ) -> pp.number:
src/porepy/utils/examples_utils.py:        """Compute discrete relative L2-error as given in [1].
src/porepy/utils/examples_utils.py:            Discrete relative L2-error between the true and approximated arrays.
src/porepy/utils/examples_utils.py:            - [1] Nordbotten, J. M. (2016). Stable cell-centered finite volume
src/porepy/utils/examples_utils.py:              54(2), 942-968.
src/porepy/utils/examples_utils.py:            raise ValueError("Mortar variables can only be cell-centered.")
src/porepy/utils/examples_utils.py:        numerator = np.sqrt(np.sum(meas * np.abs(true_array - approx_array) ** 2))
src/porepy/utils/tags.py:    --Grid tags, stored in the grids and data fields of the grid bucket.
src/porepy/utils/tags.py:    --Fracture network tags, stored in the fracture network field .tags. One
src/porepy/utils/tags.py:    --
src/porepy/utils/tags.py:    Add new tags (as a pre-made dictionary) to the tags of the parent object
src/porepy/utils/accumarray.py:    ----------
src/porepy/utils/accumarray.py:    -------
src/porepy/utils/accumarray.py:    --------
src/porepy/utils/accumarray.py:    >>> a = array([[1,2,3],[4,-1,6],[-1,8,9]])
src/porepy/utils/accumarray.py:           [ 4, -1,  6],
src/porepy/utils/accumarray.py:           [-1,  8,  9]])
src/porepy/utils/accumarray.py:    >>> # A 2D output, from sub-arrays with shapes and positions like this:
src/porepy/utils/accumarray.py:    array([[ -8.,  18.],
src/porepy/utils/accumarray.py:           [ -8.,   9.]])
src/porepy/utils/accumarray.py:    array([[[1, 2, 4, -1], [3, 6]],
src/porepy/utils/accumarray.py:           [[-1, 8], [9]]], dtype=object)
src/porepy/utils/accumarray.py:        accmap = np.expand_dims(accmap, -1)
src/porepy/utils/tangential_normal_projection.py:        tangential_basis (np.array, size: dim x dim-1 x num_vec): Basis vectors for the
src/porepy/utils/tangential_normal_projection.py:            tangential and normal space. The first dim-1 rows represent projection to the
src/porepy/utils/tangential_normal_projection.py:        self.tangential_basis = basis[:, :-1, :]
src/porepy/utils/tangential_normal_projection.py:        The intended usage is to decompose a grid-based vector variable into the
src/porepy/utils/tangential_normal_projection.py:                For each block, the first dim-1 rows projects onto the tangent
src/porepy/utils/tangential_normal_projection.py:            num = self.projection.shape[-1]
src/porepy/utils/tangential_normal_projection.py:        The intended usage is to project a grid-based vector variable onto the
src/porepy/utils/tangential_normal_projection.py:                diagonal matrix. The first (dim-1) x dim block projects onto the first
src/porepy/utils/tangential_normal_projection.py:                size: ((self.dim - 1) * num) x (self.dim * num). If num is not None,
src/porepy/utils/tangential_normal_projection.py:                size: ((self.dim - 1) * num_vecs) x (self.dim * num_vecs)
src/porepy/utils/tangential_normal_projection.py:        # Construct the full projection matrix - tangential and normal
src/porepy/utils/tangential_normal_projection.py:        rows = np.arange(num * (self.dim - 1))
src/porepy/utils/tangential_normal_projection.py:            np.arange(size_proj), np.arange(self.dim - 1, size_proj, self.dim)
src/porepy/utils/tangential_normal_projection.py:        The intended usage is to project a grid-based vector variable onto the
src/porepy/utils/tangential_normal_projection.py:        cols = np.arange(self.dim - 1, size_proj, self.dim)
src/porepy/utils/tangential_normal_projection.py:                gives projection to the tangential space (first self.dim - 1 rows)
src/porepy/utils/tangential_normal_projection.py:            u2': ndarray (u2 - u2*u1 * u1) / ||u2||
src/porepy/utils/tangential_normal_projection.py:            u3': (optional) ndArray (u3 - u3*u2' - u3*u1')/||u3||
src/porepy/utils/tangential_normal_projection.py:        u2 = u2 - np.sum(u2 * u1, axis=0) * u1
src/porepy/utils/tangential_normal_projection.py:        u3 = u3 - np.sum(u3 * u1, axis=0) * u1 - np.sum(u3 * u2, axis=0) * u2
src/porepy/utils/tangential_normal_projection.py:        for i in range(M.shape[-1]):
src/porepy/utils/tangential_normal_projection.py:) -> None:
src/porepy/utils/tangential_normal_projection.py:    grids of co-dimension 1.
src/porepy/utils/tangential_normal_projection.py:        mdg: Mixed-dimensional grid.
src/porepy/utils/tangential_normal_projection.py:        interfaces: List of MortarGrids. If not provided, all interfaces of co-dimension
src/porepy/utils/tangential_normal_projection.py:    that neighbors a co-dimension 1 grid, defined as:
src/porepy/utils/tangential_normal_projection.py:            of the lower-dimensional grid.
src/porepy/utils/tangential_normal_projection.py:    Note that grids of co-dimension 2 and higher are ignored in this construction,
src/porepy/utils/tangential_normal_projection.py:        interfaces = mdg.interfaces(dim=mdg.dim_max() - 1)
src/porepy/utils/tangential_normal_projection.py:    # We therefore access the grids via the edges of the mixed-dimensional grid.
src/porepy/utils/tangential_normal_projection.py:        # Only consider edges where the lower-dimensional neighbor is of co-dimension 1
src/porepy/utils/tangential_normal_projection.py:        if not intf.dim == (mdg.dim_max() - 1):
src/porepy/utils/tangential_normal_projection.py:        # Store the projection operator in the lower-dimensional data.
src/porepy/utils/interpolation_tables.py:    Operator-based linearization approach for modeling of multiphase
src/porepy/utils/interpolation_tables.py:    multi-component flow in porous media by Denis Voskov (JCP 2017)
src/porepy/utils/interpolation_tables.py:    InterpolationTable: Interpolation based on pre-computation of function values.
src/porepy/utils/interpolation_tables.py:    """Interpolation table based on pre-computation of function values.
src/porepy/utils/interpolation_tables.py:            with a for-loop wrapper) so that multiple coordinates can be evaluated at
src/porepy/utils/interpolation_tables.py:    ) -> None:
src/porepy/utils/interpolation_tables.py:    ) -> None:
src/porepy/utils/interpolation_tables.py:        self._h = (high - low) / (npt - 1)
src/porepy/utils/interpolation_tables.py:        self._strides = np.cumprod(tmp)[: self._param_dim].reshape((-1, 1))
src/porepy/utils/interpolation_tables.py:        # The indexing, together with the Fortran-style raveling is necessary
src/porepy/utils/interpolation_tables.py:    def interpolate(self, x: np.ndarray) -> np.ndarray:
src/porepy/utils/interpolation_tables.py:            x = x.reshape((-1, 1))
src/porepy/utils/interpolation_tables.py:        # is to be evaluated. The base vertex is in the (generalized) lower-left
src/porepy/utils/interpolation_tables.py:                right_weight * incr + left_weight * (1 - incr), axis=0
src/porepy/utils/interpolation_tables.py:            assert np.all(weight[np.logical_not(inside_grid)] < 1e-10)
src/porepy/utils/interpolation_tables.py:    def gradient(self, x: np.ndarray, axis: int) -> np.ndarray:
src/porepy/utils/interpolation_tables.py:            x = x.reshape((-1, 1))
src/porepy/utils/interpolation_tables.py:        # is to be evaluated. The base vertex is in the (generalized) lower-left
src/porepy/utils/interpolation_tables.py:            weight_ind = right_weight * incr + left_weight * (1 - incr)
src/porepy/utils/interpolation_tables.py:            # -1 for the right
src/porepy/utils/interpolation_tables.py:            weight_ind[axis] = 2 * incr[axis] - 1
src/porepy/utils/interpolation_tables.py:    def _values(self) -> np.ndarray:
src/porepy/utils/interpolation_tables.py:    def _find_base_vertex(self, coord: np.ndarray) -> np.ndarray:
src/porepy/utils/interpolation_tables.py:        """Helper function to get the base (generalized lower-left) vertex of a
src/porepy/utils/interpolation_tables.py:            ind.append(((x_i - low_i) // h_i).astype(int))
src/porepy/utils/interpolation_tables.py:    ) -> Iterator[tuple[np.ndarray, np.ndarray]]:
src/porepy/utils/interpolation_tables.py:        given base vertex, and the dimension-wise increments in indices from the base.
src/porepy/utils/interpolation_tables.py:            incr = np.asarray(increment).reshape((-1, 1))
src/porepy/utils/interpolation_tables.py:    ) -> np.ndarray:
src/porepy/utils/interpolation_tables.py:        from a base (e.g., lower-left corner of a hypercube) and an increment.
src/porepy/utils/interpolation_tables.py:    ) -> tuple[np.ndarray, np.ndarray]:
src/porepy/utils/interpolation_tables.py:                (x[i] - (self._pt_on_axes[i][base_ind[i]])) / self._h[i]
src/porepy/utils/interpolation_tables.py:        tol = 1e-13
src/porepy/utils/interpolation_tables.py:        assert np.all(right_weight >= -tol) and np.all(right_weight <= 1 + tol)
src/porepy/utils/interpolation_tables.py:        left_weight = 1 - right_weight
src/porepy/utils/interpolation_tables.py:    def __repr__(self) -> str:
src/porepy/utils/interpolation_tables.py:            vectorized (if necessary with a for-loop wrapper) so that multiple
src/porepy/utils/interpolation_tables.py:    ) -> None:
src/porepy/utils/interpolation_tables.py:        # 1d-coordinates of the quadrature points along each coordinate axis.
src/porepy/utils/interpolation_tables.py:        # It is also different from super()._coord, which gives Nd-coordinates, but as
src/porepy/utils/interpolation_tables.py:        self._h: np.ndarray = dx.reshape((-1, 1))
src/porepy/utils/interpolation_tables.py:        self._base_point = base_point.reshape((-1, 1))
src/porepy/utils/interpolation_tables.py:    def interpolate(self, x: np.ndarray) -> np.ndarray:
src/porepy/utils/interpolation_tables.py:    def gradient(self, x: np.ndarray, axis: int) -> np.ndarray:
src/porepy/utils/interpolation_tables.py:    ) -> None:
src/porepy/utils/interpolation_tables.py:    ) -> tuple[np.ndarray, np.ndarray]:
src/porepy/utils/interpolation_tables.py:        # The lower-left corner of each hypercube.
src/porepy/utils/interpolation_tables.py:    def _fill_values(self, x: np.ndarray) -> None:
src/porepy/utils/interpolation_tables.py:                "No function to evaluate - should values be added instead?"
src/porepy/utils/interpolation_tables.py:    ) -> np.ndarray:
src/porepy/utils/interpolation_tables.py:        from a base (e.g., lower-left corner of a hypercube) and an increment.
src/porepy/utils/interpolation_tables.py:        sometimes need the linear index, sometimes the multi-dimensional one.
src/porepy/utils/interpolation_tables.py:            base_ind: Indices of the lower-left corners of the hypercubes on which
src/porepy/utils/interpolation_tables.py:            # A multi-index is wanted. Simply add the increment to the base index.
src/porepy/utils/interpolation_tables.py:    ) -> tuple[np.ndarray, np.ndarray]:
src/porepy/utils/interpolation_tables.py:                (x[i] - (self._pt[i, raveled_ind])) / self._h[i]
src/porepy/utils/interpolation_tables.py:        tol = 1e-13
src/porepy/utils/interpolation_tables.py:        assert np.all(right_weight >= -tol) and np.all(right_weight <= 1 + tol)
src/porepy/utils/interpolation_tables.py:        left_weight = 1 - right_weight
src/porepy/utils/interpolation_tables.py:    def _find_base_vertex(self, coord: np.ndarray, safeguarding=False) -> np.ndarray:
src/porepy/utils/interpolation_tables.py:        """Helper function to get the base (generalized lower-left) vertex of a
src/porepy/utils/interpolation_tables.py:        Upon request, the method will also identify cases where the choice of lower-left
src/porepy/utils/interpolation_tables.py:        requesting more data points, and also removing the one-to-one relation between
src/porepy/utils/interpolation_tables.py:        # For a 2d parameter space, (5, 5) may be rounded to (4, 4) - in which case all
src/porepy/utils/interpolation_tables.py:        # points (4, 4), (4, 5), (5, 4), (5, 5) are added - this is necessary to ensure
src/porepy/utils/interpolation_tables.py:        # IMPLEMENTATION NOTE: If we want non-uniform grids in parameter space, here is
src/porepy/utils/interpolation_tables.py:            floored_ind = ((x_i - base_i) // h_i).astype(int)
src/porepy/utils/interpolation_tables.py:                exact = (x_i - base_i) / h_i
src/porepy/utils/interpolation_tables.py:                rounding_error_danger[i, exact - floored_ind > 0.999] = True
src/porepy/utils/interpolation_tables.py:    def __repr__(self) -> str:
src/porepy/utils/interpolation_tables.py:            s = s[:-2] + "\n \n"
src/porepy/utils/interpolation_tables.py:            s = s[:-2] + "\n \n"
src/porepy/utils/setmembership.py:) -> Tuple[
src/porepy/utils/setmembership.py:    http://stackoverflow.com/questions/16970982/find-unique-rows-in-numpy-array/
src/porepy/utils/setmembership.py:    #    return np.unique(b).view(data.dtype).reshape(-1, data.shape[1]), ia, ic
src/porepy/utils/setmembership.py:) -> Tuple[np.ndarray[Any, np.dtype[np.bool_]], np.ndarray[Any, np.dtype[np.int64]]]:
src/porepy/utils/setmembership.py:    num_a = a.shape[-1]
src/porepy/utils/setmembership.py:    # https://stackoverflow.com/questions/8251541/numpy-for-every-element-in-one-array-find-the-index-in-another-array
src/porepy/utils/setmembership.py:    tol: float = 1e-8,
src/porepy/utils/setmembership.py:) -> Tuple[
src/porepy/utils/setmembership.py:            the points (due to rounding errors). Defaults to 1e-8.
src/porepy/utils/setmembership.py:            d = np.sum((mat[i] - mat[keep]) ** 2, axis=1)
src/porepy/utils/setmembership.py:    points: np.ndarray[Any, np.dtype[np.float64]], tol: float = 1e-8
src/porepy/utils/setmembership.py:) -> Tuple[
src/porepy/utils/setmembership.py:            the point set (due to rounding errors). Defaults to 1e-8.
src/porepy/utils/setmembership.py:    # more than three points can coincide - such configurations will
src/porepy/utils/sort_points.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/utils/sort_points.py:    The algorithm is brute-force, using a double for-loop. This can
src/porepy/utils/sort_points.py:    sorted_lines = -np.ones(lines.shape, dtype=lines.dtype)
src/porepy/utils/sort_points.py:    # In the case of non-circular ordering ensure to start from the correct one
src/porepy/utils/sort_points.py:        assert sorted_lines[0, 0] == sorted_lines[1, -1]
src/porepy/utils/sort_points.py:def sort_multiple_point_pairs(lines: np.ndarray) -> np.ndarray:
src/porepy/utils/sort_points.py:                    if np.abs(found[j]) < 1e-6 and lines[2 * c, j] == prev:
src/porepy/utils/sort_points.py:                    elif np.abs(found[j]) < 1e-6 and lines[2 * c + 1, j] == prev:
src/porepy/utils/sort_points.py:    tol: float = 1e-5,
src/porepy/utils/sort_points.py:) -> np.ndarray:
src/porepy/utils/sort_points.py:    The algorithm assumes a star-shaped disposition of the points with respect
src/porepy/utils/sort_points.py:            Absolute tolerance used to identify active (non-constant) dimensions.
src/porepy/utils/sort_points.py:    centre = centre.reshape((-1, 1))
src/porepy/utils/sort_points.py:    delta = np.dot(R, pts - centre)
src/porepy/utils/sort_points.py:def sort_triangle_edges(t: np.ndarray) -> np.ndarray:
src/porepy/utils/sort_points.py:        # Check if the edge occurred at all among the non-processed triangles
src/porepy/utils/sort_points.py:        # It should at most occur once among non-processed triangles
src/porepy/utils/sort_points.py:            if hit_new_1 - hit_new_0 == 1 or (hit_new_0 == 2 and hit_new_1 == 0):
src/porepy/utils/sort_points.py:            if hit_new_1 - hit_new_0 or (hit_new_0 == 2 and hit_new_1 == 0):
src/porepy/utils/common_constants.py:NANO = 1e-9
src/porepy/utils/common_constants.py:MICRO = 1e-6
src/porepy/utils/common_constants.py:MILLI = 1e-3
src/porepy/utils/common_constants.py:CENTI = 1e-2
src/porepy/utils/common_constants.py:DECI = 1e-1
src/porepy/utils/common_constants.py:GRAM = 1e-3 * KILOGRAM
src/porepy/utils/common_constants.py:DARCY = 9.869233e-13
src/porepy/utils/common_constants.py:def CELSIUS_to_KELVIN(celsius: float) -> float:
src/porepy/utils/common_constants.py:def KELVIN_to_CELSIUS(kelvin: float) -> float:
src/porepy/utils/common_constants.py:    return kelvin - 273.15
src/porepy/utils/mcolon.py:    hi = (hi[i] - 1).astype(int)
src/porepy/utils/mcolon.py:    d = hi - lo + 1
src/porepy/utils/mcolon.py:    x[np.cumsum(d[0:-1])] = lo[1:] - hi[0:-1]
src/porepy/utils/dev_tools/models_glossary.py:This potentially introduces a great deal of non-uniformity, in addition to the tedious
src/porepy/utils/dev_tools/models_glossary.py:in an iPython session or similar) and copy-paste the suggested docstring into a file.
src/porepy/utils/dev_tools/models_glossary.py:        " numerical values representing fluid-related quantities. Normally, this is"
src/porepy/utils/dev_tools/models_glossary.py:        docstring="Mixed-dimensional grid for the current model. Normally defined in"
src/porepy/utils/dev_tools/models_glossary.py:        " numerical values representing solid-related"
src/porepy/utils/dev_tools/models_glossary.py:        docstring="Values of the mechanical boundary conditions for a time-dependent"
src/porepy/utils/dev_tools/models_glossary.py:    def print_all_entries(self) -> None:
src/porepy/utils/dev_tools/models_glossary.py:            print_glossary_entry(entry)  # type: ignore[arg-type]
src/porepy/utils/dev_tools/models_glossary.py:    def num_entries(self) -> int:
src/porepy/utils/dev_tools/models_glossary.py:def print_glossary_entry(entry: Entry, wrap_at: int = 88, offset: int = 4) -> None:
src/porepy/utils/dev_tools/models_glossary.py:    """Print copy-and-paste-ready docstring of a glossary entry.
src/porepy/utils/dev_tools/models_glossary.py:    wrapped: list[str] = wrap(padded, wrap_at - offset)
src/porepy/utils/dev_tools/models_glossary.py:        last_line = wrapped[-1].strip('"')
src/porepy/utils/dev_tools/models_glossary.py:        wrapped[-1] = last_line
src/porepy/utils/permutations.py:        http://math.stackexchange.com/questions/111150/changing-a-number-between-arbitrary-bases
src/porepy/utils/permutations.py:        # Array to store the multi-d index of the current index
src/porepy/numerics/displacement_correlation.py:        On the use of quarter-point tetrahedral finite elements in linear
src/porepy/numerics/displacement_correlation.py:# ---------------------propagation criteria----------------------------------#
src/porepy/numerics/displacement_correlation.py:            mixed-dimensional grid. For now, contains one higher-dimensional (2D or 3D)
src/porepy/numerics/displacement_correlation.py:            grid and one lower-dimensional fracture, to be referred to as g_h
src/porepy/numerics/displacement_correlation.py:            use_normal_rm_distance (bool) - if True, the distance from
src/porepy/numerics/displacement_correlation.py:            arrays of higher-dimensional faces to be split.
src/porepy/numerics/displacement_correlation.py:            factors for each of the lower-dimensional tip faces. Axes for
src/porepy/numerics/displacement_correlation.py:    frac_dim = nd - 1
src/porepy/numerics/displacement_correlation.py:    kappa = 3 - 4 * poisson
src/porepy/numerics/displacement_correlation.py:        sd_primary: higher-dimensional grid
src/porepy/numerics/displacement_correlation.py:        sd_secondary: lower-dimensional grid
src/porepy/numerics/displacement_correlation.py:        faces_primary (array): The higher-dimensional faces which should be opened.
src/porepy/numerics/displacement_correlation.py:    # Find closest higher-dimensional face.
src/porepy/numerics/displacement_correlation.py:    two fracture walls, on the (higher-dimensional) face midpoints closest to
src/porepy/numerics/displacement_correlation.py:    (lower-dimensional) face midpoint in the direction normal to the fracture
src/porepy/numerics/displacement_correlation.py:        sd_primary: higher-dimensional grid
src/porepy/numerics/displacement_correlation.py:        sd_secondary: lower-dimensional grid
src/porepy/numerics/displacement_correlation.py:        cells_secondary (array): Lower-dimensional cells containing the correlation
src/porepy/numerics/displacement_correlation.py:            actual_rm if rm_vectors are non-orthogonal to the tip faces (in
src/porepy/numerics/displacement_correlation.py:    optimal_points = sd_secondary.face_centers[:, faces_secondary] - rm_vectors
src/porepy/numerics/displacement_correlation.py:    Compute the relative displacements between the higher-dimensional faces
src/porepy/numerics/displacement_correlation.py:        u (array): displacements on the higher-dimensional grid, as computed by
src/porepy/numerics/displacement_correlation.py:        sd_secondary: higher- and lower-dimensional grid.
src/porepy/numerics/displacement_correlation.py:        cells_secondary (array): the lower-dimensional cells containing the correlation
src/porepy/numerics/displacement_correlation.py:    # Extract the displacement differences between pairs of higher-dimensional
src/porepy/numerics/displacement_correlation.py:        round((u.size - sd_primary.num_cells * sd_primary.dim) / sd_primary.dim / 2)
src/porepy/numerics/displacement_correlation.py:    du_faces = np.reshape(u[ind_left] - u[ind_right], (sd_primary.dim, -1), order="F")
src/porepy/numerics/displacement_correlation.py:    # fracture tip. Doing this for each point avoids problems with non-planar
src/porepy/numerics/displacement_correlation.py:        pts -= sd_secondary.cell_centers[:, cell_l].reshape((3, 1))
src/porepy/numerics/displacement_correlation.py:            # Rotate so that tangent aligns with z-coordinate
src/porepy/numerics/displacement_correlation.py:            translated_pts = sd_secondary.nodes[:, nodes_l] - sd_secondary.face_centers[
src/porepy/numerics/displacement_correlation.py:        elif np.all(np.isclose(normal_r, np.array([-1, 0, 0]))):
src/porepy/numerics/displacement_correlation.py:            R2 = -np.eye(3)
src/porepy/numerics/displacement_correlation.py:            R2[3 - sd_secondary.dim, 3 - sd_secondary.dim] = 1
src/porepy/numerics/displacement_correlation.py:        # Find what frac-pair the tip i corresponds to
src/porepy/numerics/displacement_correlation.py:        d_u = np.dot(R, np.append(du_faces[:, j], np.zeros((1, 3 - sd_primary.dim))))[
src/porepy/numerics/displacement_correlation.py:        # rotated coordinate system. Then, d_u should be u_right - u_left,
src/porepy/numerics/displacement_correlation.py:        g  - fracture grid.
src/porepy/numerics/displacement_correlation.py:        rm  - distance estimate.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:The structure for multi-fracture propagation may possibly strongly resemble
src/porepy/numerics/fracture_deformation/propagate_fracture.py:) -> None:
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    mdg - Mixed-dimensional grid with matrix and fracture grids.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    faces_h - list of list of faces to be split in the highest-dimensional
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        Each entry in the list is a list containing the higher-dimensional
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    Changes to grids done in-place.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # By default, we will not update the higher-dimensional grid. This will be
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # the higher-dimensional grid
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # from splitting related to each lower-dimensional grid, and then merge towards the
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    for sd_secondary in mdg.subdomains(dim=dim_primary - 1):
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        #   3. Update face-node and cell-face relation in sd_secondary.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # propagates. The former are added to the nodes in sd_secondary - specifically,
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # the lower-dimensional faces, including re-classification of (former)
src/porepy/numerics/fracture_deformation/propagate_fracture.py:            sd_secondary.num_faces - n_new_faces, sd_secondary.num_faces
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Finally, some bookkeeping that can become useful in a larger-scale simulation.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # These can be stored directly - there should be no more changes for sd_secondary
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        nfh = face_map_h[-1].shape[0]
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Append default tags for the new nodes. Both high and low-dimensional grid
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        _append_node_tags(sd_secondary, sd_secondary.num_nodes - n_old_nodes_l)
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        _append_node_tags(sd_primary, sd_primary.num_nodes - n_old_nodes_h)
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # Also make a cell-map, this is a 1-1 mapping in this case
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # Face-cell map. This has been updated during splitting, thus it has
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # Make sure that the + and - side of the new mortar cells is
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # locally to the +- convention, however, it will ease the interpretation
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Find the occurrences of this new cell in the face-cell map.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Find the faces in the higher-dimensional grid that correspond
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # If splitting is undertaken for a non-matching grid, all bets are off.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:) -> None:
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # The geometry of the higher-dimensional grid can be computed straightforwardly.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:            # consistent with the +- convention in the main grid.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:) -> Tuple[int, np.ndarray]:
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    higher-dimensional faces_h. Also tags the faces as domain_boundary or tip
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # Copy what is to be updated: Cell-face and face-node relation in sd_secondary
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # Get the face_node indices to form lower-dimensional faces on the form
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Find the nodes of the corresponding higher-dimensional face
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Find the nodes' place among the active higher-dimensional nodes, that is,
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Find the corresponding lower-dimensional nodes
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # dimension-dependent treatment:
src/porepy/numerics/fracture_deformation/propagate_fracture.py:            # ASSUMPTION: This assumes that the new cell is star-shaped with respect to the
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        n_local_faces_l = faces_l.shape[-1]
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Expand array of face-nodes in sd_secondary
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Expand face-node and cell-face relations
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        all_local_faces = np.empty(faces_l.shape[-1])
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Add both existing and new faces to face-nodes.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # information twice to the face-node relation. Since this has boolean
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # Cell-face relation
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        #    The sign will be oposite of when first added, that is, -1.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:            raise ValueError("Cannot split the same lower-dimensional face twice")
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        cf_val_loc[indata_secondaryocal] = -sd_secondary.cell_faces.tocsr()[
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        # These are assigned the value -1; since it was given +1 when first added
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        cf_val_loc[ind_not_local] = -1
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    n_new_faces = face_counter_l - n_old_faces_l
src/porepy/numerics/fracture_deformation/propagate_fracture.py:) -> np.ndarray:
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    Cell information for sd_secondary is inherited directly from the higher-dimensional
src/porepy/numerics/fracture_deformation/propagate_fracture.py:) -> Tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    Finds the nodes in the lower-dimensional grid corresponding to the higher-
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        unique_nodes_l - numpy array (number of involved nodes x 1) Indices of
src/porepy/numerics/fracture_deformation/propagate_fracture.py:        unique_nodes_h - same, but corresponding to sd_primary.nodes.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:) -> None:
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    Split the higher-dimensional grid along specified faces. Updates made to
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    face_cells of the grid pair and the nodes and faces of the higher-
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    ----------
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    mdg                 - A grid mixed-dimensional grid
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    sd_primary          - Higher-dimensional grid to be split along specified faces.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    sd_secondary          - Immersed lower-dimensional grid.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    faces_h     - The higher-dimensional faces to be split.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    cells_l     - The corresponding lower-dimensional cells.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    nodes_h     - The corresponding (hisd_primaryer-dimensional) nodes.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # necessary considering assumptions made before we reach this point - e.g.
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # Replace the face-cell relation on the MixedDimensionalGrid edge
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # We now find which lower-dim nodes correspond to which higher-
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    # the connected higher-dim cells. At a X-intersection we split
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    Tag the lower-dimensional cells and higher-dimensional faces which have
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    B = -70 / 180 * np.pi
src/porepy/numerics/fracture_deformation/propagate_fracture.py:    phi[neg_ind] = -phi[neg_ind]
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    numerical stability issues that it will likely take case-specific adaptations
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    ConformingFracturePropagation - class to be used together with a pp Model for
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    Thomas et al. 2020: Growth of three-dimensional fractures, arrays, and networks
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    Nejati et al, 2015: On the use of quarter-point tetrahedral finite elements in
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    Class for fracture propagation along existing faces in the higher-dimensional
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        numerical stability issues that it will likely take case-specific adaptations
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    def has_propagated(self) -> bool:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    def evaluate_propagation(self) -> None:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        -------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        if len(mdg.subdomains(dim=mdg.dim_max() - 2)) > 0:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # both higher and lower-dimensional grids (both of which may be modified).
src/porepy/numerics/fracture_deformation/conforming_propagation.py:            # Only consider grids of co-dimension 1 for splitting.
src/porepy/numerics/fracture_deformation/conforming_propagation.py:                # tag faces in the lower-dimensional grid that should be split (that is,
src/porepy/numerics/fracture_deformation/conforming_propagation.py:                # Determine faces to split in the higher-dimensional grid, that is, where
src/porepy/numerics/fracture_deformation/conforming_propagation.py:                # Find the faces in the lower-dimensional grid to split.
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    ) -> None:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        ----------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        -------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:            - sd_secondary.cell_centers[::, tip_cells]
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # only the tip values are non-zero.
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    ) -> np.ndarray:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        kappa = 3 - 4 * poisson
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # kappa = 3 - poisson / (1 + poisson)
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        logger.warning("Computing non-tensile SIFs, proceed with caution.")
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # f = -2*(1-poisson)/np.sqrt(2*np.pi)/mu
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        #     print((3*d_u[i,0]-d_u[i,1])/((3*np.sqrt(2)-np.sqrt(6))*np.sqrt(2*rm[0])*f))
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    def _propagation_criterion(self, d: dict) -> None:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        ----------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        -------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    def _angle_criterion(self, d: dict) -> None:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        ----------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        -------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # Avoid division by zero: Find columns with non-zero values
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        A, B = np.radians(140), np.radians(-70)
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        phi[ind] = -np.sign(K[1]) * (
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    def _propagation_vector(self, sd: pp.Grid, d: dict, face: int) -> np.ndarray:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        ----------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        -------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:            Nd-dimensional propagation vector.
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    ) -> None:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        ----------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        -------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        lower- and higherdimensional faces. During grid updates, the former will receive
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # Faces in lower-dimensional grid to be split
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # Find the edges in lower-dimensional grid to be split. For 2d problems (1d
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # Prepare for checking intersection. indata_secondary is used to reconstruct non-unique
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # Reconstruct non-unique and reshape to edges (first dim is 2 if nd=3)
src/porepy/numerics/fracture_deformation/conforming_propagation.py:            nodes_primary[indata_secondary], (nd - 1, faces_secondary.size), order="F"
src/porepy/numerics/fracture_deformation/conforming_propagation.py:            # Direction of h-dim face centers from the tip
src/porepy/numerics/fracture_deformation/conforming_propagation.py:                sd_primary.face_centers[:nd, candidate_faces_primary] - tip_coords
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # inwards_normals = - sd_primary.face_normals[faces_primary] * sign
src/porepy/numerics/fracture_deformation/conforming_propagation.py:    ) -> np.ndarray:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        ----------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        -------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        def faces_of_edge(sd: pp.Grid, e: np.ndarray) -> np.ndarray:
src/porepy/numerics/fracture_deformation/conforming_propagation.py:            ----------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:            -------
src/porepy/numerics/fracture_deformation/conforming_propagation.py:        # Make sure splitting of a candidate does not lead to self-intersection.
src/porepy/numerics/fracture_deformation/conforming_propagation.py:                # ASSUMPTION: This assumes that the new cell is star-shaped with respect to the
src/porepy/numerics/fracture_deformation/conforming_propagation.py:            for i in range(local_nodes.size - 1):
src/porepy/numerics/fracture_deformation/propagation_model.py:Module indented for combining fracture propagation with complex multi-physics,
src/porepy/numerics/fracture_deformation/propagation_model.py:    numerical stability issues that it will likely take case-specific adaptations
src/porepy/numerics/fracture_deformation/propagation_model.py:    Eirik.Keilegavlen@uib.no), so that we may keep your use-cases in mind if a major
src/porepy/numerics/fracture_deformation/propagation_model.py:        numerical stability issues that it will likely take case-specific adaptations
src/porepy/numerics/fracture_deformation/propagation_model.py:        so that we may keep your use-cases in mind if a major overhaul of the code is
src/porepy/numerics/fracture_deformation/propagation_model.py:    def evaluate_propagation(self) -> None:
src/porepy/numerics/fracture_deformation/propagation_model.py:    def has_propagated(self) -> bool:
src/porepy/numerics/fracture_deformation/propagation_model.py:    ) -> np.ndarray:
src/porepy/numerics/fracture_deformation/propagation_model.py:        ----------
src/porepy/numerics/fracture_deformation/propagation_model.py:        -------
src/porepy/numerics/fracture_deformation/propagation_model.py:        n_new = cell_map.shape[0] - cell_map.shape[1]
src/porepy/numerics/fracture_deformation/propagation_model.py:    def _map_variables(self, x: np.ndarray) -> np.ndarray:
src/porepy/numerics/fracture_deformation/propagation_model.py:                # Only cell-based dofs have been considered so far.
src/porepy/numerics/fracture_deformation/propagation_model.py:                # Only cell-based dofs have been considered so far.
src/porepy/numerics/fracture_deformation/propagation_model.py:        # For each grid-variable pair, map old solution and initialize for new DOFs.
src/porepy/numerics/fracture_deformation/propagation_model.py:    def _new_dof_inds(self, mapping: sps.spmatrix) -> np.ndarray:
src/porepy/numerics/fracture_deformation/propagation_model.py:        ----------
src/porepy/numerics/fracture_deformation/propagation_model.py:        -------
src/porepy/numerics/mixed_dim/assembler_filters.py:    ) -> bool:
src/porepy/numerics/mixed_dim/assembler_filters.py:            grid: Grid-like quantity found in a pp.MixedDimensionalGrid.
src/porepy/numerics/mixed_dim/assembler_filters.py:            boolean: True if the grid-variable-term combination passes the filter.
src/porepy/numerics/mixed_dim/assembler_filters.py:    ) -> bool:
src/porepy/numerics/mixed_dim/assembler_filters.py:            grids: Grid-like quantity found in a pp.MixedDimensionalGrid.
src/porepy/numerics/mixed_dim/assembler_filters.py:            boolean: True if the grid-variable-term combination passes the filter.
src/porepy/numerics/mixed_dim/assembler_filters.py:    no-pass filter. This is to cover cases where dimension-filtering on grids in a
src/porepy/numerics/mixed_dim/assembler_filters.py:    MixedDimensionalGrid returns a empty list, which should result in no-pass,
src/porepy/numerics/mixed_dim/assembler_filters.py:    not all-pass behavior. The behavior for variable and term lists is similar.
src/porepy/numerics/mixed_dim/assembler_filters.py:    ) -> None:
src/porepy/numerics/mixed_dim/assembler_filters.py:            grid_list: List of grid-like objects that should pass the filter.
src/porepy/numerics/mixed_dim/assembler_filters.py:        # Helper functions, needed for no-pass and all-pass behavior
src/porepy/numerics/mixed_dim/assembler_filters.py:                # This is considered a no-pass filter.
src/porepy/numerics/mixed_dim/assembler_filters.py:                # Non-trivial filter
src/porepy/numerics/mixed_dim/assembler_filters.py:            grids: Grid-like quantity found in a pp.MixedDimensionalGrid.
src/porepy/numerics/mixed_dim/assembler_filters.py:                for off-diagonal terms (internal to subdomains or interfaces), and for
src/porepy/numerics/mixed_dim/assembler_filters.py:            boolean: True if the grid-variable-term combination passes the filter.
src/porepy/numerics/mixed_dim/assembler_filters.py:    ) -> Tuple[List, List, List]:
src/porepy/numerics/mixed_dim/assembler_filters.py:                    raise ValueError(f"Invalid grid-like object for filtering {g}")
src/porepy/numerics/mixed_dim/assembler_filters.py:    ) -> Callable[[Optional[List[str]]], bool]:
src/porepy/numerics/mixed_dim/assembler_filters.py:    def __repr__(self) -> str:
src/porepy/numerics/mixed_dim/README.md:# Solver and mixed-dimensional interfaces
src/porepy/numerics/mixed_dim/README.md:In this part the basic classes to be inherited by the solvers and the couplers, and the main mixed-dimensional coupler.
src/porepy/numerics/mixed_dim/README.md:* abstract interface for numerical couplers between solvers for the mixed-dimensional [abstract_coupling.py](abstract_coupling.py)
src/porepy/numerics/mixed_dim/README.md:* coupler for the mixed-dimensional approach [coupler.py](coupler.py)
src/porepy/numerics/mixed_dim/assembler.py:system matrix and right hand side for a general multi-domain, multi-physics problem.
src/porepy/numerics/mixed_dim/assembler.py:    """A class that assembles multi-physics problems on mixed-dimensional
src/porepy/numerics/mixed_dim/assembler.py:        To set up mixed-dimensional or multiphysics models, confer the model classes
src/porepy/numerics/mixed_dim/assembler.py:    ) -> None:
src/porepy/numerics/mixed_dim/assembler.py:            self.mdg (pp.MixedDimensionalGrid): Mixed-dimensional grid where the equations are
src/porepy/numerics/mixed_dim/assembler.py:        To set up mixed-dimensional or multiphysics models, confer the model classes
src/porepy/numerics/mixed_dim/assembler.py:    def _discretization_key(row: str, col: Optional[str] = None) -> str:
src/porepy/numerics/mixed_dim/assembler.py:    ) -> str:
src/porepy/numerics/mixed_dim/assembler.py:        """Get the key-variable combination used to identify a specific term in the
src/porepy/numerics/mixed_dim/assembler.py:        fixed-dimensional grids), the variable name is formed by combining the name of
src/porepy/numerics/mixed_dim/assembler.py:            - An advection-diffusion equation will typically have two terms, say,
src/porepy/numerics/mixed_dim/assembler.py:            - For a coupled flow-temperature discretization, the coupling (off-diagonal)
src/porepy/numerics/mixed_dim/assembler.py:            key_3 (str, optional): Variable name. If not provided, a 2-variable
src/porepy/numerics/mixed_dim/assembler.py:                subdomain-interface coupling.
src/porepy/numerics/mixed_dim/assembler.py:    ) -> Union[
src/porepy/numerics/mixed_dim/assembler.py:        multi-physics problem, and return a block matrix and right hand side.
src/porepy/numerics/mixed_dim/assembler.py:              the mixed-dimensional. Allow for general couplings between the variables
src/porepy/numerics/mixed_dim/assembler.py:        # Define the matrix format, common for all the sub-matrices
src/porepy/numerics/mixed_dim/assembler.py:    ) -> None:
src/porepy/numerics/mixed_dim/assembler.py:                "Discretization update cannot be combined with non-standard filter"
src/porepy/numerics/mixed_dim/assembler.py:    ) -> None:
src/porepy/numerics/mixed_dim/assembler.py:        the mixed-dimensional grid.
src/porepy/numerics/mixed_dim/assembler.py:    ) -> Union[
src/porepy/numerics/mixed_dim/assembler.py:            # The grid-like quantity is either a grid or an interface.
src/porepy/numerics/mixed_dim/assembler.py:    ) -> None:
src/porepy/numerics/mixed_dim/assembler.py:        """Perform operation on all interface-subdomain couplings.
src/porepy/numerics/mixed_dim/assembler.py:        --------
src/porepy/numerics/mixed_dim/assembler.py:                "scalar_coupling_term": {                           <-- coupling_key
src/porepy/numerics/mixed_dim/assembler.py:                    sd_h: ("pressure", "diffusion"),                 <-- (primary_var_key,
src/porepy/numerics/mixed_dim/assembler.py:                    sd_l: ("pressure", "diffusion"),                 <-- (secondary_var_key,
src/porepy/numerics/mixed_dim/assembler.py:                        "mortar_pressure",                          <-- interface_var_key
src/porepy/numerics/mixed_dim/assembler.py:                        pp.RobinCoupling("flow", pp.Mpfa("flow"),   <-- interface_discr
src/porepy/numerics/mixed_dim/assembler.py:                    "Invalid combination of variables on subdomain-interface relation"
src/porepy/numerics/mixed_dim/assembler.py:            #  iii) Only the block intf_ind - other_intf_ind can be filled in.
src/porepy/numerics/mixed_dim/assembler.py:                    # introduced, it will violate the modeling framework for mixed-
src/porepy/numerics/mixed_dim/assembler.py:                    # introduced, it will violate the modeling framework for mixed-
src/porepy/numerics/mixed_dim/assembler.py:    def _identify_variable_combinations(self) -> None:
src/porepy/numerics/mixed_dim/assembler.py:        # Store all combinations of variable pairs (e.g. row-column indices in
src/porepy/numerics/mixed_dim/assembler.py:        # Combinations of grids-like features (subdomain, interface,
src/porepy/numerics/mixed_dim/assembler.py:        #  subdomain-interface coupling), variables and terms. Used to track discretizations,
src/porepy/numerics/mixed_dim/assembler.py:            # Loop over variables, count dofs and identify variable-term
src/porepy/numerics/mixed_dim/assembler.py:                # of the two variables gives us all coupling terms (e.g. an off-diagonal
src/porepy/numerics/mixed_dim/assembler.py:        # only on interface-specific aspects; see above loop for more information
src/porepy/numerics/mixed_dim/assembler.py:                    # This can happen if the the coupling is one-sided, e.g.
src/porepy/numerics/mixed_dim/assembler.py:    def update_dof_count(self) -> None:
src/porepy/numerics/mixed_dim/assembler.py:        and variables, and updates the number of fine-scale degree of freedom for this
src/porepy/numerics/mixed_dim/assembler.py:        # Loop over identified grid-variable combinations
src/porepy/numerics/mixed_dim/assembler.py:            # Get data dictionary - this is slightly different for grid and interface
src/porepy/numerics/mixed_dim/assembler.py:    ) -> Tuple[Dict[str, csc_or_csr_matrix], Dict[str, np.ndarray]]:
src/porepy/numerics/mixed_dim/assembler.py:        Initialize a set of matrices (for left-hand sides) and vectors (rhs)
src/porepy/numerics/mixed_dim/assembler.py:        variable in an advection-diffusion problem will typically have two
src/porepy/numerics/mixed_dim/assembler.py:            # We could also initialize off-diagonal blocks, however, this turned
src/porepy/numerics/mixed_dim/assembler.py:    ) -> Union[np.ndarray, Tuple[np.ndarray, np.ndarray]]:
src/porepy/numerics/mixed_dim/assembler.py:    def assemble_operator(self, keyword: str, operator_name: str) -> sps.spmatrix:
src/porepy/numerics/mixed_dim/assembler.py:        the subdomains or interfaces of a mixed-dimensional grid.
src/porepy/numerics/mixed_dim/assembler.py:    def assemble_parameter(self, keyword: str, parameter_name: str) -> np.ndarray:
src/porepy/numerics/mixed_dim/assembler.py:        the subdomains or interfaces of a mixed-dimensional grid.
src/porepy/numerics/mixed_dim/assembler.py:        The global parameter is a nd-vector of the stacked local parameters.
src/porepy/numerics/mixed_dim/assembler.py:    def _local_variables(self, d: Dict) -> Dict[str, Dict[str, int]]:
src/porepy/numerics/mixed_dim/assembler.py:    ) -> None:
src/porepy/numerics/mixed_dim/assembler.py:        The intended use is to split a multi-physics solution vector into its
src/porepy/numerics/mixed_dim/assembler.py:    def num_dof(self) -> np.int_:
src/porepy/numerics/mixed_dim/assembler.py:    def variables_of_grid(self, g: Union[pp.Grid, pp.MortarGrid]) -> List[str]:
src/porepy/numerics/mixed_dim/assembler.py:    def __str__(self) -> str:
src/porepy/numerics/mixed_dim/assembler.py:    def __repr__(self) -> str:
src/porepy/numerics/mixed_dim/assembler.py:        for dim in range(self.mdg.dim_max(), self.mdg.dim_min() - 1, -1):
src/porepy/numerics/mixed_dim/assembler.py:        for dim in range(self.mdg.dim_max(), self.mdg.dim_min(), -1):
src/porepy/numerics/mixed_dim/assembler.py:                == g  # such that the interface neighbors a lower-dimensional subdomain
src/porepy/numerics/mixed_dim/assembler.py:                f"All variables present on interfaces between dimensions {dim} and {dim-1}: "
src/porepy/numerics/mixed_dim/assembler.py:                                f"dimension {dim} and {dim-1}: {var}\n"
src/porepy/numerics/mixed_dim/dof_manager.py:    """Class to keep track of degrees of freedom in a mixed-dimensional grid with
src/porepy/numerics/mixed_dim/dof_manager.py:            index of this specific grid (or edge) - variable combination.
src/porepy/numerics/mixed_dim/dof_manager.py:            freedom per key-item pair in block_dof. Thus
src/porepy/numerics/mixed_dim/dof_manager.py:    def __init__(self, mdg: pp.MixedDimensionalGrid) -> None:
src/porepy/numerics/mixed_dim/dof_manager.py:        """Set up a DofManager for a mixed-dimensional grid.
src/porepy/numerics/mixed_dim/dof_manager.py:            mdg: Mixed-dimensional grid.
src/porepy/numerics/mixed_dim/dof_manager.py:        """Mixed-dimensional grid."""
src/porepy/numerics/mixed_dim/dof_manager.py:    def dofs_of(self, variables: list[pp.ad.Variable]) -> np.ndarray:
src/porepy/numerics/mixed_dim/dof_manager.py:            an order-preserving array of indices of DOFs belonging to the VariableType
src/porepy/numerics/mixed_dim/dof_manager.py:    def grid_and_variable_to_dofs(self, grid: GridLike, variable: str) -> np.ndarray:
src/porepy/numerics/mixed_dim/dof_manager.py:    ) -> dict | str:
src/porepy/numerics/mixed_dim/dof_manager.py:            Information on the range for grid-variable combinations. The format will
src/porepy/numerics/mixed_dim/dof_manager.py:            unsorted grid-variable combinations are returned.
src/porepy/numerics/mixed_dim/dof_manager.py:        # Get the range of all grid-variable combinations.
src/porepy/numerics/mixed_dim/dof_manager.py:        # TODO: Match-switch, but we're not yet at Python 3.10
src/porepy/numerics/mixed_dim/dof_manager.py:            def grid_str(grid) -> str:
src/porepy/numerics/mixed_dim/dof_manager.py:    def dof_to_grid_and_variable(self, ind: int) -> tuple[GridLike, str]:
src/porepy/numerics/mixed_dim/dof_manager.py:        if ind >= dof_start[-1]:
src/porepy/numerics/mixed_dim/dof_manager.py:            raise ValueError(f"Index {ind} is larger than system size {dof_start[-1]}")
src/porepy/numerics/mixed_dim/dof_manager.py:            raise ValueError("Dof indices should be non-negative")
src/porepy/numerics/mixed_dim/dof_manager.py:        # Find the block index of this grid-variable combination
src/porepy/numerics/mixed_dim/dof_manager.py:        block_ind = np.argmax(dof_start > ind) - 1
src/porepy/numerics/mixed_dim/dof_manager.py:        # Invert the block-dof map to make reverse loopup easy.
src/porepy/numerics/mixed_dim/dof_manager.py:    ) -> np.ndarray:
src/porepy/numerics/mixed_dim/dof_manager.py:        """Assembles an array containing values for the passed variable-like argument.
src/porepy/numerics/mixed_dim/dof_manager.py:                from a specific time-step. Value 0  provides the most recent time-step.
src/porepy/numerics/mixed_dim/dof_manager.py:                A value of 1 will give the values of one time-step back in time.
src/porepy/numerics/mixed_dim/dof_manager.py:            assigned a non-None value.
src/porepy/numerics/mixed_dim/dof_manager.py:        # storage for atomic blocks of the sub vector (identified by name-grid pairs)
src/porepy/numerics/mixed_dim/dof_manager.py:    ) -> tuple[int, int]:
src/porepy/numerics/mixed_dim/dof_manager.py:        """Helper function to get the block range for a grid-variable combination
src/porepy/numerics/mixed_dim/dof_manager.py:            tuple(int, int): Start and end of the block for this grid-variable
src/porepy/numerics/mixed_dim/dof_manager.py:        """Helper function to get the indices for a grid-variable combination.
src/porepy/numerics/mixed_dim/dof_manager.py:            np.ndarray: Indices of the degrees of freedom for this grid-variable combination.
src/porepy/numerics/mixed_dim/dof_manager.py:    ) -> np.ndarray | tuple[np.ndarray, csc_or_csr_matrix]:
src/porepy/numerics/mixed_dim/dof_manager.py:    ) -> np.int_:
src/porepy/numerics/mixed_dim/dof_manager.py:    ) -> None:
src/porepy/numerics/mixed_dim/dof_manager.py:        The intended use is to split a multi-physics solution vector into its
src/porepy/numerics/mixed_dim/dof_manager.py:                time step solution itself. Set to True inside a non-linear scheme
src/porepy/numerics/mixed_dim/dof_manager.py:        # Loop over grid-variable combinations and update data in pp.ITERATE_SOLUTIONS
src/porepy/numerics/mixed_dim/dof_manager.py:    ) -> np.ndarray:
src/porepy/numerics/mixed_dim/dof_manager.py:                time step solution itself. Set this to True inside a non-linear scheme
src/porepy/numerics/mixed_dim/dof_manager.py:                solution for those indices corresponding to an active grid-variable
src/porepy/numerics/mixed_dim/dof_manager.py:    def __str__(self) -> str:
src/porepy/numerics/mixed_dim/dof_manager.py:    def __repr__(self) -> str:
src/porepy/numerics/mixed_dim/dof_manager.py:        dim_max = -1
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    Robin-type couplings, as described by Martin et al. 2005.
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        \lambda = -\int{\kappa_n [p_l - p_h +  a/2 g \cdot n]} dV,
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            discr_primary: Discretization on the higher-dimensional neighbor. Only
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            discr_secondary: Discretization on the lower-dimensional neighbor. Only
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            primary_keyword: Parameter keyword for the discretization on the higher-
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # No coupling via lower-dimensional interfaces.
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        matrix_dictionary_edge[self.mortar_discr_matrix_key] = -sps.diags(val)
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # lambda = -\int{\kappa_n [p_l - p_h +  a/2 g \cdot n]} dV,
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # Ambient dimension of the problem, as specified for the higher-dimensional
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # no subdomains with co-dimension more than 1, but will fail for fracture
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:                If gravity is taken into consideration, the parameter sub-
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:                    g[ambient_dimension]= -G * rho.
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:                If gravity is taken into consideration, the parameter sub-
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:                    g[ambient_dimension]= -G * rho.
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    ) -> Tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:                If gravity is taken into consideration, the parameter sub-
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:                    g[ambient_dimension]= -G * rho.
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        then multiply by the mortar discretization (corresponding to -\kappa) and
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # in the first column and row in matrix, lower-dimensional in the second
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:                rhs[2] = rhs[2] - vector_source_discr * vector_source
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    ) -> Tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            # Normally, the projections will be pressure from the primary (high-dim node)
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            # Scale the equations (this will modify from K^-1 to K scaling if relevant)
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    def __repr__(self) -> str:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    v_s = -lambda
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    p_m - p_s = 0
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # No coupling via lower-dimensional interfaces.
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    ) -> np.ndarray:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # Compared to the full set of sub-assembly methods called in self.assemble_matrix_rhs,
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            rhs_secondary[2] = -rhs_secondary[2]
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            # from the primary to the secondary, i.e., flux_s = -mortar_flux
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            cc_secondary[secondary_ind, 2] = -cc_secondary[secondary_ind, 2]
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            # We have that p_m - p_s = 0.
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            cc_secondary[2, secondary_ind] = -cc_secondary[2, secondary_ind]
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            rhs_secondary[2] = -rhs_secondary[2]
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # cc[0] -> flux_m = mortar_flux
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # cc[1] -> flux_s = -mortar_flux
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # cc[2] -> p_m - p_s = 0
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # Computational savings: Only add non-zero components.
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    def __repr__(self) -> str:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            discr_primary: Discretization on the higher-dimensional neighbor. Only
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            discr_secondary: Discretization on the lower-dimensional neighbor. Only
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            primary_keyword: Parameter keyword for the discretization on the higher-
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    def ndof(self, intf: pp.MortarGrid) -> int:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        see the MRST book, https://www.cambridge.org/core/books/an-introduction-to-
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        reservoir-simulation-using-matlabgnu-octave/F48C3D8C88A3F67E4D97D4E16970F894
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        matrix_dictionary_edge[self.well_discr_matrix_key] = -WI
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # lambda = -\int{\kappa_n [p_l - p_h +  a/2 g \cdot n]} dV,
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # Ambient dimension of the problem, as specified for the higher-dimensional
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:        # no subdomains with co-dimension more than 1, but will fail for fracture
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:            proj_h * sd_primary.cell_centers.T - proj_l * sd_secondary.cell_centers.T
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    ) -> Tuple[np.ndarray, np.ndarray]:  # type:ignore
src/porepy/numerics/interface_laws/elliptic_interface_laws.py:    def __repr__(self) -> str:
src/porepy/numerics/interface_laws/elliptic_discretization.py:in both mono and mixed-dimensional problems. One instance for the scalar and one for
src/porepy/numerics/interface_laws/elliptic_discretization.py:    mixed-dimensional, or more generally multiple grid problem. In the latter case,
src/porepy/numerics/interface_laws/elliptic_discretization.py:    grids, an assembly will only be a partial (considering a single grid)- the
src/porepy/numerics/interface_laws/elliptic_discretization.py:        Tpfa: Finite volume method using a wwo-point flux approximation.
src/porepy/numerics/interface_laws/elliptic_discretization.py:        Mpfa: Finite volume method using a multi-point flux approximation.
src/porepy/numerics/interface_laws/elliptic_discretization.py:        RT0: Mixed finite element method, using the lowest order Raviart-Thomas
src/porepy/numerics/interface_laws/elliptic_discretization.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/interface_laws/elliptic_discretization.py:    def _key(self) -> str:
src/porepy/numerics/interface_laws/elliptic_discretization.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/interface_laws/elliptic_discretization.py:                either a mono-dimensional or a mixed-dimensional problem.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                either a mono-dimensional or a mixed-dimensional problem. Will
src/porepy/numerics/interface_laws/elliptic_discretization.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_discretization.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/interface_laws/elliptic_discretization.py:        used to impose flux continuity on a higher-dimensional domain.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/interface_laws/elliptic_discretization.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_discretization.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/interface_laws/elliptic_discretization.py:        used to impose flux continuity on a lower-dimensional domain.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/interface_laws/elliptic_discretization.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_discretization.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/interface_laws/elliptic_discretization.py:        used to impose flux continuity on a higher-dimensional domain.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/interface_laws/elliptic_discretization.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:           proj_primary (sparse matrix): Pressure projection from the higher-dim
src/porepy/numerics/interface_laws/elliptic_discretization.py:    ) -> None:
src/porepy/numerics/interface_laws/elliptic_discretization.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/interface_laws/elliptic_discretization.py:        used to impose flux continuity on a lower-dimensional domain.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/elliptic_discretization.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/interface_laws/elliptic_discretization.py:    ) -> None:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:multipliers for the interface law. Use this module for the co-dimensional objects.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    A possible usage is for the co-dimensional objects in a DFN discretization.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        Tpfa: Finite volume method using a two-point flux approximation.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        RT0: Mixed finite element method, using the lowest order Raviart-Thomas
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    def _key(self) -> str:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    def extract_pressure(self, sd: pp.Grid, solution_array, data=None) -> np.ndarray:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                either a mono-dimensional or a mixed-dimensional problem.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    ) -> np.ndarray:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                either a mono-dimensional or a mixed-dimensional problem.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        """Return the matrix and right-hand side, no PDE are associate with
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    def assemble_matrix(self, sd: pp.Grid, data: Optional[dict] = None) -> sps.spmatrix:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:    def assemble_rhs(self, sd: pp.Grid, data: Optional[dict] = None) -> np.ndarray:
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        """Zero right-hand side vector.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        To assemble mixed-dimensional problems, the recommended solution is
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        used to impose flux continuity on a higher-dimensional domain.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        To assemble mixed-dimensional problems, the recommended solution is
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        used to impose flux continuity on a lower-dimensional domain.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        To assemble mixed-dimensional problems, the recommended solution is
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        cc[self_ind, 2] -= proj.T
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        used to impose flux continuity on a higher-dimensional domain.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        used to impose flux continuity on a lower-dimensional domain.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                mixed-dimensional grid.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        To assemble mixed-dimensional problems, the recommended solution is
src/porepy/numerics/interface_laws/cell_dof_face_dof_map.py:        cc[2, self_ind] -= proj
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:    def __init__(self, keyword: str, flux_array_key="pick one") -> None:
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        # Inverse trace operator (face -> cell)
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:    def key(self) -> str:
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:    def ndof(self, intf: pp.MortarGrid) -> int:
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:    ) -> None:
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        if sd_primary.dim - sd_secondary.dim not in [1, 2]:
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        # The mapping will be non-zero also for faces not adjacent to
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        # We also need a trace-like projection from cells to faces
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        not_flag = 1 - flag
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:    ) -> Tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        Construct the matrix (and right-hand side) for the coupling conditions.
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        Note: the right-hand side is not implemented now.
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        # Trace operator for higher-dimensional grid
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        # Associate faces on the higher-dimensional grid with cells
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        # transport out of lower is -lambda
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        cc[1, 2] = -intf.mortar_to_secondary_int()
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        # Recover the information for the grid-grid mapping
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        cc[2, 2] = -mortar_discr
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:                - sd_secondary.cell_centers[:, cells_secondary]
src/porepy/numerics/interface_laws/hyperbolic_interface_laws.py:        # Recover the information for the grid-grid mapping
src/porepy/numerics/interface_laws/__init__.py:""" Discretization of coupling terms for mixed-dimensional problems.
src/porepy/numerics/interface_laws/abstract_interface_law.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    def _key(self) -> str:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    def _discretization_key(self) -> str:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    def ndof(self, mg: pp.MortarGrid) -> int:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    ) -> None:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    ) -> None:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    ) -> Tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    ) -> np.ndarray:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    ) -> np.ndarray:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    ) -> Union[np.ndarray, Tuple[np.ndarray, np.ndarray]]:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    ) -> Union[np.ndarray, Tuple[np.ndarray, np.ndarray]]:
src/porepy/numerics/interface_laws/abstract_interface_law.py:    ) -> Tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/interface_laws/abstract_interface_law.py:        Note that the mixed-dimensional modeling framework does not allow for direct
src/porepy/numerics/interface_laws/abstract_interface_law.py:        Note that the mixed-dimensional modeling framework does not allow for direct
src/porepy/numerics/interface_laws/abstract_interface_law.py:        is dependent on variables on the boundary between the lower-dimensional
src/porepy/numerics/interface_laws/abstract_interface_law.py:            g_between (pp.Grid): Grid of the lower-dimensional neighbor to the
src/porepy/numerics/linear_solvers.py:    def __init__(self, params: Optional[dict] = None) -> None:
src/porepy/numerics/linear_solvers.py:    def solve(self, setup: SolutionStrategy) -> tuple[float, bool]:
src/porepy/numerics/linear_solvers.py:            # something wrong with how the linear and non-linear solvers interact with the
src/porepy/numerics/linear_solvers.py:            # implemented to be valid for both linear and non-linear problems, as is
src/porepy/numerics/ad/equation_manager.py:        mdg (pp.MixedDimensionalGrid): Mixed-dimensional grid on which this EquationManager
src/porepy/numerics/ad/equation_manager.py:            Variables will be represented on atomic form, that is, mixed-dimensional variables
src/porepy/numerics/ad/equation_manager.py:    ) -> None:
src/porepy/numerics/ad/equation_manager.py:            mdg (pp.MixedDimensionalGrid): Mixed-dimensional grid for this EquationManager.
src/porepy/numerics/ad/equation_manager.py:        # mixed-dimensional subdomains.
src/porepy/numerics/ad/equation_manager.py:        # Do the same for all variables, but make this a map to the atomic (non-merged)
src/porepy/numerics/ad/equation_manager.py:        # Loop over all variables known to this EquationManager. If its grid-name
src/porepy/numerics/ad/equation_manager.py:    ) -> "pp.ad.MixedDimensionalVariable":
src/porepy/numerics/ad/equation_manager.py:        The mixed-dimensional variable can be used to define mathematical operations on
src/porepy/numerics/ad/equation_manager.py:        NOTE: mixed-dimensional variables are assigned unique ids (see documentation of
src/porepy/numerics/ad/equation_manager.py:    def variable(self, grid_like: GridLike, variable: str) -> "pp.ad.Variable":
src/porepy/numerics/ad/equation_manager.py:    ) -> List[np.ndarray]:
src/porepy/numerics/ad/equation_manager.py:    ) -> Tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/ad/equation_manager.py:                as found in self.mdg. Scaled with -1 (moved to rhs).
src/porepy/numerics/ad/equation_manager.py:            # Multiply by -1 to move to the rhs
src/porepy/numerics/ad/equation_manager.py:            rhs.append(-ad.val)
src/porepy/numerics/ad/equation_manager.py:            ind_start.append(ind_start[-1] + ad.val.size)
src/porepy/numerics/ad/equation_manager.py:        # The system assembled in the for-loop above contains derivatives for both
src/porepy/numerics/ad/equation_manager.py:    ) -> Tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/ad/equation_manager.py:                Scaled with -1 (moved to rhs).
src/porepy/numerics/ad/equation_manager.py:            # Multiply by -1 to move to the rhs
src/porepy/numerics/ad/equation_manager.py:            rhs.append(-ad.val)
src/porepy/numerics/ad/equation_manager.py:            ind_start.append(ind_start[-1] + ad.val.size)
src/porepy/numerics/ad/equation_manager.py:    ) -> Tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/ad/equation_manager.py:            (A_pp - A_ps * inv(A_ss) * A_sp) * x_p = b_p - A_ps * inv(A_pp) * b_s.
src/porepy/numerics/ad/equation_manager.py:        The Schur complement is well-defined only if the inverse of A_ss exists,
src/porepy/numerics/ad/equation_manager.py:                Scaled with -1 (moved to rhs).
src/porepy/numerics/ad/equation_manager.py:        # Unravel any mixed-dimensional variables
src/porepy/numerics/ad/equation_manager.py:        S = A_pp - A_ps * inv_A_ss * A_sp
src/porepy/numerics/ad/equation_manager.py:        bs = b_p - A_ps * inv_A_ss * b_s
src/porepy/numerics/ad/equation_manager.py:    ) -> "EquationManager":
src/porepy/numerics/ad/equation_manager.py:    def discretize(self, mdg: pp.MixedDimensionalGrid) -> None:
src/porepy/numerics/ad/equation_manager.py:            mdg (pp.MixedDimensionalGrid): Mixed-dimensional grid from which parameters etc.
src/porepy/numerics/ad/equation_manager.py:    def _column_projection(self, variables: Sequence["pp.ad.Variable"]) -> sps.spmatrix:
src/porepy/numerics/ad/equation_manager.py:        # Array for the dofs associated with each grid-variable combination
src/porepy/numerics/ad/equation_manager.py:    ) -> List["pp.ad.Variable"]:
src/porepy/numerics/ad/equation_manager.py:        variables. The variables are returned as atomic (mixed-dimensional variables are
src/porepy/numerics/ad/equation_manager.py:        # Unravel any mixed-dimensional variable
src/porepy/numerics/ad/equation_manager.py:    ) -> List["pp.ad.Variable"]:
src/porepy/numerics/ad/equation_manager.py:        """Unravel a list of variables into atomic (non-merged) variables.
src/porepy/numerics/ad/equation_manager.py:            # Loop over GridType-variable Dict
src/porepy/numerics/ad/equation_manager.py:                # loop over name-variable dict
src/porepy/numerics/ad/equation_manager.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/equation_manager.py:            "Equation manager for mixed-dimensional grid with "
src/porepy/numerics/ad/equation_manager.py:        # Sort variables alphabetically, not case-sensitive
src/porepy/numerics/ad/equation_manager.py:    def __str__(self) -> str:
src/porepy/numerics/ad/equation_manager.py:            "Equation manager for mixed-dimensional grid with "
src/porepy/numerics/ad/equation_manager.py:        # Sort variables alphabetically, not case-sensitive
src/porepy/numerics/ad/equation_manager.py:                "(having split mixed-dimensional variables).\n"
src/porepy/numerics/ad/equation_manager.py:    ) -> None:
src/porepy/numerics/ad/operators.py:        interfaces (optional): List of interfaces in the mixed-dimensional grid on which
src/porepy/numerics/ad/operators.py:    ) -> None:
src/porepy/numerics/ad/operators.py:    def name(self) -> str:
src/porepy/numerics/ad/operators.py:    ) -> None:
src/porepy/numerics/ad/operators.py:        operator. The unspecified grid-like type will also be set as an attribute, i.e.
src/porepy/numerics/ad/operators.py:    def is_leaf(self) -> bool:
src/porepy/numerics/ad/operators.py:        """Check if this operator is a leaf in the tree-representation of an expression.
src/porepy/numerics/ad/operators.py:    def set_name(self, name: str) -> None:
src/porepy/numerics/ad/operators.py:    def previous_timestep(self) -> pp.ad.Operator:
src/porepy/numerics/ad/operators.py:        # by traversing the underlying graph, and set all time-dependent objects to be
src/porepy/numerics/ad/operators.py:        def _traverse_tree(op: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:                # We are on an atomic operator. If this is a time-dependent operator,
src/porepy/numerics/ad/operators.py:                    # If other time-dependent other operators are added, they will have
src/porepy/numerics/ad/operators.py:                # since this will copy grids in individual subdomains - see
src/porepy/numerics/ad/operators.py:        # Get a copy of the operator with all time-dependent quantities evaluated at the
src/porepy/numerics/ad/operators.py:    def parse(self, mdg: pp.MixedDimensionalGrid) -> Any:
src/porepy/numerics/ad/operators.py:        Subclasses that represent atomic operators (leaves in a tree-representation of
src/porepy/numerics/ad/operators.py:            mdg: Mixed-dimensional grid on which this operator is to be parsed.
src/porepy/numerics/ad/operators.py:        # 2) If the operator is a leaf in the tree-representation of the operator,
src/porepy/numerics/ad/operators.py:            # Case 1: Variable -----------------------------------------------------------------
src/porepy/numerics/ad/operators.py:            # TODO: no difference between merged or no mixed-dimensional variables!?
src/porepy/numerics/ad/operators.py:            # Case 2: --------------------------------------------------------------------------------------
src/porepy/numerics/ad/operators.py:        # Case 3: ----------------------------------------------------------------------------------------------
src/porepy/numerics/ad/operators.py:                results = results[::-1]
src/porepy/numerics/ad/operators.py:                # We should not do numpy_array - Ad_array, since numpy will interpret
src/porepy/numerics/ad/operators.py:                results = results[::-1]
src/porepy/numerics/ad/operators.py:                factor = -1.0
src/porepy/numerics/ad/operators.py:                return factor * (results[0] - results[1])
src/porepy/numerics/ad/operators.py:                results = results[::-1]
src/porepy/numerics/ad/operators.py:                    # right-truedivide method in the AdArary.
src/porepy/numerics/ad/operators.py:                    # right-power method in the AdArary.
src/porepy/numerics/ad/operators.py:    def _get_error_message(self, operation: str, tree, results: list) -> str:
src/porepy/numerics/ad/operators.py:    def _parse_readable(self) -> str:
src/porepy/numerics/ad/operators.py:        Make a human-readable error message related to a parsing error.
src/porepy/numerics/ad/operators.py:            operator_str = "-"
src/porepy/numerics/ad/operators.py:    ### Operator discretization ---------------------------------------------------------------
src/porepy/numerics/ad/operators.py:    def discretize(self, mdg: pp.MixedDimensionalGrid) -> None:
src/porepy/numerics/ad/operators.py:        Expression - it is now done here to accommodate updates (?) and
src/porepy/numerics/ad/operators.py:    ) -> dict[pp.discretization_type, list[GridLike]]:
src/porepy/numerics/ad/operators.py:    def _identify_subtree_discretizations(self, discr: list) -> list:
src/porepy/numerics/ad/operators.py:    ### Operator parsing ----------------------------------------------------------------------
src/porepy/numerics/ad/operators.py:                to parse the sub-operators that combine to form this operator.
src/porepy/numerics/ad/operators.py:        # Get the mixed-dimensional grid used for the dof-manager.
src/porepy/numerics/ad/operators.py:        # Parsing in two stages: First make a forward Ad-representation of the variable
src/porepy/numerics/ad/operators.py:        # tree-representation, and parse and combine individual operators.
src/porepy/numerics/ad/operators.py:                # Loop over all subvariables for the mixed-dimensional variable
src/porepy/numerics/ad/operators.py:    def _find_subtree_variables(self) -> Sequence[Variable]:
src/porepy/numerics/ad/operators.py:            # children - they have none.
src/porepy/numerics/ad/operators.py:    ### Special methods -----------------------------------------------------------------------
src/porepy/numerics/ad/operators.py:    def __str__(self) -> str:
src/porepy/numerics/ad/operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/operators.py:    def __add__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:    def __radd__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:    def __sub__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:        return Operator(tree=Tree(Operator.Operations.sub, children), name="- operator")
src/porepy/numerics/ad/operators.py:    def __rsub__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:        # consider the expression a-b. right-subtraction means self == b
src/porepy/numerics/ad/operators.py:        # we need to change the order here since a-b != b-a
src/porepy/numerics/ad/operators.py:        return Operator(tree=Tree(Operator.Operations.sub, children), name="- operator")
src/porepy/numerics/ad/operators.py:    def __mul__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:    def __rmul__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:    def __truediv__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:    def __rtruediv__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:    def __pow__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:    def __rpow__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:    def __matmul__(self, other: Operator) -> Operator:
src/porepy/numerics/ad/operators.py:            other: The operator to right-multiply with self.
src/porepy/numerics/ad/operators.py:            other: The operator to left-multiply with self.
src/porepy/numerics/ad/operators.py:    def __init__(self, mat: sps.spmatrix, name: Optional[str] = None) -> None:
src/porepy/numerics/ad/operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/operators.py:    def __str__(self) -> str:
src/porepy/numerics/ad/operators.py:    def parse(self, mdg: pp.MixedDimensionalGrid) -> sps.spmatrix:
src/porepy/numerics/ad/operators.py:    def transpose(self) -> "SparseArray":
src/porepy/numerics/ad/operators.py:    def T(self) -> "SparseArray":
src/porepy/numerics/ad/operators.py:    def shape(self) -> tuple[int, int]:
src/porepy/numerics/ad/operators.py:    For time-dependent arrays see :class:`TimeDependentArray`.
src/porepy/numerics/ad/operators.py:    def __init__(self, values: np.ndarray, name: Optional[str] = None) -> None:
src/porepy/numerics/ad/operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/operators.py:    def __str__(self) -> str:
src/porepy/numerics/ad/operators.py:    def size(self) -> int:
src/porepy/numerics/ad/operators.py:    def parse(self, mdg: pp.MixedDimensionalGrid) -> np.ndarray:
src/porepy/numerics/ad/operators.py:    """An Ad-wrapper around a time-dependent numpy array.
src/porepy/numerics/ad/operators.py:    The intended use is to represent time-varying quantities in equations, e.g., source
src/porepy/numerics/ad/operators.py:            Exactly one of subdomains and interfaces must be non-empty.
src/porepy/numerics/ad/operators.py:    def previous_timestep(self) -> TimeDependentDenseArray:
src/porepy/numerics/ad/operators.py:    def parse(self, mdg: pp.MixedDimensionalGrid) -> np.ndarray:
src/porepy/numerics/ad/operators.py:            mdg: Mixed-dimensional grid.
src/porepy/numerics/ad/operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/operators.py:        s = f"Wrapped time-dependent array with name {self._name}.\n"
src/porepy/numerics/ad/operators.py:    def __init__(self, value: float, name: Optional[str] = None) -> None:
src/porepy/numerics/ad/operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/operators.py:    def __str__(self) -> str:
src/porepy/numerics/ad/operators.py:    def parse(self, mdg: pp.MixedDimensionalGrid) -> float:
src/porepy/numerics/ad/operators.py:    ) -> None:
src/porepy/numerics/ad/operators.py:    def domain(self) -> GridLike:
src/porepy/numerics/ad/operators.py:    def tags(self) -> dict[str, Any]:
src/porepy/numerics/ad/operators.py:    def size(self) -> int:
src/porepy/numerics/ad/operators.py:    def set_name(self, name: str) -> None:
src/porepy/numerics/ad/operators.py:            RuntimeError: Variables must not be re-named once defined,
src/porepy/numerics/ad/operators.py:    def previous_timestep(self) -> Variable:
src/porepy/numerics/ad/operators.py:    def previous_iteration(self) -> Variable:
src/porepy/numerics/ad/operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/operators.py:    subdomains or interfaces, but treated jointly in the mixed-dimensional sense.
src/porepy/numerics/ad/operators.py:    def __init__(self, variables: list[Variable]) -> None:
src/porepy/numerics/ad/operators.py:        """List of sub-variables passed at instantiation, each defined on a separate
src/porepy/numerics/ad/operators.py:    def copy_common_sub_tags(self) -> None:
src/porepy/numerics/ad/operators.py:        """Copy any shared tags from the sub-variables to this variable.
src/porepy/numerics/ad/operators.py:        that its tags are consistent with all sub-variables.
src/porepy/numerics/ad/operators.py:        # Initialize with tags from the first sub-variable.
src/porepy/numerics/ad/operators.py:        # Loop over all other sub-variables, take the intersection with the existing set
src/porepy/numerics/ad/operators.py:        # Now, common_tags contains all tags that are shared by all sub-variables.
src/porepy/numerics/ad/operators.py:    def domain(self) -> list[GridLike]:  # type: ignore[override]
src/porepy/numerics/ad/operators.py:        """A tuple of all domains on which the atomic sub-variables are defined."""
src/porepy/numerics/ad/operators.py:    def size(self) -> int:
src/porepy/numerics/ad/operators.py:        """Returns the total size of the mixed-dimensional variable
src/porepy/numerics/ad/operators.py:        by summing the sizes of sub-variables."""
src/porepy/numerics/ad/operators.py:    def previous_timestep(self) -> MixedDimensionalVariable:
src/porepy/numerics/ad/operators.py:        """Return a representation of this mixed-dimensional variable on the previous
src/porepy/numerics/ad/operators.py:        If the md-variable is already defined on the previous time step, return itself.
src/porepy/numerics/ad/operators.py:    def previous_iteration(self) -> MixedDimensionalVariable:
src/porepy/numerics/ad/operators.py:        """Return a representation of this mixed-dimensional variable on the previous
src/porepy/numerics/ad/operators.py:    def copy(self) -> "MixedDimensionalVariable":
src/porepy/numerics/ad/operators.py:        """Copy the mixed-dimensional variable.
src/porepy/numerics/ad/operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/operators.py:                "Mixed-dimensional variable defined on an empty list of "
src/porepy/numerics/ad/operators.py:        s = "Mixed-dimensional"
src/porepy/numerics/ad/operators.py:        https://stackoverflow.com/questions/2358045/how-can-i-implement-a-tree-in-python
src/porepy/numerics/ad/operators.py:    def add_child(self, node: Union[Operator, AdArray]) -> None:
src/porepy/numerics/ad/operators.py:) -> SparseArray:
src/porepy/numerics/ad/operators.py:) -> DenseArray:
src/porepy/numerics/ad/operators.py:) -> DenseArray | pp.ad.SparseArray:
src/porepy/numerics/ad/operators.py:) -> DenseArray:
src/porepy/numerics/ad/operators.py:) -> SparseArray:
src/porepy/numerics/ad/operators.py:) -> Operator:
src/porepy/numerics/ad/operator_functions.py:### BASE CLASSES ------------------------------------------------------------------------------
src/porepy/numerics/ad/operator_functions.py:    Implements the callable-functionality and provides abstract methods for obtaining function
src/porepy/numerics/ad/operator_functions.py:            formatted output. If false, the function will be evaluated element-wise
src/porepy/numerics/ad/operator_functions.py:    def __call__(self, *args: pp.ad.Operator | AdArray) -> pp.ad.Operator:
src/porepy/numerics/ad/operator_functions.py:            Operator with call-arguments as children in the operator tree.
src/porepy/numerics/ad/operator_functions.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/operator_functions.py:            md: Mixed-dimensional grid.
src/porepy/numerics/ad/operator_functions.py:    def get_values(self, *args: AdArray) -> np.ndarray:
src/porepy/numerics/ad/operator_functions.py:    def get_jacobian(self, *args: AdArray) -> sps.spmatrix:
src/porepy/numerics/ad/operator_functions.py:    def get_values(self, *args: AdArray) -> np.ndarray:
src/porepy/numerics/ad/operator_functions.py:            # if not vector-conform, feed element-wise
src/porepy/numerics/ad/operator_functions.py:            # TODO this displays some special behavior when val-arrays have different lengths:
src/porepy/numerics/ad/operator_functions.py:            # it returns None-like things for every iteration more then shortest length
src/porepy/numerics/ad/operator_functions.py:### CONCRETE IMPLEMENTATIONS ------------------------------------------------------------------
src/porepy/numerics/ad/operator_functions.py:    def get_values(self, *args: AdArray) -> np.ndarray:
src/porepy/numerics/ad/operator_functions.py:    def get_jacobian(self, *args: AdArray) -> np.ndarray:
src/porepy/numerics/ad/operator_functions.py:        # dummy function, takes whatever and returns only the pre-set values
src/porepy/numerics/ad/operator_functions.py:    def get_values(self, *args: AdArray) -> np.ndarray:
src/porepy/numerics/ad/operator_functions.py:    def get_jacobian(self, *args: AdArray) -> sps.spmatrix:
src/porepy/numerics/ad/operator_functions.py:    def get_jacobian(self, *args: AdArray) -> sps.spmatrix:
src/porepy/numerics/ad/operator_functions.py:            # L-values were provided initially
src/porepy/numerics/ad/operator_functions.py:        All vector-valued ndarray arguments are assumed to be column vectors.
src/porepy/numerics/ad/operator_functions.py:        Each row-entry represents a value for an argument of ``func`` in
src/porepy/numerics/ad/operator_functions.py:        preval (optional): If True, pre-evaluates the values of the function at
src/porepy/numerics/ad/operator_functions.py:                dx = (max_val - min_val) / npt
src/porepy/numerics/ad/operator_functions.py:    def get_values(self, *args: AdArray) -> np.ndarray:
src/porepy/numerics/ad/operator_functions.py:    def get_jacobian(self, *args: AdArray) -> sps.spmatrix:
src/porepy/numerics/ad/operator_functions.py:### FUNCTION DECORATOR ------------------------------------------------------------------------
src/porepy/numerics/ad/operator_functions.py:                def density(self, p: float, T: float) -> float:
src/porepy/numerics/ad/operator_functions.py:    ) -> None:
src/porepy/numerics/ad/operator_functions.py:    def __call__(self, *args, **kwargs) -> ADmethod | pp.ad.Operator:
src/porepy/numerics/ad/operator_functions.py:        # If an explicit init was made, mimic a non-explicit init to get an object with
src/porepy/numerics/ad/operator_functions.py:    def __get__(self, binding_instance: object, binding_type: type) -> Callable:
src/porepy/numerics/ad/operator_functions.py:    def ad_wrapper(self, *args, **kwargs) -> Operator:
src/porepy/numerics/ad/operator_functions.py:        Constructs the necessary AD-Operator class wrapping the decorated callable
src/porepy/numerics/ad/operator_functions.py:            name = "ADmethod-"
src/porepy/numerics/ad/operator_functions.py:                + "-decorating-"
src/porepy/numerics/ad/time_derivatives.py:"""The module contains functionality for time-differentiation of operator trees.
src/porepy/numerics/ad/time_derivatives.py:    dt: Take the time derivative of an operator tree (first-order approximation).
src/porepy/numerics/ad/time_derivatives.py:def dt(op: pp.ad.Operator, time_step: pp.ad.Scalar) -> pp.ad.Operator:
src/porepy/numerics/ad/time_derivatives.py:    """Approximate the time-derivative of an operator tree.
src/porepy/numerics/ad/time_derivatives.py:    This time derivative is obtained by taking a first-order finite difference.
src/porepy/numerics/ad/time_derivatives.py:    If the time-dependent quantity q is already evaluated at the previous time step, its
src/porepy/numerics/ad/time_derivatives.py:    derivative will be defined as (q(time=n-1) - q(time=n-1)) / dt = 0.
src/porepy/numerics/ad/time_derivatives.py:        A first-order approximation of the time derivative of op.
src/porepy/numerics/ad/time_derivatives.py:    # Return the first-order approximation of the time derivative.
src/porepy/numerics/ad/time_derivatives.py:def time_increment(op: pp.ad.Operator) -> pp.ad.Operator:
src/porepy/numerics/ad/time_derivatives.py:    return op - op.previous_timestep()
src/porepy/numerics/ad/functions.py:Some functions depend on non-ad objects. This requires that the function ``f`` be wrapped
src/porepy/numerics/ad/functions.py:    >>> equation: pp.ad.Operator = AdFunction(var) - 2 * var
src/porepy/numerics/ad/functions.py:def l2_norm(dim: int, var: pp.ad.AdArray) -> pp.ad.AdArray:
src/porepy/numerics/ad/functions.py:        # For scalar variables, the cell-wise L2 norm is equivalent to
src/porepy/numerics/ad/functions.py:    resh = np.reshape(var.val, (dim, -1), order="F")
src/porepy/numerics/ad/functions.py:    tol = 1e-12
src/porepy/numerics/ad/functions.py:        jac = var._diagvec_mul_jac(-np.sin(var.val))
src/porepy/numerics/ad/functions.py:        jac = var._diagvec_mul_jac((np.cos(var.val) ** 2) ** (-1))
src/porepy/numerics/ad/functions.py:        jac = var._diagvec_mul_jac((1 - var.val**2) ** (-0.5))
src/porepy/numerics/ad/functions.py:        jac = var._diagvec_mul_jac(-((1 - var.val**2) ** (-0.5)))
src/porepy/numerics/ad/functions.py:        jac = var._diagvec_mul_jac((var.val**2 + 1) ** (-1))
src/porepy/numerics/ad/functions.py:        jac = var._diagvec_mul_jac(np.cosh(var.val) ** (-2))
src/porepy/numerics/ad/functions.py:        jac = var._diagvec_mul_jac((var.val**2 + 1) ** (-0.5))
src/porepy/numerics/ad/functions.py:        den1 = (var.val - 1) ** (-0.5)
src/porepy/numerics/ad/functions.py:        den2 = (var.val + 1) ** (-0.5)
src/porepy/numerics/ad/functions.py:        jac = var._diagvec_mul_jac((1 - var.val**2) ** (-1))
src/porepy/numerics/ad/functions.py:def heaviside_smooth(var, eps: float = 1e-3):
src/porepy/numerics/ad/functions.py:            Heaviside function in the limit when ``eps --> 0``. The default is ``1e-3``.
src/porepy/numerics/ad/functions.py:        val = 0.5 * (1 + 2 * np.pi ** (-1) * np.arctan(var.val * eps ** (-1)))
src/porepy/numerics/ad/functions.py:            np.pi ** (-1) * eps * (eps**2 + var.val**2) ** (-1)
src/porepy/numerics/ad/functions.py:        return 0.5 * (1 + 2 * np.pi ** (-1) * np.arctan(var * eps ** (-1)))
src/porepy/numerics/ad/functions.py:def maximum(var_0: pp.ad.AdArray, var_1: pp.ad.AdArray | np.ndarray) -> pp.ad.AdArray:
src/porepy/numerics/ad/functions.py:        The maximum of the two arguments, taken element-wise in the arrays. The return
src/porepy/numerics/ad/functions.py:    # Make a fall-back zero Jacobian for constant arguments.
src/porepy/numerics/ad/functions.py:    # know clearer how the Ad-machinery should be used.
src/porepy/numerics/ad/functions.py:        # statement in the above double-if). Broadcast var_1 to shape of var_0.
src/porepy/numerics/ad/grid_operators.py:""" Ad representation of grid-related quantities needed to write equations. The classes
src/porepy/numerics/ad/grid_operators.py:    ) -> None:
src/porepy/numerics/ad/grid_operators.py:    def cell_restriction(self, subdomains: list[pp.Grid]) -> SparseArray:
src/porepy/numerics/ad/grid_operators.py:    def cell_prolongation(self, subdomains: list[pp.Grid]) -> SparseArray:
src/porepy/numerics/ad/grid_operators.py:    def face_restriction(self, subdomains: list[pp.Grid]) -> SparseArray:
src/porepy/numerics/ad/grid_operators.py:    def face_prolongation(self, subdomains: list[pp.Grid]) -> SparseArray:
src/porepy/numerics/ad/grid_operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/grid_operators.py:    ) -> None:
src/porepy/numerics/ad/grid_operators.py:            mdg: Mixed-dimensional grid.
src/porepy/numerics/ad/grid_operators.py:        # of local-to-global mortar indices instead of the block.
src/porepy/numerics/ad/grid_operators.py:        # Special treatment is needed for the case of empty lists - see below
src/porepy/numerics/ad/grid_operators.py:                    raise NotImplementedError("Non-standard interface.")
src/porepy/numerics/ad/grid_operators.py:                    # this was case-dependent behavior (the relevant test case was the
src/porepy/numerics/ad/grid_operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/grid_operators.py:    ) -> None:
src/porepy/numerics/ad/grid_operators.py:    def subdomain_to_boundary(self) -> sps.spmatrix:
src/porepy/numerics/ad/grid_operators.py:    def boundary_to_subdomain(self) -> sps.spmatrix:
src/porepy/numerics/ad/grid_operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/grid_operators.py:    def __str__(self) -> str:
src/porepy/numerics/ad/grid_operators.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/grid_operators.py:    def __str__(self) -> str:
src/porepy/numerics/ad/grid_operators.py:    def parse(self, mdg: pp.MixedDimensionalGrid) -> sps.spmatrix:
src/porepy/numerics/ad/grid_operators.py:) -> tuple[dict[pp.Grid, sps.spmatrix], dict[pp.Grid, sps.spmatrix]]:
src/porepy/numerics/ad/grid_operators.py:            projection matrices for cell-based quantities as items.
src/porepy/numerics/ad/grid_operators.py:        projection matrices for face-based quantities as items.
src/porepy/numerics/ad/grid_operators.py:        cell_offset = cell_ind[-1] + 1
src/porepy/numerics/ad/grid_operators.py:            face_offset = face_ind[-1] + 1
src/porepy/numerics/ad/equation_system.py:    - names (:class:`str`),
src/porepy/numerics/ad/equation_system.py:    - multiple :class:`~porepy.numerics.ad.operators.Variable` or
src/porepy/numerics/ad/equation_system.py:    - :class:`~porepy.numerics.ad.operators.MixedDimensionalVariable`.
src/porepy/numerics/ad/equation_system.py:        cell-wise for equations without spatial differential operators) is not
src/porepy/numerics/ad/equation_system.py:    - nodes: DOFs per grid node.
src/porepy/numerics/ad/equation_system.py:    - cells: DOFs per grid cell.
src/porepy/numerics/ad/equation_system.py:    - faces: DOFS per grid face.
src/porepy/numerics/ad/equation_system.py:    def __init__(self, mdg: pp.MixedDimensionalGrid) -> None:
src/porepy/numerics/ad/equation_system.py:        """Mixed-dimensional domain passed at instantiation."""
src/porepy/numerics/ad/equation_system.py:        """Contains the row indices in the last assembled (sub-) system for a given
src/porepy/numerics/ad/equation_system.py:        This dictionary changes with every call to any assemble-method.
src/porepy/numerics/ad/equation_system.py:        set-method which includes information about the image space.
src/porepy/numerics/ad/equation_system.py:        equation operator. The ordering of the items in the grid-array dictionaries is
src/porepy/numerics/ad/equation_system.py:    ) -> EquationSystem:
src/porepy/numerics/ad/equation_system.py:        mixed-dimensional sense can be created. Restrictions of equations to subdomains
src/porepy/numerics/ad/equation_system.py:    def equations(self) -> dict[str, Operator]:
src/porepy/numerics/ad/equation_system.py:    def variables(self) -> list[Variable]:
src/porepy/numerics/ad/equation_system.py:    def variable_domains(self) -> list[pp.GridLike]:
src/porepy/numerics/ad/equation_system.py:    ### Variable management ------------------------------------------------------------
src/porepy/numerics/ad/equation_system.py:    ) -> MixedDimensionalVariable:
src/porepy/numerics/ad/equation_system.py:        """Create a mixed-dimensional variable for a given name-domain list combination.
src/porepy/numerics/ad/equation_system.py:            name (str): Name of the mixed-dimensional variable.
src/porepy/numerics/ad/equation_system.py:            A mixed-dimensional variable.
src/porepy/numerics/ad/equation_system.py:    ) -> MixedDimensionalVariable:
src/porepy/numerics/ad/equation_system.py:            An example on how to define a pressure variable with cell-wise one DOF
src/porepy/numerics/ad/equation_system.py:            A mixed-dimensional variable with above specifications.
src/porepy/numerics/ad/equation_system.py:            ValueError: If non-admissible DOF types are used as local DOFs.
src/porepy/numerics/ad/equation_system.py:            raise ValueError(f"Non-admissible DOF types {non_admissible} requested.")
src/porepy/numerics/ad/equation_system.py:    ) -> None:
src/porepy/numerics/ad/equation_system.py:            tag_name: Tag dictionary (tag-value pairs). This will be assigned to all
src/porepy/numerics/ad/equation_system.py:                interpreted as all variables. If a mixed-dimensional variable is passed,
src/porepy/numerics/ad/equation_system.py:                the tags will be assigned to its sub-variables (living on individual
src/porepy/numerics/ad/equation_system.py:    ) -> list[Variable]:
src/porepy/numerics/ad/equation_system.py:                are included. Variables can be given as a list of variables, mixed-
src/porepy/numerics/ad/equation_system.py:    ) -> np.ndarray:
src/porepy/numerics/ad/equation_system.py:        """Assembles an array containing values for the passed variable-like argument.
src/porepy/numerics/ad/equation_system.py:                from a specific time-step. Value 0 provides the most recent time-step. A
src/porepy/numerics/ad/equation_system.py:                value of 1 will give the values of one time-step back in time.
src/porepy/numerics/ad/equation_system.py:            assigned a non-None value.
src/porepy/numerics/ad/equation_system.py:        # Storage for atomic blocks of the sub vector (identified by name-grid pairs).
src/porepy/numerics/ad/equation_system.py:    ) -> None:
src/porepy/numerics/ad/equation_system.py:            Mismatches of is-size and should-be-size according to the subspace specified
src/porepy/numerics/ad/equation_system.py:                # created in a non-standard way. Store new values as requested.
src/porepy/numerics/ad/equation_system.py:    ) -> None:
src/porepy/numerics/ad/equation_system.py:        """Method for shifting stored time step values in data sub-dictionary.
src/porepy/numerics/ad/equation_system.py:    ) -> None:
src/porepy/numerics/ad/equation_system.py:        """Method for shifting stored iterate values in data sub-dictionary.
src/porepy/numerics/ad/equation_system.py:    ) -> None:
src/porepy/numerics/ad/equation_system.py:        time-step/iteration, these values are shifted such that the most recent
src/porepy/numerics/ad/equation_system.py:        time-step/iterate values have their index incremented by one. Values
src/porepy/numerics/ad/equation_system.py:                for i in range(num_stored - 1, 0, -1):
src/porepy/numerics/ad/equation_system.py:                    data[location][name][i] = data[location][name][i - 1].copy()
src/porepy/numerics/ad/equation_system.py:    ) -> dict:
src/porepy/numerics/ad/equation_system.py:    ### DOF management -----------------------------------------------------------------
src/porepy/numerics/ad/equation_system.py:    def _append_dofs(self, variable: pp.ad.Variable) -> None:
src/porepy/numerics/ad/equation_system.py:    def _cluster_dofs_gridwise(self) -> None:
src/porepy/numerics/ad/equation_system.py:        """Re-arranges the DOFs grid-wise s.t. we obtain grid-blocks in the column sense
src/porepy/numerics/ad/equation_system.py:        The aim is to impose a more block-diagonal-like structure on the Jacobian where
src/porepy/numerics/ad/equation_system.py:            Off-diagonal blocks will still be present if subdomain-interface variables
src/porepy/numerics/ad/equation_system.py:            # If this variable-grid combination is present, add it to the new
src/porepy/numerics/ad/equation_system.py:    def _parse_variable_type(self, variables: Optional[VariableList]) -> list[Variable]:
src/porepy/numerics/ad/equation_system.py:            - No assumptions should be made on the order of the parsed variables.
src/porepy/numerics/ad/equation_system.py:            - The variable list is not uniquified; if the same variable is passed twice
src/porepy/numerics/ad/equation_system.py:                    - If None, return all variables.
src/porepy/numerics/ad/equation_system.py:                    - If a list of variables, return same.
src/porepy/numerics/ad/equation_system.py:                    - If a list of strings, return all variables with those names.
src/porepy/numerics/ad/equation_system.py:                    - If mixed-dimensional variable, return sub-variables.
src/porepy/numerics/ad/equation_system.py:    def _gridbased_variable_complement(self, variables: VariableList) -> list[Variable]:
src/porepy/numerics/ad/equation_system.py:        """Finds the grid-based complement of a variable-like structure.
src/porepy/numerics/ad/equation_system.py:        The grid-based complement consists of all variables known to this
src/porepy/numerics/ad/equation_system.py:        # non sequential var-like structure
src/porepy/numerics/ad/equation_system.py:    def num_dofs(self) -> int:
src/porepy/numerics/ad/equation_system.py:    def projection_to(self, variables: Optional[VariableList] = None) -> sps.csr_matrix:
src/porepy/numerics/ad/equation_system.py:                a null-space projection is returned.
src/porepy/numerics/ad/equation_system.py:    def dofs_of(self, variables: VariableList) -> np.ndarray:
src/porepy/numerics/ad/equation_system.py:            an order-preserving array of indices of DOFs belonging to the VariableType input.
src/porepy/numerics/ad/equation_system.py:    def identify_dof(self, dof: int) -> Variable:
src/porepy/numerics/ad/equation_system.py:        if not (0 <= dof < num_dofs):  # indices go from 0 to num_dofs - 1
src/porepy/numerics/ad/equation_system.py:        variable_number = np.argmax(global_variable_dofs > dof) - 1
src/porepy/numerics/ad/equation_system.py:    ### Equation management -------------------------------------------------------------------
src/porepy/numerics/ad/equation_system.py:    ) -> None:
src/porepy/numerics/ad/equation_system.py:        Information about the image space must be provided for now, such that grid-wise
src/porepy/numerics/ad/equation_system.py:            equation: An equation in AD operator form, assuming the right-hand side is
src/porepy/numerics/ad/equation_system.py:                zero and this instance represents the left-hand side.
src/porepy/numerics/ad/equation_system.py:                ``equation_operator`` provides. This is a temporary work-around until
src/porepy/numerics/ad/equation_system.py:    def remove_equation(self, name: str) -> Operator | None:
src/porepy/numerics/ad/equation_system.py:    ### System assembly and discretization ----------------------------------------------------
src/porepy/numerics/ad/equation_system.py:    def _recursive_discretization_search(operator: Operator, discr: list) -> list:
src/porepy/numerics/ad/equation_system.py:    ) -> dict[str, None | np.ndarray]:
src/porepy/numerics/ad/equation_system.py:    ) -> dict[str, None | np.ndarray]:
src/porepy/numerics/ad/equation_system.py:        # Equation represented by string - return the corresponding equation.
src/porepy/numerics/ad/equation_system.py:    ) -> dict[str, None | np.ndarray]:
src/porepy/numerics/ad/equation_system.py:        grid-sense.
src/porepy/numerics/ad/equation_system.py:            A dictionary with the name of the equation as key and the grid-complement
src/porepy/numerics/ad/equation_system.py:            # If there was no grid-based row filtering, the complement is empty.
src/porepy/numerics/ad/equation_system.py:    ) -> None:
src/porepy/numerics/ad/equation_system.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/ad/equation_system.py:                by -1 (moved to rhs).
src/porepy/numerics/ad/equation_system.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/ad/equation_system.py:            row-block is internally ordered as given by the mixed-dimensional grid
src/porepy/numerics/ad/equation_system.py:                should be restricted in the row-sense. Grids not belonging to the domain
src/porepy/numerics/ad/equation_system.py:                column-sense. If not provided (None), all variables will be included.
src/porepy/numerics/ad/equation_system.py:                for the specified equations. Scaled with -1 (moved to rhs).
src/porepy/numerics/ad/equation_system.py:            # If restriction to grid-related row blocks was made,
src/porepy/numerics/ad/equation_system.py:                block_length = len(rhs[-1])
src/porepy/numerics/ad/equation_system.py:            # If no grid-related row restriction was made, append the whole thing.
src/porepy/numerics/ad/equation_system.py:                ind_start = block_indices[-1] + 1
src/porepy/numerics/ad/equation_system.py:        # Concatenate results equation-wise.
src/porepy/numerics/ad/equation_system.py:        # grid-related column blocks by using the transposed projection to respective
src/porepy/numerics/ad/equation_system.py:        # Multiply rhs by -1 to move to the rhs.
src/porepy/numerics/ad/equation_system.py:        return A * column_projection, -rhs_cat
src/porepy/numerics/ad/equation_system.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/ad/equation_system.py:            \left( A_{pp} - A_{ps} * A_{ss}^{-1} * A_{sp}\right) * x_p
src/porepy/numerics/ad/equation_system.py:            = b_p - A_{ps} * A_{ss} * b_s
src/porepy/numerics/ad/equation_system.py:        The Schur complement is well-defined only if the inverse of :math:`A_{ss}`
src/porepy/numerics/ad/equation_system.py:            ``excl_loc_prim_to_sec`` are meant for nested Schur-complements and
src/porepy/numerics/ad/equation_system.py:            .. code-block:: python
src/porepy/numerics/ad/equation_system.py:            will require some work on ensuring the system is block-diagonal.
src/porepy/numerics/ad/equation_system.py:                row-sense.
src/porepy/numerics/ad/equation_system.py:                column-sense.
src/porepy/numerics/ad/equation_system.py:                targeted state. Scaled with -1 (moved to rhs).
src/porepy/numerics/ad/equation_system.py:                - If the primary block would have 0 rows or columns.
src/porepy/numerics/ad/equation_system.py:                - If the secondary block would have 0 rows or columns.
src/porepy/numerics/ad/equation_system.py:                - If the secondary block is not square.
src/porepy/numerics/ad/equation_system.py:        # Assert non-emptiness of primary block.
src/porepy/numerics/ad/equation_system.py:        # Assert non-emptiness of secondary block. We do not check the length of
src/porepy/numerics/ad/equation_system.py:                row_idx = np.arange(b_prim[-1].size, dtype=int)
src/porepy/numerics/ad/equation_system.py:        S = A_pp - A_ps * inv_A_ss * A_sp
src/porepy/numerics/ad/equation_system.py:        rhs_S = b_p - A_ps * inv_A_ss * b_s
src/porepy/numerics/ad/equation_system.py:    ) -> np.ndarray:
src/porepy/numerics/ad/equation_system.py:            x_s = A_{ss}^{-1} * (b_s - A_{sp} * x_p).
src/porepy/numerics/ad/equation_system.py:        x_s = inv_A_ss * (b_s - A_sp * reduced_solution)
src/porepy/numerics/ad/equation_system.py:        # Prolong primary and secondary block to global-sized arrays
src/porepy/numerics/ad/equation_system.py:    ### Special methods ----------------------------------------------------------------
src/porepy/numerics/ad/equation_system.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/equation_system.py:            "EquationSystem for mixed-dimensional grid with "
src/porepy/numerics/ad/equation_system.py:        # Sort variables alphabetically, not case-sensitive
src/porepy/numerics/ad/equation_system.py:    def __str__(self) -> str:
src/porepy/numerics/ad/equation_system.py:            "EquationSystem for mixed-dimensional grid with "
src/porepy/numerics/ad/equation_system.py:        # Sort variables alphabetically, not case-sensitive
src/porepy/numerics/ad/equation_system.py:) -> None:
src/porepy/numerics/ad/equation_system.py:        assigned a non-None value.
src/porepy/numerics/ad/_ad_utils.py:    uniquify_discretization_list: Define a unique list of discretization-keyword
src/porepy/numerics/ad/_ad_utils.py:            key = s[:-11]  ### EB: remove "_matrix_key" and keep the first part
src/porepy/numerics/ad/_ad_utils.py:) -> dict[pp.discretization_type, list[pp.GridLike]]:
src/porepy/numerics/ad/_ad_utils.py:    of discretization-keyword combinations.
src/porepy/numerics/ad/_ad_utils.py:        # This discretization-keyword combination
src/porepy/numerics/ad/_ad_utils.py:            # the key-discr combination is encountered a second time and the
src/porepy/numerics/ad/_ad_utils.py:            # code enters the if part of this if-else).
src/porepy/numerics/ad/_ad_utils.py:) -> None:
src/porepy/numerics/ad/_ad_utils.py:    ) -> None:
src/porepy/numerics/ad/_ad_utils.py:            mat_dict_grids: EK, could this be a list of grid-likes?
src/porepy/numerics/ad/_ad_utils.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/_ad_utils.py:    def __str__(self) -> str:
src/porepy/numerics/ad/_ad_utils.py:            mdg (pp.MixedDimensionalGrid): Mixed-dimensional grid.
src/porepy/numerics/ad/_ad_utils.py:            # likely on a mixed-dimensional grid containing no mortar subdomains.
src/porepy/numerics/ad/_ad_utils.py:        # Loop over all grid-discretization combinations, get hold of the discretization
src/porepy/numerics/ad/_ad_utils.py:                # This is a vector (may happen e.g. for right-hand side terms that are
src/porepy/numerics/ad/_ad_utils.py:                # stored as discretization matrices, as may happen for non-linear terms)
src/porepy/numerics/ad/forward_mode.py:def initAdArrays(variables: list[np.ndarray]) -> list[AdArray]:
src/porepy/numerics/ad/forward_mode.py:      * Scipy matrices can only be used for matrix-vector products (the @ operator), and
src/porepy/numerics/ad/forward_mode.py:    def __init__(self, val: np.ndarray, jac: sps.spmatrix) -> None:
src/porepy/numerics/ad/forward_mode.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/forward_mode.py:    def __add__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:        # Use if-else with isinstance (would have preferred match-case, but that is
src/porepy/numerics/ad/forward_mode.py:    def __radd__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:    def __sub__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:        return self.__add__(-other)
src/porepy/numerics/ad/forward_mode.py:    def __rsub__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:        # Calculate self - other and negative the answer (note the minus sign in front).
src/porepy/numerics/ad/forward_mode.py:        return -self.__sub__(other)
src/porepy/numerics/ad/forward_mode.py:    def __mul__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:        # Use if-else with isinstance to identify the other operator.
src/porepy/numerics/ad/forward_mode.py:            # Achieve this by left-multiplying with other, represented as a diagonal
src/porepy/numerics/ad/forward_mode.py:            # the gradients in jac is stored row-wise, the columns in self.jac
src/porepy/numerics/ad/forward_mode.py:    def __rmul__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:    def __pow__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:            # Left-multiply jac with a diagonal-matrix version of the differentiated
src/porepy/numerics/ad/forward_mode.py:            # polynomial, this will give the desired column-wise scaling of the
src/porepy/numerics/ad/forward_mode.py:            new_jac = self._diagvec_mul_jac(float(other) * self.val ** float(other - 1))
src/porepy/numerics/ad/forward_mode.py:            # again in array-form. Achieve this by left-multiplying with other,
src/porepy/numerics/ad/forward_mode.py:            new_jac = self._diagvec_mul_jac(other * (self.val ** (other - 1)))
src/porepy/numerics/ad/forward_mode.py:            #   df = (y * x ** (y-1)) * dx + x^y * log(x) * dy
src/porepy/numerics/ad/forward_mode.py:                other.val * self.val ** (other.val.astype(float) - 1.0)
src/porepy/numerics/ad/forward_mode.py:    def __rpow__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:            # Left-multiply jac with a diagonal-matrix version of the differentiated
src/porepy/numerics/ad/forward_mode.py:            # polynomial, this will give the desired column-wise scaling of the
src/porepy/numerics/ad/forward_mode.py:            # error. As an example compare 1/np.array([1,2,3]) and np.array([1,2,3])**-1.
src/porepy/numerics/ad/forward_mode.py:            # again in array-form. Achieve this by left-multiplying with other,
src/porepy/numerics/ad/forward_mode.py:    def __truediv__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:            new_val = self.val * other.astype(float) ** (-1.0)
src/porepy/numerics/ad/forward_mode.py:            # again in array-form. Achieve this by left-multiplying with other,
src/porepy/numerics/ad/forward_mode.py:            new_jac = self._diagvec_mul_jac(other.astype(float) ** (-1.0))
src/porepy/numerics/ad/forward_mode.py:            return self.__mul__(other.__pow__(-1.0))
src/porepy/numerics/ad/forward_mode.py:    def __rtruediv__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:            # the power of -1 and multiplying by the float. The multiplication will
src/porepy/numerics/ad/forward_mode.py:            return self.__pow__(-1.0) * other
src/porepy/numerics/ad/forward_mode.py:            return other.__mul__(self.__pow__(-1.0))
src/porepy/numerics/ad/forward_mode.py:    def __matmul__(self, other: AdType) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:            # framework, variables should not be right-multiplied by anything. Raise
src/porepy/numerics/ad/forward_mode.py:                """AdArrays should only be left-multiplied by sparse matrices."""
src/porepy/numerics/ad/forward_mode.py:            # This is the standard matrix-vector multiplication
src/porepy/numerics/ad/forward_mode.py:        b.val = -b.val
src/porepy/numerics/ad/forward_mode.py:        b.jac = -b.jac
src/porepy/numerics/ad/forward_mode.py:    def copy(self) -> AdArray:
src/porepy/numerics/ad/forward_mode.py:    def _diagvec_mul_jac(self, a: np.ndarray) -> sps.spmatrix:
src/porepy/numerics/ad/forward_mode.py:    def _jac_mul_diagvec(self, a: np.ndarray) -> sps.spmatrix:
src/porepy/numerics/ad/discretizations.py:    def __init__(self) -> None:
src/porepy/numerics/ad/discretizations.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/discretizations.py:    def __str__(self) -> str:
src/porepy/numerics/ad/discretizations.py:    def name(self) -> str:
src/porepy/numerics/ad/discretizations.py:    ) -> None:
src/porepy/numerics/ad/discretizations.py:    def __init__(self, keyword: str, subdomains: list[pp.Grid]) -> None:
src/porepy/numerics/ad/discretizations.py:    def __init__(self, keyword: str, subdomains: list[pp.Grid]) -> None:
src/porepy/numerics/ad/discretizations.py:    ) -> None:
src/porepy/numerics/ad/discretizations.py:    def __init__(self, keyword: str, subdomains: list[pp.Grid]) -> None:
src/porepy/numerics/ad/discretizations.py:    def __init__(self, keyword: str, subdomains: list[pp.Grid]) -> None:
src/porepy/numerics/ad/discretizations.py:    def __init__(self, keyword: str, subdomains: list[pp.Grid]) -> None:
src/porepy/numerics/ad/discretizations.py:    def __init__(self, keyword: str, subdomains: list[pp.Grid]) -> None:
src/porepy/numerics/ad/discretizations.py:    def __init__(self, keyword: str, subdomains: list[pp.Grid], flux_array_key="darcy_flux") -> None:
src/porepy/numerics/ad/discretizations.py:    def __init__(self, keyword: str, interfaces: list[pp.MortarGrid]) -> None:
src/porepy/numerics/ad/discretizations.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/discretizations.py:    def __init__(self, keyword: str, interfaces: list[pp.MortarGrid]) -> None:
src/porepy/numerics/ad/discretizations.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/discretizations.py:    ) -> None:
src/porepy/numerics/ad/discretizations.py:    def __repr__(self) -> str:
src/porepy/numerics/ad/discretizations.py:    transmissibilities, dT/dk, is approximated with a two-point flux stencil.
src/porepy/numerics/ad/discretizations.py:    If vector sources are included, p should be replaced by (p - dist * vector_source),
src/porepy/numerics/ad/discretizations.py:    ) -> None:
src/porepy/numerics/ad/discretizations.py:        """Mixed-dimensional grid."""
src/porepy/numerics/ad/discretizations.py:        :math:`flux=-K\nabla(potential - vector_source)`."""
src/porepy/numerics/ad/discretizations.py:    ) -> pp.ad.Operator:
src/porepy/numerics/ad/discretizations.py:    ) -> pp.ad.Operator:
src/porepy/numerics/ad/discretizations.py:    ) -> pp.ad.AdArray:
src/porepy/numerics/ad/discretizations.py:                :math:`flux=-K\nabla(potential - vector_source)`.
src/porepy/numerics/ad/discretizations.py:            bc_values[is_dir] = -bndr_sgn * params["bc_values"][is_dir]
src/porepy/numerics/ad/discretizations.py:    ) -> pp.ad.AdArray:
src/porepy/numerics/ad/discretizations.py:            # condition. Thus, no t-differentiation enters. On Neumann faces, however,
src/porepy/numerics/ad/discretizations.py:            # the tpfa contribution is v_face[bnd.is_neu] = -1 / t_full[bnd.is_neu]
src/porepy/numerics/ad/discretizations.py:    ) -> Tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray]:
src/porepy/numerics/ad/discretizations.py:        fc_cc = g.face_centers[::, fi] - g.cell_centers[::, ci]
src/porepy/numerics/ad/discretizations.py:    ) -> Union[sps.csr_matrix, np.ndarray]:
src/porepy/numerics/ad/discretizations.py:            global_permeability: Array representing the global (in mixed-dimensional
src/porepy/numerics/ad/discretizations.py:        # by other primary variables - Ad should take care of this) gives
src/porepy/numerics/ad/discretizations.py:        # Here, dT/du is in reality a third-order tensor, which we have represented
src/porepy/numerics/ad/discretizations.py:        # For isotropic tpfa, dt/dk is areas (-weighted normal) divided by cell-face
src/porepy/numerics/ad/discretizations.py:        hf_vals = np.power(t_one_sided.val, -2)
src/porepy/numerics/vem/hybrid.py:# -*- coding: utf-8 -*-
src/porepy/numerics/vem/hybrid.py:    in PorePy. Specifically, it does not support mixed-dimensional problems.
src/porepy/numerics/vem/hybrid.py:        ---------
src/porepy/numerics/vem/hybrid.py:        ------
src/porepy/numerics/vem/hybrid.py:        Return the matrix and righ-hand side for a discretization of a second
src/porepy/numerics/vem/hybrid.py:            Permeability defined cell-wise. If not given a identity permeability
src/porepy/numerics/vem/hybrid.py:            Scalar source term defined cell-wise. If not given a zero source
src/porepy/numerics/vem/hybrid.py:        ----------
src/porepy/numerics/vem/hybrid.py:        ------
src/porepy/numerics/vem/hybrid.py:            Right-hand side which contains the boundary conditions and the scalar
src/porepy/numerics/vem/hybrid.py:        --------
src/porepy/numerics/vem/hybrid.py:        # pylint: disable=invalid-name
src/porepy/numerics/vem/hybrid.py:        # If a 0-d grid is given then we return an identity matrix
src/porepy/numerics/vem/hybrid.py:        weight = np.power(diams, 2 - g.dim)
src/porepy/numerics/vem/hybrid.py:        size = np.sum(np.square(g.cell_faces.indptr[1:] - g.cell_faces.indptr[:-1]))
src/porepy/numerics/vem/hybrid.py:            sgn_loc = sgn[loc].reshape((-1, 1))
src/porepy/numerics/vem/hybrid.py:            # Compute the H_div-mass local matrix
src/porepy/numerics/vem/hybrid.py:            B = -np.ones((ndof, 1))
src/porepy/numerics/vem/hybrid.py:            L = np.dot(np.dot(C.T, L - invA), C)
src/porepy/numerics/vem/hybrid.py:        ----------
src/porepy/numerics/vem/hybrid.py:        ------
src/porepy/numerics/vem/hybrid.py:        # pylint: disable=invalid-name
src/porepy/numerics/vem/hybrid.py:        weight = np.power(diams, 2 - g.dim)
src/porepy/numerics/vem/hybrid.py:            sgn_loc = sgn[loc].reshape((-1, 1))
src/porepy/numerics/vem/hybrid.py:            # Compute the H_div-mass local matrix
src/porepy/numerics/vem/hybrid.py:            B = -np.ones((ndof, 1))
src/porepy/numerics/vem/hybrid.py:            l_loc = solution[faces_loc].reshape((-1, 1))
src/porepy/numerics/vem/hybrid.py:            p[c] = np.dot(S, f[c] - np.dot(B.T, solve(A, np.dot(C, l_loc))))
src/porepy/numerics/vem/hybrid.py:            u[faces_loc] = -np.multiply(
src/porepy/numerics/vem/vem_source.py:(flux-pressure) system. The sources are assigned to the rows starting from
src/porepy/numerics/vem/vem_source.py:    rhs = - param.get_source.keyword in a saddle point fashion.
src/porepy/numerics/vem/vem_source.py:    def __init__(self, keyword: str = "flow") -> None:
src/porepy/numerics/vem/vem_source.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/vem/vem_source.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/vem/vem_source.py:        """Return the (null) matrix and right-hand side for a discretization of the
src/porepy/numerics/vem/vem_source.py:            sources (array, self.ndof): Right-hand side vector.
src/porepy/numerics/vem/vem_source.py:    def assemble_matrix(self, sd: pp.Grid, data: dict) -> sps.spmatrix:
src/porepy/numerics/vem/vem_source.py:    def assemble_rhs(self, sd: pp.Grid, data: dict) -> np.ndarray:
src/porepy/numerics/vem/vem_source.py:        rhs[is_p] = -sources
src/porepy/numerics/vem/vem_source.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/vem/mass_matrix.py:Mass matrix classes for a discretization of a L2-mass bilinear form with constant test
src/porepy/numerics/vem/mass_matrix.py:    """Class that provides the discretization of a L2-mass bilinear form with constant
src/porepy/numerics/vem/mass_matrix.py:    def __init__(self, keyword: str = "flow") -> None:
src/porepy/numerics/vem/mass_matrix.py:    def _key(self) -> str:
src/porepy/numerics/vem/mass_matrix.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/vem/mass_matrix.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/vem/mass_matrix.py:        """Return the matrix and right-hand side (null) for a discretization of a
src/porepy/numerics/vem/mass_matrix.py:        L2-mass bilinear form with constant test and trial functions. Also
src/porepy/numerics/vem/mass_matrix.py:            rhs (array, self.ndof): zero right-hand side.
src/porepy/numerics/vem/mass_matrix.py:    def assemble_matrix(self, sd: pp.Grid, data: dict) -> sps.spmatrix:
src/porepy/numerics/vem/mass_matrix.py:        """Return the matrix for a discretization of a L2-mass bilinear form with
src/porepy/numerics/vem/mass_matrix.py:    def assemble_rhs(self, sd: pp.Grid, data: dict) -> np.ndarray:
src/porepy/numerics/vem/mass_matrix.py:        """Return the (null) right-hand side for a discretization of a L2-mass bilinear
src/porepy/numerics/vem/mass_matrix.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/vem/mass_matrix.py:        """Discretize a L2-mass bilinear form with constant test and trial functions.
src/porepy/numerics/vem/mass_matrix.py:        We assume the following two sub-dictionaries to be present in the data
src/porepy/numerics/vem/mass_matrix.py:    """Class that provides the discretization of an inverse L2-mass bilinear form with constant
src/porepy/numerics/vem/mass_matrix.py:    def __init__(self, keyword: str = "flow") -> None:
src/porepy/numerics/vem/mass_matrix.py:    def _key(self) -> str:
src/porepy/numerics/vem/mass_matrix.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/vem/mass_matrix.py:        """Return the inverse of the matrix and right-hand side (null) for a
src/porepy/numerics/vem/mass_matrix.py:        discretization of a L2-mass bilinear form with constant test and trial
src/porepy/numerics/vem/mass_matrix.py:                zero right-hand side.
src/porepy/numerics/vem/mass_matrix.py:    def assemble_matrix(self, sd: pp.Grid, data: dict) -> sps.spmatrix:
src/porepy/numerics/vem/mass_matrix.py:        """Return the inverse of the matrix for a discretization of a L2-mass bilinear
src/porepy/numerics/vem/mass_matrix.py:    def assemble_rhs(self, sd: pp.Grid, data: dict) -> np.ndarray:
src/porepy/numerics/vem/mass_matrix.py:        """Return the (null) right-hand side for a discretization of the inverse of a
src/porepy/numerics/vem/mass_matrix.py:        L2-mass bilinear form with constant test and trial functions. Also discretize
src/porepy/numerics/vem/mass_matrix.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/vem/mass_matrix.py:        """Discretize the inverse of a L2-mass bilinear form with constant test and
src/porepy/numerics/vem/mass_matrix.py:        We assume the following two sub-dictionaries to be present in the data
src/porepy/numerics/vem/mvem.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/vem/mvem.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/vem/mvem.py:        We assume the following two sub-dictionaries to be present in the data
src/porepy/numerics/vem/mvem.py:                cell-wise. This is the effective permeability, including any
src/porepy/numerics/vem/mvem.py:        --------------------
src/porepy/numerics/vem/mvem.py:        is_tangential: Whether the lower-dimensional permeability tensor has been
src/porepy/numerics/vem/mvem.py:        # pylint: disable=invalid-name
src/porepy/numerics/vem/mvem.py:        # If a 0-d grid is given then we return an identity matrix
src/porepy/numerics/vem/mvem.py:        deviation_from_plane_tol = data.get("deviation_from_plane_tol", 1e-5)
src/porepy/numerics/vem/mvem.py:        # apertures, however to keep consistency with the hybrid-dimensional
src/porepy/numerics/vem/mvem.py:        weight = np.power(diams, 2 - sd.dim)
src/porepy/numerics/vem/mvem.py:        size_A = np.sum(np.square(sd.cell_faces.indptr[1:] - sd.cell_faces.indptr[:-1]))
src/porepy/numerics/vem/mvem.py:        size_P = 3 * np.sum(sd.cell_faces.indptr[1:] - sd.cell_faces.indptr[:-1])
src/porepy/numerics/vem/mvem.py:            # Compute the H_div-mass local matrix
src/porepy/numerics/vem/mvem.py:            # Save values for Hdiv-mass local matrix in the global structure
src/porepy/numerics/vem/mvem.py:        div = -sd.cell_faces.T
src/porepy/numerics/vem/mvem.py:    ) -> tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/vem/mvem.py:        ----------
src/porepy/numerics/vem/mvem.py:            +1 or -1 if the normal is inward or outward to the cell.
src/porepy/numerics/vem/mvem.py:        ------
src/porepy/numerics/vem/mvem.py:        # pylint: disable=invalid-name
src/porepy/numerics/vem/mvem.py:            [lambda pt, i=i: (pt[i] - c_center[i]) / diam for i in np.arange(dim)]
src/porepy/numerics/vem/mvem.py:        ).reshape((dim, -1))
src/porepy/numerics/vem/mvem.py:        I_Pi = np.eye(f_centers.shape[1]) - np.dot(D, Pi_s)
src/porepy/numerics/vem/mvem.py:        # local Hdiv-mass matrix
src/porepy/numerics/vem/mvem.py:    def check_conservation(sd: pp.Grid, u: np.ndarray) -> np.ndarray:
src/porepy/numerics/vem/mvem.py:        ----------
src/porepy/numerics/vem/README.md:In this part the basic tools to create the matrix and right-had side for a Darcy problem.
src/porepy/numerics/vem/README.md:* mixed virtual element method with hybrid-dimensional coupler [dual.py](dual.py)
src/porepy/numerics/vem/dual_elliptic.py:) -> None:
src/porepy/numerics/vem/dual_elliptic.py:    Save in the grid bucket a piece-wise vector representation of the flux
src/porepy/numerics/vem/dual_elliptic.py:    ---------
src/porepy/numerics/vem/dual_elliptic.py:    def __init__(self, keyword: str, name: str) -> None:
src/porepy/numerics/vem/dual_elliptic.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/vem/dual_elliptic.py:    ) -> tuple[sps.csr_matrix, np.ndarray]:
src/porepy/numerics/vem/dual_elliptic.py:        """Return the matrix and right-hand side for a discretization of a second
src/porepy/numerics/vem/dual_elliptic.py:            np.ndarray: Right-hand side vector with representation of boundary
src/porepy/numerics/vem/dual_elliptic.py:    def assemble_matrix(self, g: pp.Grid, data: dict) -> sps.csr_matrix:
src/porepy/numerics/vem/dual_elliptic.py:    ) -> tuple[sps.csr_matrix, int]:
src/porepy/numerics/vem/dual_elliptic.py:    ) -> np.ndarray:
src/porepy/numerics/vem/dual_elliptic.py:        """Return the righ-hand side for a discretization of a second order elliptic
src/porepy/numerics/vem/dual_elliptic.py:        # pylint: disable=invalid-name
src/porepy/numerics/vem/dual_elliptic.py:            rhs[is_dir] += -sign[is_dir] * bc_val[is_dir]
src/porepy/numerics/vem/dual_elliptic.py:            rhs[is_rob] += -sign[is_rob] * bc_val[is_rob] / bc.robin_weight[is_rob]
src/porepy/numerics/vem/dual_elliptic.py:    def project_flux(self, sd: pp.Grid, u: np.ndarray, data: dict) -> np.ndarray:
src/porepy/numerics/vem/dual_elliptic.py:        We assume the following two sub-dictionaries to be present in the data
src/porepy/numerics/vem/dual_elliptic.py:        ----------
src/porepy/numerics/vem/dual_elliptic.py:        ------
src/porepy/numerics/vem/dual_elliptic.py:        # pylint: disable=invalid-name
src/porepy/numerics/vem/dual_elliptic.py:        return proj_u.reshape((3, -1), order="F")
src/porepy/numerics/vem/dual_elliptic.py:    ) -> tuple[sps.csr_matrix, np.ndarray]:
src/porepy/numerics/vem/dual_elliptic.py:    ) -> sps.csr_matrix:
src/porepy/numerics/vem/dual_elliptic.py:        # Recover the information for the grid-grid mapping
src/porepy/numerics/vem/dual_elliptic.py:    ) -> None:
src/porepy/numerics/vem/dual_elliptic.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/vem/dual_elliptic.py:        used to impose flux continuity on a higher-dimensional domain.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/vem/dual_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/vem/dual_elliptic.py:    ) -> None:
src/porepy/numerics/vem/dual_elliptic.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/vem/dual_elliptic.py:        used to impose flux continuity on a lower-dimensional domain.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/vem/dual_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/vem/dual_elliptic.py:    ) -> None:
src/porepy/numerics/vem/dual_elliptic.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/vem/dual_elliptic.py:        used to impose flux continuity on a higher-dimensional domain.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/vem/dual_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/vem/dual_elliptic.py:        cc[2, self_ind] -= hat_E_int.T * matrix[self_ind, self_ind]
src/porepy/numerics/vem/dual_elliptic.py:        cc[2, 2] -= hat_E_int.T * matrix[self_ind, self_ind] * hat_E_int
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/vem/dual_elliptic.py:    ) -> None:
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:    ) -> None:
src/porepy/numerics/vem/dual_elliptic.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/vem/dual_elliptic.py:        used to impose flux continuity on a lower-dimensional domain.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/vem/dual_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/vem/dual_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/vem/dual_elliptic.py:        cc[2, self_ind] -= sps.bmat([[sps.csr_matrix(shape)], [A]]).T
src/porepy/numerics/vem/dual_elliptic.py:    ) -> None:
src/porepy/numerics/vem/dual_elliptic.py:    ) -> np.ndarray:
src/porepy/numerics/vem/dual_elliptic.py:        ----------
src/porepy/numerics/vem/dual_elliptic.py:        ------
src/porepy/numerics/vem/dual_elliptic.py:        # pylint: disable=invalid-name
src/porepy/numerics/vem/dual_elliptic.py:    ) -> np.ndarray:
src/porepy/numerics/vem/dual_elliptic.py:        ----------
src/porepy/numerics/vem/dual_elliptic.py:        ------
src/porepy/numerics/vem/dual_elliptic.py:        # pylint: disable=invalid-name
src/porepy/numerics/vem/dual_elliptic.py:    def _inv_matrix_1d(K: np.ndarray) -> np.ndarray:
src/porepy/numerics/vem/dual_elliptic.py:        ----------
src/porepy/numerics/vem/dual_elliptic.py:        ------
src/porepy/numerics/vem/dual_elliptic.py:    def _inv_matrix_2d(K: np.ndarray) -> np.ndarray:
src/porepy/numerics/vem/dual_elliptic.py:        ----------
src/porepy/numerics/vem/dual_elliptic.py:        ------
src/porepy/numerics/vem/dual_elliptic.py:        det = K[0, 0] * K[1, 1] - K[0, 1] * K[0, 1]
src/porepy/numerics/vem/dual_elliptic.py:        return np.array([[K[1, 1], -K[0, 1]], [-K[0, 1], K[0, 0]]]) / det
src/porepy/numerics/vem/dual_elliptic.py:    def _inv_matrix_3d(K: np.ndarray) -> np.ndarray:
src/porepy/numerics/vem/dual_elliptic.py:        ----------
src/porepy/numerics/vem/dual_elliptic.py:        ------
src/porepy/numerics/vem/dual_elliptic.py:            - K[0, 0] * K[1, 2] * K[1, 2]
src/porepy/numerics/vem/dual_elliptic.py:            - K[0, 1] * K[0, 1] * K[2, 2]
src/porepy/numerics/vem/dual_elliptic.py:            - K[0, 2] * K[0, 2] * K[1, 1]
src/porepy/numerics/vem/dual_elliptic.py:                        K[1, 1] * K[2, 2] - K[1, 2] * K[1, 2],
src/porepy/numerics/vem/dual_elliptic.py:                        K[0, 2] * K[1, 2] - K[0, 1] * K[2, 2],
src/porepy/numerics/vem/dual_elliptic.py:                        K[0, 1] * K[1, 2] - K[0, 2] * K[1, 1],
src/porepy/numerics/vem/dual_elliptic.py:                        K[0, 2] * K[1, 2] - K[0, 1] * K[2, 2],
src/porepy/numerics/vem/dual_elliptic.py:                        K[0, 0] * K[2, 2] - K[0, 2] * K[0, 2],
src/porepy/numerics/vem/dual_elliptic.py:                        K[0, 2] * K[1, 0] - K[0, 0] * K[1, 2],
src/porepy/numerics/vem/dual_elliptic.py:                        K[0, 1] * K[1, 2] - K[0, 2] * K[1, 1],
src/porepy/numerics/vem/dual_elliptic.py:                        K[0, 1] * K[0, 2] - K[0, 0] * K[1, 2],
src/porepy/numerics/vem/dual_elliptic.py:                        K[0, 0] * K[1, 1] - K[0, 1] * K[0, 1],
src/porepy/numerics/fem/rt0.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/fem/rt0.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fem/rt0.py:        """Discretize a second order elliptic equation using a RT0-P0 method.
src/porepy/numerics/fem/rt0.py:        We assume the following two sub-dictionaries to be present in the data
src/porepy/numerics/fem/rt0.py:                cell-wise. This is the effective permeability, including any
src/porepy/numerics/fem/rt0.py:        --------------------
src/porepy/numerics/fem/rt0.py:        is_tangential: Whether the lower-dimensional permeability tensor has been
src/porepy/numerics/fem/rt0.py:        # pylint: disable=invalid-name
src/porepy/numerics/fem/rt0.py:        # If a 0-d grid is given then we return an identity matrix
src/porepy/numerics/fem/rt0.py:        deviation_from_plane_tol = data.get("deviation_from_plane_tol", 1e-5)
src/porepy/numerics/fem/rt0.py:            HB += np.diagflat(np.ones(size_HB - it), it)
src/porepy/numerics/fem/rt0.py:            # Compute the H_div-mass local matrix
src/porepy/numerics/fem/rt0.py:            # Save values for Hdiv-mass local matrix in the global structure
src/porepy/numerics/fem/rt0.py:        div = -sd.cell_faces.T
src/porepy/numerics/fem/rt0.py:    ) -> np.ndarray:
src/porepy/numerics/fem/rt0.py:        ----------
src/porepy/numerics/fem/rt0.py:            +1 or -1 if the normal is inward or outward to the cell.
src/porepy/numerics/fem/rt0.py:        ------
src/porepy/numerics/fem/rt0.py:        N = coord.flatten("F").reshape((-1, 1)) * np.ones(
src/porepy/numerics/fem/rt0.py:        ) - np.concatenate((dim + 1) * [coord])
src/porepy/numerics/fem/rt0.py:    ) -> np.ndarray:
src/porepy/numerics/fem/rt0.py:        ----------
src/porepy/numerics/fem/rt0.py:        pt_reshaped = np.repeat(pt, coord.shape[1]).reshape((-1, coord.shape[1]))
src/porepy/numerics/fem/rt0.py:        c_delta = pt_reshaped - coord
src/porepy/numerics/fem/rt0.py:        f_delta = f_centers - coord
src/porepy/numerics/fem/rt0.py:        P[dim, :] = c_delta / np.einsum("ij,ij->j", f_delta, f_normals)
src/porepy/numerics/fem/rt0.py:    ) -> None:
src/porepy/numerics/fem/rt0.py:        typical request of a Raviart-Thomas approximation.
src/porepy/numerics/fem/rt0.py:        ----------
src/porepy/numerics/linalg/matrix_operations.py:def zero_columns(A: sps.csc_matrix, cols: np.ndarray) -> None:
src/porepy/numerics/linalg/matrix_operations.py:    ---------
src/porepy/numerics/linalg/matrix_operations.py:    ------
src/porepy/numerics/linalg/matrix_operations.py:def zero_rows(A: sps.csr_matrix, rows: np.ndarray) -> None:
src/porepy/numerics/linalg/matrix_operations.py:    ---------
src/porepy/numerics/linalg/matrix_operations.py:    ------
src/porepy/numerics/linalg/matrix_operations.py:) -> None:
src/porepy/numerics/linalg/matrix_operations.py:    ---------
src/porepy/numerics/linalg/matrix_operations.py:    ------
src/porepy/numerics/linalg/matrix_operations.py:        indptr[lines_to_replace + 1] - indptr[lines_to_replace]
src/porepy/numerics/linalg/matrix_operations.py:    indptr = indptr - num_rem
src/porepy/numerics/linalg/matrix_operations.py:    num_added[lines_to_replace + 1] = b_indptr[1:] - b_indptr[:-1]
src/porepy/numerics/linalg/matrix_operations.py:    -----------
src/porepy/numerics/linalg/matrix_operations.py:    ------
src/porepy/numerics/linalg/matrix_operations.py:    A.indptr = np.append(A.indptr, B.indptr[1:] + A.indptr[-1])
src/porepy/numerics/linalg/matrix_operations.py:def copy(A: sps.spmatrix) -> sps.spmatrix:
src/porepy/numerics/linalg/matrix_operations.py:    -----------
src/porepy/numerics/linalg/matrix_operations.py:    ------
src/porepy/numerics/linalg/matrix_operations.py:def stack_diag(A: sps.spmatrix, B: sps.spmatrix) -> sps.spmatrix:
src/porepy/numerics/linalg/matrix_operations.py:    -----------
src/porepy/numerics/linalg/matrix_operations.py:    ------
src/porepy/numerics/linalg/matrix_operations.py:    C.indptr = np.append(A.indptr, B.indptr[1:] + A.indptr[-1])
src/porepy/numerics/linalg/matrix_operations.py:) -> Union[np.ndarray, tuple[np.ndarray, Union[np.ndarray, slice]]]:
src/porepy/numerics/linalg/matrix_operations.py:    ----------
src/porepy/numerics/linalg/matrix_operations.py:    -------
src/porepy/numerics/linalg/matrix_operations.py:    --------
src/porepy/numerics/linalg/matrix_operations.py:        if slice_ind.size != A.indptr.size - 1:
src/porepy/numerics/linalg/matrix_operations.py:def slice_mat(A: sps.spmatrix, ind: np.ndarray) -> sps.spmatrix:
src/porepy/numerics/linalg/matrix_operations.py:    ----------
src/porepy/numerics/linalg/matrix_operations.py:    -------
src/porepy/numerics/linalg/matrix_operations.py:    --------
src/porepy/numerics/linalg/matrix_operations.py:        if ind.size != A.indptr.size - 1:
src/porepy/numerics/linalg/matrix_operations.py:    indptr[1:] = np.cumsum(A.indptr[ind + 1] - A.indptr[ind])
src/porepy/numerics/linalg/matrix_operations.py:def optimized_compressed_storage(A: sps.spmatrix) -> sps.spmatrix:
src/porepy/numerics/linalg/matrix_operations.py:) -> sps.spmatrix:
src/porepy/numerics/linalg/matrix_operations.py:        data (np.array): Matrix values, sorted column-wise.
src/porepy/numerics/linalg/matrix_operations.py:) -> sps.spmatrix:
src/porepy/numerics/linalg/matrix_operations.py:        data (np.array): Matrix values, sorted column-wise.
src/porepy/numerics/linalg/matrix_operations.py:) -> sps.spmatrix:
src/porepy/numerics/linalg/matrix_operations.py:        data (np.array): Matrix values, sorted column-wise.
src/porepy/numerics/linalg/matrix_operations.py:        #   [0, 1, ..., block_size-1, 0, 1, ... block_size-1, ... ]
src/porepy/numerics/linalg/matrix_operations.py:            np.tile(np.arange(block_size), (block_size, 1)).reshape((1, -1)), num_blocks
src/porepy/numerics/linalg/matrix_operations.py:                (1, -1), order="F"
src/porepy/numerics/linalg/matrix_operations.py:) -> sps.spmatrix:
src/porepy/numerics/linalg/matrix_operations.py:    ----------
src/porepy/numerics/linalg/matrix_operations.py:    -------
src/porepy/numerics/linalg/matrix_operations.py:    -------
src/porepy/numerics/linalg/matrix_operations.py:    def invert_diagonal_blocks_python(a: sps.spmatrix, sz: np.ndarray) -> np.ndarray:
src/porepy/numerics/linalg/matrix_operations.py:        numba-accelerated method invert_invert_diagagonal_blocks_numba instead
src/porepy/numerics/linalg/matrix_operations.py:        ----------
src/porepy/numerics/linalg/matrix_operations.py:        a: sps.crs-matrix, to be inverted
src/porepy/numerics/linalg/matrix_operations.py:        -------
src/porepy/numerics/linalg/matrix_operations.py:            # Picking out the sub-matrices here takes a lot of time.
src/porepy/numerics/linalg/matrix_operations.py:                a[i[0] : i[-1], i[0] : i[-1]].A
src/porepy/numerics/linalg/matrix_operations.py:    def invert_diagonal_blocks_numba(a: sps.csr_matrix, size: np.ndarray) -> np.ndarray:
src/porepy/numerics/linalg/matrix_operations.py:        for-loop based algorithm.
src/porepy/numerics/linalg/matrix_operations.py:        ----------
src/porepy/numerics/linalg/matrix_operations.py:        -------
src/porepy/numerics/linalg/matrix_operations.py:            matrix by for-loops was minimal; specifically, attempts at speeding up the
src/porepy/numerics/linalg/matrix_operations.py:            block_row_starts_ind[1:] = np.cumsum(sz[:-1])
src/porepy/numerics/linalg/matrix_operations.py:            num_cols_per_row = indptr[1:] - indptr[0:-1]
src/porepy/numerics/linalg/matrix_operations.py:                # Fill in non-zero elements in local matrix
src/porepy/numerics/linalg/matrix_operations.py:                        loc_col = ind[data_counter] - block_row_starts_ind[iter1]
src/porepy/numerics/linalg/matrix_operations.py:def block_diag_matrix(vals: np.ndarray, sz: np.ndarray) -> sps.spmatrix:
src/porepy/numerics/linalg/matrix_operations.py:    ----------
src/porepy/numerics/linalg/matrix_operations.py:    -------
src/porepy/numerics/linalg/matrix_operations.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/linalg/matrix_operations.py:        m - ndarray, dimension 1
src/porepy/numerics/linalg/matrix_operations.py:        n - ndarray, dimension 1, defaults to m
src/porepy/numerics/linalg/matrix_operations.py:    p1 = pos[0:-1]
src/porepy/numerics/linalg/matrix_operations.py:    p2 = pos[1:] - 1
src/porepy/numerics/linalg/matrix_operations.py:def rlencode(A: np.ndarray) -> tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/linalg/matrix_operations.py:    comp = A[::, 0:-1] != A[::, 1::]
src/porepy/numerics/linalg/matrix_operations.py:    i = np.hstack((np.argwhere(i).ravel(), (A.shape[1] - 1)))
src/porepy/numerics/linalg/matrix_operations.py:    num = np.diff(np.hstack((np.array([-1]), i)))
src/porepy/numerics/linalg/matrix_operations.py:def rldecode(A: np.ndarray, n: np.ndarray) -> np.ndarray:
src/porepy/numerics/linalg/matrix_operations.py:    j = np.zeros(i[-1], dtype=int)
src/porepy/numerics/linalg/matrix_operations.py:    j[i[1:-1:]] = 1
src/porepy/numerics/time_step_control.py:This module contains a routine for iteration-based time-stepping control.
src/porepy/numerics/time_step_control.py:[1] Simunek, J., Van Genuchten, M. T., & Sejna, M. (2005). The HYDRUS-1D software
src/porepy/numerics/time_step_control.py:    package for simulating the one-dimensional movement of water, heat, and multiple
src/porepy/numerics/time_step_control.py:    solutes in variably-saturated media. University of California-Riverside Research
src/porepy/numerics/time_step_control.py:    Reports, 3, 1-240.
src/porepy/numerics/time_step_control.py:    Finite-Volume-Based Module for Unsaturated Poroelasticity. Advanced Modeling with
src/porepy/numerics/time_step_control.py:        number of non-linear iterations recompute_solution // boolean flag
src/porepy/numerics/time_step_control.py:        SET dt = scheduled time - time
src/porepy/numerics/time_step_control.py:    """Parent class for iteration-based time-stepping control routine.
src/porepy/numerics/time_step_control.py:        schedule: Array-like object containing the target times for the simulation.
src/porepy/numerics/time_step_control.py:            Unless a constant time step is prescribed, the time-stepping algorithm will
src/porepy/numerics/time_step_control.py:            If True, then the time-stepping control algorithm is effectively bypassed.
src/porepy/numerics/time_step_control.py:            under-relaxation and over-relaxation factors, respectively. We require the
src/porepy/numerics/time_step_control.py:            under-relaxation factor to be strictly lower than one, whereas the
src/porepy/numerics/time_step_control.py:            over-relaxation factor is required to be strictly greater than one. Note
src/porepy/numerics/time_step_control.py:        recomp_factor: Failed-to-converge solution recomputation factor.
src/porepy/numerics/time_step_control.py:        recomp_max: Failed-to-converge maximum recomputation attempts. The maximum
src/porepy/numerics/time_step_control.py:        print_info. Whether to print on-the-fly time-stepping information or not.
src/porepy/numerics/time_step_control.py:        # The following is an example on how to initialize a time-stepping object
src/porepy/numerics/time_step_control.py:    ) -> None:
src/porepy/numerics/time_step_control.py:        elif dt_init > schedule[-1]:
src/porepy/numerics/time_step_control.py:            dt_min_max = (0.001 * schedule[-1], 0.1 * schedule[-1])
src/porepy/numerics/time_step_control.py:        # = True, we use this rather ugly if-statement from below.
src/porepy/numerics/time_step_control.py:                raise ValueError("Expected under-relaxation factor < 1.")
src/porepy/numerics/time_step_control.py:                raise ValueError("Expected over-relaxation factor > 1.")
src/porepy/numerics/time_step_control.py:            sim_times = np.arange(schedule[0], schedule[-1] + dt_init, dt_init)
src/porepy/numerics/time_step_control.py:            compat_rtol = 1e-7  # 1e-05
src/porepy/numerics/time_step_control.py:            compat_atol = 1e-9  # 1e-08
src/porepy/numerics/time_step_control.py:        self.time_final = schedule[-1]
src/porepy/numerics/time_step_control.py:        # Number of permissible re-computation attempts
src/porepy/numerics/time_step_control.py:    def __repr__(self) -> str:
src/porepy/numerics/time_step_control.py:        s = "Time-stepping control object with attributes:\n"
src/porepy/numerics/time_step_control.py:    ) -> Union[float, None]:
src/porepy/numerics/time_step_control.py:            iterations: Number of non-linear iterations. In time-dependent simulations,
src/porepy/numerics/time_step_control.py:    def increase_time(self) -> None:
src/porepy/numerics/time_step_control.py:    def increase_time_index(self) -> None:
src/porepy/numerics/time_step_control.py:    def _adaptation_based_on_iterations(self, iterations: Optional[int]) -> None:
src/porepy/numerics/time_step_control.py:            iterations: Number of non-linear iterations needed to achieve convergence.
src/porepy/numerics/time_step_control.py:        #     by an over-relaxation factor greater than 1, i.e., `over_relax_factor`.
src/porepy/numerics/time_step_control.py:        #     multiplying it by an under-relaxation factor smaller than 1, i.e.,
src/porepy/numerics/time_step_control.py:    def _adaptation_based_on_recomputation(self) -> None:
src/porepy/numerics/time_step_control.py:                    f"achieved its minimum admissible value -> dt = dt_min = {self.dt}."
src/porepy/numerics/time_step_control.py:            self.time -= self.dt  # (S1)
src/porepy/numerics/time_step_control.py:            self.time_index -= 1  # (S2)
src/porepy/numerics/time_step_control.py:    def _correction_based_on_dt_min(self) -> None:
src/porepy/numerics/time_step_control.py:    def _correction_based_on_dt_max(self) -> None:
src/porepy/numerics/time_step_control.py:    def _correction_based_on_schedule(self) -> None:
src/porepy/numerics/time_step_control.py:            self.dt = schedule_time - self.time  # correct  time step
src/porepy/numerics/time_step_control.py:            if self._scheduled_idx < len(self.schedule) - 1:
src/porepy/numerics/time_step_control.py:    def _is_strictly_increasing(check_array: np.ndarray) -> bool:
src/porepy/numerics/time_step_control.py:        rtol: float = 1e-05,
src/porepy/numerics/time_step_control.py:        atol: float = 1e-08,
src/porepy/numerics/time_step_control.py:    ) -> bool:
src/porepy/numerics/time_step_control.py:        Reference: https://github.com/numpy/numpy/issues/7784#issuecomment-848036186
src/porepy/numerics/time_step_control.py:        ss = np.searchsorted(schedule[1:-1], sim_times, side="left")
src/porepy/numerics/time_step_control.py:    def write_time_information(self, path: Optional[Path] = None) -> None:
src/porepy/numerics/time_step_control.py:    def load_time_information(self, path: Optional[Path] = None) -> None:
src/porepy/numerics/time_step_control.py:    def set_from_history(self, time_index: int = -1) -> None:
src/porepy/numerics/time_step_control.py:        """Load previous visited history for resuming, and cut-off afterward
src/porepy/numerics/solvers/andersonacceleration.py:    def __init__(self, dimension, depth) -> None:
src/porepy/numerics/solvers/andersonacceleration.py:    def reset(self) -> None:
src/porepy/numerics/solvers/andersonacceleration.py:    def apply(self, gk: np.ndarray, fk: np.ndarray, iteration: int) -> np.ndarray:
src/porepy/numerics/solvers/andersonacceleration.py:            fk: residual g(xk) - xk; in general some increment.
src/porepy/numerics/solvers/andersonacceleration.py:            col = (iteration - 1) % self._depth
src/porepy/numerics/solvers/andersonacceleration.py:            self._Fk[:, col] = fk - self._fkm1
src/porepy/numerics/solvers/andersonacceleration.py:            self._Gk[:, col] = gk - self._gkm1
src/porepy/numerics/solvers/andersonacceleration.py:            xkp1 = gk - np.dot(self._Gk[:, 0:mk], gamma_k)
src/porepy/numerics/README.md:* solver and mixed-dimensional interfaces [mixed_dim](mixed_dim)
src/porepy/numerics/nonlinear/nonlinear_solvers.py:# Module-wide logger
src/porepy/numerics/nonlinear/nonlinear_solvers.py:            "nl_convergence_tol": 1e-10,
src/porepy/numerics/nonlinear/nonlinear_solvers.py:            # Re-discretize the nonlinear term
src/porepy/numerics/nonlinear/nonlinear_solvers.py:                    "---------------------------------------- saturation_max = ",
src/porepy/numerics/nonlinear/nonlinear_solvers.py:                eps = 1e-5  # let's not be too strict
src/porepy/numerics/nonlinear/nonlinear_solvers.py:                        "\n\nNewton converged to non-physical solution, I'm going to reduce the timestep"
src/porepy/numerics/nonlinear/nonlinear_solvers.py:        cumulative_flips -= np.sum(np.not_equal(initial_dirs, dirs), axis=1)
src/porepy/numerics/nonlinear/nonlinear_solvers.py:    def iteration(self, model) -> np.ndarray:
src/porepy/numerics/discretization.py:    2) A do-nothing discretization
src/porepy/numerics/discretization.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/discretization.py:    def __repr__(self) -> str:
src/porepy/numerics/discretization.py:    def ndof(self, g: pp.Grid) -> int:
src/porepy/numerics/discretization.py:    def discretize(self, g: pp.Grid, data: Dict) -> None:
src/porepy/numerics/discretization.py:    def update_discretization(self, g: pp.Grid, data: Dict) -> None:
src/porepy/numerics/discretization.py:    ) -> Union[sps.spmatrix, np.ndarray]:
src/porepy/numerics/discretization.py:    def assemble_matrix(self, g: pp.Grid, data: Dict) -> sps.spmatrix:
src/porepy/numerics/discretization.py:    def assemble_rhs(self, g: pp.Grid, data: Dict) -> np.ndarray:
src/porepy/numerics/discretization.py:    """Do-nothing discretization object. Used if a discretizaiton object
src/porepy/numerics/fv/biot.py:""" Modules contains discretization of poro-elasticity by the multi-point stress
src/porepy/numerics/fv/biot.py:    J.M. Nordbotten (2016): STABLE CELL-CENTERED FINITE VOLUME DISCRETIZATION FOR BIOT
src/porepy/numerics/fv/biot.py:of the poro-elastic system (relying heavily on its parent class pp.Mpsa). This is a
src/porepy/numerics/fv/biot.py:terms in the poro-elasticity system. These have empty discretize() methods, and should
src/porepy/numerics/fv/biot.py:the most convenient way to set up a discretization for poro-elasticity is to use
src/porepy/numerics/fv/biot.py:mechanics, but will turn into a standard poro-elasticity equation for non-fractured
src/porepy/numerics/fv/biot.py:# Module-wide logger
src/porepy/numerics/fv/biot.py:    """Discretization class for poro-elasticity, based on MPSA.
src/porepy/numerics/fv/biot.py:    ) -> None:
src/porepy/numerics/fv/biot.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/biot.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/biot.py:            np.ndarray: Right-hand side vector with representation of boundary
src/porepy/numerics/fv/biot.py:    def assemble_rhs(self, sd: pp.Grid, sd_data: dict) -> np.ndarray:
src/porepy/numerics/fv/biot.py:        """Return the right-hand side for a poro-elastic system.
src/porepy/numerics/fv/biot.py:    def assemble_matrix(self, sd: pp.Grid, sd_data: dict) -> sps.spmatrix:
src/porepy/numerics/fv/biot.py:        """Assemble the poro-elastic system matrix.
src/porepy/numerics/fv/biot.py:                with discretization of the sub-parts of the system.
src/porepy/numerics/fv/biot.py:        # procedure (it will result in a key error towards the end of this function - it
src/porepy/numerics/fv/biot.py:        # for mpfa and mpsa, due to the multi-physics structure of the discretization.
src/porepy/numerics/fv/biot.py:        # Dump discretization of mass term - this will be fully rediscretized below
src/porepy/numerics/fv/biot.py:    def discretize(self, sd: pp.Grid, sd_data: dict) -> None:
src/porepy/numerics/fv/biot.py:        NOTE: This function does *not* discretize purely flow-related terms (Darcy flow
src/porepy/numerics/fv/biot.py:            # Discretization of sub-problem
src/porepy/numerics/fv/biot.py:            logger.info(f"Done with subproblem {reg_i}. Elapsed time {time() - tic}")
src/porepy/numerics/fv/biot.py:    ) -> tuple[
src/porepy/numerics/fv/biot.py:        """Discretization of poro-elastic system."""
src/porepy/numerics/fv/biot.py:        # The grid coordinates are always three-dimensional, even if the grid
src/porepy/numerics/fv/biot.py:        # is really 2D. This means that there is not a 1-1 relation between the
src/porepy/numerics/fv/biot.py:        # Right-hand side terms for the stress discretization
src/porepy/numerics/fv/biot.py:        # Right-hand side for boundary discretization
src/porepy/numerics/fv/biot.py:        # Call discretization of grad_p-term
src/porepy/numerics/fv/biot.py:    ) -> tuple[sps.spmatrix, sps.spmatrix]:
src/porepy/numerics/fv/biot.py:        Consistent discretization of grad_p-term in MPSA-W method.
src/porepy/numerics/fv/biot.py:                discretization of the force on the face due to cell-centre
src/porepy/numerics/fv/biot.py:        discretization are obtained as in standard MPSA-W method.
src/porepy/numerics/fv/biot.py:        imbalance, and thus induce additional displacement gradients in the sub-cells.
src/porepy/numerics/fv/biot.py:        An additional system is set up, which applies non-zero conditions to the
src/porepy/numerics/fv/biot.py:        Thus (i)-(iii) can be inverted to express the additional displacement gradients
src/porepy/numerics/fv/biot.py:        Thus we can compute the basis functions 'grad_p_jumps' on the sub-cells.
src/porepy/numerics/fv/biot.py:        due to cell-center pressure acting on the face from the chosen side.
src/porepy/numerics/fv/biot.py:        The pair subfno_unique-unique_subfno gives the side convention.
src/porepy/numerics/fv/biot.py:        # uniquely define sub-cells, and thus index for gradients)
src/porepy/numerics/fv/biot.py:        # transfer nAlpha to a subface-based quantity by pairing expressions on the
src/porepy/numerics/fv/biot.py:        # convenience method for reshaping nAlpha from face-based
src/porepy/numerics/fv/biot.py:        # to component-based. This is to build a block diagonal sparse matrix
src/porepy/numerics/fv/biot.py:        # compatible with igrad * rhs_units, that is first all x-component, then y, and z
src/porepy/numerics/fv/biot.py:        # Reshape nAlpha component-wise
src/porepy/numerics/fv/biot.py:        # as a force on the faces. The right-hand side is thus formed of the
src/porepy/numerics/fv/biot.py:            - bound_exclusion.exclude_neu_rob.shape[0]
src/porepy/numerics/fv/biot.py:        # No right-hand side for cell displacement equations.
src/porepy/numerics/fv/biot.py:            (nd * num_subfno - num_dir_subface, num_subfno_unique * nd)
src/porepy/numerics/fv/biot.py:        # We get a plus because the -n * I * alpha * p term is moved over to the rhs
src/porepy/numerics/fv/biot.py:        # Output should be on cell-level (not sub-cell)
src/porepy/numerics/fv/biot.py:        # that is jumps in cell-centers pressures, ready to be
src/porepy/numerics/fv/biot.py:        # Prepare for computation of -grad_p_face term
src/porepy/numerics/fv/biot.py:        grad_p_face = -sgn_diag_F * map_unique_subfno * nAlpha_grad * sc2c
src/porepy/numerics/fv/biot.py:    def _face_vector_to_scalar(self, nf: int, nd: int) -> sps.coo_matrix:
src/porepy/numerics/fv/biot.py:    ) -> sps.spmatrix:
src/porepy/numerics/fv/biot.py:        """Create a mapping from sub-cell gradients to cell-wise traces of the gradient
src/porepy/numerics/fv/biot.py:        # Sub-cell wise trace of strain tensor: One row per sub-cell
src/porepy/numerics/fv/biot.py:        # Adjust the columns to hit each sub-cell
src/porepy/numerics/fv/biot.py:        incr = np.cumsum(nd**2 * np.ones(cell_node_blocks.shape[1])) - nd**2
src/porepy/numerics/fv/biot.py:        # Integrate the trace over the sub-cell, that is, distribute the cell
src/porepy/numerics/fv/biot.py:        # volumes equally over the sub-cells
src/porepy/numerics/fv/biot.py:        # and we have our mapping from vector to scalar values on sub-cells
src/porepy/numerics/fv/biot.py:        # Mapping from sub-cells to cells
src/porepy/numerics/fv/biot.py:    # ----------------------- Methods for post processing -------------------------
src/porepy/numerics/fv/biot.py:    ) -> list[np.ndarray]:
src/porepy/numerics/fv/biot.py:            return np.asarray(vals).reshape((-1, 1), order="F").tolist()
src/porepy/numerics/fv/biot.py:    def extract_scalar(self, sd: pp.Grid, u: np.ndarray) -> np.ndarray:
src/porepy/numerics/fv/biot.py:    def compute_flux(self, sd: pp.Grid, u: np.ndarray, sd_data: dict) -> np.ndarray:
src/porepy/numerics/fv/biot.py:    def compute_stress(self, sd: pp.Grid, u: np.ndarray, sd_data: dict) -> np.ndarray:
src/porepy/numerics/fv/biot.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/fv/biot.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/biot.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/biot.py:        """Return the matrix and right-hand side for a discretization of the pressure
src/porepy/numerics/fv/biot.py:            rhs: array (sd.dim * sd.num_cells) Right-hand side.
src/porepy/numerics/fv/biot.py:    def assemble_matrix(self, sd: pp.Grid, sd_data: dict) -> sps.spmatrix:
src/porepy/numerics/fv/biot.py:        """Return the matrix and right-hand side for a discretization of the pressure
src/porepy/numerics/fv/biot.py:                """GradP class requires a pre-computed discretization to be
src/porepy/numerics/fv/biot.py:    def assemble_rhs(self, sd: pp.Grid, sd_data: dict) -> np.ndarray:
src/porepy/numerics/fv/biot.py:        """Return the right-hand side for a discretization of the pressure gradient term.
src/porepy/numerics/fv/biot.py:            thermal_expansion * (T-T_reference) * I.
src/porepy/numerics/fv/biot.py:            np.ndarray: Right-hand side vector with representation of reference pressure
src/porepy/numerics/fv/biot.py:        # Account for half-face based discretization
src/porepy/numerics/fv/biot.py:    ) -> None:
src/porepy/numerics/fv/biot.py:        # The following is only used for mixed-dimensional problems.
src/porepy/numerics/fv/biot.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/biot.py:        """Return the matrix and right-hand side for a discretization of the
src/porepy/numerics/fv/biot.py:            rhs: array (sd.dim * g_num_cells) Right-hand side.
src/porepy/numerics/fv/biot.py:    def assemble_matrix(self, sd: pp.Grid, sd_data: dict) -> sps.spmatrix:
src/porepy/numerics/fv/biot.py:        """Return the matrix and right-hand side for a discretization of the
src/porepy/numerics/fv/biot.py:                """DivU class requires a pre-computed discretization to be
src/porepy/numerics/fv/biot.py:    def assemble_rhs(self, sd: pp.Grid, sd_data: dict) -> np.ndarray:
src/porepy/numerics/fv/biot.py:        """Return the right-hand side for a discretization of the displacement
src/porepy/numerics/fv/biot.py:            np.ndarray: Zero right-hand side vector with representation of boundary
src/porepy/numerics/fv/biot.py:            -matrix_dictionary[self.bound_div_u_matrix_key]
src/porepy/numerics/fv/biot.py:            * (d_bound_1 - d_bound_0)
src/porepy/numerics/fv/biot.py:        the higher-dimensional grid.
src/porepy/numerics/fv/biot.py:                mixed-dimensional grid.
src/porepy/numerics/fv/biot.py:                mixed-dimensional grid.
src/porepy/numerics/fv/biot.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/fv/biot.py:            sub-face boundary condition but only a face-wise mortar?"""
src/porepy/numerics/fv/biot.py:        # on the rhs as div_u^{k-1}. This results in a contribution to the
src/porepy/numerics/fv/biot.py:        the lower-dimensional grid.
src/porepy/numerics/fv/biot.py:                mixed-dimensional grid.
src/porepy/numerics/fv/biot.py:                mixed-dimensional grid.
src/porepy/numerics/fv/biot.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/fv/biot.py:        # the lower-dimensional grid
src/porepy/numerics/fv/biot.py:        # on the rhs as div_u^{k-1}. This results in a contribution to the
src/porepy/numerics/fv/biot.py:        # This term is second part of (u^k - u^{k-1}) moved to
src/porepy/numerics/fv/biot.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/biot.py:        """Return the matrix and right-hand side for a discretization of the
src/porepy/numerics/fv/biot.py:            rhs: array (sd.dim * sd.num_cells) Right-hand side.
src/porepy/numerics/fv/biot.py:    def assemble_matrix(self, sd: pp.Grid, sd_data: dict) -> sps.spmatrix:
src/porepy/numerics/fv/biot.py:        """Return the matrix and right-hand side for a discretization of the
src/porepy/numerics/fv/biot.py:                """BiotStabilization class requires a pre-computed
src/porepy/numerics/fv/biot.py:    def assemble_rhs(self, sd: pp.Grid, sd_data: dict) -> np.ndarray:
src/porepy/numerics/fv/biot.py:        """Return the right-hand side for the stabilization part of the displacement
src/porepy/numerics/fv/biot.py:            np.ndarray: Zero right-hand side vector with representation of boundary
src/porepy/numerics/fv/biot.py:        # fluid mass conservation, thus needs a right-hand side in the implicit Euler
src/porepy/numerics/fv/upwind.py:    def __init__(self, keyword: str = "transport", flux_array_key="darcy_flux") -> None:
src/porepy/numerics/fv/upwind.py:        # Keywords used to store matrix and right-hand side in the matrix_dictionary
src/porepy/numerics/fv/upwind.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/upwind.py:        ---------
src/porepy/numerics/fv/upwind.py:        ------
src/porepy/numerics/fv/upwind.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/upwind.py:    def assemble_matrix(self, sd: pp.Grid, data: dict) -> sps.spmatrix:
src/porepy/numerics/fv/upwind.py:    def assemble_rhs(self, sd: pp.Grid, data: dict) -> np.ndarray:
src/porepy/numerics/fv/upwind.py:        """Return the right-hand side for an upwind discretization of a linear
src/porepy/numerics/fv/upwind.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fv/upwind.py:        """Return the matrix and righ-hand side for an upstream discretization based on
src/porepy/numerics/fv/upwind.py:        If not specified the inflow boundary conditions are no-flow, while
src/porepy/numerics/fv/upwind.py:        ----------
src/porepy/numerics/fv/upwind.py:        ------
src/porepy/numerics/fv/upwind.py:            Right-hand side which contains the boundary conditions.
src/porepy/numerics/fv/upwind.py:        --------
src/porepy/numerics/fv/upwind.py:        M_minus_U = M - U
src/porepy/numerics/fv/upwind.py:        # Fill the array based on the cell-face relation. By construction, the normal
src/porepy/numerics/fv/upwind.py:        # Make row and data arrays, preparing to make a coo-matrix for the upstream
src/porepy/numerics/fv/upwind.py:        # cell-to-face map.
src/porepy/numerics/fv/upwind.py:        # (note that the exterior of the domain is represented by -1 in cf_dense).
src/porepy/numerics/fv/upwind.py:        # in an advection-diffusion equation, treatment of boundary conditions can be a
src/porepy/numerics/fv/upwind.py:            (-sgn_div[neumann_ind], (neumann_ind, neumann_ind)),
src/porepy/numerics/fv/upwind.py:            (-np.ones(inflow_ind.size), (inflow_ind, inflow_ind)),
src/porepy/numerics/fv/upwind.py:        ----------
src/porepy/numerics/fv/upwind.py:        ------
src/porepy/numerics/fv/upwind.py:        dist_vector = sd.face_centers[:, faces] - sd.cell_centers[:, cells]
src/porepy/numerics/fv/upwind.py:        # Element-wise scalar products between the distance vectors and the
src/porepy/numerics/fv/upwind.py:        dist = np.einsum("ij,ij->j", dist_vector, sd.face_normals[:, faces])
src/porepy/numerics/fv/upwind.py:        # Additionally, we consider the phi (porosity) and the cell-mapping
src/porepy/numerics/fv/upwind.py:        ----------
src/porepy/numerics/fv/upwind.py:        ------
src/porepy/numerics/fv/upwind.py:        # We need to impose no-flow for the inflow faces without boundary
src/porepy/numerics/fv/tpfa.py:"""The module contains an implementation of the finite volume two-point flux
src/porepy/numerics/fv/tpfa.py:    """Discretize elliptic equations by a two-point flux approximation.
src/porepy/numerics/fv/tpfa.py:        will be accessed (e.g. flow specific, or conductivity / heat-related).
src/porepy/numerics/fv/tpfa.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/fv/tpfa.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fv/tpfa.py:        Discretize the second order elliptic equation using two-point flux approximation.
src/porepy/numerics/fv/tpfa.py:        We assume the following two sub-dictionaries to be present in the data
src/porepy/numerics/fv/tpfa.py:                cell-wise. This is the effective permeability, any scaling by
src/porepy/numerics/fv/tpfa.py:        # We find the left(right)_face -> left(right)_cell mapping
src/porepy/numerics/fv/tpfa.py:        # flux over an internal face: flux_left = T_left * (p_left - p_right).
src/porepy/numerics/fv/tpfa.py:        # to add the second term T_left * (-p_right). Equivalently for flux_right.
src/porepy/numerics/fv/tpfa.py:        sgn_periodic = np.hstack((sgn_g, -left_sgn, -right_sgn))
src/porepy/numerics/fv/tpfa.py:        fc_cc = sd.face_centers[::, fi] - sd.cell_centers[::, ci]
src/porepy/numerics/fv/tpfa.py:        # For primal-like discretizations like the TPFA, internal boundaries
src/porepy/numerics/fv/tpfa.py:        t_b[is_dir] = -t[is_dir]
src/porepy/numerics/fv/tpfa.py:        # On Neumann faces, use half-transmissibilities
src/porepy/numerics/fv/tpfa.py:            -1 / t_full[bnd.is_neu]
src/porepy/numerics/fv/fv_elliptic.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/fv_elliptic.py:    ) -> np.ndarray:
src/porepy/numerics/fv/fv_elliptic.py:                either a mono-dimensional or a mixed-dimensional problem.
src/porepy/numerics/fv/fv_elliptic.py:    ) -> np.ndarray:
src/porepy/numerics/fv/fv_elliptic.py:                either a mono-dimensional or a mixed-dimensional problem. Will
src/porepy/numerics/fv/fv_elliptic.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/fv_elliptic.py:        """Return the matrix and right-hand side for a discretization of a second
src/porepy/numerics/fv/fv_elliptic.py:            np.ndarray: Right-hand side vector with representation of boundary
src/porepy/numerics/fv/fv_elliptic.py:    def assemble_matrix(self, sd: pp.Grid, data: dict) -> sps.spmatrix:
src/porepy/numerics/fv/fv_elliptic.py:    def assemble_rhs(self, sd: pp.Grid, data: dict) -> np.ndarray:
src/porepy/numerics/fv/fv_elliptic.py:        """Return the right-hand side for a discretization of a second order elliptic
src/porepy/numerics/fv/fv_elliptic.py:        val = -div * bound_flux * bc_val
src/porepy/numerics/fv/fv_elliptic.py:            val -= div * vector_source_discr * vector_source
src/porepy/numerics/fv/fv_elliptic.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/fv/fv_elliptic.py:        used to impose flux continuity on a higher-dimensional domain.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/fv/fv_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/fv/fv_elliptic.py:            # If bound flux is gven as sub-faces we have to map it from sub-faces
src/porepy/numerics/fv/fv_elliptic.py:            sub-face boundary condition but only a face-wise mortar?"""
src/porepy/numerics/fv/fv_elliptic.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/fv/fv_elliptic.py:        used to impose flux continuity on a lower-dimensional domain.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/fv/fv_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/fv/fv_elliptic.py:        cc[self_ind, 2] -= proj
src/porepy/numerics/fv/fv_elliptic.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/fv/fv_elliptic.py:        used to impose flux continuity on a higher-dimensional domain.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/fv/fv_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/fv/fv_elliptic.py:            rhs[2] -= (
src/porepy/numerics/fv/fv_elliptic.py:                rhs[2] -= proj * vector_source_discr * vector_source
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/fv/fv_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/fv/fv_elliptic.py:        rhs[2] -= proj * matrix_dictionary[self.bound_pressure_face_matrix_key] * bc_val
src/porepy/numerics/fv/fv_elliptic.py:            rhs[2] -= proj * vector_source_discr * vector_source
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:            proj_primary (sparse matrix): Pressure projection from the higher-dim
src/porepy/numerics/fv/fv_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/fv/fv_elliptic.py:        node in a mixed-dimensional method. Specific usage depends on the
src/porepy/numerics/fv/fv_elliptic.py:        used to impose flux continuity on a lower-dimensional domain.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/fv/fv_elliptic.py:        To assemble mixed-dimensional elliptic problems, the recommended solution is
src/porepy/numerics/fv/fv_elliptic.py:        cc[2, self_ind] -= proj
src/porepy/numerics/fv/fv_elliptic.py:    dimensions separated by a lower-dimensional domain (think two intersecting
src/porepy/numerics/fv/fv_elliptic.py:    fractures), in cases where one does not want to eliminate the lower-dimensional
src/porepy/numerics/fv/fv_elliptic.py:    NOTICE: There seems  no point in assigning this method as the higher-dimensional
src/porepy/numerics/fv/fv_elliptic.py:        Formal discretization method - nothing to do here.
src/porepy/numerics/fv/fv_elliptic.py:        ----------
src/porepy/numerics/fv/fv_elliptic.py:        This method should not be used for the zero-permeability case; it would
src/porepy/numerics/fv/fv_elliptic.py:        require a flux in the higher-dimensional grid. Therefore raise an error if
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/fv/fv_elliptic.py:                                  higher-dimensional discretization"""
src/porepy/numerics/fv/fv_elliptic.py:        This method should not be used for the zero-permeability case; it would
src/porepy/numerics/fv/fv_elliptic.py:        require a flux in the higher-dimensional grid. Therefore raise an error if
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                mixed-dimensional grid.
src/porepy/numerics/fv/fv_elliptic.py:                The discretization of the relevant term is done in-place in cc.
src/porepy/numerics/fv/fv_elliptic.py:                                  higher-dimensional discretization"""
src/porepy/numerics/fv/mass_matrix.py:Mass matrix classes for a discretization of a L2-mass bilinear form with constant test
src/porepy/numerics/fv/mass_matrix.py:    """Class that provides the discretization of a L2-mass bilinear form with constant
src/porepy/numerics/fv/mass_matrix.py:    def __init__(self, keyword: str = "flow") -> None:
src/porepy/numerics/fv/mass_matrix.py:    def _key(self) -> str:
src/porepy/numerics/fv/mass_matrix.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/mass_matrix.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/mass_matrix.py:        """Return the matrix and right-hand side (null) for a discretization of a
src/porepy/numerics/fv/mass_matrix.py:        L2-mass bilinear form with constant test and trial functions. Also
src/porepy/numerics/fv/mass_matrix.py:            rhs (array, self.ndof): zero right-hand side.
src/porepy/numerics/fv/mass_matrix.py:    def assemble_matrix(self, sd: pp.Grid, data: dict) -> sps.spmatrix:
src/porepy/numerics/fv/mass_matrix.py:        """Return the matrix for a discretization of a L2-mass bilinear form with
src/porepy/numerics/fv/mass_matrix.py:    def assemble_rhs(self, sd: pp.Grid, data: dict) -> np.ndarray:
src/porepy/numerics/fv/mass_matrix.py:        """Return the (null) right-hand side for a discretization of a L2-mass bilinear
src/porepy/numerics/fv/mass_matrix.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fv/mass_matrix.py:        """Discretize a L2-mass bilinear form with constant test and trial functions.
src/porepy/numerics/fv/mass_matrix.py:        We assume the following two sub-dictionaries to be present in the data
src/porepy/numerics/fv/mass_matrix.py:                represent the porosity, apertures (for lower-dimensional
src/porepy/numerics/fv/mass_matrix.py:    """Class that provides the discretization of a L2-mass bilinear form with constant
src/porepy/numerics/fv/mass_matrix.py:    def __init__(self, keyword: str = "flow") -> None:
src/porepy/numerics/fv/mass_matrix.py:    def _key(self) -> str:
src/porepy/numerics/fv/mass_matrix.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/mass_matrix.py:        ---------
src/porepy/numerics/fv/mass_matrix.py:        ------
src/porepy/numerics/fv/mass_matrix.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/mass_matrix.py:        """Return the inverse of the matrix and right-hand side (null) for a
src/porepy/numerics/fv/mass_matrix.py:        discretization of a L2-mass bilinear form with constant test and trial
src/porepy/numerics/fv/mass_matrix.py:                zero right-hand side.
src/porepy/numerics/fv/mass_matrix.py:    def assemble_matrix(self, sd: pp.Grid, data: dict) -> sps.spmatrix:
src/porepy/numerics/fv/mass_matrix.py:        """Return the inverse of the matrix for a discretization of a L2-mass bilinear
src/porepy/numerics/fv/mass_matrix.py:    def assemble_rhs(self, sd: pp.Grid, data: dict) -> np.ndarray:
src/porepy/numerics/fv/mass_matrix.py:        """Return the (null) right-hand side for a discretization of the inverse of a
src/porepy/numerics/fv/mass_matrix.py:        L2-mass bilinear form with constant test and trial functions. Also discretize
src/porepy/numerics/fv/mass_matrix.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fv/mass_matrix.py:        """Discretize the inverse of a L2-mass bilinear form with constant test and
src/porepy/numerics/fv/mass_matrix.py:                zero right-hand side, stored as     self._key() + "bound_inv_mass".
src/porepy/numerics/fv/mass_matrix.py:                represent the porosity, apertures (for lower-dimensional
src/porepy/numerics/fv/hybrid_weighted_average.py:def ndof(g: pp.Grid) -> int:
src/porepy/numerics/fv/hybrid_weighted_average.py:    """- hardcoded for two-phase"""
src/porepy/numerics/fv/hybrid_weighted_average.py:            h = 1e-4
src/porepy/numerics/fv/hybrid_weighted_average.py:                permeability(val + h) - 2 * permeability(val) + permeability(val - h)
src/porepy/numerics/fv/hybrid_weighted_average.py:        - harcoded for two phases
src/porepy/numerics/fv/hybrid_weighted_average.py:            density_max * gravity_value * (left_restriction @ z - right_restriction @ z)
src/porepy/numerics/fv/hybrid_weighted_average.py:            left_restriction @ pressure - right_restriction @ pressure
src/porepy/numerics/fv/hybrid_weighted_average.py:        ) - g_internal_faces
src/porepy/numerics/fv/hybrid_weighted_average.py:            g_ref_faces + c_faces_ref + 1e-8
src/porepy/numerics/fv/hybrid_weighted_average.py:            tmp = -pp.ad.functions.maximum(-tmp, -1e6)
src/porepy/numerics/fv/hybrid_weighted_average.py:        lambda_WA = beta_faces * (left_restriction @ mobility) + (1 - beta_faces) * (
src/porepy/numerics/fv/hybrid_weighted_average.py:    z = -sd.cell_centers[
src/porepy/numerics/fv/hybrid_weighted_average.py:        dim_max - 1
src/porepy/numerics/fv/hybrid_weighted_average.py:    def no_name(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fv/hybrid_weighted_average.py:        eps = 1e-20j
src/porepy/numerics/fv/hybrid_weighted_average.py:            pressure_eps[i] -= eps  ### ...
src/porepy/numerics/fv/hybrid_weighted_average.py:            saturation_m_eps[i] -= eps  # the constraint is here...
src/porepy/numerics/fv/hybrid_weighted_average.py:            saturation_ell_eps[i] -= eps  ###...
src/porepy/numerics/fv/hybrid_weighted_average.py:        eps = 1e-5
src/porepy/numerics/fv/hybrid_weighted_average.py:            jacobian[:, i] = (flux_cell_no_bc_eps - flux_cell_no_bc) / eps
src/porepy/numerics/fv/hybrid_weighted_average.py:            saturation_m_eps[i] -= eps  # the constraint is here...
src/porepy/numerics/fv/hybrid_weighted_average.py:                flux_cell_no_bc_eps - flux_cell_no_bc
src/porepy/numerics/fv/hybrid_weighted_average.py:            saturation_ell_eps[i] -= eps  ### ...
src/porepy/numerics/fv/hybrid_weighted_average.py:    ) -> Union[sp.sparse.spmatrix, np.ndarray]:
src/porepy/numerics/fv/mpfa.py:"""Implementation of the multi-point flux approximation O-method.
src/porepy/numerics/fv/mpfa.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/fv/mpfa.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/mpfa.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fv/mpfa.py:        """Discretize the second order elliptic equation using multi-point flux
src/porepy/numerics/fv/mpfa.py:        We assume the following two sub-dictionaries to be present in the data
src/porepy/numerics/fv/mpfa.py:            - second_order_tensor (``class:~porepy.params.tensor.SecondOrderTensor``):
src/porepy/numerics/fv/mpfa.py:                Permeability defined cell-wise. This is the effective permeability; any
src/porepy/numerics/fv/mpfa.py:            - bc (``class:~porepy.params.bc.BoundaryCondition``): boundary conditions.
src/porepy/numerics/fv/mpfa.py:            - ambient_dimension (``int``): Optional. Ambient dimension, used in the
src/porepy/numerics/fv/mpfa.py:            - mpfa_eta (``float``): Optional. Range [0, 1). Location of pressure
src/porepy/numerics/fv/mpfa.py:            - mpfa_inverter (``str``): Optional. Inverter to apply for local problems.
src/porepy/numerics/fv/mpfa.py:            - ``flux: sps.csc_matrix (sd.num_faces, sd.num_cells)``
src/porepy/numerics/fv/mpfa.py:            - ``bound_flux: ps.csc_matrix (sd.num_faces, sd.num_faces)``
src/porepy/numerics/fv/mpfa.py:            - ``bound_pressure_cell: sps.csc_matrix (sd.num_faces, sd.num_cells)``
src/porepy/numerics/fv/mpfa.py:            - ``bound_pressure_face: sps.csc_matrix (sd.num_faces, sd.num_faces)``
src/porepy/numerics/fv/mpfa.py:            - ``vector_source: sps.csc_matrix (sd.num_faces, sd.num_cells * dim)``
src/porepy/numerics/fv/mpfa.py:        # estimate the memory need of pressures (face_nodes -> node_cells -> unique).
src/porepy/numerics/fv/mpfa.py:            # The vector source term has a vector-sized number of rows, and needs a
src/porepy/numerics/fv/mpfa.py:            # The vector source term has a vector-sized number of rows, and needs a
src/porepy/numerics/fv/mpfa.py:            # in-plane (relative to the grid) parts, and apply this to all cells in the
src/porepy/numerics/fv/mpfa.py:                # size of the blocks - this will always be the dimension of the rotation
src/porepy/numerics/fv/mpfa.py:                # matrix, that is, 3 - due to the grid coordinates being 3d. If the
src/porepy/numerics/fv/mpfa.py:                (-1, 1)
src/porepy/numerics/fv/mpfa.py:    def update_discretization(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fv/mpfa.py:    ) -> tuple[
src/porepy/numerics/fv/mpfa.py:        Actual implementation of the MPFA O-method. To calculate MPFA on a grid
src/porepy/numerics/fv/mpfa.py:        The pressure is discretized as a linear function on sub-cells (see reference
src/porepy/numerics/fv/mpfa.py:        value and the sub-cell gradients (this is in contrast to most papers, which use
src/porepy/numerics/fv/mpfa.py:        continuity points, while C consists of +- 1 (depending on which side the cell is
src/porepy/numerics/fv/mpfa.py:        to be unity in one cell at a time. Thus (i)-(iv) can be inverted to express the
src/porepy/numerics/fv/mpfa.py:        compute the basis functions on the sub-cells. Because of the method construction
src/porepy/numerics/fv/mpfa.py:        (again see reference paper), the basis function of a cell c will be non-zero on
src/porepy/numerics/fv/mpfa.py:        all sub-cells sharing a vertex with c. Finally, the fluxes as functions of cell
src/porepy/numerics/fv/mpfa.py:        face. Boundary values can be incorporated with appropriate modifications -
src/porepy/numerics/fv/mpfa.py:        Neumann conditions will have a non-zero right hand side for (i), while Dirichlet
src/porepy/numerics/fv/mpfa.py:                Matrix for cell-center potential contribution to face potential
src/porepy/numerics/fv/mpfa.py:        # The grid coordinates are always three-dimensional, even if the grid is really
src/porepy/numerics/fv/mpfa.py:        # 2D. This means that there is not a 1-1 relation between the number of
src/porepy/numerics/fv/mpfa.py:        # sub-cells and nodes. This numbering is used throughout the discretization.
src/porepy/numerics/fv/mpfa.py:            # If bnd is not already a sub-face_bound we extend it
src/porepy/numerics/fv/mpfa.py:        # 1) The cell-face distances from subcells that share a subface are paired (put
src/porepy/numerics/fv/mpfa.py:        darcy = -nk_grad_all[subcell_topology.unique_subfno]
src/porepy/numerics/fv/mpfa.py:        # points inwards, the contribution is -1, that is, we do the same modification
src/porepy/numerics/fv/mpfa.py:        # pressure plus a deviation given by the cell-face distance times the subcell
src/porepy/numerics/fv/mpfa.py:        # Mapping from sub-faces to faces
src/porepy/numerics/fv/mpfa.py:        #  (nk_grad_r - pr_trace_grad, -pr_trace_cell) (subcell_grad)    = RHS
src/porepy/numerics/fv/mpfa.py:        #  (nk_grad_r - pr_trace_grad)
src/porepy/numerics/fv/mpfa.py:        # matrix-vector product.
src/porepy/numerics/fv/mpfa.py:        grad_eqs = sps.vstack((nk_grad_n, nk_grad_r - pr_trace_grad, pr_cont_grad))
src/porepy/numerics/fv/mpfa.py:        # the sum of the absolute values of non-zero elements and scale the entire row
src/porepy/numerics/fv/mpfa.py:        # also need to left precondition the right-hand side.
src/porepy/numerics/fv/mpfa.py:        # (below), it is desirable to get the system over to a block-diagonal structure,
src/porepy/numerics/fv/mpfa.py:        # Re-organize system into a block-diagonal form.
src/porepy/numerics/fv/mpfa.py:        # of that cell, with the first item representing the x-component etc.
src/porepy/numerics/fv/mpfa.py:        # x-component of the gradient, the second the y-component etc.
src/porepy/numerics/fv/mpfa.py:        # there would not be an exact match between the number of equal (nno-cno) pairs
src/porepy/numerics/fv/mpfa.py:        rhs_cells = -sps.vstack(
src/porepy/numerics/fv/mpfa.py:                -pr_trace_cell,
src/porepy/numerics/fv/mpfa.py:        # Compute matrix-matrix product, this is used in several steps below
src/porepy/numerics/fv/mpfa.py:        # Compute matrix-matrix product, this is used in several steps below
src/porepy/numerics/fv/mpfa.py:            # face values to the subfaces. We do this by an area-weighted average. The
src/porepy/numerics/fv/mpfa.py:        # due to imbalance in cell-center vector sources. This term is computed on a
src/porepy/numerics/fv/mpfa.py:        # sub-cell basis and has dimensions (num_subfaces, num_subcells * nd)
src/porepy/numerics/fv/mpfa.py:        # Output should be on cell-level (not sub-cell)
src/porepy/numerics/fv/mpfa.py:    ) -> tuple[sps.spmatrix, sps.spmatrix]:
src/porepy/numerics/fv/mpfa.py:        in MPFA-O method.
src/porepy/numerics/fv/mpfa.py:            nk_grad_all: Product between nK products on a sub-cell level and the basis
src/porepy/numerics/fv/mpfa.py:        # discretization are obtained as in standard MPFA-O method. Vector source is
src/porepy/numerics/fv/mpfa.py:        # in the sub-cells. An additional system is set up, which applies non-zero
src/porepy/numerics/fv/mpfa.py:        # Thus (i)-(iii) can be inverted to express the additional pressure gradients
src/porepy/numerics/fv/mpfa.py:        # sub-cells. To ensure flux continuity, as soon as a convention is chosen for
src/porepy/numerics/fv/mpfa.py:        # represents the flux due to cell-center vector source acting on the face from
src/porepy/numerics/fv/mpfa.py:        # the chosen side. The pair subfno_unique-unique_subfno gives the side
src/porepy/numerics/fv/mpfa.py:            - bound_exclusion.exclude_neu_rob.shape[0]
src/porepy/numerics/fv/mpfa.py:        num_zeros = num_subfno - num_dir_subface
src/porepy/numerics/fv/mpfa.py:        # Right hand side term is multiplied with -1
src/porepy/numerics/fv/mpfa.py:        rhs_map = -flux_eq_map
src/porepy/numerics/fv/mpfa.py:        # cell-centers vector sources, ready to be  multiplied with inverse gradients.
src/porepy/numerics/fv/mpfa.py:        vector_source_jumps = -darcy_igrad * prod
src/porepy/numerics/fv/mpfa.py:        # for. Referring to (27)-(28) in Starnoni et al, the variable prod can be
src/porepy/numerics/fv/mpfa.py:        vector_source_bound = -dist_cell_igrad * prod
src/porepy/numerics/fv/mpfa.py:    def _estimate_peak_memory(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/mpfa.py:        # sub-face.
src/porepy/numerics/fv/mpfa.py:        # sub-face
src/porepy/numerics/fv/mpfa.py:    ) -> tuple[sps.spmatrix, sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/mpfa.py:        """Define matrices to turn linear system into block-diagonal form.
src/porepy/numerics/fv/mpfa.py:            cell_node_blocks: Pairs of cell and node pairs, which defines sub-cells.
src/porepy/numerics/fv/mpfa.py:                block-diagonal form.
src/porepy/numerics/fv/mpfa.py:                block-diagonal form.
src/porepy/numerics/fv/mpfa.py:        # block-structure. First eliminate node numbers at the boundary, where the
src/porepy/numerics/fv/mpfa.py:        # cell_node_blocks[1] contains the node numbers associated with each sub-cell
src/porepy/numerics/fv/mpfa.py:        # give a block-diagonal structure
src/porepy/numerics/fv/mpfa.py:    ) -> sps.spmatrix:
src/porepy/numerics/fv/mpfa.py:        # For primal-like discretizations like the MPFA, internal boundaries are handled
src/porepy/numerics/fv/mpfa.py:        # We also need to map the respective Neumann, Robin, and Dirichlet half-faces to
src/porepy/numerics/fv/mpfa.py:        # the global half-face numbering (also interior faces). The latter should not
src/porepy/numerics/fv/mpfa.py:        # therefore set the matrix indices to -1. We also have to scale it with the
src/porepy/numerics/fv/mpfa.py:        # half-face fluxes.
src/porepy/numerics/fv/mpfa.py:        # EK: My understanding of the multiple -1s in the flux equation for boundary
src/porepy/numerics/fv/mpfa.py:        # 1) -nk_grad in the local system gets its sign changed if the boundary
src/porepy/numerics/fv/mpfa.py:        #    operator, which will give another -1 for cells with inwards pointing
src/porepy/numerics/fv/mpfa.py:            # In this case we set the rhs for the sub-faces. Note that the rhs values
src/porepy/numerics/fv/mpfa.py:            scaled_sgn = -1 * np.ones(neu_rob_ind_all.size)
src/porepy/numerics/fv/mpfa.py:            # face values to the subfaces. We do this by an area-weighted average. Note
src/porepy/numerics/fv/mpfa.py:            scaled_sgn = -1 / num_face_nodes[fno[neu_rob_ind_all]]
src/porepy/numerics/fv/mpfa.py:            # Prepare for construction of a coo-matrix
src/porepy/numerics/fv/mpfa.py:        # The columns in neu_cell, dir_cell are ordered from 0 to num_bound-1.
src/porepy/numerics/fv/mpfa.py:        # Map these to all half-face indices.
src/porepy/numerics/fv/mpfa.py:    ) -> pp.BoundaryCondition:
src/porepy/numerics/fv/mpfa.py:        # conditions for non-boundary faces - don't ask. If such conditions are found,
src/porepy/numerics/fv/mpfa.py:    ) -> pp.SecondOrderTensor:
src/porepy/numerics/fv/mpfa.py:) -> tuple[sps.spmatrix, sps.spmatrix]:
src/porepy/numerics/fv/mpfa.py:        p_Ks + G_Ks (x - x_k),
src/porepy/numerics/fv/mpfa.py:            at which the pressures is evaluated. If ``eta`` is a ``nd-array`` it should
src/porepy/numerics/fv/mpfa.py:            contribution from the cell-center pressures.
src/porepy/numerics/fv/mpfa.py:    # We here average the contribution on internal sub-faces. To get out both pressures
src/porepy/numerics/fv/mpfa.py:    # on a sub-face, remove the averaging.
src/porepy/numerics/fv/mpfa.py:    # Get a mapping from cell centers to half-faces.
src/porepy/numerics/fv/mpsa.py:Implementation of the multi-point stress appoximation method.
src/porepy/numerics/fv/mpsa.py:# Module-wide logger
src/porepy/numerics/fv/mpsa.py:    """Implementation of the Multi-point stress approximation.
src/porepy/numerics/fv/mpsa.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/fv/mpsa.py:    def _key(self) -> str:
src/porepy/numerics/fv/mpsa.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/mpsa.py:        ---------
src/porepy/numerics/fv/mpsa.py:        ------
src/porepy/numerics/fv/mpsa.py:    ) -> np.ndarray:
src/porepy/numerics/fv/mpsa.py:    ) -> np.ndarray:
src/porepy/numerics/fv/mpsa.py:    def discretize(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fv/mpsa.py:        Discretize the second order vector elliptic equation using multi-point stress
src/porepy/numerics/fv/mpsa.py:        We assume the following two sub-dictionaries to be present in the data
src/porepy/numerics/fv/mpsa.py:            - fourth_order_tensor: ``class:~porepy.params.tensor.FourthOrderTensor``
src/porepy/numerics/fv/mpsa.py:                Stiffness tensor defined cell-wise.
src/porepy/numerics/fv/mpsa.py:            - bc: ``class:~porepy.params.bc.BoundaryConditionVectorial``
src/porepy/numerics/fv/mpsa.py:            - mpsa_eta: ``float`` Optional. Range [0, 1). Location of displacement
src/porepy/numerics/fv/mpsa.py:            - inverter (``str``): Optional. Inverter to apply for local problems.
src/porepy/numerics/fv/mpsa.py:            - ``stress: sps.csc_matrix (sd.dim * sd.num_faces, sd.dim * sd.num_cells)``
src/porepy/numerics/fv/mpsa.py:            - ``bound_flux: sps.csc_matrix (sd.dim * sd.num_faces, sd.dim *
src/porepy/numerics/fv/mpsa.py:            - ``bound_displacement_cell: sps.csc_matrix (sd.dim * sd.num_faces,
src/porepy/numerics/fv/mpsa.py:            - ``bound_displacement_face: sps.csc_matrix (sd.dim * sd.num_faces,
src/porepy/numerics/fv/mpsa.py:        # memory need of stress (face_nodes -> node_cells -> unique).
src/porepy/numerics/fv/mpsa.py:            # Discretization of sub-problem
src/porepy/numerics/fv/mpsa.py:            logger.info(f"Done with subproblem {reg_i}. Elapsed time {time() - tic}")
src/porepy/numerics/fv/mpsa.py:    def update_discretization(self, sd: pp.Grid, data: dict) -> None:
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/mpsa.py:        """Return the matrix and right-hand side for a discretization of a second
src/porepy/numerics/fv/mpsa.py:        order elliptic equation using a FV method with a multi-point stress
src/porepy/numerics/fv/mpsa.py:                Right-hand side which contains the boundary conditions and the vector
src/porepy/numerics/fv/mpsa.py:    def assemble_matrix(self, sd: pp.Grid, data: dict) -> sps.spmatrix:
src/porepy/numerics/fv/mpsa.py:    def assemble_rhs(self, sd: pp.Grid, data: dict) -> np.ndarray:
src/porepy/numerics/fv/mpsa.py:        """Return the right-hand side for a discretization of a second order elliptic
src/porepy/numerics/fv/mpsa.py:            Right-hand side which contains the boundary conditions and the vector
src/porepy/numerics/fv/mpsa.py:        return -div * bound_stress * bc_val + parameter_dictionary["source"]
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[sps.spmatrix, sps.spmatrix, sps.spmatrix, sps.spmatrix]:
src/porepy/numerics/fv/mpsa.py:        Actual implementation of the MPSA W-method. To calculate the MPSA
src/porepy/numerics/fv/mpsa.py:        The displacement is discretized as a linear function on sub-cells (see reference
src/porepy/numerics/fv/mpsa.py:        center value and the sub-cell gradients.
src/porepy/numerics/fv/mpsa.py:        and the face continuity points, while C consists of +- 1 (depending on which
src/porepy/numerics/fv/mpsa.py:        enforces the displacement to be unity in one cell at a time. Thus (i)-(iii) can
src/porepy/numerics/fv/mpsa.py:        variables, that is, we can compute the basis functions on the sub-cells. Because
src/porepy/numerics/fv/mpsa.py:        cell c will be non-zero on all sub-cells sharing a vertex with c. Finally, the
src/porepy/numerics/fv/mpsa.py:        Boundary values can be incorporated with appropriate modifications - Neumann
src/porepy/numerics/fv/mpsa.py:        conditions will have a non-zero right hand side for (i), Robin conditions will
src/porepy/numerics/fv/mpsa.py:            U^+ - U^- = 0.
src/porepy/numerics/fv/mpsa.py:                Matrix for cell-center displacement contribution to face displacement
src/porepy/numerics/fv/mpsa.py:        # distribute the given face-boundary condition to the sub-faces automatically.
src/porepy/numerics/fv/mpsa.py:        # (instead of the usuall face-wise level). The intrigued user might find the
src/porepy/numerics/fv/mpsa.py:        # faces (thus, the face-centers). The expert user that specify subface boundary
src/porepy/numerics/fv/mpsa.py:        # The grid coordinates are always three-dimensional, even if the grid is really
src/porepy/numerics/fv/mpsa.py:        # 2D. This means that there is not a 1-1 relation between the number of
src/porepy/numerics/fv/mpsa.py:        # If g is not already a sub-grid we create one
src/porepy/numerics/fv/mpsa.py:            # And we expand the boundary conditions to fit the sub-grid
src/porepy/numerics/fv/mpsa.py:        # elasticity and poro-elasticity).
src/porepy/numerics/fv/mpsa.py:        # Output should be on face-level (not sub-face)
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[sps.spmatrix, sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/mpsa.py:        the parts that are common for elasticity and poro-elasticity, and was thus
src/porepy/numerics/fv/mpsa.py:        # Neumann-boundary faces than gradients. This will typically happen in the
src/porepy/numerics/fv/mpsa.py:        # compute the sum of the absolute value of the non-zero elements and scale the
src/porepy/numerics/fv/mpsa.py:        # will also need to left precondition the right-hand side.
src/porepy/numerics/fv/mpsa.py:    ) -> sps.spmatrix:
src/porepy/numerics/fv/mpsa.py:        rhs_cells = -sps.vstack([hook_cell, rob_cell, d_cont_cell])
src/porepy/numerics/fv/mpsa.py:    ) -> sps.spmatrix:
src/porepy/numerics/fv/mpsa.py:        face-wise.
src/porepy/numerics/fv/mpsa.py:            np.reshape(is_neu_all, (nd, -1), order="C").ravel("F")
src/porepy/numerics/fv/mpsa.py:            np.reshape(is_dir_all, (nd, -1), order="C").ravel("F")
src/porepy/numerics/fv/mpsa.py:            np.reshape(is_rob_all, (nd, -1), order="C").ravel("F")
src/porepy/numerics/fv/mpsa.py:            # In this case we set the rhs for the sub-faces. Note that the rhs values
src/porepy/numerics/fv/mpsa.py:            #  face values to the subfaces. We do this by an area-weighted average. Note
src/porepy/numerics/fv/mpsa.py:        # The final matrix will first have the x-coponent of the displacement for each
src/porepy/numerics/fv/mpsa.py:        # face, then the y-component, etc.
src/porepy/numerics/fv/mpsa.py:        # The columns in neu_cell, dir_cell are ordered from 0 to num_bound-1. Map these
src/porepy/numerics/fv/mpsa.py:        # to all half-face indices
src/porepy/numerics/fv/mpsa.py:        # the rows of rhs_bound will be ordered with first the x-component of all
src/porepy/numerics/fv/mpsa.py:        # neumann faces, then the y-component of all Neumann faces, then the z-component
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[sps.csr_matrix, sps.csr_matrix]:
src/porepy/numerics/fv/mpsa.py:            U_Ks + G_Ks (x - x_k),
src/porepy/numerics/fv/mpsa.py:                the contribution from the cell-center displacements. The half-face
src/porepy/numerics/fv/mpsa.py:                displacements are ordered sub-face_wise, i.e.,
src/porepy/numerics/fv/mpsa.py:                the contribution from the boundary conditions. The half-face
src/porepy/numerics/fv/mpsa.py:        # We here average the contribution on internal sub-faces. If you want to get out
src/porepy/numerics/fv/mpsa.py:        # both displacements on a sub-face your can remove the averaging.
src/porepy/numerics/fv/mpsa.py:        # expand indices to x-y-z
src/porepy/numerics/fv/mpsa.py:        # Get a mapping from cell centers to half-faces
src/porepy/numerics/fv/mpsa.py:        # Expand indices to x-y-z
src/porepy/numerics/fv/mpsa.py:    # -----------------------------------------------------------------------------
src/porepy/numerics/fv/mpsa.py:    # -----------------------------------------------------------------------------
src/porepy/numerics/fv/mpsa.py:    def _estimate_peak_memory_mpsa(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/mpsa.py:        # sub-face per dimension
src/porepy/numerics/fv/mpsa.py:        # sub-face per dimension
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[sps.spmatrix, sps.spmatrix]:
src/porepy/numerics/fv/mpsa.py:            num_sub_cells: Number of sub-cells in the grid.
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[sps.spmatrix, sps.spmatrix]:
src/porepy/numerics/fv/mpsa.py:            num_sub_cells: Number of sub-cells in the grid.
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/fv/mpsa.py:        casym -= csym
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[sps.spmatrix, sps.spmatrix, np.ndarray, np.ndarray]:
src/porepy/numerics/fv/mpsa.py:        also provides a unique identification of sub-cells (in the form of pairs of
src/porepy/numerics/fv/mpsa.py:            somewhere else). The rows first represent stresses in the x-direction for
src/porepy/numerics/fv/mpsa.py:            first row gives cell numbers, the second node numbers. Together, this cell-
src/porepy/numerics/fv/mpsa.py:            Numbering scheme for subcell gradients - gives a global numbering for the
src/porepy/numerics/fv/mpsa.py:        # defines cno and nno (and others) working cell-wise, this will correspond to a
src/porepy/numerics/fv/mpsa.py:        # unique rows (Matlab-style) from what I understand. This also means that the
src/porepy/numerics/fv/mpsa.py:        # based on sub-face numbers. Columns have nd elements for each sub-cell (to
src/porepy/numerics/fv/mpsa.py:        cn += pp.matrix_operations.rldecode(sum_blocksz - blocksz[0], blocksz)
src/porepy/numerics/fv/mpsa.py:        # Distribute faces equally on the sub-faces, and store in a matrix
src/porepy/numerics/fv/mpsa.py:        cc += pp.matrix_operations.rldecode(sum_blocksz - blocksz[0] ** 2, blocksz)
src/porepy/numerics/fv/mpsa.py:        # Splitt stiffness matrix into symmetric and anti-symmatric part
src/porepy/numerics/fv/mpsa.py:        # gives stress in the x-direction etc.
src/porepy/numerics/fv/mpsa.py:        # Empty matrices to initialize matrix-tensor products. Will be expanded
src/porepy/numerics/fv/mpsa.py:        # Associate a volume with each sub-cell, and a node-volume as the sum of all
src/porepy/numerics/fv/mpsa.py:        # surrounding sub-cells.
src/porepy/numerics/fv/mpsa.py:    ) -> sps.spmatrix:
src/porepy/numerics/fv/mpsa.py:            cell_node_blocks: Pairs of cell and node pairs, which defines sub-cells.
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[sps.spmatrix, sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/mpsa.py:        """Define matrices to turn linear system into block-diagonal form.
src/porepy/numerics/fv/mpsa.py:            cell_node_blocks: Pairs of cell and node pairs, which defines sub-cells.
src/porepy/numerics/fv/mpsa.py:                block-diagonal form.
src/porepy/numerics/fv/mpsa.py:                block-diagonal form.
src/porepy/numerics/fv/mpsa.py:        # block-structure. First eliminate node numbers at the boundary, where the
src/porepy/numerics/fv/mpsa.py:        # cell_node_blocks[1] contains the node numbers associated with each sub-cell
src/porepy/numerics/fv/mpsa.py:        # give a block-diagonal structure
src/porepy/numerics/fv/mpsa.py:    ) -> sps.spmatrix:
src/porepy/numerics/fv/mpsa.py:        """Obtain discrete Hook's law for the sub-cell gradients.
src/porepy/numerics/fv/mpsa.py:        multiplied with sub-cell gradients, will give face stresses
src/porepy/numerics/fv/mpsa.py:            subcell_topology: Object containing information about sub-cells.
src/porepy/numerics/fv/mpsa.py:        ind_all = np.reshape(ind_single + increments[:, np.newaxis], -1).astype(int)
src/porepy/numerics/fv/mpsa.py:        # Hook's law, as it comes out of the normal-vector * stiffness matrix is sorted
src/porepy/numerics/fv/mpsa.py:        # with x-component balances first, then y-, etc. Sort this to a face-wise
src/porepy/numerics/fv/mpsa.py:    ) -> sps.spmatrix:
src/porepy/numerics/fv/mpsa.py:        For stress equations, these are zero, while for cell centers it is +- 1
src/porepy/numerics/fv/mpsa.py:            subcell_topology: Object containing information about sub-cells.
src/porepy/numerics/fv/mpsa.py:        # For pressure continuity, +-1
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/fv/mpsa.py:        ordering (first x-variables of all cells, then y) to increasing variables (first
src/porepy/numerics/fv/mpsa.py:            d_cont_grad: Contribution from sub-cell gradients to local systems.
src/porepy/numerics/fv/mpsa.py:            num_sub_cells: Number of sub-cells.
src/porepy/numerics/fv/mpsa.py:            tuple[np.ndarray, np.ndarray]: Rearranged contributions from sub-cell
src/porepy/numerics/fv/mpsa.py:        # Repeat sub-cell indices nd times. Fortran ordering (column major) gives same
src/porepy/numerics/fv/mpsa.py:        # gradient variables for each sub-cell), and thus the format of each block in
src/porepy/numerics/fv/mpsa.py:            -1, order="F"
src/porepy/numerics/fv/mpsa.py:        # Then repeat the single-block indices nd times (corresponding to the way
src/porepy/numerics/fv/mpsa.py:    def _row_major_to_col_major(self, shape: tuple, nd: int, axis: int) -> sps.spmatrix:
src/porepy/numerics/fv/mpsa.py:        ordering (first x-variables of all cells, then y) to increasing variables (first
src/porepy/numerics/fv/mpsa.py:    ) -> None:
src/porepy/numerics/fv/mpsa.py:            subcell_topology: Object containing information about sub-cells.
src/porepy/numerics/fv/mpsa.py:            cell_node_blocks: Pairs of node and cell indices that identify sub-cells.
src/porepy/numerics/fv/mpsa.py:        diff_count = num_sub_cells[nno_nd.ravel("C")] - count_neu
src/porepy/numerics/fv/mpsa.py:    ) -> tuple[pp.Grid, pp.FourthOrderTensor]:
src/porepy/numerics/fv/mpsa.py:        # plane-strain / plane-stress consistency). That is all to say, this is a bit
src/porepy/numerics/fv/mpsa.py:    ) -> pp.BoundaryConditionVectorial:
src/porepy/numerics/fv/mpsa.py:    ) -> pp.FourthOrderTensor:
src/porepy/numerics/fv/hybrid_upwind_utils.py:        left_restriction @ saturation + right_restriction @ saturation + 1e-10
src/porepy/numerics/fv/hybrid_upwind_utils.py:        density_faces * gravity_value * (left_restriction @ z - right_restriction @ z)
src/porepy/numerics/fv/hybrid_upwind_utils.py:    - works for both ad and non ad
src/porepy/numerics/fv/hybrid_upwind_utils.py:    - var defined at cell centers
src/porepy/numerics/fv/hybrid_upwind_utils.py:    - remark: no derivative wrt upwind direction => we use only the val if ad or real part if complex step
src/porepy/numerics/fv/hybrid_upwind_utils.py:    - you can use pp upwind
src/porepy/numerics/fv/hybrid_upwind_utils.py:        np.ones(upwind_directions.shape) - upwind_left
src/porepy/numerics/fv/source.py:    def __init__(self, keyword: str) -> None:
src/porepy/numerics/fv/source.py:    def _key(self) -> str:
src/porepy/numerics/fv/source.py:    def ndof(self, sd: pp.Grid) -> int:
src/porepy/numerics/fv/source.py:    ) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/numerics/fv/source.py:        """Return the (null) matrix and right-hand side for a discretization of the
src/porepy/numerics/fv/source.py:            sources (array, self.ndof): Right-hand side vector.
src/porepy/numerics/fv/source.py:            sources (array, self.ndof): Right-hand side vector, stored as
src/porepy/numerics/fv/hybrid_upwind.py:- procedurally paradigm is adopted
src/porepy/numerics/fv/hybrid_upwind.py:- I haven't specified "internal" to all the interal variables
src/porepy/numerics/fv/hybrid_upwind.py:- complex step was implemented along with ad. Results showed same accuracy even in presence of discontinuities. Never compared the time efficiency.
src/porepy/numerics/fv/hybrid_upwind.py:) -> np.adarray:
src/porepy/numerics/fv/hybrid_upwind.py:    ) -> Union[pp.ad.AdArray, np.ndarray]:
src/porepy/numerics/fv/hybrid_upwind.py:                        * pp.ad.functions.heaviside(-g[m] + g[ell])
src/porepy/numerics/fv/hybrid_upwind.py:                        * pp.ad.functions.heaviside(g[m] - g[ell])
src/porepy/numerics/fv/hybrid_upwind.py:                    * (g[m] - g[ell])
src/porepy/numerics/fv/hybrid_upwind.py:                ) * (g[m] - g[ell])
src/porepy/numerics/fv/hybrid_upwind.py:    z = -sd.cell_centers[
src/porepy/numerics/fv/hybrid_upwind.py:        dim_max - 1
src/porepy/numerics/fv/hybrid_upwind.py:        G_internal.append(mob_G_ell * mob_G_m / mob_tot_G * (g_list[m] - g_list[ell]))
src/porepy/numerics/fv/hybrid_upwind.py:) -> pp.ad.AdArray:
src/porepy/numerics/fv/hybrid_upwind.py:                    * pp.ad.functions.heaviside(-g[m] + g[ell])
src/porepy/numerics/fv/hybrid_upwind.py:                    * pp.ad.functions.heaviside(g[m] - g[ell])
src/porepy/numerics/fv/hybrid_upwind.py:                * (g[m] - g[ell])
src/porepy/numerics/fv/hybrid_upwind.py:    # kind of div -abs(sg.cell_faces()).T@sd.face_areas()
src/porepy/numerics/fv/hybrid_upwind.py:    return -abs(sd.cell_faces).T @ (sd.face_areas * bc_val)
src/porepy/numerics/fv/hybrid_upwind.py:        eps = 1e-20j
src/porepy/numerics/fv/hybrid_upwind.py:            pressure_eps[i] -= eps  ### ...
src/porepy/numerics/fv/hybrid_upwind.py:            saturation_m_eps[i] -= eps  # the constraint is here...
src/porepy/numerics/fv/hybrid_upwind.py:            saturation_ell_eps[i] -= eps  ### ...
src/porepy/numerics/fv/hybrid_upwind.py:        eps = 1e-5
src/porepy/numerics/fv/hybrid_upwind.py:            jacobian[:, i] = (flux_cell_no_bc_eps - flux_cell_no_bc) / eps
src/porepy/numerics/fv/hybrid_upwind.py:            saturation_m_eps[i] -= eps  # the constraint is here...
src/porepy/numerics/fv/hybrid_upwind.py:                flux_cell_no_bc_eps - flux_cell_no_bc
src/porepy/numerics/fv/hybrid_upwind.py:            saturation_ell_eps[i] -= eps  ### ...
src/porepy/numerics/fv/fvutils.py:        g - the grid
src/porepy/numerics/fv/fvutils.py:        nno - node numbers
src/porepy/numerics/fv/fvutils.py:        fno - face numbers
src/porepy/numerics/fv/fvutils.py:        cno - cell numbers
src/porepy/numerics/fv/fvutils.py:        subfno - subface numbers. Has exactly two duplicates for internal faces
src/porepy/numerics/fv/fvutils.py:        subhfno - subface numbers. No duplicates
src/porepy/numerics/fv/fvutils.py:        num_cno - cno.max() + 1
src/porepy/numerics/fv/fvutils.py:        num_subfno - subfno.max() + 1
src/porepy/numerics/fv/fvutils.py:        nno_unique - node numbers after pairing sub-faces
src/porepy/numerics/fv/fvutils.py:        fno_unique - face numbers after pairing sub-faces
src/porepy/numerics/fv/fvutils.py:        cno_unique - cell numbers after pairing sub-faces
src/porepy/numerics/fv/fvutils.py:        subfno_unique - subface numbers  after pairing sub-faces
src/porepy/numerics/fv/fvutils.py:        unique_subfno - index of those elements in subfno that are included
src/porepy/numerics/fv/fvutils.py:        sub_faces = (sub_faces.data - 1).astype(int)
src/porepy/numerics/fv/fvutils.py:            self.subfno - np.cumsum(np.diff(np.r_[-1, self.subfno[Ia]]) - 1)[Ic]
src/porepy/numerics/fv/fvutils.py:        Transfer quantities from a cell-face base (cells sharing a face have
src/porepy/numerics/fv/fvutils.py:        their own expressions) to a face-based. The quantities should live
src/porepy/numerics/fv/fvutils.py:        on sub-faces (not faces)
src/porepy/numerics/fv/fvutils.py:        """nd-version of pair_over_subfaces, see above."""
src/porepy/numerics/fv/fvutils.py:# ------------------------ End of class SubcellTopology ----------------------
src/porepy/numerics/fv/fvutils.py:    Compute vectors from cell centers continuity points on each sub-face.
src/porepy/numerics/fv/fvutils.py:        x_cp = (1-eta) * x_facecenter + eta * x_vertex
src/porepy/numerics/fv/fvutils.py:    cols += pp.matrix_operations.rldecode(np.cumsum(blocksz) - blocksz[0], blocksz)
src/porepy/numerics/fv/fvutils.py:        sd.nodes[:, subcell_topology.nno] - sd.face_centers[:, subcell_topology.fno]
src/porepy/numerics/fv/fvutils.py:    dist = cp - sd.cell_centers[:, subcell_topology.cno]
src/porepy/numerics/fv/fvutils.py:def determine_eta(sd: pp.Grid) -> float:
src/porepy/numerics/fv/fvutils.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/fv/fvutils.py:    the function pp.fvutils.cell-ind_for_partial_update.
src/porepy/numerics/fv/fvutils.py:) -> Generator[
src/porepy/numerics/fv/fvutils.py:        # Cell-node relation
src/porepy/numerics/fv/fvutils.py:) -> None:
src/porepy/numerics/fv/fvutils.py:def expand_indices_nd(ind: np.ndarray, nd: int, direction="F") -> np.ndarray:
src/porepy/numerics/fv/fvutils.py:    ind_new = ind_incr.reshape(-1, order="F")
src/porepy/numerics/fv/fvutils.py:    Create mapping from half-faces to faces for vector problems.
src/porepy/numerics/fv/fvutils.py:       fno (np.ndarray): face numbering in sub-cell topology based on unique subfno
src/porepy/numerics/fv/fvutils.py:       subfno (np.ndarrary): sub-face numbering
src/porepy/numerics/fv/fvutils.py:    Create mapping from sub-cells to cells for scalar problems.
src/porepy/numerics/fv/fvutils.py:    For example, discretization of div_g-term in mpfa with gravity,
src/porepy/numerics/fv/fvutils.py:    where g is a cell-center vector (dim nd)
src/porepy/numerics/fv/fvutils.py:        sub_cell_index: sub-cell indices
src/porepy/numerics/fv/fvutils.py:    Create mapping from sub-cells to cells for vector problems.
src/porepy/numerics/fv/fvutils.py:    For example, discretization of grad_p-term in Biot,
src/porepy/numerics/fv/fvutils.py:    where p is a cell-center scalar
src/porepy/numerics/fv/fvutils.py:        sub_cell_index: sub-cell indices
src/porepy/numerics/fv/fvutils.py:def scalar_divergence(sd: pp.Grid) -> sps.csr_matrix:
src/porepy/numerics/fv/fvutils.py:def vector_divergence(sd: pp.Grid) -> sps.csr_matrix:
src/porepy/numerics/fv/fvutils.py:    It is assumed that the first column corresponds to the x-equation of face
src/porepy/numerics/fv/fvutils.py:    0, second column is y-equation etc. (and so on in nd>2). The next column is
src/porepy/numerics/fv/fvutils.py:    then the x-equation for face 1. Correspondingly, the first row
src/porepy/numerics/fv/fvutils.py:    represents x-component in first cell etc.
src/porepy/numerics/fv/fvutils.py:    # Vector extension, convert to coo-format to avoid odd errors when one
src/porepy/numerics/fv/fvutils.py:) -> tuple[sps.csr_matrix, np.ndarray, np.ndarray]:
src/porepy/numerics/fv/fvutils.py:    Compute product of normal vectors and tensors on a sub-cell level.
src/porepy/numerics/fv/fvutils.py:    This is essentially defining Darcy's law for each sub-face in terms of
src/porepy/numerics/fv/fvutils.py:    sub-cell gradients. Thus, we also implicitly define the global ordering
src/porepy/numerics/fv/fvutils.py:    of sub-cell gradient variables (via the interpretation of the columns in
src/porepy/numerics/fv/fvutils.py:        nk: sub-face wise product of normal vector and permeability tensor.
src/porepy/numerics/fv/fvutils.py:            define a sub-cell.
src/porepy/numerics/fv/fvutils.py:    # defines cno and nno (and others) working cell-wise, this will
src/porepy/numerics/fv/fvutils.py:    # correspond to a unique rows (Matlab-style) from what I understand.
src/porepy/numerics/fv/fvutils.py:    # Rows are based on sub-face numbers.
src/porepy/numerics/fv/fvutils.py:    # Columns have nd elements for each sub-cell (to store a gradient) and
src/porepy/numerics/fv/fvutils.py:    j += pp.matrix_operations.rldecode(sum_blocksz - blocksz[0], blocksz)
src/porepy/numerics/fv/fvutils.py:    # Distribute faces equally on the sub-faces
src/porepy/numerics/fv/fvutils.py:    # Unique sub-cell indexes are pulled from column indices, we only need
src/porepy/numerics/fv/fvutils.py:    potential (respectively stress and displacement) on all sub-faces. For the boundary
src/porepy/numerics/fv/fvutils.py:        The global matrix is a mapping from sub-faces to sub-faces as given by loc_trans.
src/porepy/numerics/fv/fvutils.py:        The loc_trans matrices are given per sub-face and is a mapping from a nd vector
src/porepy/numerics/fv/fvutils.py:        loc_trans = np.array([[[1, 0], [0, -1]], [[0, 1], [1, 0]]])
src/porepy/numerics/fv/fvutils.py:             [0, 0, 0, -1],
src/porepy/numerics/fv/fvutils.py:            row = np.arange(self.num_subfno * self.nd).reshape((-1, self.num_subfno))
src/porepy/numerics/fv/fvutils.py:        creates an exclusion matrix. This is a mapping from sub-faces to
src/porepy/numerics/fv/fvutils.py:        all sub-faces except those given by ids.
src/porepy/numerics/fv/fvutils.py:# -----------------End of class ExcludeBoundaries-----------------------------
src/porepy/numerics/fv/fvutils.py:) -> None:
src/porepy/numerics/fv/fvutils.py:        # We will need the non-updated cells as well (but not faces, for similar
src/porepy/numerics/fv/fvutils.py:    # columns, a non-updated row should keep its information about a column
src/porepy/numerics/fv/fvutils.py:            # Need a tocsr() here to work with row-based elimination
src/porepy/numerics/fv/fvutils.py:    # under the primary keyword, see Biot for an example of the necessary pre-processing.
src/porepy/numerics/fv/fvutils.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/fv/fvutils.py:        # To understand the update stencil for a cell-based update, consider
src/porepy/numerics/fv/fvutils.py:        #    - s s s -
src/porepy/numerics/fv/fvutils.py:        # sub-faces between o-cells that share a vertex with x. Since the
src/porepy/numerics/fv/fvutils.py:        # flux information is stored face-wise (not sub-face), the whole o-o
src/porepy/numerics/fv/fvutils.py:        # specifically those marked by -. This requires quite a song and dance,
src/porepy/numerics/fv/fvutils.py:        # This would however include more cells (all marked - in the
src/porepy/numerics/fv/fvutils.py:        # The active faces (to be updated; (o-x and o-o above) are those that
src/porepy/numerics/fv/fvutils.py:        # that is, the faces to be updated. Corresponds to vertexes between o-o
src/porepy/numerics/fv/fvutils.py:        # sub-faces. This further requires the inclusion of all cells that
src/porepy/numerics/fv/fvutils.py:        # between the two x-cells are specified, and this requires the
src/porepy/numerics/fv/fvutils.py:        # inclusion of all o and V-cells. The S-cells are superfluous from a
src/porepy/numerics/fv/fvutils.py:        # NOTE: The four V-cells are only needed for Biot-discretizations,
src/porepy/numerics/fv/fvutils.py:        # specifically to correctly deal with the div-u terms. To be precise, an update
src/porepy/numerics/fv/fvutils.py:        # V and S-cells.
src/porepy/numerics/fv/fvutils.py:        # Multiply face_nodes.transpose() (e.g. node-faces) with the active
src/porepy/numerics/fv/fvutils.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/numerics/fv/fvutils.py:def diagonal_scaling_matrix(mat: sps.spmatrix) -> sps.spmatrix:
src/porepy/numerics/fv/fvutils.py:        Diagonal matrix with the diagonal elements equal to the row-wise sum of the
src/porepy/numerics/fv/fvutils.py:    # Take the row-wise sum of all non-zero elements in the matrix. Work on a copy,
src/porepy/numerics/fv/fvutils.py:    # not to be optimal). We could also find the number of non-zero elements and divide
src/porepy/numerics/fv/fvutils.py:    Computes darcy_flux over all faces in the entire mixed-dimensional grid given
src/porepy/numerics/fv/fvutils.py:    mgd: mixed-dimensional grid with the following data fields for all nodes/grids:
src/porepy/numerics/fv/fvutils.py:    data (dictionary): defaults to None. If mdg is mono-dimensional grid the data
src/porepy/numerics/fv/fvutils.py:        dictionary must be given. If mdg is a multi-dimensional grid, this variable has
src/porepy/numerics/fv/fvutils.py:        pp.MixedDimensionalGrid: the same mixed-dimensional grid with the added
src/porepy/numerics/fv/fvutils.py:        # Get the actual source term - put to zero if not provided
src/porepy/numerics/fv/fvutils.py:                """Darcy_Flux can only be computed if a flux-based
src/porepy/numerics/fv/fvutils.py:                """Darcy_Flux can only be computed if a flux-based
src/porepy/numerics/fv/fvutils.py:        # faces on the higher-dimensional grid, and computation of the induced
src/porepy/numerics/fv/fvutils.py:    sd -     grid object
src/porepy/numerics/fv/fvutils.py:    d -     corresponding data dictionary
src/porepy/numerics/fv/fvutils.py:    kw1 -   keyword for the stored discretization in the data dictionary,
src/porepy/numerics/fv/fvutils.py:    kw2 -   keyword for the stored boundary discretization in the data
src/porepy/numerics/fv/fvutils.py:    new_rows = sps.csr_matrix((n_new_faces, sd.num_cells * k_dof - n_new_cells))
src/porepy/numerics/fv/fvutils.py:    new_rows = sps.csr_matrix((n_new_faces, sd.num_faces * k_dof - n_new_faces))
src/porepy/numerics/fv/fvutils.py:    Perform a partial (local) multi-point discretization on a grid with
src/porepy/tobedefined/capillary_pressure.py:    pc = saturation^(-1/coeff)
src/porepy/tobedefined/relative_permeability.py:def rel_perm_quadratic(saturation):  # ->... :
src/porepy/tobedefined/relative_permeability.py:    # const: ---------------------------------------
src/porepy/tobedefined/relative_permeability.py:    # linear: ----------------------------------------
src/porepy/tobedefined/relative_permeability.py:    # linear abs: ---------------------------------------
src/porepy/tobedefined/relative_permeability.py:    # quadratic: -----------------------------------------------
src/porepy/tobedefined/relative_permeability.py:    # cubic: -----------------------------------------------
src/porepy/tobedefined/relative_permeability.py:def rel_perm_brooks_corey(s_c_alpha, rho_alpha):  # ->... :
src/porepy/tobedefined/relative_permeability.py:        return ((saturation - s_c_alpha) / (1 - s_c_alpha)) ** rho_alpha
src/porepy/models/geometry.py:    """Mixed-dimensional grid. Set by the method :meth:`set_md_grid`."""
src/porepy/models/geometry.py:    def set_geometry(self) -> None:
src/porepy/models/geometry.py:        """Define geometry and create a mixed-dimensional grid.
src/porepy/models/geometry.py:        # Create a mixed-dimensional grid.
src/porepy/models/geometry.py:            # Mesh wells and add fracture + intersection grids to mixed-dimensional
src/porepy/models/geometry.py:    def domain(self) -> pp.Domain:
src/porepy/models/geometry.py:    def set_domain(self) -> None:
src/porepy/models/geometry.py:    def fractures(self) -> Union[list[pp.LineFracture], list[pp.PlaneFracture]]:
src/porepy/models/geometry.py:    def set_fractures(self) -> None:
src/porepy/models/geometry.py:    def set_well_network(self) -> None:
src/porepy/models/geometry.py:    def is_well(self, grid: pp.Grid | pp.MortarGrid) -> bool:
src/porepy/models/geometry.py:            return getattr(grid, "well_num", -1) >= 0
src/porepy/models/geometry.py:    def grid_type(self) -> Literal["simplex", "cartesian", "tensor_grid"]:
src/porepy/models/geometry.py:        """Grid type for the mixed-dimensional grid.
src/porepy/models/geometry.py:            Grid type for the mixed-dimensional grid.
src/porepy/models/geometry.py:    def meshing_arguments(self) -> dict[str, float]:
src/porepy/models/geometry.py:        """Meshing arguments for mixed-dimensional grid generation.
src/porepy/models/geometry.py:    def meshing_kwargs(self) -> dict:
src/porepy/models/geometry.py:        """Keyword arguments for md-grid creation.
src/porepy/models/geometry.py:    ) -> list[pp.MortarGrid]:
src/porepy/models/geometry.py:            are sorted according to their index, as defined by the mixed-dimensional
src/porepy/models/geometry.py:    ) -> list[pp.Grid]:
src/porepy/models/geometry.py:            mixed-dimensional grid.
src/porepy/models/geometry.py:    ) -> pp.ad.DenseArray:
src/porepy/models/geometry.py:                the z-component of a vector attribute in 2d, to acieve compatibility
src/porepy/models/geometry.py:        # NOTE: The enforcement of keyword-only arguments, combined with this class
src/porepy/models/geometry.py:        # (indicating the start of keyword-only in the type specification), but while
src/porepy/models/geometry.py:        # to add a # type: ignore[call-arg] comment where the method is called. By only
src/porepy/models/geometry.py:        # ignoring call-args problems, we limit the risk of silencing other errors that
src/porepy/models/geometry.py:            # avoided this loop by surrounding the getattr with a try-except, but this
src/porepy/models/geometry.py:                # argument is given for a non-vector attribute like cell_volumes.
src/porepy/models/geometry.py:    def basis(self, grids: Sequence[pp.GridLike], dim: int) -> list[pp.ad.SparseArray]:
src/porepy/models/geometry.py:        """Return a cell-wise basis for all subdomains.
src/porepy/models/geometry.py:            To extend a cell-wise scalar to a vector field, use
src/porepy/models/geometry.py:            ``sum([e_i for e_i in basis(subdomains, dim=nd-1)])``
src/porepy/models/geometry.py:        # is used as a mixin, and the need to add type-ignore[call-arg] on use of this
src/porepy/models/geometry.py:    ) -> pp.ad.SparseArray:
src/porepy/models/geometry.py:        """Return a cell-wise basis function in a specified dimension.
src/porepy/models/geometry.py:            .. code-block:: python
src/porepy/models/geometry.py:            ValueError: If dim is smaller than the dimension of the mixed-dimensional.
src/porepy/models/geometry.py:        # is used as a mixin, and the need to add type-ignore[call-arg] on use of this
src/porepy/models/geometry.py:        # Expand to cell-wise column vectors.
src/porepy/models/geometry.py:    def tangential_component(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/geometry.py:        of the cell-wise vector. It is assumed that the components of the vector are
src/porepy/models/geometry.py:        stored with a dimension-major ordering (the dimension varies fastest).
src/porepy/models/geometry.py:        # component of the cell-wise vector v to be transformed. Then we want to express
src/porepy/models/geometry.py:                self.e_i(subdomains, i=i, dim=self.nd - 1)  # type: ignore[arg-type]
src/porepy/models/geometry.py:                for i in range(self.nd - 1)
src/porepy/models/geometry.py:    def normal_component(self, subdomains: list[pp.Grid]) -> pp.ad.SparseArray:
src/porepy/models/geometry.py:        `self.nd-1` (zero offset). of the cell-wise vector. It is assumed that the
src/porepy/models/geometry.py:        components of a vector are stored with a dimension-major ordering (the dimension
src/porepy/models/geometry.py:        e_n = self.e_i(subdomains, i=self.nd - 1, dim=self.nd)
src/porepy/models/geometry.py:    def local_coordinates(self, subdomains: list[pp.Grid]) -> pp.ad.SparseArray:
src/porepy/models/geometry.py:        # For now, assert all subdomains are fractures, i.e. dim == nd - 1.
src/porepy/models/geometry.py:        assert all([sd.dim == self.nd - 1 for sd in subdomains])
src/porepy/models/geometry.py:    def subdomain_projections(self, dim: int) -> pp.ad.SubdomainProjections:
src/porepy/models/geometry.py:        """Return the projection operators for all subdomains in md-grid.
src/porepy/models/geometry.py:        The projection operators restrict or prolong a dim-dimensional quantity from the
src/porepy/models/geometry.py:        self, sd: pp.Grid, tol: Optional[float] = 1e-10
src/porepy/models/geometry.py:    ) -> pp.domain.DomainSides:
src/porepy/models/geometry.py:        The method is primarily intended for box-shaped domains. However, it can also be
src/porepy/models/geometry.py:        applied to non-box-shaped domains (e.g., domains with perturbed boundary nodes)
src/porepy/models/geometry.py:                - all_bf (np.ndarray of int): indices of the boundary faces.
src/porepy/models/geometry.py:                - east (np.ndarray of bool): flags of the faces lying on the East side.
src/porepy/models/geometry.py:                - west (np.ndarray of bool): flags of the faces lying on the West side.
src/porepy/models/geometry.py:                - north (np.ndarray of bool): flags of the faces lying on the North side.
src/porepy/models/geometry.py:                - south (np.ndarray of bool): flags of the faces lying on the South side.
src/porepy/models/geometry.py:                - top (np.ndarray of bool): flags of the faces lying on the Top side.
src/porepy/models/geometry.py:                - bottom (np.ndarray of bool): flags of the faces lying on Bottom side.
src/porepy/models/geometry.py:        east = np.abs(box["xmax"] - sd.face_centers[0]) <= tol
src/porepy/models/geometry.py:        west = np.abs(box["xmin"] - sd.face_centers[0]) <= tol
src/porepy/models/geometry.py:            north = np.abs(box["ymax"] - sd.face_centers[1]) <= tol
src/porepy/models/geometry.py:            south = np.abs(box["ymin"] - sd.face_centers[1]) <= tol
src/porepy/models/geometry.py:            top = np.abs(box["zmax"] - sd.face_centers[2]) <= tol
src/porepy/models/geometry.py:            bottom = np.abs(box["zmin"] - sd.face_centers[2]) <= tol
src/porepy/models/geometry.py:    ) -> pp.ad.Operator:
src/porepy/models/geometry.py:            # matrix and store it. The mixed-dimensional version can then be constructed
src/porepy/models/geometry.py:    ) -> pp.ad.Operator:
src/porepy/models/geometry.py:        # is used as a mixin, and the need to add type-ignore[call-arg] on use of this
src/porepy/models/geometry.py:        # Get hold of the primary subdomains, i.e. the higher-dimensional neighbors of
src/porepy/models/geometry.py:        # constructed to only consider the higher-dimensional subdomains.
src/porepy/models/geometry.py:            primary_subdomains, "face_normals", dim=self.nd  # type: ignore[call-arg]
src/porepy/models/geometry.py:            primary_subdomains, dim=self.nd  # type: ignore[call-arg]
src/porepy/models/geometry.py:                interfaces, "cell_volumes", dim=self.nd  # type: ignore[call-arg]
src/porepy/models/material_constants.py:    def __init__(self, constants: dict) -> None:
src/porepy/models/material_constants.py:    def units(self) -> pp.Units:
src/porepy/models/material_constants.py:    def set_units(self, units: pp.Units) -> None:
src/porepy/models/material_constants.py:    def constants(self) -> dict:
src/porepy/models/material_constants.py:    ) -> number:
src/porepy/models/material_constants.py:    ) -> np.ndarray:
src/porepy/models/material_constants.py:    ) -> Union[number, np.ndarray]:
src/porepy/models/material_constants.py:        will be converted to SI units, i.e. a value of 1e-2 results in 1e-2 * 1e6 = 1e4.
src/porepy/models/material_constants.py:                the form of ``unit1 * unit2 * unit3^-1``, e.g., ``"Pa*m^3/kg"``.
src/porepy/models/material_constants.py:                operators are * and ^, including negative powers (e.g. m^-2). A
src/porepy/models/material_constants.py:                dimensionless value can be specified by setting units to "", "1" or "-".
src/porepy/models/material_constants.py:        if units in ["", "1", "-"]:
src/porepy/models/material_constants.py:                - ``thermal_expansion``: Thermal expansion coefficient [1/K].
src/porepy/models/material_constants.py:                - ``density``: Density [kg/m^3].
src/porepy/models/material_constants.py:                - ``viscosity``: Viscosity [Pa s].
src/porepy/models/material_constants.py:                - ``compressibility``: Compressibility [1/Pa].
src/porepy/models/material_constants.py:    def compressibility(self) -> number:
src/porepy/models/material_constants.py:        return self.convert_units(self.constants["compressibility"], "Pa^-1")
src/porepy/models/material_constants.py:    def density(self) -> number:
src/porepy/models/material_constants.py:        return self.convert_units(self.constants["density"], "kg * m^-3")
src/porepy/models/material_constants.py:    def normal_thermal_conductivity(self) -> number:
src/porepy/models/material_constants.py:            self.constants["normal_thermal_conductivity"], "W * m^-1 * K^-1"
src/porepy/models/material_constants.py:    def pressure(self) -> number:
src/porepy/models/material_constants.py:    def specific_heat_capacity(self) -> number:
src/porepy/models/material_constants.py:            self.constants["specific_heat_capacity"], "J * kg^-1 * K^-1"
src/porepy/models/material_constants.py:    def temperature(self) -> number:
src/porepy/models/material_constants.py:    def thermal_conductivity(self) -> number:
src/porepy/models/material_constants.py:            self.constants["thermal_conductivity"], "W * m^-1 * K^-1"
src/porepy/models/material_constants.py:    def thermal_expansion(self) -> number:
src/porepy/models/material_constants.py:        return self.convert_units(self.constants["thermal_expansion"], "K^-1")
src/porepy/models/material_constants.py:    def viscosity(self) -> number:
src/porepy/models/material_constants.py:    def biot_coefficient(self) -> number:
src/porepy/models/material_constants.py:        """Biot coefficient [-].
src/porepy/models/material_constants.py:    def density(self) -> number:
src/porepy/models/material_constants.py:        return self.convert_units(self.constants["density"], "kg * m^-3")
src/porepy/models/material_constants.py:    def thermal_expansion(self) -> number:
src/porepy/models/material_constants.py:        return self.convert_units(self.constants["thermal_expansion"], "K^-1")
src/porepy/models/material_constants.py:    def specific_heat_capacity(self) -> number:
src/porepy/models/material_constants.py:            self.constants["specific_heat_capacity"], "J * kg^-1 * K^-1"
src/porepy/models/material_constants.py:    def normal_permeability(self) -> number:
src/porepy/models/material_constants.py:    def thermal_conductivity(self) -> number:
src/porepy/models/material_constants.py:            self.constants["thermal_conductivity"], "W * m^-1 * K^-1"
src/porepy/models/material_constants.py:    def porosity(self) -> number:
src/porepy/models/material_constants.py:        """Porosity [-].
src/porepy/models/material_constants.py:        return self.convert_units(self.constants["porosity"], "-")
src/porepy/models/material_constants.py:    def permeability(self) -> number:
src/porepy/models/material_constants.py:    def residual_aperture(self) -> number:
src/porepy/models/material_constants.py:    def shear_modulus(self) -> number:
src/porepy/models/material_constants.py:    def specific_storage(self) -> number:
src/porepy/models/material_constants.py:        return self.convert_units(self.constants["specific_storage"], "Pa^-1")
src/porepy/models/material_constants.py:    def lame_lambda(self) -> number:
src/porepy/models/material_constants.py:    def fracture_gap(self) -> number:
src/porepy/models/material_constants.py:    def friction_coefficient(self) -> number:
src/porepy/models/material_constants.py:        """Friction coefficient [-].
src/porepy/models/material_constants.py:    def dilation_angle(self) -> number:
src/porepy/models/material_constants.py:    def skin_factor(self) -> number:
src/porepy/models/material_constants.py:        """Skin factor [-].
src/porepy/models/material_constants.py:    def temperature(self) -> number:
src/porepy/models/material_constants.py:    def well_radius(self) -> number:
src/porepy/models/material_constants.py:    def fracture_normal_stiffness(self) -> number:
src/porepy/models/material_constants.py:        """The normal stiffness of a fracture [Pa * m^-1].
src/porepy/models/material_constants.py:        Intended use is in Barton-Bandis-type models for elastic fracture deformation.
src/porepy/models/material_constants.py:            self.constants["fracture_normal_stiffness"], "Pa*m^-1"
src/porepy/models/material_constants.py:    def maximum_fracture_closure(self) -> number:
src/porepy/models/material_constants.py:        Intended use is in Barton-Bandis-type models for elastic fracture deformation.
src/porepy/models/energy_balance.py:energy balance equation is not stand-alone. Thus, no class `EnergyBalance` is provided,
src/porepy/models/energy_balance.py:    """Mixed-dimensional energy balance equation.
src/porepy/models/energy_balance.py:    two (well-fracture intersections).
src/porepy/models/energy_balance.py:    The class is not meant to be used stand-alone, but as a mixin in a coupled model.
src/porepy/models/energy_balance.py:    def energy_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:    def fluid_internal_energy(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:            - self.pressure(subdomains)
src/porepy/models/energy_balance.py:    def solid_internal_energy(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:            * (pp.ad.Scalar(1) - self.porosity(subdomains))
src/porepy/models/energy_balance.py:    def total_internal_energy(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:    def energy_flux(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:    def interface_energy_flux(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:    def enthalpy_flux(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:    ) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:        eq = self.interface_enthalpy_flux(interfaces) - flux
src/porepy/models/energy_balance.py:    ) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:        eq = self.well_enthalpy_flux(interfaces) - flux
src/porepy/models/energy_balance.py:    def energy_source(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:            - external sources
src/porepy/models/energy_balance.py:            - interface flow from neighboring subdomains of higher dimension.
src/porepy/models/energy_balance.py:            - well flow from neighboring subdomains of lower and higher dimension
src/porepy/models/energy_balance.py:        # Interdimensional fluxes manifest as source terms in lower-dimensional
src/porepy/models/energy_balance.py:        # Matrix-vector product, use @
src/porepy/models/energy_balance.py:        ) - well_projection.mortar_to_primary_int @ self.well_enthalpy_flux(
src/porepy/models/energy_balance.py:    mixed-dimensional variables on the fly, and can be called on any subset of the grids
src/porepy/models/energy_balance.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/energy_balance.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/energy_balance.py:    def create_variables(self) -> None:
src/porepy/models/energy_balance.py:        mixed-dimensional grid.
src/porepy/models/energy_balance.py:    def temperature(self, subdomains: list[pp.Grid]) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/energy_balance.py:            Mixed-dimensional variable representing the temperature.
src/porepy/models/energy_balance.py:    ) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/energy_balance.py:    ) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/energy_balance.py:    ) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/energy_balance.py:    def reference_temperature(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/energy_balance.py:    def bc_type_fourier(self, sd: pp.Grid) -> pp.BoundaryCondition:
src/porepy/models/energy_balance.py:    def bc_type_enthalpy(self, sd: pp.Grid) -> pp.BoundaryCondition:
src/porepy/models/energy_balance.py:    def bc_values_fourier(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
src/porepy/models/energy_balance.py:    def bc_values_enthalpy_flux(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
src/porepy/models/energy_balance.py:    def __init__(self, params: Optional[dict] = None) -> None:
src/porepy/models/energy_balance.py:    def set_discretization_parameters(self) -> None:
src/porepy/models/energy_balance.py:    def thermal_conductivity_tensor(self, sd: pp.Grid) -> pp.SecondOrderTensor:
src/porepy/models/energy_balance.py:    def initial_condition(self) -> None:
src/porepy/models/energy_balance.py:        # Update parameters *before* the discretization matrices are re-computed.
src/porepy/models/energy_balance.py:    def set_nonlinear_discretizations(self) -> None:
src/porepy/models/abstract_equations.py:    - BalanceEquation: Base class for vector and scalar balance equations.
src/porepy/models/abstract_equations.py:    - VariableMixin: Base class for variables.
src/porepy/models/abstract_equations.py:        d_t(momentum) + div(stress) - source = 0,
src/porepy/models/abstract_equations.py:    ) -> pp.ad.Operator:
src/porepy/models/abstract_equations.py:            d_t(accumulation) + div(surface_term) - source = 0.
src/porepy/models/abstract_equations.py:            accumulation: Operator for the cell-wise accumulation term, integrated over
src/porepy/models/abstract_equations.py:        return dt_operator(accumulation, dt) + div @ surface_term - source
src/porepy/models/abstract_equations.py:    ) -> pp.ad.Operator:
src/porepy/models/abstract_equations.py:            integrand: Operator for the integrand. Assumed to be a cell-wise scalar or
src/porepy/models/abstract_equations.py:        cell_volumes = self.wrap_grid_attribute(  # type: ignore[call-arg]
src/porepy/models/abstract_equations.py:            # For vector problems, we need to expand the volume array from cell-wise
src/porepy/models/abstract_equations.py:            # scalar values to cell-wise vectors. We do this by left multiplication with
src/porepy/models/abstract_equations.py:                grids, dim=dim  # type: ignore[call-arg]
src/porepy/models/abstract_equations.py:        :code:`self.variable_name(grids) - self.reference_variable_name(grids)`.
src/porepy/models/abstract_equations.py:        d_var = var(grids) - var_ref(grids)
src/porepy/models/derived_models/biot.py:    \rho := \rho_0 \exp{c_f (p - p_0)} = \rho_0,
src/porepy/models/derived_models/biot.py:        + S_\varepsilon (p - p_0)
src/porepy/models/derived_models/biot.py:    - Momentum conservation:
src/porepy/models/derived_models/biot.py:    - Generalized Hooke's law:
src/porepy/models/derived_models/biot.py:        \sigma = \mathcal{C} : \mathbf{\mathrm{grad}}(\mathbf{u}) - \alpha p \mathbf{I},
src/porepy/models/derived_models/biot.py:    - Mass conservation:
src/porepy/models/derived_models/biot.py:    - Darcy flux:
src/porepy/models/derived_models/biot.py:        \mathbf{q} = - \frac{\mathcal{K}}{\mu_f} \mathrm{\mathbf{grad}}(p),
src/porepy/models/derived_models/biot.py:    - [1] Biot, M. A. (1941). General theory of three‐dimensional consolidation.
src/porepy/models/derived_models/biot.py:      Journal of applied physics, 12(2), 155-164.
src/porepy/models/derived_models/biot.py:    - [2] Lewis, R. W., & Schrefler, B. A. (1987). The finite element method in the
src/porepy/models/derived_models/biot.py:    - [3] Coussy, O. (2004). Poromechanics. John Wiley & Sons. ISO 690.
src/porepy/models/mass_and_energy_balance.py:"""Combine single-physics models into coupled mass and energy balance equations. """
src/porepy/models/mass_and_energy_balance.py:    def create_variables(self) -> None:
src/porepy/models/mass_and_energy_balance.py:#     def set_domain(self) -> None:
src/porepy/models/mass_and_energy_balance.py:#     def set_fractures(self) -> None:
src/porepy/models/mass_and_energy_balance.py:#     def meshing_arguments(self) -> dict[str, float]:
src/porepy/models/mass_and_energy_balance.py:    The equations assume single-phase flow and local thermal equilibrium.
src/porepy/models/run_models.py:""" This module contains functions to run stationary and time-dependent models."""
src/porepy/models/run_models.py:def run_stationary_model(model, params: dict) -> None:
src/porepy/models/run_models.py:def run_time_dependent_model(model, params: dict) -> None:
src/porepy/models/run_models.py:    # Assign parameters, variables and discretizations. Discretize time-indepedent terms
src/porepy/models/run_models.py:def _run_iterative_model(model, params: dict) -> None:
src/porepy/models/run_models.py:    The intended use is for multi-step models with iterative couplings. Only known instance
src/porepy/models/run_models.py:    # Assign parameters, variables and discretizations. Discretize time-indepedent terms
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:4.000000000000000083e-02,4.000000000000000083e-02,2.000000000000000000e+00,2.800000000000000000e+01,2.800000000000000000e+01,6.000000000000000000e+00,2.200000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:2.400000000000000466e-01,2.000000000000000111e-01,1.000000000000000000e+00,2.000000000000000000e+01,4.800000000000000000e+01,9.000000000000000000e+00,1.100000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:4.400000000000000022e-01,2.000000000000000111e-01,1.000000000000000000e+00,1.700000000000000000e+01,6.500000000000000000e+01,6.000000000000000000e+00,1.100000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:6.399999999999999023e-01,2.000000000000000111e-01,1.000000000000000000e+00,1.800000000000000000e+01,8.300000000000000000e+01,7.000000000000000000e+00,1.100000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:6.799999999999999378e-01,4.000000000000000083e-02,2.000000000000000000e+00,2.600000000000000000e+01,1.090000000000000000e+02,4.000000000000000000e+00,2.200000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:7.199999999999999734e-01,4.000000000000000083e-02,2.000000000000000000e+00,2.600000000000000000e+01,1.350000000000000000e+02,4.000000000000000000e+00,2.200000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:7.600000000000000089e-01,4.000000000000000083e-02,2.000000000000000000e+00,2.600000000000000000e+01,1.610000000000000000e+02,4.000000000000000000e+00,2.200000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:9.599999999999999645e-01,2.000000000000000111e-01,1.000000000000000000e+00,2.200000000000000000e+01,1.830000000000000000e+02,1.100000000000000000e+01,1.100000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:1.159999999999999920e+00,2.000000000000000111e-01,1.000000000000000000e+00,1.800000000000000000e+01,2.010000000000000000e+02,7.000000000000000000e+00,1.100000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_PPU:1.360000000000000098e+00,2.000000000000000111e-01,1.000000000000000000e+00,1.600000000000000000e+01,2.170000000000000000e+02,5.000000000000000000e+00,1.100000000000000000e+01
src/porepy/models/units.py:            .. code-block:: Python
src/porepy/models/units.py:                {'m': 1e3, 'kg': 1e-3, 'mol': 1e-3}
src/porepy/models/units.py:            .. code-block:: Python
src/porepy/models/units.py:                - ``m``: Length unit.
src/porepy/models/units.py:                - ``s``: Time unit.
src/porepy/models/units.py:                - ``kg``: Mass unit.
src/porepy/models/units.py:                - ``K``: Temperature unit.
src/porepy/models/units.py:                - ``mol``: Mole unit.
src/porepy/models/units.py:                - ``rad``: Angle unit.
src/porepy/models/units.py:    def __init__(self, **kwargs) -> None:
src/porepy/models/units.py:            raise NotImplementedError("Non-unitary time scaling is not implemented.")
src/porepy/models/units.py:    def Pa(self) -> number:
src/porepy/models/units.py:    def J(self) -> number:
src/porepy/models/units.py:    def N(self) -> number:
src/porepy/models/units.py:    def W(self) -> number:
src/porepy/models/units.py:    def degree(self) -> number:
src/porepy/models/two_phase_hu.py:- TODO: is it physically right to consider mu (dynamic viscosity, mu = nu/rho) constant? 
src/porepy/models/two_phase_hu.py:- TODO: not 100% sure about avg and int
src/porepy/models/two_phase_hu.py:- TODO: normalization to reduce condition number
src/porepy/models/two_phase_hu.py:- TODO: see todos in the code
src/porepy/models/two_phase_hu.py:- TODO: I'd like to reactivate the complex step to see how much worse/better it is
src/porepy/models/two_phase_hu.py:- TODO: fix the time, the current time is updated with initial timestep instead of current dt
src/porepy/models/two_phase_hu.py:- TODO soon: there is something wrong with the scaling, Ka_0 shouldnt affects the results.
src/porepy/models/two_phase_hu.py:- two strategies are implemented to ensure S in [0,1]: cplipping and timestep chopping
src/porepy/models/two_phase_hu.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
src/porepy/models/two_phase_hu.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
src/porepy/models/two_phase_hu.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
src/porepy/models/two_phase_hu.py:        - I rely on the fact the _parse first calld get_values and THEN get_jacobian
src/porepy/models/two_phase_hu.py:            )  # equation_system.assemble_subsystem will add the "-", so it will actually become a rhs
src/porepy/models/two_phase_hu.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
src/porepy/models/two_phase_hu.py:        - I rely on the fact the _parse first calls get_values and THEN get_jacobian
src/porepy/models/two_phase_hu.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
src/porepy/models/two_phase_hu.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
src/porepy/models/two_phase_hu.py:    def get_values(self, *args_not_used: AdArray) -> np.ndarray:
src/porepy/models/two_phase_hu.py:    def get_jacobian(self, *args_not_used: AdArray) -> np.ndarray:
src/porepy/models/two_phase_hu.py:    def create_variables(self) -> None:
src/porepy/models/two_phase_hu.py:    def pressure(self, subdomains: list[pp.Grid]) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:            accumulation - accumulation.previous_timestep()
src/porepy/models/two_phase_hu.py:        return derivative_accumulation + div @ surface_term - source
src/porepy/models/two_phase_hu.py:    # PRESSURE EQUATION: -------------------------------------------------------------------------------------------------
src/porepy/models/two_phase_hu.py:        # accumulation term: ------------------------------
src/porepy/models/two_phase_hu.py:        # subdoamins flux: ---------------------------------------------------------
src/porepy/models/two_phase_hu.py:        # interfaces flux contribution (copied from mass bal): ------------------------------------
src/porepy/models/two_phase_hu.py:            - flux_intf_phase_0
src/porepy/models/two_phase_hu.py:            - flux_intf_phase_1
src/porepy/models/two_phase_hu.py:            - neu_boundary_matrix @ self.bc_neu_phase_0(subdomains)
src/porepy/models/two_phase_hu.py:            - neu_boundary_matrix @ self.bc_neu_phase_1(subdomains)
src/porepy/models/two_phase_hu.py:        # sources: --------------------------------------------------------------
src/porepy/models/two_phase_hu.py:    def pressure_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:    # MASS BALANCE: ----------------------------------------------------------------------------------------------------------------
src/porepy/models/two_phase_hu.py:        # accumulation term: ------------------------------------------------
src/porepy/models/two_phase_hu.py:        # subdomains flux contribution: -------------------------------------
src/porepy/models/two_phase_hu.py:        # interfaces flux contribution: ------------------------------------
src/porepy/models/two_phase_hu.py:                - flux_intf_phase_0
src/porepy/models/two_phase_hu.py:                - neu_boundary_matrix @ self.bc_neu_phase_0(subdomains)
src/porepy/models/two_phase_hu.py:                - flux_intf_phase_1
src/porepy/models/two_phase_hu.py:                - neu_boundary_matrix @ self.bc_neu_phase_1(subdomains)
src/porepy/models/two_phase_hu.py:        # sources: ---------------------------------------
src/porepy/models/two_phase_hu.py:    def mass_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:    # DARCY LAWS: ----------------------------------------------------------------------------------------------------------
src/porepy/models/two_phase_hu.py:        - mortar flux is integrated mortar flux
src/porepy/models/two_phase_hu.py:        - mobility, Kr(s)/mu, is not included into this definition of mortar flux
src/porepy/models/two_phase_hu.py:            @ self.aperture(subdomains) ** pp.ad.Scalar(-1)
src/porepy/models/two_phase_hu.py:        delta_p = pressure_h - pressure_l
src/porepy/models/two_phase_hu.py:        eq = self.interface_mortar_flux_phase_0(interfaces) - (
src/porepy/models/two_phase_hu.py:                * (delta_p - density_upwinded / normal_gradient * g_term)
src/porepy/models/two_phase_hu.py:            @ self.aperture(subdomains) ** pp.ad.Scalar(-1)
src/porepy/models/two_phase_hu.py:        eq = self.interface_mortar_flux_phase_1(interfaces) - (
src/porepy/models/two_phase_hu.py:                    - pressure_l
src/porepy/models/two_phase_hu.py:                    - density_upwinded
src/porepy/models/two_phase_hu.py:    # MISCELLANEA FOR EQUATIONS: -------------------------------------------------------------------------------------------------
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:        - it's stupid to have mortar as input, I added it for it for more flexibility for the tests
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.UpwindAd:
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.UpwindCouplingAd:
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:        ref F17 f3 ->->
src/porepy/models/two_phase_hu.py:            - discr.bound_pressure_face
src/porepy/models/two_phase_hu.py:            # - projection.mortar_to_primary_avg @ ( ( ( rho_mob_rho_upwinded_phase_0 + rho_mob_rho_upwinded_phase_1 ) / ( rho_mob_upwinded_phase_0 + rho_mob_upwinded_phase_1 ) ) ) * ( XXX @ self.vector_source(subdomains_vector_source) )  # third version, ref F19f2, subdomains_vector_source are fractures domains, XXX
src/porepy/models/two_phase_hu.py:    def pressure_trace(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:    def darcy_flux_phase_0(self, subdomains: list[pp.Grid], phase) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:    def darcy_flux_phase_1(self, subdomains: list[pp.Grid], phase) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:    def darcy_flux_discretization(self, subdomains: list[pp.Grid]) -> pp.ad.MpfaAd:
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:        source_cell[self.nd - 1] = self.gravity_value
src/porepy/models/two_phase_hu.py:    ) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:            interfaces, unitary=True  # type: ignore[call-arg]
src/porepy/models/two_phase_hu.py:    def bc_neu_phase_0(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
src/porepy/models/two_phase_hu.py:                eps = 1e-6
src/porepy/models/two_phase_hu.py:                right_boundary = np.where(sd.face_centers[0] > (self.xmax - eps))[0]
src/porepy/models/two_phase_hu.py:                vals[left_boundary] = -0.0 * sd.face_areas[left_boundary]  # inlet
src/porepy/models/two_phase_hu.py:    def bc_neu_phase_1(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
src/porepy/models/two_phase_hu.py:                eps = 1e-6
src/porepy/models/two_phase_hu.py:                right_boundary = np.where(sd.face_centers[0] > (self.xmax - eps))[0]
src/porepy/models/two_phase_hu.py:                vals[left_boundary] = -0 * 1.0 * sd.face_areas[left_boundary]  # inlet
src/porepy/models/two_phase_hu.py:    def __init__(self, params: Optional[dict] = None) -> None:
src/porepy/models/two_phase_hu.py:    def prepare_simulation(self) -> None:
src/porepy/models/two_phase_hu.py:    # methods called in prepare_simulation: ------------------------------------------------------
src/porepy/models/two_phase_hu.py:    def set_equation_system_manager(self) -> None:
src/porepy/models/two_phase_hu.py:    def reset_state_from_file(self) -> None:
src/porepy/models/two_phase_hu.py:                time_index = self.restart_options.get("time_index", -1)
src/porepy/models/two_phase_hu.py:    def initial_condition(self) -> None:
src/porepy/models/two_phase_hu.py:                2 - 1 * sd.cell_centers[1] / self.ymax
src/porepy/models/two_phase_hu.py:    def set_discretization_parameters(self) -> None:
src/porepy/models/two_phase_hu.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
src/porepy/models/two_phase_hu.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
src/porepy/models/two_phase_hu.py:    def intrinsic_permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/two_phase_hu.py:    def intrinsic_permeability_tensor(self, sd: pp.Grid) -> pp.SecondOrderTensor:
src/porepy/models/two_phase_hu.py:    def discretize(self) -> None:
src/porepy/models/two_phase_hu.py:    def rediscretize(self) -> None:
src/porepy/models/two_phase_hu.py:    def _initialize_linear_solver(self) -> None:
src/porepy/models/two_phase_hu.py:    # other methods not called in prepared_simulation: -------------------------------------------------
src/porepy/models/two_phase_hu.py:    # def set_nonlinear_discretizations(self) -> None:
src/porepy/models/two_phase_hu.py:    def after_nonlinear_iteration(self, solution_vector: np.ndarray) -> None:
src/porepy/models/two_phase_hu.py:    ) -> None:
src/porepy/models/two_phase_hu.py:        time_step = dt used to reach time starting from time-dt
src/porepy/models/two_phase_hu.py:        wasted_iterations = cumulative_iterations - last_iterations
src/porepy/models/two_phase_hu.py:            np.savetxt(f, info.reshape(1, -1), delimiter=",")
src/porepy/models/two_phase_hu.py:                z = -sd.cell_centers[dim_max - 1]
src/porepy/models/two_phase_hu.py:                    1, -1
src/porepy/models/two_phase_hu.py:            np.savetxt(f, info.reshape(1, -1), delimiter=",")
src/porepy/models/two_phase_hu.py:    def set_geometry(self) -> None:
src/porepy/models/two_phase_hu.py:    def set_domain(self) -> None:
src/porepy/models/two_phase_hu.py:    def set_fractures(self) -> None:
src/porepy/models/two_phase_hu.py:    def meshing_arguments(self) -> dict[str, float]:
src/porepy/models/two_phase_hu.py:            self.dt = self.time_final - self.time
src/porepy/models/two_phase_hu.py:    def decrease_time(self) -> None:
src/porepy/models/two_phase_hu.py:        self.time -= self.dt
src/porepy/models/two_phase_hu.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
src/porepy/models/two_phase_hu.py:        dt_min_max=np.array([1e-5, 1e0]) / t_0,
src/porepy/models/two_phase_hu.py:        "nl_convergence_tol": 1e-6,
src/porepy/models/two_phase_hu.py:        rho0=1 / rho_0, p0=p_0, beta=1e-10
src/porepy/models/two_phase_hu.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
src/porepy/models/FLIPS_HU:4.000000000000000083e-02,1.866000000000000000e+03,1.280000000000000000e+03,1.866000000000000000e+03,1.280000000000000000e+03
src/porepy/models/FLIPS_HU:2.400000000000000466e-01,1.018000000000000000e+03,7.960000000000000000e+02,2.884000000000000000e+03,2.076000000000000000e+03
src/porepy/models/FLIPS_HU:4.400000000000000022e-01,1.004000000000000000e+03,7.080000000000000000e+02,3.888000000000000000e+03,2.784000000000000000e+03
src/porepy/models/FLIPS_HU:6.399999999999999023e-01,1.284000000000000000e+03,1.328000000000000000e+03,5.172000000000000000e+03,4.112000000000000000e+03
src/porepy/models/FLIPS_HU:8.399999999999998579e-01,1.348000000000000000e+03,1.095000000000000000e+03,6.520000000000000000e+03,5.207000000000000000e+03
src/porepy/models/poromechanics.py:    - Coussy, 2004, https://doi.org/10.1002/0470092718.
src/porepy/models/poromechanics.py:    - Garipov and Hui, 2019, https://doi.org/10.1016/j.ijrmms.2019.104075.
src/porepy/models/poromechanics.py:    def stress(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/poromechanics.py:    ) -> pp.ad.TimeDependentDenseArray:
src/porepy/models/poromechanics.py:    ) -> np.ndarray:
src/porepy/models/poromechanics.py:    def bc_values_mechanics_key(self) -> str:
src/porepy/models/poromechanics.py:    def initial_condition(self) -> None:
src/porepy/models/poromechanics.py:    def reset_state_from_file(self) -> None:
src/porepy/models/poromechanics.py:    def before_nonlinear_loop(self) -> None:
src/porepy/models/poromechanics.py:    def update_time_dependent_ad_arrays(self, initial: bool) -> None:
src/porepy/models/poromechanics.py:    def set_discretization_parameters(self) -> None:
src/porepy/models/poromechanics.py:    def _is_nonlinear_problem(self) -> bool:
src/porepy/models/poromechanics.py:    def set_nonlinear_discretizations(self) -> None:
src/porepy/models/poromechanics.py:        # Aperture changes render permeability variable. This requires a re-discretization
src/porepy/models/poromechanics.py:# definitions of the mixins, related to the enforcement of keyword-only arguments. The
src/porepy/models/poromechanics.py:#   def method(a: int, *, b: int) -> None: pass
src/porepy/models/poromechanics.py:    """Class for the coupling of mass and momentum balance in a mixed-dimensional porous
src/porepy/models/gmsh_frac_file.geo_unrolled:Curve Loop(1) = {1, 2, 3, -4};
src/porepy/models/fluid_mass_balance.py:    """Mixed-dimensional mass balance equation.
src/porepy/models/fluid_mass_balance.py:    Balance equation for all subdomains and Darcy-type flux relation on all interfaces
src/porepy/models/fluid_mass_balance.py:    (well-fracture intersections).
src/porepy/models/fluid_mass_balance.py:        A mass balance equation is set for all subdomains and a Darcy-type flux relation
src/porepy/models/fluid_mass_balance.py:    def mass_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/fluid_mass_balance.py:    def fluid_mass(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/fluid_mass_balance.py:        """The full measure of cell-wise fluid mass.
src/porepy/models/fluid_mass_balance.py:        The product of fluid density and porosity is assumed constant cell-wise, and
src/porepy/models/fluid_mass_balance.py:            Operator representing the cell-wise fluid mass.
src/porepy/models/fluid_mass_balance.py:    def fluid_flux(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/fluid_mass_balance.py:    ) -> pp.ad.Operator:
src/porepy/models/fluid_mass_balance.py:    def interface_fluid_flux(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Operator:
src/porepy/models/fluid_mass_balance.py:    def well_fluid_flux(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Operator:
src/porepy/models/fluid_mass_balance.py:    def fluid_source(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/fluid_mass_balance.py:            - external sources
src/porepy/models/fluid_mass_balance.py:            - interface flow from neighboring subdomains of higher dimension.
src/porepy/models/fluid_mass_balance.py:            - well flow from neighboring subdomains of lower and higher dimension.
src/porepy/models/fluid_mass_balance.py:        # Interdimensional fluxes manifest as source terms in lower-dimensional
src/porepy/models/fluid_mass_balance.py:        ) - well_projection.mortar_to_primary_int @ self.well_fluid_flux(
src/porepy/models/fluid_mass_balance.py:    """Constitutive equations for single-phase flow.
src/porepy/models/fluid_mass_balance.py:    """Boundary conditions for single-phase flow."""
src/porepy/models/fluid_mass_balance.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/fluid_mass_balance.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
src/porepy/models/fluid_mass_balance.py:    def bc_type_mobrho(self, sd: pp.Grid) -> pp.BoundaryCondition:
src/porepy/models/fluid_mass_balance.py:    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
src/porepy/models/fluid_mass_balance.py:    def bc_values_mobrho(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
src/porepy/models/fluid_mass_balance.py:        Units for Dirichlet: kg * m^-3 * Pa^-1 * s^-1
src/porepy/models/fluid_mass_balance.py:    for these and their reference values. Getters construct mixed-dimensional variables
src/porepy/models/fluid_mass_balance.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/fluid_mass_balance.py:    def create_variables(self) -> None:
src/porepy/models/fluid_mass_balance.py:        mixed-dimensional grid.
src/porepy/models/fluid_mass_balance.py:        # Note that `interface_darcy_flux_variable` is not multiplied by rho * mu^-1.
src/porepy/models/fluid_mass_balance.py:        # mass flux with units  `kg * s^-1`. The units of `interface_darcy_flux` can
src/porepy/models/fluid_mass_balance.py:        # kg * s^-1 = [kg * (m^nd)^-1] * [Pa * s]^-1 * intf_flux_units
src/porepy/models/fluid_mass_balance.py:    def pressure(self, subdomains: list[pp.Grid]) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/fluid_mass_balance.py:    ) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/fluid_mass_balance.py:    ) -> pp.ad.MixedDimensionalVariable:
src/porepy/models/fluid_mass_balance.py:    def reference_pressure(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/fluid_mass_balance.py:    """Setup and numerics-related methods for a single-phase flow problem.
src/porepy/models/fluid_mass_balance.py:    This is *not* a full-scale model (in the old sense), but must be mixed with balance
src/porepy/models/fluid_mass_balance.py:    def __init__(self, params: Optional[dict] = None) -> None:
src/porepy/models/fluid_mass_balance.py:    def initial_condition(self) -> None:
src/porepy/models/fluid_mass_balance.py:    def set_discretization_parameters(self) -> None:
src/porepy/models/fluid_mass_balance.py:    def permeability_tensor(self, sd: pp.Grid) -> pp.SecondOrderTensor:
src/porepy/models/fluid_mass_balance.py:        # Update parameters *before* the discretization matrices are re-computed.
src/porepy/models/fluid_mass_balance.py:    def set_nonlinear_discretizations(self) -> None:
src/porepy/models/fluid_mass_balance.py:# definitions of the mixins, related to the enforcement of keyword-only arguments. The
src/porepy/models/fluid_mass_balance.py:#   def method(a: int, *, b: int) -> None: pass
src/porepy/models/fluid_mass_balance.py:    def set_geometry(self) -> None:
src/porepy/models/fluid_mass_balance.py:    def set_domain(self) -> None:
src/porepy/models/fluid_mass_balance.py:    def set_fractures(self) -> None:
src/porepy/models/fluid_mass_balance.py:    def meshing_arguments(self) -> dict[str, float]:
src/porepy/models/fluid_mass_balance.py:    """Class for single-phase flow in mixed-dimensional porous media."""
src/porepy/models/fluid_mass_balance.py:        dt_init=1e-2,
src/porepy/models/fluid_mass_balance.py:        "nl_convergence_tol": 1e-10,
src/porepy/models/momentum_balance.py:    - MomentumBalanceEquations defines subdomain and interface equations through the
src/porepy/models/momentum_balance.py:    - The class MomentumBalanceEquations is a mixin class, and should be inherited by a
src/porepy/models/momentum_balance.py:    - Refactoring needed for constitutive equations. Modularisation and moving to the
src/porepy/models/momentum_balance.py:    def set_equations(self) -> None:
src/porepy/models/momentum_balance.py:            - Momentum balance in the matrix.
src/porepy/models/momentum_balance.py:            - Force balance between fracture interfaces.
src/porepy/models/momentum_balance.py:            - Deformation constraints for fractures, split into normal and tangential
src/porepy/models/momentum_balance.py:        fracture_subdomains = self.mdg.subdomains(dim=self.nd - 1)
src/porepy/models/momentum_balance.py:        interfaces = self.mdg.interfaces(dim=self.nd - 1, codim=1)
src/porepy/models/momentum_balance.py:            fracture_eq_tangential, fracture_subdomains, {"cells": self.nd - 1}
src/porepy/models/momentum_balance.py:    def momentum_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/momentum_balance.py:        # acceleration - stress = body_force. The balance_equation method will *add* the
src/porepy/models/momentum_balance.py:        # surface term (stress), so we need to multiply by -1.
src/porepy/models/momentum_balance.py:        stress = pp.ad.Scalar(-1) * self.stress(subdomains)
src/porepy/models/momentum_balance.py:    def inertia(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/momentum_balance.py:    ) -> pp.ad.Operator:
src/porepy/models/momentum_balance.py:        """Momentum balance equation at matrix-fracture interfaces.
src/porepy/models/momentum_balance.py:            interfaces: Fracture-matrix interfaces.
src/porepy/models/momentum_balance.py:            ValueError: If an interface is not a fracture-matrix interface.
src/porepy/models/momentum_balance.py:        # Check that the interface is a fracture-matrix interface.
src/porepy/models/momentum_balance.py:            if interface.dim != self.nd - 1:
src/porepy/models/momentum_balance.py:                raise ValueError("Interface must be a fracture-matrix interface.")
src/porepy/models/momentum_balance.py:                matrix_subdomains, dim=self.nd  # type: ignore[call-arg]
src/porepy/models/momentum_balance.py:    ) -> pp.ad.Operator:
src/porepy/models/momentum_balance.py:        This constraint equation enforces non-penetration of opposing fracture
src/porepy/models/momentum_balance.py:        #  - We do not directly implement the matrix elements of the contact traction
src/porepy/models/momentum_balance.py:        #    as are derived by Berge in their equations (28)-(32). Instead, we directly
src/porepy/models/momentum_balance.py:        #  - Related to the previous point, we do not implement the regularization that
src/porepy/models/momentum_balance.py:            pp.ad.Scalar(-1.0) * t_n
src/porepy/models/momentum_balance.py:            - self.contact_mechanics_numerical_constant(subdomains)
src/porepy/models/momentum_balance.py:            * (u_n - self.fracture_gap(subdomains)),
src/porepy/models/momentum_balance.py:    ) -> pp.ad.Operator:
src/porepy/models/momentum_balance.py:            C_t = max(b_p, ||T_t+c_t u_t||) T_t - max(0, b_p) (T_t+c_t u_t)
src/porepy/models/momentum_balance.py:        #  - We do not directly implement the matrix elements of the contact traction
src/porepy/models/momentum_balance.py:        #    as are derived by Berge in their equations (28)-(32). Instead, we directly
src/porepy/models/momentum_balance.py:        #  - Related to the previous point, we do not implement the regularization that
src/porepy/models/momentum_balance.py:        # each of which represents a cell-wise basis vector which is non-zero in one
src/porepy/models/momentum_balance.py:            subdomains, dim=self.nd - 1  # type: ignore[call-arg]
src/porepy/models/momentum_balance.py:        # individual basis functions have shape (Nc * (self.nd - 1), Nc), where Nc is
src/porepy/models/momentum_balance.py:        # but the row corresponding to each cell will be non-zero in all rows
src/porepy/models/momentum_balance.py:        ones_frac = pp.ad.DenseArray(np.ones(num_cells * (self.nd - 1)))
src/porepy/models/momentum_balance.py:        f_norm = pp.ad.Function(partial(pp.ad.l2_norm, self.nd - 1), "norm_function")
src/porepy/models/momentum_balance.py:        # round-off errors, we use a tolerance to allow for slight inaccuracies before
src/porepy/models/momentum_balance.py:        tol = 1e-5  # FIXME: Revisit this tolerance!
src/porepy/models/momentum_balance.py:        # The numerical parameter is a cell-wise scalar which must be extended to a
src/porepy/models/momentum_balance.py:        # effectively be a sum of SparseArrays, thus we use a matrix-vector product @
src/porepy/models/momentum_balance.py:        # between (the SparseArray) scalar_to_tangential and b_p is of matrix-vector
src/porepy/models/momentum_balance.py:        equation: pp.ad.Operator = (ones_frac - characteristic) * (
src/porepy/models/momentum_balance.py:            bp_tang - maxbp_abs * t_t
src/porepy/models/momentum_balance.py:    def body_force(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/momentum_balance.py:    def stress(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/momentum_balance.py:    """Variables for mixed-dimensional deformation.
src/porepy/models/momentum_balance.py:    Displacement in matrix and on fracture-matrix interfaces. Fracture contact
src/porepy/models/momentum_balance.py:    def create_variables(self) -> None:
src/porepy/models/momentum_balance.py:            - Displacement in the matrix.
src/porepy/models/momentum_balance.py:            - Displacement on fracture-matrix interfaces.
src/porepy/models/momentum_balance.py:            - Fracture contact traction.
src/porepy/models/momentum_balance.py:            interfaces=self.mdg.interfaces(dim=self.nd - 1, codim=1),
src/porepy/models/momentum_balance.py:            subdomains=self.mdg.subdomains(dim=self.nd - 1),
src/porepy/models/momentum_balance.py:    def displacement(self, subdomains: list[pp.Grid]) -> pp.ad.Variable:
src/porepy/models/momentum_balance.py:    def interface_displacement(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Variable:
src/porepy/models/momentum_balance.py:        """Displacement on fracture-matrix interfaces.
src/porepy/models/momentum_balance.py:        if not all([intf.dim == self.nd - 1 for intf in interfaces]):
src/porepy/models/momentum_balance.py:                "nd - 1."
src/porepy/models/momentum_balance.py:    def contact_traction(self, subdomains: list[pp.Grid]) -> pp.ad.Variable:
src/porepy/models/momentum_balance.py:                be of co-dimension one, i.e. fractures.
src/porepy/models/momentum_balance.py:            if sd.dim != self.nd - 1:
src/porepy/models/momentum_balance.py:    def displacement_jump(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/momentum_balance.py:        """Displacement jump on fracture-matrix interfaces.
src/porepy/models/momentum_balance.py:                `nd - 1`.
src/porepy/models/momentum_balance.py:        if not all([sd.dim == self.nd - 1 for sd in subdomains]):
src/porepy/models/momentum_balance.py:        # Only use matrix-fracture interfaces
src/porepy/models/momentum_balance.py:        interfaces = [intf for intf in interfaces if intf.dim == self.nd - 1]
src/porepy/models/momentum_balance.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/momentum_balance.py:    def __init__(self, params: Optional[dict] = None) -> None:
src/porepy/models/momentum_balance.py:        """Name of the displacement variable on fracture-matrix interfaces."""
src/porepy/models/momentum_balance.py:    def initial_condition(self) -> None:
src/porepy/models/momentum_balance.py:        The displacement is set to zero in the Nd-domain, and at the fracture interfaces
src/porepy/models/momentum_balance.py:        The contact pressure is set to zero in the tangential direction, and -1 (that
src/porepy/models/momentum_balance.py:            sd.num_cells for sd in self.mdg.subdomains(dim=self.nd - 1)
src/porepy/models/momentum_balance.py:        traction_vals[-1] = self.solid.convert_units(-1, "Pa")
src/porepy/models/momentum_balance.py:    def set_discretization_parameters(self) -> None:
src/porepy/models/momentum_balance.py:    ) -> pp.ad.Scalar:
src/porepy/models/momentum_balance.py:        """Numerical constant for the contact problem [Pa * m^-1].
src/porepy/models/momentum_balance.py:        softening_factor = 1e-1
src/porepy/models/momentum_balance.py:    def _is_nonlinear_problem(self) -> bool:
src/porepy/models/momentum_balance.py:    def bc_type_mechanics(self, sd: pp.Grid) -> pp.BoundaryConditionVectorial:
src/porepy/models/momentum_balance.py:    def bc_values_mechanics(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:
src/porepy/models/momentum_balance.py:# definitions of the mixins, related to the enforcement of keyword-only arguments. The
src/porepy/models/momentum_balance.py:#   def method(a: int, *, b: int) -> None: pass
src/porepy/models/momentum_balance.py:    """Class for mixed-dimensional momentum balance with contact mechanics."""
src/porepy/models/MASS_OVER_TIME_HU:0.000000000000000000e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_HU:4.000000000000000083e-02,1.269973967780828605e-01
src/porepy/models/MASS_OVER_TIME_HU:2.400000000000000466e-01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:4.400000000000000022e-01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:6.399999999999999023e-01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:8.399999999999998579e-01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.839999999999999858e+00,1.269973967780828605e-01
src/porepy/models/MASS_OVER_TIME_HU:2.839999999999999858e+00,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:3.839999999999999858e+00,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:4.839999999999999858e+00,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:5.839999999999999858e+00,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:6.839999999999999858e+00,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:7.839999999999999858e+00,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:8.839999999999999858e+00,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:9.839999999999999858e+00,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.083999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.183999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.283999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.383999999999999986e+01,1.269973967780828605e-01
src/porepy/models/MASS_OVER_TIME_HU:1.483999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.583999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.683999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.783999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.883999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:1.983999999999999986e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:2.083999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:2.183999999999999986e+01,1.269973967780828605e-01
src/porepy/models/MASS_OVER_TIME_HU:2.283999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:2.383999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:2.483999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:2.583999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:2.683999999999999986e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:2.783999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:2.883999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:2.983999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:3.083999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:3.183999999999999986e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:3.284000000000000341e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:3.384000000000000341e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:3.484000000000000341e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:3.584000000000000341e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:3.684000000000000341e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:3.784000000000000341e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:3.884000000000000341e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:3.984000000000000341e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:4.084000000000000341e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:4.184000000000000341e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:4.284000000000000341e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:4.384000000000000341e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:4.484000000000000341e+01,1.269973967780828605e-01
src/porepy/models/MASS_OVER_TIME_HU:4.584000000000000341e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:4.684000000000000341e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:4.784000000000000341e+01,1.269973967780828050e-01
src/porepy/models/MASS_OVER_TIME_HU:4.884000000000000341e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:4.984000000000000341e+01,1.269973967780828328e-01
src/porepy/models/MASS_OVER_TIME_HU:5.084000000000000341e+01,1.269973967780828328e-01
src/porepy/models/solution_strategy.py:        """Whether the non-linear iteration has converged."""
src/porepy/models/solution_strategy.py:        """Number of non-linear iterations performed for current time step."""
src/porepy/models/solution_strategy.py:        """Mixed-dimensional grid. Will normally be set by a mixin instance of
src/porepy/models/solution_strategy.py:        """Box-shaped domain. Will normally be set by a mixin instance of
src/porepy/models/solution_strategy.py:        """The linear system to be solved in each iteration of the non-linear solver.
src/porepy/models/solution_strategy.py:                "time_index": -1,
src/porepy/models/solution_strategy.py:    def prepare_simulation(self) -> None:
src/porepy/models/solution_strategy.py:    def set_equation_system_manager(self) -> None:
src/porepy/models/solution_strategy.py:        """Create an equation_system manager on the mixed-dimensional grid."""
src/porepy/models/solution_strategy.py:    def set_discretization_parameters(self) -> None:
src/porepy/models/solution_strategy.py:    def initial_condition(self) -> None:
src/porepy/models/solution_strategy.py:    def time_step_indices(self) -> np.ndarray:
src/porepy/models/solution_strategy.py:    def iterate_indices(self) -> np.ndarray:
src/porepy/models/solution_strategy.py:    def reset_state_from_file(self) -> None:
src/porepy/models/solution_strategy.py:                time_index = self.restart_options.get("time_index", -1)
src/porepy/models/solution_strategy.py:    def discretize(self) -> None:
src/porepy/models/solution_strategy.py:        logger.info("Discretized in {} seconds".format(time.time() - tic))
src/porepy/models/solution_strategy.py:    def rediscretize(self) -> None:
src/porepy/models/solution_strategy.py:            "Re-discretized nonlinear terms in {} seconds".format(time.time() - tic)
src/porepy/models/solution_strategy.py:    def nonlinear_discretizations(self) -> list[pp.ad._ad_utils.MergedOperator]:
src/porepy/models/solution_strategy.py:    ) -> None:
src/porepy/models/solution_strategy.py:    def set_nonlinear_discretizations(self) -> None:
src/porepy/models/solution_strategy.py:    def before_nonlinear_loop(self) -> None:
src/porepy/models/solution_strategy.py:        """Method to be called before entering the non-linear solver, thus at the start
src/porepy/models/solution_strategy.py:        Possible usage is to update time-dependent parameters, discretizations etc.
src/porepy/models/solution_strategy.py:    def before_nonlinear_iteration(self) -> None:
src/porepy/models/solution_strategy.py:        """Method to be called at the start of every non-linear iteration.
src/porepy/models/solution_strategy.py:        Possible usage is to update non-linear parameters, discretizations etc.
src/porepy/models/solution_strategy.py:        # Update parameters before re-discretizing.
src/porepy/models/solution_strategy.py:        # Re-discretize nonlinear terms. If none have been added to
src/porepy/models/solution_strategy.py:        # self.nonlinear_discretizations, this will be a no-op.
src/porepy/models/solution_strategy.py:    def after_nonlinear_iteration(self, solution_vector: np.ndarray) -> None:
src/porepy/models/solution_strategy.py:        """Method to be called after every non-linear iteration.
src/porepy/models/solution_strategy.py:            solution_vector: The new solution, as computed by the non-linear solver.
src/porepy/models/solution_strategy.py:    ) -> None:
src/porepy/models/solution_strategy.py:        """Method to be called after every non-linear iteration.
src/porepy/models/solution_strategy.py:            solution: The new solution, as computed by the non-linear solver.
src/porepy/models/solution_strategy.py:            errors: The error in the solution, as computed by the non-linear solver.
src/porepy/models/solution_strategy.py:            iteration_counter: The number of iterations performed by the non-linear
src/porepy/models/solution_strategy.py:    ) -> None:
src/porepy/models/solution_strategy.py:        """Method to be called if the non-linear solver fails to converge.
src/porepy/models/solution_strategy.py:            solution: The new solution, as computed by the non-linear solver.
src/porepy/models/solution_strategy.py:            errors: The error in the solution, as computed by the non-linear solver.
src/porepy/models/solution_strategy.py:            iteration_counter: The number of iterations performed by the non-linear
src/porepy/models/solution_strategy.py:    def after_simulation(self) -> None:
src/porepy/models/solution_strategy.py:    ) -> tuple[float, bool, bool]:
src/porepy/models/solution_strategy.py:        """Implements a convergence check, to be called by a non-linear solver.
src/porepy/models/solution_strategy.py:            the previous non-linear iteration. init_solution: Solution obtained from the
src/porepy/models/solution_strategy.py:            previous time-step. nl_params: Dictionary of parameters used for the
src/porepy/models/solution_strategy.py:            print("----> error pp = ", error)
src/porepy/models/solution_strategy.py:            print("----> err_res = ", err_res)
src/porepy/models/solution_strategy.py:            print("----> max_res = ", max_res)
src/porepy/models/solution_strategy.py:    def _initialize_linear_solver(self) -> None:
src/porepy/models/solution_strategy.py:    def assemble_linear_system(self) -> None:
src/porepy/models/solution_strategy.py:        logger.debug(f"Assembled linear system in {t_0-time.time():.2e} seconds.")
src/porepy/models/solution_strategy.py:    def solve_linear_system(self) -> np.ndarray:
src/porepy/models/solution_strategy.py:            - scipy.sparse.spsolve with and without call to umfpack
src/porepy/models/solution_strategy.py:            - pypardiso.spsolve
src/porepy/models/solution_strategy.py:        logger.debug(f"Solved linear system in {t_0-time.time():.2e} seconds.")
src/porepy/models/solution_strategy.py:    def _is_nonlinear_problem(self) -> bool:
src/porepy/models/solution_strategy.py:    def _is_time_dependent(self) -> bool:
src/porepy/models/solution_strategy.py:        """Specifies whether the Model problem is time-dependent.
src/porepy/models/solution_strategy.py:            bool: True if the problem is time-dependent, False otherwise.
src/porepy/models/solution_strategy.py:    def update_time_dependent_ad_arrays(self, initial: bool) -> None:
src/porepy/models/thermoporomechanics.py:    - Coussy, 2004, https://doi.org/10.1002/0470092718.
src/porepy/models/thermoporomechanics.py:    - Garipov and Hui, 2019, https://doi.org/10.1016/j.ijrmms.2019.104075.
src/porepy/models/thermoporomechanics.py:    - Stefansson et al, 2021, https://doi.org/10.1016/j.cma.2021.114122
src/porepy/models/thermoporomechanics.py:    def stress(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/thermoporomechanics.py:        """Thermo-poromechanical stress operator.
src/porepy/models/thermoporomechanics.py:    def set_discretization_parameters(self) -> None:
src/porepy/models/thermoporomechanics.py:    def set_nonlinear_discretizations(self) -> None:
src/porepy/models/thermoporomechanics.py:        # Aperture changes render permeability variable. This requires a re-discretization
src/porepy/models/thermoporomechanics.py:        # requires a re-discretization of the diffusive flux.
src/porepy/models/thermoporomechanics.py:# definitions of the mixins, related to the enforcement of keyword-only arguments. The
src/porepy/models/thermoporomechanics.py:#   def method(a: int, *, b: int) -> None: pass
src/porepy/models/thermoporomechanics.py:    mixed-dimensional porous medium.
src/porepy/models/MASS_OVER_TIME_PPU:0.000000000000000000e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:4.000000000000000083e-02,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:2.400000000000000466e-01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:4.400000000000000022e-01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:6.399999999999999023e-01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:6.799999999999999378e-01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:7.199999999999999734e-01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:7.600000000000000089e-01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:9.599999999999999645e-01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:1.159999999999999920e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:1.360000000000000098e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:2.360000000000000320e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:3.360000000000000320e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:4.360000000000000320e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:5.360000000000000320e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:6.360000000000000320e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:7.360000000000000320e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:8.359999999999999432e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:9.359999999999999432e+00,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:1.035999999999999943e+01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:1.135999999999999943e+01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:1.235999999999999943e+01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:1.335999999999999943e+01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:1.435999999999999943e+01,1.269973967780839152e-01
src/porepy/models/MASS_OVER_TIME_PPU:1.535999999999999943e+01,1.269973967780838875e-01
src/porepy/models/MASS_OVER_TIME_PPU:1.635999999999999943e+01,1.269973967780839152e-01
src/porepy/models/FLIPS_PPU:4.000000000000000083e-02,1.926000000000000000e+03,1.899000000000000000e+03,1.926000000000000000e+03,1.899000000000000000e+03
src/porepy/models/FLIPS_PPU:2.400000000000000466e-01,1.562000000000000000e+03,1.550000000000000000e+03,3.488000000000000000e+03,3.449000000000000000e+03
src/porepy/models/FLIPS_PPU:4.400000000000000022e-01,1.120000000000000000e+03,1.044000000000000000e+03,4.608000000000000000e+03,4.493000000000000000e+03
src/porepy/models/FLIPS_PPU:6.399999999999999023e-01,1.067000000000000000e+03,9.380000000000000000e+02,5.675000000000000000e+03,5.431000000000000000e+03
src/porepy/models/FLIPS_PPU:6.799999999999999378e-01,1.312000000000000000e+03,1.069000000000000000e+03,6.987000000000000000e+03,6.500000000000000000e+03
src/porepy/models/FLIPS_PPU:7.199999999999999734e-01,1.049000000000000000e+03,1.023000000000000000e+03,8.036000000000000000e+03,7.523000000000000000e+03
src/porepy/models/FLIPS_PPU:7.600000000000000089e-01,1.282000000000000000e+03,1.108000000000000000e+03,9.318000000000000000e+03,8.631000000000000000e+03
src/porepy/models/FLIPS_PPU:9.599999999999999645e-01,1.285000000000000000e+03,1.097000000000000000e+03,1.060300000000000000e+04,9.728000000000000000e+03
src/porepy/models/two_phase_ppu.py:    # PRESSURE EQUATION: -------------------------------------------------------------------------------------------------
src/porepy/models/two_phase_ppu.py:        # accumulation term: ------------------------------
src/porepy/models/two_phase_ppu.py:        # subdomains flux: -----------------------------------------------------------
src/porepy/models/two_phase_ppu.py:        # interfaces flux contribution (copied from mass bal): ------------------------------------
src/porepy/models/two_phase_ppu.py:            - flux_intf_phase_0
src/porepy/models/two_phase_ppu.py:            - flux_intf_phase_1
src/porepy/models/two_phase_ppu.py:            - discr_phase_0.bound_transport_neu @ self.bc_neu_phase_0(subdomains)
src/porepy/models/two_phase_ppu.py:            - discr_phase_1.bound_transport_neu @ self.bc_neu_phase_1(subdomains)
src/porepy/models/two_phase_ppu.py:        # sources: --------------------------------------------------------------
src/porepy/models/two_phase_ppu.py:    def pressure_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/two_phase_ppu.py:    # MASS BALANCE: ----------------------------------------------------------------------------------------------------------------
src/porepy/models/two_phase_ppu.py:        # accumulation term: ------------------------------------------------
src/porepy/models/two_phase_ppu.py:        # subdomains flux contribution: -------------------------------------
src/porepy/models/two_phase_ppu.py:        # interfaces flux contribution: ------------------------------------
src/porepy/models/two_phase_ppu.py:            discr.bound_transport_neu  # -1,0,1 matrix
src/porepy/models/two_phase_ppu.py:                - flux_intf_phase_0
src/porepy/models/two_phase_ppu.py:                - discr_phase_0.bound_transport_neu @ self.bc_neu_phase_0(subdomains)
src/porepy/models/two_phase_ppu.py:                - flux_intf_phase_1
src/porepy/models/two_phase_ppu.py:                - discr_phase_1.bound_transport_neu @ self.bc_neu_phase_1(subdomains)
src/porepy/models/two_phase_ppu.py:        # sources: ---------------------------------------
src/porepy/models/two_phase_ppu.py:    def mass_balance_equation(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/two_phase_ppu.py:    ) -> pp.ad.UpwindAd:
src/porepy/models/two_phase_ppu.py:    def darcy_flux_discretization(self, subdomains: list[pp.Grid]) -> pp.ad.MpfaAd:
src/porepy/models/two_phase_ppu.py:    def darcy_flux_phase_0(self, subdomains: list[pp.Grid], phase) -> pp.ad.Operator:
src/porepy/models/two_phase_ppu.py:        - TODO: why the heck is there a phase as input
src/porepy/models/two_phase_ppu.py:            - discr.vector_source
src/porepy/models/two_phase_ppu.py:    def darcy_flux_phase_1(self, subdomains: list[pp.Grid], phase) -> pp.ad.Operator:
src/porepy/models/two_phase_ppu.py:            - discr.vector_source
src/porepy/models/two_phase_ppu.py:    def initial_condition(self) -> None:
src/porepy/models/two_phase_ppu.py:                2 - 1 * sd.cell_centers[1] / self.ymax
src/porepy/models/two_phase_ppu.py:    def set_discretization_parameters(self) -> None:
src/porepy/models/two_phase_ppu.py:    rho_0 = 1  # |rho_phase_0-rho_phase_1|
src/porepy/models/two_phase_ppu.py:        dt_min_max=np.array([1e-5, 1e0]) / t_0,
src/porepy/models/two_phase_ppu.py:        "nl_convergence_tol": 1e-6,
src/porepy/models/two_phase_ppu.py:        rho0=1 / rho_0, p0=p_0, beta=1e-10
src/porepy/models/two_phase_ppu.py:    non_wetting_phase = pp.composite.phase.Phase(rho0=0.5 / rho_0, p0=p_0, beta=1e-10)
src/porepy/models/gmsh_frac_file.msh:1 0 0 0 1 0 0 1 5 2 1 -2 
src/porepy/models/gmsh_frac_file.msh:2 1 0 0 1 1 0 1 6 2 2 -3 
src/porepy/models/gmsh_frac_file.msh:3 0 1 0 1 1 0 1 7 2 3 -4 
src/porepy/models/gmsh_frac_file.msh:4 0 0 0 0 1 0 1 8 2 1 -4 
src/porepy/models/gmsh_frac_file.msh:1 0 0 0 1 1 0 1 9 4 1 2 3 -4 
src/porepy/models/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def grid_aperture(self, grid: pp.Grid) -> np.ndarray:
src/porepy/models/constitutive_laws.py:        # aperture^nd-dim and should be 1 for dim=nd.
src/porepy/models/constitutive_laws.py:    def aperture(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        1 in matrix, thickness of fractures and "side length" of cross-sectional
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Specific volume [m^(nd-d)].
src/porepy/models/constitutive_laws.py:        For subdomains, the specific volume is the cross-sectional area/volume of the
src/porepy/models/constitutive_laws.py:        cell, i.e. aperture to the power :math`nd-dim`. For interfaces, the specific
src/porepy/models/constitutive_laws.py:        volume is inherited from the higher-dimensional subdomain neighbor.
src/porepy/models/constitutive_laws.py:            # higher-dimensional subdomain neighbor.
src/porepy/models/constitutive_laws.py:            # Check that all interfaces are of the same co-dimension
src/porepy/models/constitutive_laws.py:        # Compute specific volume as the cross-sectional area/volume
src/porepy/models/constitutive_laws.py:        # of the cell, i.e. raise to the power nd-dim
src/porepy/models/constitutive_laws.py:        # mixed-dimensional grid. If the order in input argument subdomains is
src/porepy/models/constitutive_laws.py:        for dim in range(self.nd, -1, -1):
src/porepy/models/constitutive_laws.py:            v_loc = a_loc ** Scalar(self.nd - dim)
src/porepy/models/constitutive_laws.py:    def residual_aperture(self, subdomains: list[pp.Grid]) -> Scalar:
src/porepy/models/constitutive_laws.py:    def aperture(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        # mixed-dimensional grid. If the order in input argument subdomains is
src/porepy/models/constitutive_laws.py:        for dim in range(self.nd - 1, -1, -1):
src/porepy/models/constitutive_laws.py:            if dim == self.nd - 1:
src/porepy/models/constitutive_laws.py:                # guaranteed in the non-converged state. As this (especially
src/porepy/models/constitutive_laws.py:                # non-positive values) may give significant trouble in the aperture.
src/porepy/models/constitutive_laws.py:                if dim == self.nd - 2:
src/porepy/models/constitutive_laws.py:                # to higher-dimensional neighbors.
src/porepy/models/constitutive_laws.py:                # Get the higher-dimensional neighbors.
src/porepy/models/constitutive_laws.py:                # Only consider the higher-dimensional neighbors, i.e. disregard the
src/porepy/models/constitutive_laws.py:                # Get the apertures of the higher-dimensional neighbors by calling this
src/porepy/models/constitutive_laws.py:                # The apertures on the lower-dimensional subdomains are the mean
src/porepy/models/constitutive_laws.py:                # apertures from the higher-dimensional neighbors. This requires both a
src/porepy/models/constitutive_laws.py:                # higher-dimensional neighbors.
src/porepy/models/constitutive_laws.py:                # Define a trace operator. This is needed to go from the cell-based
src/porepy/models/constitutive_laws.py:                # and then to the lower-dimensional subdomains. The resulting compound
src/porepy/models/constitutive_laws.py:                # higher-dimensional neighbors.
src/porepy/models/constitutive_laws.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/constitutive_laws.py:    def fluid_compressibility(self, subdomains: list[pp.Grid]) -> pp.ad.Scalar:
src/porepy/models/constitutive_laws.py:    def fluid_density(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            \\rho = \\rho_0 \\exp \\left[ c_p \\left(p - p_0\\right) \\right]
src/porepy/models/constitutive_laws.py:    def pressure_exponential(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/constitutive_laws.py:    def fluid_density(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            \\rho = \\rho_0 \\exp \\left[-c_T\\left(T - T_0\\right) \\right]
src/porepy/models/constitutive_laws.py:    def temperature_exponential(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        return exp(Scalar(-1) * Scalar(self.fluid.thermal_expansion()) * dtemp)
src/porepy/models/constitutive_laws.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/constitutive_laws.py:    def fluid_density(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            \\rho = \\rho_0 \\exp \\left[ c_p \\left(p - p_0\\right)
src/porepy/models/constitutive_laws.py:            - c_T\\left(T - T_0\\right) \\right]
src/porepy/models/constitutive_laws.py:    def mobility(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def mobility_discretization(self, subdomains: list[pp.Grid]) -> pp.ad.UpwindAd:
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.UpwindCouplingAd:
src/porepy/models/constitutive_laws.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/constitutive_laws.py:    def fluid_viscosity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise permeability tensor. The value is picked from the solid constants.
src/porepy/models/constitutive_laws.py:    def normal_permeability(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise permeability values.
src/porepy/models/constitutive_laws.py:    def cubic_law_permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise permeability operator.
src/porepy/models/constitutive_laws.py:    def matrix_permeability(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise permeability operator.
src/porepy/models/constitutive_laws.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/constitutive_laws.py:    def pressure_trace(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            face-wise array.
src/porepy/models/constitutive_laws.py:    def darcy_flux(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Face-wise Darcy flux in cubic meters per second.
src/porepy/models/constitutive_laws.py:            interfaces, "cell_volumes", dim=1  # type: ignore[call-arg]
src/porepy/models/constitutive_laws.py:        # also for subdomains of co-dimension > 1.
src/porepy/models/constitutive_laws.py:            projection.secondary_to_mortar_avg @ self.aperture(subdomains) ** Scalar(-1)
src/porepy/models/constitutive_laws.py:        eq = self.interface_darcy_flux(interfaces) - (
src/porepy/models/constitutive_laws.py:                    - pressure_l
src/porepy/models/constitutive_laws.py:    def darcy_flux_discretization(self, subdomains: list[pp.Grid]) -> pp.ad.MpfaAd:
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise nd-vector source term operator.
src/porepy/models/constitutive_laws.py:        val = self.fluid.convert_units(0, "m*s^-2")
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise vector source term.
src/porepy/models/constitutive_laws.py:            interfaces, unitary=True  # type: ignore[call-arg]
src/porepy/models/constitutive_laws.py:        # Project vector source from lower-dimensional neighbors to the interfaces.
src/porepy/models/constitutive_laws.py:        # having keyword-only arguments. The result will in effect be a matrix.
src/porepy/models/constitutive_laws.py:            [e.T for e in self.basis(interfaces, dim=self.nd)]  # type: ignore[call-arg]
src/porepy/models/constitutive_laws.py:        # must be implemented as a matrix-vector product (yes, this is confusing).
src/porepy/models/constitutive_laws.py:    Peaceman 1977 https://doi.org/10.2118/6893-PA
src/porepy/models/constitutive_laws.py:    Assumes permeability is cell-wise scalar.
src/porepy/models/constitutive_laws.py:    """Mixed-dimensional grid."""
src/porepy/models/constitutive_laws.py:    def well_flux_equation(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise well flux operator.
src/porepy/models/constitutive_laws.py:        eq: pp.ad.Operator = self.well_flux(interfaces) - self.volume_integral(
src/porepy/models/constitutive_laws.py:            - projection.secondary_to_mortar_avg @ self.pressure(subdomains)
src/porepy/models/constitutive_laws.py:    def equivalent_well_radius(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise equivalent radius operator.
src/porepy/models/constitutive_laws.py:        # https://www.cambridge.org/core/books/an-introduction-to-
src/porepy/models/constitutive_laws.py:        # reservoir-simulation-using-matlabgnu-octave/F48C3D8C88A3F67E4D97D4E16970F894
src/porepy/models/constitutive_laws.py:    def skin_factor(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def well_radius(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise well radius operator.
src/porepy/models/constitutive_laws.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def fluid_thermal_expansion(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def solid_thermal_expansion(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def fluid_thermal_conductivity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def solid_thermal_conductivity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def thermal_conductivity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        The thermal conductivity is computed as the porosity-weighted average of the
src/porepy/models/constitutive_laws.py:            Cell-wise conducivity operator.
src/porepy/models/constitutive_laws.py:            Scalar(1) - phi
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Scalar:
src/porepy/models/constitutive_laws.py:    def temperature_trace(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            face-wise array.
src/porepy/models/constitutive_laws.py:    def fourier_flux(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            An Ad-operator representing the Fourier flux on the subdomains.
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            interfaces, "cell_volumes", dim=1  # type: ignore[call-arg]
src/porepy/models/constitutive_laws.py:            projection.secondary_to_mortar_avg @ self.aperture(subdomains) ** Scalar(-1)
src/porepy/models/constitutive_laws.py:        eq = self.interface_fourier_flux(interfaces) - (
src/porepy/models/constitutive_laws.py:                        - projection.secondary_to_mortar_avg
src/porepy/models/constitutive_laws.py:    def fourier_flux_discretization(self, subdomains: list[pp.Grid]) -> pp.ad.MpfaAd:
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            - discr.bound_transport_dir @ (darcy_flux * bc_values)
src/porepy/models/constitutive_laws.py:            # Advective flux coming from lower-dimensional subdomains ### EB: comment, you are in the wrong place...
src/porepy/models/constitutive_laws.py:            - discr.bound_transport_neu @ bc_values
src/porepy/models/constitutive_laws.py:            flux -= (
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        # If no interfaces are given, make sure to proceed with a non-empty subdomain
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def fluid_specific_heat_capacity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def solid_specific_heat_capacity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def fluid_enthalpy(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Fluid enthalpy [J*kg^-1*m^-nd].
src/porepy/models/constitutive_laws.py:            h = c_p (T - T_0)
src/porepy/models/constitutive_laws.py:    def enthalpy_discretization(self, subdomains: list[pp.Grid]) -> pp.ad.UpwindAd:
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.UpwindCouplingAd:
src/porepy/models/constitutive_laws.py:    def solid_enthalpy(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Solid enthalpy [J*kg^-1*m^-nd].
src/porepy/models/constitutive_laws.py:            h = c_p (T - T_0)
src/porepy/models/constitutive_laws.py:        g = -\\rho \\mathbf{g}= -\\rho \\begin{bmatrix} 0 \\\\ 0 \\\\ G \\end{bmatrix}
src/porepy/models/constitutive_laws.py:    """Fluid constant object that takes care of scaling of fluid-related quantities.
src/porepy/models/constitutive_laws.py:    """Function that returns the unit vector in the i-th direction.
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise nd-vector source term operator.
src/porepy/models/constitutive_laws.py:        val = self.fluid.convert_units(pp.GRAVITY_ACCELERATION, "m*s^-2")
src/porepy/models/constitutive_laws.py:        # Ignore type error, can't get mypy to understand keyword-only arguments in
src/porepy/models/constitutive_laws.py:        e_n = self.e_i(grids, i=self.nd - 1, dim=self.nd)  # type: ignore[call-arg]
src/porepy/models/constitutive_laws.py:        source = Scalar(-1) * e_n @ (rho * gravity)
src/porepy/models/constitutive_laws.py:    def mechanical_stress(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            subdomains: List of subdomains. Should be of co-dimension 0.
src/porepy/models/constitutive_laws.py:            # The mechanical stress is only defined on subdomains of co-dimension 0.
src/porepy/models/constitutive_laws.py:    def fracture_stress(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            ValueError: If any interface is not of co-dimension 1.
src/porepy/models/constitutive_laws.py:            if any([interface.dim != self.nd - 1]):
src/porepy/models/constitutive_laws.py:                raise ValueError("Interface must be of co-dimension 1.")
src/porepy/models/constitutive_laws.py:        fracture_subdomains = [sd for sd in subdomains if sd.dim == self.nd - 1]
src/porepy/models/constitutive_laws.py:    def pressure_stress(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            - discr.grad_p @ self.reference_pressure(subdomains)
src/porepy/models/constitutive_laws.py:    def fracture_stress(self, interfaces: list[pp.MortarGrid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Poromechanical stress operator on matrix-fracture interfaces.
src/porepy/models/constitutive_laws.py:            ValueError: If any interface is not of dimension `nd - 1`.
src/porepy/models/constitutive_laws.py:        if not all([intf.dim == self.nd - 1 for intf in interfaces]):
src/porepy/models/constitutive_laws.py:            raise ValueError("Interfaces must be of dimension nd - 1.")
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Pressure contribution to stress tensor on fracture-matrix interfaces.
src/porepy/models/constitutive_laws.py:            interfaces, unitary=True  # type: ignore[call-arg]
src/porepy/models/constitutive_laws.py:        # Expands from cell-wise scalar to vector. Equivalent to the :math:`\mathbf{I}p`
src/porepy/models/constitutive_laws.py:                for e_i in self.basis(interfaces, dim=self.nd)  # type: ignore[call-arg]
src/porepy/models/constitutive_laws.py:        # mortar, expand to an nd-vector, and multiply with the outwards normal vector.
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def thermal_stress(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:                raise ValueError("Subdomains must be of dimension nd - 1.")
src/porepy/models/constitutive_laws.py:                - discr.grad_p @ self.reference_temperature(subdomains)
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def solid_density(self, subdomains: list[pp.Grid]) -> pp.ad.Scalar:
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def shear_modulus(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise shear modulus operator. The value is picked from the solid
src/porepy/models/constitutive_laws.py:    def lame_lambda(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise Lame's first parameter operator. The value is picked from the
src/porepy/models/constitutive_laws.py:    def youngs_modulus(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise Young's modulus in Pascal. The value is picked from the solid
src/porepy/models/constitutive_laws.py:    def bulk_modulus(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def stiffness_tensor(self, subdomain: pp.Grid) -> pp.FourthOrderTensor:
src/porepy/models/constitutive_laws.py:            Cell-wise stiffness tensor in SI units.
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def friction_bound(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise friction bound operator [Pa].
src/porepy/models/constitutive_laws.py:            Scalar(-1.0) * self.friction_coefficient(subdomains) * t_n
src/porepy/models/constitutive_laws.py:    def friction_coefficient(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise friction coefficient operator.
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def shear_dilation_gap(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise shear dilation.
src/porepy/models/constitutive_laws.py:            partial(pp.ad.functions.l2_norm, self.nd - 1), "norm_function"
src/porepy/models/constitutive_laws.py:    def dilation_angle(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise dilation angle operator [rad].
src/porepy/models/constitutive_laws.py:    """Implementation of the Barton-Bandis model for elastic fracture normal
src/porepy/models/constitutive_laws.py:    The Barton-Bandis model represents a non-linear elastic deformation in the normal
src/porepy/models/constitutive_laws.py:    The Barton-Bandis equation is defined in
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Barton-Bandis model for elastic normal deformation of a fracture.
src/porepy/models/constitutive_laws.py:        for how to include the Barton-Bandis effect in the model for fracture
src/porepy/models/constitutive_laws.py:        maximum_fracture_closure. If its value is zero, the Barton-Bandis model is
src/porepy/models/constitutive_laws.py:        void, and the method returns a hard-coded pp.ad.Scalar(0) to avoid zero
src/porepy/models/constitutive_laws.py:        division. Otherwise, an operator which implements the Barton-Bandis model is
src/porepy/models/constitutive_laws.py:            Link: https://doi.org/10.1016/0148-9062(83)90595-8.
src/porepy/models/constitutive_laws.py:            See in particular Equations (8)-(9) (page 10) in that paper.
src/porepy/models/constitutive_laws.py:            The decrease in fracture opening, as computed by the Barton-Bandis model.
src/porepy/models/constitutive_laws.py:        # If the maximum closure is zero, the Barton-Bandis model is not valid in the
src/porepy/models/constitutive_laws.py:            raise ValueError("The maximum closure must be non-negative.")
src/porepy/models/constitutive_laws.py:        # The effective contact traction. Units: Pa = N/m^(nd-1)
src/porepy/models/constitutive_laws.py:        contact_traction = Scalar(-1) * self.contact_traction(subdomains)
src/porepy/models/constitutive_laws.py:        # Normal stiffness (as per Barton-Bandis terminology). Units: Pa / m
src/porepy/models/constitutive_laws.py:        opening_decrease.set_name("Barton-Bandis_closure")
src/porepy/models/constitutive_laws.py:    def maximum_fracture_closure(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        Used in the Barton-Bandis model for normal elastic fracture deformation.
src/porepy/models/constitutive_laws.py:    def fracture_normal_stiffness(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """The normal stiffness of a fracture [Pa*m^-1].
src/porepy/models/constitutive_laws.py:        Used in the Barton-Bandis model for normal elastic fracture deformation.
src/porepy/models/constitutive_laws.py:    both shear dilation and the Barton-Bandis effect.
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def fracture_gap(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:                Barton-Bandis model.
src/porepy/models/constitutive_laws.py:            Cell-wise fracture gap operator.
src/porepy/models/constitutive_laws.py:        gap = self.reference_fracture_gap(subdomains) + dilation - barton_bandis_closure
src/porepy/models/constitutive_laws.py:            - self.maximum_fracture_closure(subdomains)
src/porepy/models/constitutive_laws.py:    def reference_fracture_gap(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            Cell-wise reference fracture gap operator [m].
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def biot_coefficient(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def specific_storage(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        fundamental quantities, i.e., :math:`S_\varepsilon = (\alpha - \phi_0) K_d^{
src/porepy/models/constitutive_laws.py:        -1} + \phi_0 c_f)`, where :math:`\alpha` is the Biot's coefficient,
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def porosity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Constant porosity [-].
src/porepy/models/constitutive_laws.py:    """Solid constant object that takes care of scaling of solid-related quantities.
src/porepy/models/constitutive_laws.py:    def porosity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    def matrix_porosity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Porosity in the nd-dimensional matrix [-].
src/porepy/models/constitutive_laws.py:            Cell-wise porosity operator [-].
src/porepy/models/constitutive_laws.py:    def reference_porosity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Contribution of the pressure changes to the matrix porosity [-].
src/porepy/models/constitutive_laws.py:            Cell-wise contribution of the pressure changes to the matrix porosity [-].
src/porepy/models/constitutive_laws.py:        n_inv = (alpha - phi_ref) * (Scalar(1) - alpha) / bulk_modulus
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Contribution of the divergence displacement to the matrix porosity [-].
src/porepy/models/constitutive_laws.py:            Cell-wise contribution of the divergence of the displacement to the
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Divergence of displacement [-].
src/porepy/models/constitutive_laws.py:            subdomains, "cell_volumes", dim=1  # type: ignore[call-arg]
src/porepy/models/constitutive_laws.py:    def biot_stabilization(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:            subdomains, "cell_volumes", dim=1  # type: ignore[call-arg]
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Contribution of the pressure changes to the matrix porosity [-].
src/porepy/models/constitutive_laws.py:            Cell-wise contribution of the pressure changes to the matrix porosity [-].
src/porepy/models/constitutive_laws.py:    def matrix_porosity(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Porosity [-].
src/porepy/models/constitutive_laws.py:            Cell-wise porosity operator [-].
src/porepy/models/constitutive_laws.py:    ) -> pp.ad.Operator:
src/porepy/models/constitutive_laws.py:        """Thermal contribution to the changes in porosity [-].
src/porepy/models/constitutive_laws.py:            Cell-wise thermal porosity expansion operator [-].
src/porepy/models/constitutive_laws.py:        phi = Scalar(-1) * (alpha - phi_ref) * beta * dtemperature
src/porepy/models/OUTPUT_NEWTON_INFO_HU:4.000000000000000083e-02,4.000000000000000083e-02,2.000000000000000000e+00,2.900000000000000000e+01,2.900000000000000000e+01,7.000000000000000000e+00,2.200000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_HU:2.400000000000000466e-01,2.000000000000000111e-01,1.000000000000000000e+00,1.600000000000000000e+01,4.500000000000000000e+01,9.000000000000000000e+00,7.000000000000000000e+00
src/porepy/models/OUTPUT_NEWTON_INFO_HU:4.400000000000000022e-01,2.000000000000000111e-01,1.000000000000000000e+00,1.400000000000000000e+01,5.900000000000000000e+01,6.000000000000000000e+00,8.000000000000000000e+00
src/porepy/models/OUTPUT_NEWTON_INFO_HU:6.399999999999999023e-01,2.000000000000000111e-01,1.000000000000000000e+00,1.700000000000000000e+01,7.600000000000000000e+01,6.000000000000000000e+00,1.100000000000000000e+01
src/porepy/models/OUTPUT_NEWTON_INFO_HU:8.399999999999998579e-01,2.000000000000000111e-01,1.000000000000000000e+00,1.600000000000000000e+01,9.200000000000000000e+01,5.000000000000000000e+00,1.100000000000000000e+01
src/porepy/grids/md_grid.py:intersections along with a surrounding matrix in the form of a mixed-dimensional grid.
src/porepy/grids/md_grid.py:    def __init__(self) -> None:
src/porepy/grids/md_grid.py:        self.name = "Mixed-dimensional grid"
src/porepy/grids/md_grid.py:        """Name of the md-grid, initiated as ``'Mixed-dimensional grid'``."""
src/porepy/grids/md_grid.py:    def __contains__(self, key: Any) -> bool:
src/porepy/grids/md_grid.py:            and key is among the subdomains of this mixed-dimensional grid,
src/porepy/grids/md_grid.py:            the interfaces of this mixed-dimensional grid.
src/porepy/grids/md_grid.py:    # --------- Iterators -------------------------
src/porepy/grids/md_grid.py:    ) -> list[pp.Grid]:
src/porepy/grids/md_grid.py:        # https://adamj.eu/tech/2021/05/29/python-type-hints-how-to-use-overload/
src/porepy/grids/md_grid.py:        # the below declaration, where the non-default option is handled.
src/porepy/grids/md_grid.py:    ) -> list[tuple[pp.Grid, dict]]:
src/porepy/grids/md_grid.py:        # https://adamj.eu/tech/2021/05/29/python-type-hints-how-to-use-overload/
src/porepy/grids/md_grid.py:    ) -> Union[list[pp.Grid], list[tuple[pp.Grid, dict]]]:
src/porepy/grids/md_grid.py:        """Get a sorted list of subdomains in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    ) -> list[pp.MortarGrid]:
src/porepy/grids/md_grid.py:        # https://adamj.eu/tech/2021/05/29/python-type-hints-how-to-use-overload/
src/porepy/grids/md_grid.py:    ) -> list[tuple[pp.MortarGrid, dict]]:
src/porepy/grids/md_grid.py:        # https://adamj.eu/tech/2021/05/29/python-type-hints-how-to-use-overload/
src/porepy/grids/md_grid.py:    ) -> Union[list[pp.MortarGrid], list[tuple[pp.MortarGrid, dict]]]:
src/porepy/grids/md_grid.py:        """Get a sorted list of interfaces in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    def boundaries(self, dim: Optional[int] = None) -> list[pp.BoundaryGrid]:
src/porepy/grids/md_grid.py:        """Get a sorted list of boundary grids in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:                "There are subdomains in the mixed-dimensional grid, but no boundary "
src/porepy/grids/md_grid.py:    # ---------- Navigate within the graph --------
src/porepy/grids/md_grid.py:    ) -> tuple[pp.Grid, pp.Grid]:
src/porepy/grids/md_grid.py:            A 2-tuple containing
src/porepy/grids/md_grid.py:                - The primary subdomain neighboring this interface. Normally, this will
src/porepy/grids/md_grid.py:                - The secondary subdomain neighboring this interface. Normally, this
src/porepy/grids/md_grid.py:    ) -> pp.MortarGrid:
src/porepy/grids/md_grid.py:            sd_pair: Pair of subdomains. Should exist in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:            KeyError: If the subdomain pair is not represented in the mixed-dimensional
src/porepy/grids/md_grid.py:        elif sd_pair[::-1] in reverse_dict:
src/porepy/grids/md_grid.py:            return reverse_dict[sd_pair[::-1]]
src/porepy/grids/md_grid.py:    def subdomain_to_interfaces(self, sd: pp.Grid) -> list[pp.MortarGrid]:
src/porepy/grids/md_grid.py:            sd: A subdomain in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    def subdomain_to_boundary_grid(self, sd: pp.Grid) -> Optional[pp.BoundaryGrid]:
src/porepy/grids/md_grid.py:            sd: A subdomain in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    ) -> list[pp.Grid]:
src/porepy/grids/md_grid.py:            sd: Subdomain in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:                Consider only the higher-dimensional neighbors.
src/porepy/grids/md_grid.py:                Consider only the lower-dimensional neighbors.
src/porepy/grids/md_grid.py:    # ------------ Getters for subdomain and interface properties
src/porepy/grids/md_grid.py:    def subdomain_data(self, sd: pp.Grid) -> dict:
src/porepy/grids/md_grid.py:    def interface_data(self, intf: pp.MortarGrid) -> dict:
src/porepy/grids/md_grid.py:    # ------------ Add new subdomains and interfaces ----------
src/porepy/grids/md_grid.py:    def add_subdomains(self, new_subdomains: Union[pp.Grid, Iterable[pp.Grid]]) -> None:
src/porepy/grids/md_grid.py:        """Add new subdomains to the mixed-dimensional grid.
src/porepy/grids/md_grid.py:            ValueError: If a subdomain is already present in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    ) -> None:
src/porepy/grids/md_grid.py:        """Add an interface to the mixed-dimensional grid.
src/porepy/grids/md_grid.py:            the higher-dimensional grid as the first (primary) subdomain. For equal
src/porepy/grids/md_grid.py:                A 2-tuple containing grids to be connected. The ordering is arbitrary.
src/porepy/grids/md_grid.py:                higher-dimensional grid and cells in the lower-dimensional grid. No
src/porepy/grids/md_grid.py:                In the co-dimension 2 case, it maps from cells to cells.
src/porepy/grids/md_grid.py:        # (for a co-dimension 1 coupling, this will be between faces in the
src/porepy/grids/md_grid.py:        # higher-dimensional grid and cells in the lower-dimensional grid).
src/porepy/grids/md_grid.py:        # The higher-dimensional grid is the first subdomain of the subdomain pair.
src/porepy/grids/md_grid.py:        # Couplings of co-dimension zero to two are allowed. Sort the pair.
src/porepy/grids/md_grid.py:        if np.abs(sd_pair[0].dim - sd_pair[1].dim) < 3:
src/porepy/grids/md_grid.py:            raise ValueError("Can only handle subdomain coupling of co-dimension <= 2")
src/porepy/grids/md_grid.py:    # --------- Remove and update subdomains
src/porepy/grids/md_grid.py:    def remove_subdomain(self, sd: pp.Grid) -> None:
src/porepy/grids/md_grid.py:        """Remove a subdomain and related interfaces from the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    # ---------- Functionality related to ordering of subdomains
src/porepy/grids/md_grid.py:    def sort_subdomains(self, subdomains: list[pp.Grid]) -> list[pp.Grid]:
src/porepy/grids/md_grid.py:    ) -> tuple[pp.Grid, pp.Grid]:
src/porepy/grids/md_grid.py:    def sort_interfaces(self, interfaces: list[pp.MortarGrid]) -> list[pp.MortarGrid]:
src/porepy/grids/md_grid.py:    ) -> np.ndarray:
src/porepy/grids/md_grid.py:            - Descending dimension.
src/porepy/grids/md_grid.py:            - Ascending (mortar) grid ID (for each dimension). The ID is assigned on
src/porepy/grids/md_grid.py:        for dim in np.arange(self.dim_max(), -1, -1):
src/porepy/grids/md_grid.py:    # ------------- Miscellaneous functions ---------
src/porepy/grids/md_grid.py:    def compute_geometry(self) -> None:
src/porepy/grids/md_grid.py:    def copy(self) -> MixedDimensionalGrid:
src/porepy/grids/md_grid.py:        """Make a shallow copy of the mixed-dimensional grid. The underlying subdomain
src/porepy/grids/md_grid.py:            Copy of this mixed-dimensional grid.
src/porepy/grids/md_grid.py:        tol: float = 1e-6,
src/porepy/grids/md_grid.py:    ) -> None:
src/porepy/grids/md_grid.py:        """Replace grids and/or mortar grids in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:                in the mixed-dimensional grid).
src/porepy/grids/md_grid.py:            tol: ``default=1e-6``
src/porepy/grids/md_grid.py:                # modified in the mixed-dimensional grid itself (thus no changes to
src/porepy/grids/md_grid.py:        # update the mixed-dimensional considering the new grids instead of the old one.
src/porepy/grids/md_grid.py:                    # Get the subdomain pair of the interface - we need to replace the
src/porepy/grids/md_grid.py:    # ---- Methods for getting information on the bucket, or its components ----
src/porepy/grids/md_grid.py:    ) -> float:
src/porepy/grids/md_grid.py:        """Compute the cell diameter (mesh size) of the mixed-dimensional grid.
src/porepy/grids/md_grid.py:            The diameter of the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    def dim_min(self) -> int:
src/porepy/grids/md_grid.py:        """Get the minimal dimension represented in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    def dim_max(self) -> int:
src/porepy/grids/md_grid.py:    ) -> int:
src/porepy/grids/md_grid.py:        """Compute the total number of subdomain cells of the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    ) -> int:
src/porepy/grids/md_grid.py:        """Compute the total number of mortar cells of the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    def num_subdomains(self) -> int:
src/porepy/grids/md_grid.py:            Total number of subdomains in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    def num_interfaces(self) -> int:
src/porepy/grids/md_grid.py:            Total number of interfaces in the mixed-dimensional grid.
src/porepy/grids/md_grid.py:    def __str__(self) -> str:
src/porepy/grids/md_grid.py:        """A simplified string representation of the mixed-dimensional grid,
src/porepy/grids/md_grid.py:            "Mixed-dimensional grid. \n"
src/porepy/grids/md_grid.py:        for dim in range(self.dim_max() - 1, self.dim_min() - 1, -1):
src/porepy/grids/md_grid.py:        for dim in range(self.dim_max(), self.dim_min(), -1):
src/porepy/grids/md_grid.py:            for mg in self.interfaces(dim=dim - 1, codim=1):
src/porepy/grids/md_grid.py:                f"{num_e} interfaces between grids of dimension {dim} and {dim-1} with"
src/porepy/grids/md_grid.py:            for mg in self.interfaces(dim=dim - 2, codim=2):
src/porepy/grids/md_grid.py:                s += f"Interface between grids of dimension {dim} and {dim-2} with"
src/porepy/grids/md_grid.py:    def __repr__(self) -> str:
src/porepy/grids/md_grid.py:        """A string representation of the mixed-dimensional grid, including information
src/porepy/grids/md_grid.py:            f"Mixed-dimensional grid containing {self.num_subdomains() } grids and "
src/porepy/grids/md_grid.py:            for dim in range(self.dim_max(), self.dim_min() - 1, -1):
src/porepy/grids/md_grid.py:            for dim in range(self.dim_max(), self.dim_min(), -1):
src/porepy/grids/md_grid.py:                for intf in self.interfaces(dim=dim - 1, codim=1):
src/porepy/grids/md_grid.py:                    f" {dim-1} with in total {num_intf_cells} mortar cells.\n"
src/porepy/grids/md_grid.py:                for intf in self.interfaces(dim=dim - 2, codim=2):
src/porepy/grids/md_grid.py:                        f" {dim} and {dim-2} with in total {num_intf_cells_codim_2}"
src/porepy/grids/standard_grids/md_grids_2d.py:def _n_cells(mesh_args: np.ndarray | dict | None) -> np.ndarray:
src/porepy/grids/standard_grids/md_grids_2d.py:        Mixed-dimensional grid and domain.
src/porepy/grids/standard_grids/md_grids_2d.py:            # The numpy-array format for mesh_args should not be used for simplex grids
src/porepy/grids/standard_grids/md_grids_2d.py:        Mixed-dimensional grid and domain.
src/porepy/grids/standard_grids/md_grids_2d.py:            # The numpy-array format for mesh_args should not be used for simplex grids
src/porepy/grids/standard_grids/md_grids_2d.py:        Mixed-dimensional grid and domain.
src/porepy/grids/standard_grids/md_grids_2d.py:            # The numpy-array format for mesh_args should not be used for simplex grids
src/porepy/grids/standard_grids/md_grids_2d.py:        Mixed-dimensional grid and domain.
src/porepy/grids/standard_grids/md_grids_2d.py:    Berre et al. 2018: Benchmarks for single-phase flow in fractured porous media.
src/porepy/grids/standard_grids/md_grids_2d.py:        Mixed-dimensional grid and domain.
src/porepy/grids/standard_grids/md_grids_3d.py:This file contains utility functions for setting up mixed-dimensional grids for 3d networks.
src/porepy/grids/standard_grids/md_grids_3d.py:    """Mixed-dimensional grid for a domain with a horizontal rectangular fracture at z=0.5.
src/porepy/grids/standard_grids/md_grids_3d.py:        Mixed-dimensional grid for the domain.
src/porepy/grids/standard_grids/utils.py:def unit_domain(dimension: int) -> pp.Domain:
src/porepy/grids/standard_grids/utils.py:    """Construct a mixed-dimensional simplex grid in the 2d domain.
src/porepy/grids/standard_grids/utils.py:        Mixed-dimensional grid with geometry computation and node ordering performed.
src/porepy/grids/standard_grids/utils.py:    Construct a Cartesian mixed-dimensional grid in the 2d domain.
src/porepy/grids/standard_grids/utils.py:        Mixed-dimensional grid with geometry computation and node ordering performed.
src/porepy/grids/grid.py:    """Name-mangled reference to assigned ID."""
src/porepy/grids/grid.py:    def __new__(cls, *args, **kwargs) -> Grid:
src/porepy/grids/grid.py:    ) -> None:
src/porepy/grids/grid.py:        coordinates column-wise."""
src/porepy/grids/grid.py:        Matrix elements have value +-1, where + corresponds to the face normal vector
src/porepy/grids/grid.py:        Assumes the nodes of each face are ordered according to the right-hand rule.
src/porepy/grids/grid.py:            are the nodes of face i, which should be ordered counter-clockwise.
src/porepy/grids/grid.py:            By counter-clockwise we mean as seen from cell ``cell_faces[i,:] == -1``.
src/porepy/grids/grid.py:            (such as converting it to a csr-matrix) may change the ordering of
src/porepy/grids/grid.py:        self.frac_num: int = -1
src/porepy/grids/grid.py:        value ``(0, 1, ...)`` if the grid corresponds to a fracture, -1 if not.
src/porepy/grids/grid.py:        sub-grids or are sub-grids of larger grids.
src/porepy/grids/grid.py:        assigned during processing of mixed-dimensional grids created by gmsh.
src/porepy/grids/grid.py:        self._physical_name_index: int = -1
src/porepy/grids/grid.py:        self.well_num: int = -1
src/porepy/grids/grid.py:        ``(0, 1, ..)`` if the grid corresponds to a well, -1 if not.
src/porepy/grids/grid.py:        lay on different side of a lower-dimensional grid.
src/porepy/grids/grid.py:        """An array containing column-wise normal vectors of all faces with
src/porepy/grids/grid.py:        """An array containing column-wise the centers of all cells with
src/porepy/grids/grid.py:        """An array containing column-wise the volumes per cell with
src/porepy/grids/grid.py:    def id(self) -> int:
src/porepy/grids/grid.py:    def copy(self) -> pp.Grid:
src/porepy/grids/grid.py:        """Create a new instance with some attributes deep-copied from the grid.
src/porepy/grids/grid.py:    def __repr__(self) -> str:
src/porepy/grids/grid.py:    def __str__(self) -> str:
src/porepy/grids/grid.py:    def compute_geometry(self) -> None:
src/porepy/grids/grid.py:    def _compute_geometry_0d(self) -> None:
src/porepy/grids/grid.py:        self.face_normals = np.zeros((3, 0))  # not well-defined
src/porepy/grids/grid.py:        # for higher-dimensional grids.
src/porepy/grids/grid.py:    def _compute_geometry_1d(self) -> None:
src/porepy/grids/grid.py:        self.cell_volumes = np.linalg.norm(xf1 - xf2, axis=0)
src/porepy/grids/grid.py:        v = fc - cc
src/porepy/grids/grid.py:        self.face_normals[:, flip] *= -1
src/porepy/grids/grid.py:    def _compute_geometry_2d(self) -> None:
src/porepy/grids/grid.py:        - either the cell_faces and face_nodes are consistently oriented
src/porepy/grids/grid.py:        - or that the grid is composed of convex cells.
src/porepy/grids/grid.py:        # the x_end - x_start. The face normal is a 90 degree clock-wise rotation
src/porepy/grids/grid.py:        # ordering in self.face_nodes.indices. The start node gets a -1 and the end node
src/porepy/grids/grid.py:        fn_orient.data = -np.power(-1, np.arange(fn_orient.data.size))
src/porepy/grids/grid.py:        # face-node relation: Once as a start node and once as an end node. Summed over
src/porepy/grids/grid.py:        # Create sub-simplexes based on triplets, each consisting of a cell center and
src/porepy/grids/grid.py:        # sub-simplex and whose length is the area.
src/porepy/grids/grid.py:        subsimplex_heights = self.face_centers[:, faceno] - temp_cell_centers[:, cellno]
src/porepy/grids/grid.py:        # Use a cross product to get the area of the sub-simplex.
src/porepy/grids/grid.py:        # Compute the signed volumes of sub-simplexes. Positive values indicate that
src/porepy/grids/grid.py:        # that nodes that are oriented counter clock-wise give positive values.
src/porepy/grids/grid.py:        # In case of inconsistent orientation, the sub-simplex volumes and normals need
src/porepy/grids/grid.py:            # We flip the normal if the inner product between the height (face_center -
src/porepy/grids/grid.py:            # the cell-face relation (as contained in cf_orient).
src/porepy/grids/grid.py:            # the same decision. For a non-convex cell, the two sides may (will?) not
src/porepy/grids/grid.py:            self.face_normals[:, flip] *= -1
src/porepy/grids/grid.py:        # Compute the cell volumes by adding all relevant sub-simplex volumes.
src/porepy/grids/grid.py:        # Compute cells centroids as weighted average of the sub-simplex centroids
src/porepy/grids/grid.py:    def _compute_geometry_3d(self) -> None:
src/porepy/grids/grid.py:        num_nodes_per_face = face_node_ptr[1:] - face_node_ptr[:-1]
src/porepy/grids/grid.py:        # Face-node relationships. Note that the elements here will also serve as a
src/porepy/grids/grid.py:        next_node[face_node_ptr[1:] - 1] = face_node_ptr[:-1]
src/porepy/grids/grid.py:        along_edge = self.nodes[:, face_nodes[next_node]] - self.nodes[:, face_nodes]
src/porepy/grids/grid.py:        face_2_node = tmp_face_center.transpose() - self.nodes[:, face_nodes]
src/porepy/grids/grid.py:                    along_edge[1] * face_2_node[2] - along_edge[2] * face_2_node[1],
src/porepy/grids/grid.py:                    along_edge[2] * face_2_node[0] - along_edge[0] * face_2_node[2],
src/porepy/grids/grid.py:                    along_edge[0] * face_2_node[1] - along_edge[1] * face_2_node[0],
src/porepy/grids/grid.py:        # Calculate area of sub-face associated with each edge - note that the
src/porepy/grids/grid.py:        # sub-normals are area weighted
src/porepy/grids/grid.py:        # Centers of sub-faces are given by the centroid coordinates, e.g. the mean
src/porepy/grids/grid.py:        # Face normals are given as the sum of the sub-components
src/porepy/grids/grid.py:        # Test whether the sub-normals are pointing in the same direction as the main
src/porepy/grids/grid.py:        # element-wise multiplication with sub-normals, and sum over the components
src/porepy/grids/grid.py:        # NOTE: There should be a built-in function for this in numpy?
src/porepy/grids/grid.py:        # the sub-faces
src/porepy/grids/grid.py:        # The cells are divided into sub-tetrahedra ( corresponding to triangular
src/porepy/grids/grid.py:        # sub-faces above), with the temporary cell center as the final node
src/porepy/grids/grid.py:        # Face numbers are obtained from the face-node relations (with the nodes
src/porepy/grids/grid.py:        num_cell_edges = edge_2_cell.indptr[1:] - edge_2_cell.indptr[:-1]
src/porepy/grids/grid.py:            Intended use: Map sub-cell centroids to a quantity for the cell.
src/porepy/grids/grid.py:        # Distance from the temporary cell center to the sub-centroids (of
src/porepy/grids/grid.py:            sub_centroids[:, edge_numbers] - tmp_cell_centers[:, cell_numbers]
src/porepy/grids/grid.py:        # Get outwards pointing sub-normals for all sub-faces: We need to account for
src/porepy/grids/grid.py:        # both the orientation of the face, and the orientation of sub-faces relative to
src/porepy/grids/grid.py:        # Sometimes the sub-tet volumes can have a volume of numerical zero. Why this is
src/porepy/grids/grid.py:        if not np.all(tet_volumes > -1e-12):  # On the fly test
src/porepy/grids/grid.py:        # The cell volumes are now found by summing sub-tetrahedra
src/porepy/grids/grid.py:        # the sub-tetrahedra
src/porepy/grids/grid.py:    def cell_nodes(self) -> sps.csc_matrix:
src/porepy/grids/grid.py:            The value 1 indicates a connection between a cell and node column-wise.
src/porepy/grids/grid.py:    def num_cell_nodes(self) -> np.ndarray:
src/porepy/grids/grid.py:    def get_internal_nodes(self) -> np.ndarray:
src/porepy/grids/grid.py:    def get_all_boundary_faces(self) -> np.ndarray:
src/porepy/grids/grid.py:    def get_all_boundary_nodes(self) -> np.ndarray:
src/porepy/grids/grid.py:    def get_boundary_faces(self) -> np.ndarray:
src/porepy/grids/grid.py:    def get_internal_faces(self) -> np.ndarray:
src/porepy/grids/grid.py:    def get_boundary_nodes(self) -> np.ndarray:
src/porepy/grids/grid.py:    def update_boundary_face_tag(self) -> None:
src/porepy/grids/grid.py:    def set_periodic_map(self, periodic_face_map: np.ndarray) -> None:
src/porepy/grids/grid.py:    def update_boundary_node_tag(self) -> None:
src/porepy/grids/grid.py:    def cell_diameters(self, cn: Optional[sps.spmatrix] = None) -> np.ndarray:
src/porepy/grids/grid.py:                Cell-to-nodes map, already computed previously.
src/porepy/grids/grid.py:            ).reshape((2, -1), order="F")
src/porepy/grids/grid.py:                np.linalg.norm(self.nodes[:, n[0, :]] - self.nodes[:, n[1, :]], axis=0)
src/porepy/grids/grid.py:    def cell_face_as_dense(self) -> np.ndarray:
src/porepy/grids/grid.py:        """Obtain the cell-face relation in the form of two rows, rather than a
src/porepy/grids/grid.py:        refers to cell indices. The value -1 signifies a boundary. The normal vector of
src/porepy/grids/grid.py:            Array representation of face-cell relations with ``shape=(2, num_faces)``.
src/porepy/grids/grid.py:        neighs -= 1
src/porepy/grids/grid.py:        return neighs[::-1]
src/porepy/grids/grid.py:    def cell_connection_map(self) -> sps.csr_matrix:
src/porepy/grids/grid.py:        """Get a matrix representation of cell-cell connections, as defined by
src/porepy/grids/grid.py:        # Create a copy of the cell-face relation, so that we can modify it at
src/porepy/grids/grid.py:        # Find connection between cells via the cell-face map
src/porepy/grids/grid.py:    ) -> tuple[np.ndarray, np.ndarray]:
src/porepy/grids/grid.py:            A 2-tuple containing
src/porepy/grids/grid.py:                of the cell, -1 if the normal vector is pointing inwards.
src/porepy/grids/grid.py:    ) -> Union[np.ndarray, tuple[np.ndarray, np.ndarray]]:
src/porepy/grids/grid.py:            If ``return_distance`` is True, returns a 2-tuple, where the second array
src/porepy/grids/grid.py:            z = np.zeros((3 - p.shape[0], p.shape[1]))
src/porepy/grids/grid.py:            d = np.sum(np.power(c - pts, 2), axis=0)
src/porepy/grids/grid.py:            ci[i], di[i] = min_dist(p[:, i].reshape((3, -1)))
src/porepy/grids/grid.py:    def initiate_face_tags(self) -> None:
src/porepy/grids/grid.py:    def initiate_node_tags(self) -> None:
src/porepy/grids/grid.py:    def _check_tags(self) -> None:
src/porepy/grids/grid.py:    def _indices(true_false: np.ndarray) -> np.ndarray:
src/porepy/grids/refinement.py:) -> pp.Grid:
src/porepy/grids/refinement.py:        fixed_nodes = np.array([0, g.num_nodes - 1], dtype=int)
src/porepy/grids/refinement.py:        fixed_nodes = np.hstack((fixed_nodes, np.array([0, g.num_nodes - 1])))
src/porepy/grids/refinement.py:    r = ratio * (0.5 - np.random.random(g.num_nodes - 2))
src/porepy/grids/refinement.py:    r *= np.minimum(g.cell_volumes[:-1], g.cell_volumes[1:])
src/porepy/grids/refinement.py:    direction = (g.nodes[:, -1] - g.nodes[:, 0]).reshape((-1, 1))
src/porepy/grids/refinement.py:    g.nodes[:, 1:-1] += r * direction / nrm
src/porepy/grids/refinement.py:def refine_grid_1d(g: pp.Grid, ratio: int = 2) -> pp.Grid:
src/porepy/grids/refinement.py:    # cell-face relation. Since the grid is 1d, nodes and faces are equivalent, and
src/porepy/grids/refinement.py:    # Cell-node relation
src/porepy/grids/refinement.py:    # Every cell will contribute (ratio - 1) new nodes
src/porepy/grids/refinement.py:    num_new_nodes = (ratio - 1) * g.num_cells + g.num_nodes
src/porepy/grids/refinement.py:    # Array that indicates whether an item in the cell-node relation represents a node
src/porepy/grids/refinement.py:        # Local cell-node (thus cell-face) relations of the new grid
src/porepy/grids/refinement.py:        x[:, pos : (pos + ratio - 1)] = g.nodes[:, start, np.newaxis] * theta + g.nodes[
src/porepy/grids/refinement.py:        ] * (1 - theta)
src/porepy/grids/refinement.py:        pos += ratio - 1
src/porepy/grids/refinement.py:        shift += ratio + (2 - np.sum(if_add_loc) * (1 - nd[c])) - nd[c]
src/porepy/grids/refinement.py:    # For 1d grids, there is a 1-1 relation between faces and nodes
src/porepy/grids/refinement.py:def refine_triangle_grid(g: pp.TriangleGrid) -> tuple[pp.TriangleGrid, np.ndarray]:
src/porepy/grids/refinement.py:        A 2-tuple containing
src/porepy/grids/refinement.py:    # Construct dense versions of face-node and cell-face maps.
src/porepy/grids/refinement.py:    # This will crash if a non-simplex grid is provided.
src/porepy/grids/refinement.py:        # Find face-nodes of these faces. Each column corresponds to a single cell.
src/porepy/grids/refinement.py:    new_tri[:, :, -1] = offset + cf
src/porepy/grids/refinement.py:def remesh_1d(g_old: pp.Grid, num_nodes: int, tol: float = 1e-6) -> pp.Grid:
src/porepy/grids/refinement.py:    The new grid is equi-spaced, and there is no guarantee that the nodes in the old and
src/porepy/grids/refinement.py:            boundary conditions). Defaults to ``1e-6``.
src/porepy/grids/refinement.py:    # Create equi-spaced nodes covering the same domain as the old grid
src/porepy/grids/refinement.py:    ] * (1.0 - theta)
src/porepy/grids/refinement.py:    def __init__(self, factory: GridSequenceFactory) -> None:
src/porepy/grids/refinement.py:    def __next__(self) -> pp.MixedDimensionalGrid:
src/porepy/grids/refinement.py:    ) -> None:
src/porepy/grids/refinement.py:    def __iter__(self) -> GridSequenceIterator:
src/porepy/grids/refinement.py:    def close(self) -> None:
src/porepy/grids/refinement.py:    def _generate(self, counter: int) -> pp.MixedDimensionalGrid:
src/porepy/grids/refinement.py:    def _prepare_nested(self) -> None:
src/porepy/grids/refinement.py:    def _generate_nested(self, counter: int) -> pp.MixedDimensionalGrid:
src/porepy/grids/refinement.py:    def _generate_unstructured(self, counter: int) -> pp.MixedDimensionalGrid:
src/porepy/grids/refinement.py:    def _set_parameters(self, param: dict) -> None:
src/porepy/grids/simplex.py:            Cell-node connections. If None, a Delaunay triangulation will be applied.
src/porepy/grids/simplex.py:            The ordering of nodes in each cell is assumed to be counter-clockwise.
src/porepy/grids/simplex.py:    ) -> None:
src/porepy/grids/simplex.py:        # Add a zero z-coordinate
src/porepy/grids/simplex.py:        # The cell-face orientation is positive if it coincides with the face
src/porepy/grids/simplex.py:        cf_data = np.sign(face_nodes[:, 1] - face_nodes[:, 0])
src/porepy/grids/simplex.py:    def cell_node_matrix(self) -> np.ndarray:
src/porepy/grids/simplex.py:            An array with ``shape=(num_cells, 3)``, representing the cell-to-node map.
src/porepy/grids/simplex.py:    ) -> None:
src/porepy/grids/simplex.py:            (3, -1), order="F"
src/porepy/grids/simplex.py:        # but we do know how many cells there are in advance, so pre-allocation is
src/porepy/grids/simplex.py:        # Loop over all remaining rows in the y-direction.
src/porepy/grids/simplex.py:        for iter1 in range(nx[1].astype(int) - 1):
src/porepy/grids/simplex.py:    ) -> None:
src/porepy/grids/simplex.py:        # Define face-nodes so that the first column contains fn of cell 0, etc.
src/porepy/grids/simplex.py:        # Reshape face-nodes into a 3x 4*num_cells-matrix, with the four first columns
src/porepy/grids/simplex.py:        data[sgn_change] = -1
src/porepy/grids/simplex.py:    def _permute_nodes(self, p: np.ndarray, t: np.ndarray) -> np.ndarray:
src/porepy/grids/simplex.py:                t[:2] = t[1::-1]
src/porepy/grids/simplex.py:            t[:2, permute] = t[1::-1, permute]
src/porepy/grids/simplex.py:    def _triple_product(self, p: np.ndarray, t: np.ndarray) -> np.ndarray:
src/porepy/grids/simplex.py:            t: An index array to slice ``p`` column-wise before computing the triple
src/porepy/grids/simplex.py:            ``t`` -1.
src/porepy/grids/simplex.py:        dx = x[1:] - x[0]
src/porepy/grids/simplex.py:        dy = y[1:] - y[0]
src/porepy/grids/simplex.py:        dz = z[1:] - z[0]
src/porepy/grids/simplex.py:        cross_x = dy[0] * dz[1] - dy[1] * dz[0]
src/porepy/grids/simplex.py:        cross_y = dz[0] * dx[1] - dz[1] * dx[0]
src/porepy/grids/simplex.py:        cross_z = dx[0] * dy[1] - dx[1] * dy[0]
src/porepy/grids/simplex.py:    ) -> None:
src/porepy/grids/simplex.py:        ).reshape((4, -1), order="F")
src/porepy/grids/simplex.py:        # but we do know how many cells there are in advance, so pre-allocation is
src/porepy/grids/simplex.py:        # Loop over all remaining rows in the y-direction.
src/porepy/grids/mortar_grid.py:interfaces between two subdomains in the mixed-dimensional sense.
src/porepy/grids/mortar_grid.py:            Cell-face relations between the higher dimensional grid and
src/porepy/grids/mortar_grid.py:        tol: ``default=1e-6``
src/porepy/grids/mortar_grid.py:        ValueError: If ``dim==3`` , The mortar grid can not be three-dimensional.
src/porepy/grids/mortar_grid.py:        ValueError: If ``face_duplicate_ind`` is not ``None`` and the co-dimension is 2.
src/porepy/grids/mortar_grid.py:        tol: float = 1e-6,
src/porepy/grids/mortar_grid.py:    ) -> None:
src/porepy/grids/mortar_grid.py:        """The co-dimension of the mortar grid."""
src/porepy/grids/mortar_grid.py:            raise ValueError("Co-dimension 2 interfaces have no faces to duplicate")
src/porepy/grids/mortar_grid.py:    def __repr__(self) -> str:
src/porepy/grids/mortar_grid.py:            + "Number of cells in lower-dimensional neighbor "
src/porepy/grids/mortar_grid.py:                "Number of faces in higher-dimensional neighbor "
src/porepy/grids/mortar_grid.py:                "Number of cells in higher-dimensional neighbor "
src/porepy/grids/mortar_grid.py:    def __str__(self) -> str:
src/porepy/grids/mortar_grid.py:    def compute_geometry(self) -> None:
src/porepy/grids/mortar_grid.py:        We assume that they are not aligned with the x-axis (1D) or the x-y-plane (2D).
src/porepy/grids/mortar_grid.py:    ) -> None:
src/porepy/grids/mortar_grid.py:                # The mapping between grids will be left-multiplied by the existing
src/porepy/grids/mortar_grid.py:    def update_secondary(self, new_g: pp.Grid, tol: Optional[float] = None) -> None:
src/porepy/grids/mortar_grid.py:            from matching to non-matching between the mortar and secondary grids is
src/porepy/grids/mortar_grid.py:            okay, but replacing a non-matching secondary grid with another one will not
src/porepy/grids/mortar_grid.py:    ) -> None:
src/porepy/grids/mortar_grid.py:        (higher-dimensional) grid is changed.
src/porepy/grids/mortar_grid.py:                        "0d->1d mappings must map to the same physical point"
src/porepy/grids/mortar_grid.py:    def num_sides(self) -> int:
src/porepy/grids/mortar_grid.py:    ) -> Generator[tuple[sps.spmatrix, pp.Grid], None, None]:
src/porepy/grids/mortar_grid.py:            A 2-tuple containing
src/porepy/grids/mortar_grid.py:    def primary_to_mortar_int(self, nd: int = 1) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:    def secondary_to_mortar_int(self, nd: int = 1) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:    def primary_to_mortar_avg(self, nd: int = 1) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:    def secondary_to_mortar_avg(self, nd: int = 1) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:    def mortar_to_primary_int(self, nd: int = 1) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:    def mortar_to_secondary_int(self, nd: int = 1) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:    def mortar_to_primary_avg(self, nd: int = 1) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:    def mortar_to_secondary_avg(self, nd: int = 1) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:    ) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:    def sign_of_mortar_sides(self, nd: int = 1) -> sps.spmatrix:
src/porepy/grids/mortar_grid.py:            the two side grids are non-matching.
src/porepy/grids/mortar_grid.py:            # side are put first, then the other side. Set + and - accordingly.
src/porepy/grids/mortar_grid.py:                    -np.ones(self.side_grids[MortarSides.LEFT_SIDE].num_cells * nd),
src/porepy/grids/mortar_grid.py:    def cell_diameters(self) -> np.ndarray:
src/porepy/grids/mortar_grid.py:    def _check_mappings(self, tol: float = 1e-4) -> None:
src/porepy/grids/mortar_grid.py:    ) -> None:
src/porepy/grids/mortar_grid.py:                is not one-to-one.
src/porepy/grids/mortar_grid.py:            # mapping from faces-cells, and we assume the higher dimensional grid is
src/porepy/grids/mortar_grid.py:            ix = np.reshape(ix, (2, -1), order="F").ravel("C")
src/porepy/grids/mortar_grid.py:    def _set_projections(self, primary: bool = True, secondary: bool = True) -> None:
src/porepy/grids/structured.py:        x: Node coordinates in x-direction.
src/porepy/grids/structured.py:            Node coordinates in y-direction. If None, the created grid will be 1D.
src/porepy/grids/structured.py:            Node coordinates in z-direction. If None, the created grid will be 2D.
src/porepy/grids/structured.py:    ) -> None:
src/porepy/grids/structured.py:            self.cart_dims = np.array([x.size - 1])
src/porepy/grids/structured.py:            self.cart_dims = np.array([x.size, y.size]) - 1
src/porepy/grids/structured.py:            self.cart_dims = np.array([x.size, y.size, z.size]) - 1
src/porepy/grids/structured.py:    ) -> tuple[np.ndarray, sps.spmatrix, sps.spmatrix]:
src/porepy/grids/structured.py:            nodes_x: Node coordinates in x-direction.
src/porepy/grids/structured.py:            - The node coordinates in an array of shape ``(3, num_nodes)``.
src/porepy/grids/structured.py:            - A face-to-node map as a sparse matrix.
src/porepy/grids/structured.py:            - A cell-to-face map as a sparse matrix.
src/porepy/grids/structured.py:        num_x = nodes_x.size - 1
src/porepy/grids/structured.py:        cell_faces = np.vstack((face_array[:-1], face_array[1:])).ravel(order="F")
src/porepy/grids/structured.py:        data[::2] = -1
src/porepy/grids/structured.py:    ) -> tuple[np.ndarray, sps.spmatrix, sps.spmatrix]:
src/porepy/grids/structured.py:            nodes_x: Node coordinates in x-direction.
src/porepy/grids/structured.py:            nodes_y: Node coordinates in y-direction.
src/porepy/grids/structured.py:            - The node coordinates in an array of shape ``(3, num_nodes)``.
src/porepy/grids/structured.py:            - A face-to-node map as a sparse matrix.
src/porepy/grids/structured.py:            - A cell-to-face map as a sparse matrix.
src/porepy/grids/structured.py:        num_x = nodes_x.size - 1
src/porepy/grids/structured.py:        num_y = nodes_y.size - 1
src/porepy/grids/structured.py:        fn1 = node_array[:-1, ::].ravel(order="C")
src/porepy/grids/structured.py:        fn1 = node_array[::, :-1].ravel(order="C")
src/porepy/grids/structured.py:        face_west = face_x[::, :-1].ravel(order="C")
src/porepy/grids/structured.py:        face_south = face_y[:-1, ::].ravel(order="C")
src/porepy/grids/structured.py:                -np.ones(face_west.size),
src/porepy/grids/structured.py:                -np.ones(face_south.size),
src/porepy/grids/structured.py:    ) -> tuple[np.ndarray, sps.spmatrix, sps.spmatrix]:
src/porepy/grids/structured.py:            nodes_x: Node coordinates in x-direction.
src/porepy/grids/structured.py:            nodes_y: Node coordinates in y-direction.
src/porepy/grids/structured.py:            nodes_z: Node coordinates in z-direction.
src/porepy/grids/structured.py:            - The node coordinates in an array of shape ``(3, num_nodes)``.
src/porepy/grids/structured.py:            - A face-to-node map as a sparse matrix.
src/porepy/grids/structured.py:            - A cell-to-face map as a sparse matrix.
src/porepy/grids/structured.py:        num_x = nodes_x.size - 1
src/porepy/grids/structured.py:        num_y = nodes_y.size - 1
src/porepy/grids/structured.py:        num_z = nodes_z.size - 1
src/porepy/grids/structured.py:        # Define face-node relations for all x-faces.
src/porepy/grids/structured.py:        fn1 = node_array[:, :-1, :-1].ravel(order="F")
src/porepy/grids/structured.py:        fn2 = node_array[:, 1:, :-1].ravel(order="F")
src/porepy/grids/structured.py:        fn4 = node_array[:, :-1, 1:].ravel(order="F")
src/porepy/grids/structured.py:        # Define face-node relations for all y-faces
src/porepy/grids/structured.py:        fn1 = node_array[:-1:, :, :-1].ravel(order="F")
src/porepy/grids/structured.py:        fn2 = node_array[:-1, :, 1:].ravel(order="F")
src/porepy/grids/structured.py:        fn4 = node_array[1:, :, :-1].ravel(order="F")
src/porepy/grids/structured.py:        # Define face-node relations for all y-faces
src/porepy/grids/structured.py:        fn1 = node_array[:-1:, :-1, :].ravel(order="F")
src/porepy/grids/structured.py:        fn2 = node_array[1:, :-1, :].ravel(order="F")
src/porepy/grids/structured.py:        fn4 = node_array[:-1, 1:, :].ravel(order="F")
src/porepy/grids/structured.py:        face_west = face_x[:-1, :, :].ravel(order="F")
src/porepy/grids/structured.py:        face_south = face_y[:, :-1, :].ravel(order="F")
src/porepy/grids/structured.py:        face_top = face_z[:, :, :-1].ravel(order="F")
src/porepy/grids/structured.py:                -np.ones(num_cells),
src/porepy/grids/structured.py:                -np.ones(num_cells),
src/porepy/grids/structured.py:                -np.ones(num_cells),
src/porepy/grids/structured.py:                - ``'xmin'``, ``'xmax'``,
src/porepy/grids/structured.py:                - ``'ymin'``, ``'ymax'`` (optional if 1D),
src/porepy/grids/structured.py:                - ``'zmin'``, ``'zmax'`` (optional if 1D or 2D).
src/porepy/grids/structured.py:    ) -> None:
src/porepy/grids/structured.py:                    physdims["xmax"] - xmin,
src/porepy/grids/structured.py:                    physdims.get("ymax", 0) - ymin,
src/porepy/grids/structured.py:                    physdims.get("zmax", 0) - zmin,
src/porepy/grids/point_grid.py:    def __init__(self, pt: np.ndarray, name: Optional[str] = None) -> None:
src/porepy/grids/match_grids.py:mixed-dimensional grid. It is called mostly inside
src/porepy/grids/match_grids.py:) -> sps.csr_matrix:
src/porepy/grids/match_grids.py:    """Obtain mappings between the cells of non-matching 1D grids.
src/porepy/grids/match_grids.py:        If None, the matrix elements are 1 for cell-pairs (new and old grid) that
src/porepy/grids/match_grids.py:    # Cell-node relation between grids - we know there are two nodes per cell
src/porepy/grids/match_grids.py:        cell_nodes_new.indptr[0:-1], cell_nodes_new.indptr[1:]
src/porepy/grids/match_grids.py:        cell_nodes_old.indptr[0:-1], cell_nodes_old.indptr[1:]
src/porepy/grids/match_grids.py:    # Reshape so that the nodes of cells are stored column-wise
src/porepy/grids/match_grids.py:    lines_new = cell_nodes_new.indices[nodes_new].reshape((2, -1), order="F")
src/porepy/grids/match_grids.py:    lines_old = cell_nodes_old.indices[nodes_old].reshape((2, -1), order="F")
src/porepy/grids/match_grids.py:) -> sps.csr_matrix:
src/porepy/grids/match_grids.py:        If None, the matrix elements are 1 for cell-pairs (new and old grid) that
src/porepy/grids/match_grids.py:        rot = pp.map_geometry.project_plane_matrix(p - center, normal)
src/porepy/grids/match_grids.py:        return rot.dot(p - center)[:2]
src/porepy/grids/match_grids.py:    n = pp.map_geometry.compute_normal(new_g.nodes - cc)
src/porepy/grids/match_grids.py:    n_old = pp.map_geometry.compute_normal(old_g.nodes - cc)
src/porepy/grids/match_grids.py:    if not (np.allclose(n, n_old) or np.allclose(n, -n_old)):
src/porepy/grids/match_grids.py:) -> sps.csr_matrix:
src/porepy/grids/match_grids.py:        # Match faces in a 2d grid and cells in a 1d grid by identifying face-nodes and
src/porepy/grids/match_grids.py:        # cell-node relations.
src/porepy/grids/match_grids.py:        # face-node relation in higher dimensional grid
src/porepy/grids/match_grids.py:        # Face-node in local indices
src/porepy/grids/match_grids.py:        # Cell-node relation in 1d
src/porepy/grids/match_grids.py:    end = g_aux.nodes[:, -1]
src/porepy/grids/match_grids.py:    # This may occur if the mortar grid is one sided (T-intersection)
src/porepy/grids/match_grids.py:    side_old = np.sign(np.sum(((cc_old - mp) * normal), axis=0))
src/porepy/grids/match_grids.py:    hit = np.argwhere(dist.ravel() < tol).reshape((1, -1))[0]
src/porepy/grids/match_grids.py:    side_new = np.sign(np.sum(((cc_new - mp) * normal), axis=0))
src/porepy/grids/match_grids.py:        # Extend face-map to go from all faces in the new grid to all faces in the
src/porepy/grids/match_grids.py:    tol: float = 1e-8,
src/porepy/grids/match_grids.py:) -> None:
src/porepy/grids/match_grids.py:    to construct mapping for grids in mixed-dimensional grid.
src/porepy/grids/match_grids.py:        mdg: Coarse mixed-dimensional grid.
src/porepy/grids/match_grids.py:        mdg_ref: Refined mixed-dimensional grid.
src/porepy/grids/match_grids.py:        tol: ``default=1e-8``
src/porepy/grids/match_grids.py:            Tolerance for point_in_poly* -methods
src/porepy/grids/match_grids.py:        # Compute the mapping for this subdomain-pair, and assign the result to the node
src/porepy/grids/match_grids.py:    g: pp.Grid, g_ref: pp.Grid, point_in_poly_tol: float = 1e-8
src/porepy/grids/match_grids.py:) -> sps.csc_matrix:
src/porepy/grids/match_grids.py:        point_in_poly_tol: ``default=1e-8``
src/porepy/grids/match_grids.py:    # The general algorithm is as follows (refer to start of for-loop in the code):
src/porepy/grids/match_grids.py:    nodes_of_cell_ptr = zip(cell_nodes.indptr[:-1], cell_nodes.indptr[1:])
src/porepy/grids/match_grids.py:        # Rotate coarse nodes and fine cell centers to align with the x-axis
src/porepy/grids/match_grids.py:    elif g.dim == 2:  # Pre-processing for efficiency
src/porepy/grids/match_grids.py:        # Rotate coarse nodes and fine cell centers to the xy-plane.
src/porepy/grids/match_grids.py:        indptr = np.append(indptr, indptr[-1] + in_poly_ids.size)
src/porepy/grids/grid_extrusion.py:extrusion in the z-direction.
src/porepy/grids/grid_extrusion.py:Both, single grids and mixed-dimensional grids can be extruded. The
src/porepy/grids/grid_extrusion.py:dimension of the highest-dimensional grid should be 2 at most.
src/porepy/grids/grid_extrusion.py:- :func:`extrude_grid_bucket`,
src/porepy/grids/grid_extrusion.py:- :func:`extrude_grid`.
src/porepy/grids/grid_extrusion.py:) -> tuple[pp.MixedDimensionalGrid, dict]:
src/porepy/grids/grid_extrusion.py:    """Extrude a mixed-dimensional grid by extending all fixed-dimensional grids in the
src/porepy/grids/grid_extrusion.py:    z-direction.
src/porepy/grids/grid_extrusion.py:    The returned mixed-dimensional grid is fully functional, including mortar grids on
src/porepy/grids/grid_extrusion.py:    Data can be transferred from the original md-grid via the returned map between old
src/porepy/grids/grid_extrusion.py:        mdg: Mixed-dimensional grid to be extruded. The highest dimension should be 2D.
src/porepy/grids/grid_extrusion.py:        z: An array containing z-coordinates per node for the extruded grid.
src/porepy/grids/grid_extrusion.py:            Should be either non-negative or non-positive, and be sorted in increasing
src/porepy/grids/grid_extrusion.py:        A 2-tuple containing
src/porepy/grids/grid_extrusion.py:            A mixed-dimensional grid with highest dimension 3. The data dictionaries on
src/porepy/grids/grid_extrusion.py:            Mapping from individual grids in the old mixed-dimensional grid to the
src/porepy/grids/grid_extrusion.py:    # Loop over all grids in the old md-grid, extrude the grid, save mapping information
src/porepy/grids/grid_extrusion.py:        # Next, we need the cell-face mapping for the new grid.
src/porepy/grids/grid_extrusion.py:        # The idea is to first find the old map, then replace each cell-face relation
src/porepy/grids/grid_extrusion.py:        # matching due to the extrusion algorithm, and second that the cell-map and
src/porepy/grids/grid_extrusion.py:        # face-map stores indices in increasing layer index, so that the first cell and
src/porepy/grids/grid_extrusion.py:        # cells (in low-dim grid) and faces in high-dim grid that define the same
src/porepy/grids/grid_extrusion.py:        # Cell-map for the low-dimensional grid, face-map for the high-dim
src/porepy/grids/grid_extrusion.py:        # Data structure for the new face-cell map
src/porepy/grids/grid_extrusion.py:        # Faces are found from the high-dim grid, cells in the low-dim grid
src/porepy/grids/grid_extrusion.py:        # Create new face-cell map
src/porepy/grids/grid_extrusion.py:        # Add to new mdg, together with the new face-cell map
src/porepy/grids/grid_extrusion.py:def extrude_grid(g: pp.Grid, z: np.ndarray) -> tuple[pp.Grid, np.ndarray, np.ndarray]:
src/porepy/grids/grid_extrusion.py:    z-direction.
src/porepy/grids/grid_extrusion.py:    The original grid is assumed to be in the xy-plane, that is, any existing non-zero
src/porepy/grids/grid_extrusion.py:    z-direction is ignored.
src/porepy/grids/grid_extrusion.py:        z: An array containing z-coordinates per node for the extruded grid.
src/porepy/grids/grid_extrusion.py:            Should be either non-negative or non-positive, and be sorted in increasing
src/porepy/grids/grid_extrusion.py:        ValueError: If the z-coordinates for nodes contain both positive and negative
src/porepy/grids/grid_extrusion.py:        A 3-tuple containing
src/porepy/grids/grid_extrusion.py:) -> tuple[pp.Grid, np.ndarray, np.ndarray]:
src/porepy/grids/grid_extrusion.py:        z: An array containing z-coordinates per node for the extruded grid.
src/porepy/grids/grid_extrusion.py:            Should be either non-negative or non-positive, and be sorted in increasing
src/porepy/grids/grid_extrusion.py:        A 3-tuple containing
src/porepy/grids/grid_extrusion.py:    # Number of nodes in the z-direction
src/porepy/grids/grid_extrusion.py:    num_cell_layers = num_node_layers - 1
src/porepy/grids/grid_extrusion.py:    ## Nodes - only coordinates are needed
src/porepy/grids/grid_extrusion.py:    # The nodes in the 2d grid are copied for all layers, with the z-coordinates changed
src/porepy/grids/grid_extrusion.py:    # for each layer. This means that for a vertical pilar, the face-node and cell-node
src/porepy/grids/grid_extrusion.py:    ## Face-node relations
src/porepy/grids/grid_extrusion.py:    # Face-node relation for the 2d grid. We know there are exactly two nodes in each
src/porepy/grids/grid_extrusion.py:    # face-node relation (and the same is true for several other geometric quantities).
src/porepy/grids/grid_extrusion.py:    # This requires that the face-nodes are sorted in a CCW order when seen from the
src/porepy/grids/grid_extrusion.py:    # Faces, cells and values of the 2d cell-face map
src/porepy/grids/grid_extrusion.py:    # This will be counterclockwise to a 2d cell center of, say, [0.5, -0.5, 0],
src/porepy/grids/grid_extrusion.py:    # face-node relations is the oposite of that indicated above.
src/porepy/grids/grid_extrusion.py:    # The face-node relation for the vertical cells are found by stacking those in the
src/porepy/grids/grid_extrusion.py:    # Aim for a csc-representation of the faces. Column pointers
src/porepy/grids/grid_extrusion.py:    # Next, deal with the horizontal faces. The face-node relation is based on the
src/porepy/grids/grid_extrusion.py:    # cell-node relation of the 2d grid.
src/porepy/grids/grid_extrusion.py:    # Similar to the vertical faces, the face-node relation in 3d should match the
src/porepy/grids/grid_extrusion.py:    # sign in the cell-face relation, so that the generated normal vector points out of
src/porepy/grids/grid_extrusion.py:    # the cell with cf-value 1.
src/porepy/grids/grid_extrusion.py:            g.cell_centers[:, ci].reshape((-1, 1)),
src/porepy/grids/grid_extrusion.py:                cn_ind_2d[start:stop] = cn_ind_2d[start:stop][sort_ind[::-1]]
src/porepy/grids/grid_extrusion.py:        elif pp.geometry_property_checks.is_ccw_polygon(coord[:, sort_ind[::-1]]):
src/porepy/grids/grid_extrusion.py:                cn_ind_2d[start:stop] = cn_ind_2d[start:stop][sort_ind[::-1]]
src/porepy/grids/grid_extrusion.py:            raise ValueError("This should not happen. Is the cell non-convex??")
src/porepy/grids/grid_extrusion.py:        # The horizontal cell-node relation for this layer is the bottom one, plus an
src/porepy/grids/grid_extrusion.py:        # The index pointers are those of the 2d cell-node relation.
src/porepy/grids/grid_extrusion.py:    # Put together the vertical and horizontal data, create the face-node relation
src/porepy/grids/grid_extrusion.py:    # Finally, construct the face-node sparse matrix
src/porepy/grids/grid_extrusion.py:    ## Next the cell-faces.
src/porepy/grids/grid_extrusion.py:    # Similar to the face-nodes, the easiest option is first to deal with the vertical
src/porepy/grids/grid_extrusion.py:    # cell-face matrix is to construct information for a coo-matrix (not compressed
src/porepy/grids/grid_extrusion.py:    # The cell_face relation will assign -1 to the upper cells, and +1 to lower cells.
src/porepy/grids/grid_extrusion.py:    cf_data_horizontal = -np.ones(nc_2d, dtype=int)
src/porepy/grids/grid_extrusion.py:            ((k - 1) * nc_2d + np.arange(nc_2d), k * nc_2d + np.arange(nc_2d))
src/porepy/grids/grid_extrusion.py:        # Data: +1 for the lower cells, -1 for the upper
src/porepy/grids/grid_extrusion.py:        data_here = np.hstack((np.ones(nc_2d), -np.ones(nc_2d)))
src/porepy/grids/grid_extrusion.py:        (cf_cols_horizontal, (num_cell_layers - 1) * nc_2d + np.arange(nc_2d))
src/porepy/grids/grid_extrusion.py:    name = f"{g.name} extruded 2d->3d"
src/porepy/grids/grid_extrusion.py:    g_info.append("Extrude 2d->3d")
src/porepy/grids/grid_extrusion.py:) -> tuple[pp.Grid, np.ndarray, np.ndarray]:
src/porepy/grids/grid_extrusion.py:    """Extrude a 1D grid into 2D by prismatic extension in the z-direction.
src/porepy/grids/grid_extrusion.py:    The original grid is assumed to be in the xy-plane, that is, any existing non-zero
src/porepy/grids/grid_extrusion.py:    z-direction is ignored.
src/porepy/grids/grid_extrusion.py:        z: An array containing z-coordinates per node for the extruded grid.
src/porepy/grids/grid_extrusion.py:            Should be either non-negative or non-positive,
src/porepy/grids/grid_extrusion.py:        A 3-tuple containing
src/porepy/grids/grid_extrusion.py:    num_cell_layers = z.size - 1
src/porepy/grids/grid_extrusion.py:    # Vertical faces are made by extruding old face-node relation
src/porepy/grids/grid_extrusion.py:    # Horizontal faces are defined from the old cell-node relation
src/porepy/grids/grid_extrusion.py:    # Implementation note: This operation is much simpler than in the 2d-3d operation,
src/porepy/grids/grid_extrusion.py:    # since much less is assumed on the ordering of face-nodes for 2d grids than 3d
src/porepy/grids/grid_extrusion.py:    # Finalize the face-node map
src/porepy/grids/grid_extrusion.py:    # Next, cell-faces
src/porepy/grids/grid_extrusion.py:    cf_old = g.cell_faces.indices.reshape((2, -1), order="F")
src/porepy/grids/grid_extrusion.py:        # Vertical faces are identified by the old cell-face relation
src/porepy/grids/grid_extrusion.py:    # Finalize Cell-face relation
src/porepy/grids/grid_extrusion.py:    cf_data = np.vstack((-tmp, tmp, -tmp, tmp)).ravel("F")
src/porepy/grids/grid_extrusion.py:    name = f"{g.name} extruded 1d->2d"
src/porepy/grids/grid_extrusion.py:    g_info.append("Extrude 1d->2d")
src/porepy/grids/grid_extrusion.py:) -> tuple[pp.Grid, np.ndarray, np.ndarray]:
src/porepy/grids/grid_extrusion.py:    """Extrude a 0D grid into 1D by prismatic extension in the z-direction.
src/porepy/grids/grid_extrusion.py:        z: An array containing z-coordinates per node for the extruded grid.
src/porepy/grids/grid_extrusion.py:            Should be either non-negative or non-positive, and be sorted in increasing
src/porepy/grids/grid_extrusion.py:        A 3-tuple containing
src/porepy/grids/grid_extrusion.py:    name = f"{g.name} extruded 0d->1d"
src/porepy/grids/grid_extrusion.py:    g_info.append("Extruded 0d->1d")
src/porepy/grids/grid_extrusion.py:def _define_tags(g: pp.Grid, num_cell_layers: int) -> dict[str, np.ndarray]:
src/porepy/grids/grid_extrusion.py:    for _ in range(num_cell_layers - 1):
src/porepy/grids/grid_extrusion.py:    # The horizontal faces are all non-fracture, non-tip
src/porepy/grids/grid_extrusion.py:            np.zeros(nc_old * (num_cell_layers - 1), dtype=bool),
src/porepy/grids/grid_extrusion.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/grids/mdg_generation.py:Module containing a function to generate mixed-dimensional grids (mdg). It encapsulates
src/porepy/grids/mdg_generation.py:different lower-level mdg generation.
src/porepy/grids/mdg_generation.py:        - TypeError: Raises type error messages if:
src/porepy/grids/mdg_generation.py:            - ``grid_type`` is not ``str``.
src/porepy/grids/mdg_generation.py:            - ``meshing_args`` is not ``dict``.
src/porepy/grids/mdg_generation.py:            - fracture_network is not an instance of
src/porepy/grids/mdg_generation.py:        - ValueError: Raises value error messages if:
src/porepy/grids/mdg_generation.py:            - grid_type is not a member of ['simplex', 'cartesian', 'tensor_grid']
src/porepy/grids/mdg_generation.py:        - TypeError: Raises type error messages if:
src/porepy/grids/mdg_generation.py:            - cell_size is not ``float``
src/porepy/grids/mdg_generation.py:            - cell_size_min is not ``float``
src/porepy/grids/mdg_generation.py:            - cell_size_boundary is not ``float``
src/porepy/grids/mdg_generation.py:            - cell_size_fracture is not ``float``
src/porepy/grids/mdg_generation.py:        - ValueError: Raises value error messages if:
src/porepy/grids/mdg_generation.py:            - cell_size is not strictly positive
src/porepy/grids/mdg_generation.py:            - cell_size_min is not strictly positive
src/porepy/grids/mdg_generation.py:            - cell_size_boundary is not strictly positive
src/porepy/grids/mdg_generation.py:            - cell_size_fracture is not strictly positive
src/porepy/grids/mdg_generation.py:            - cell_size or cell_size_min are not provided
src/porepy/grids/mdg_generation.py:            - cell_size or cell_size_boundary are not provided
src/porepy/grids/mdg_generation.py:            - cell_size or cell_size_fracture are not provided
src/porepy/grids/mdg_generation.py:        - TypeError: Raises type error messages if:
src/porepy/grids/mdg_generation.py:            - cell_size is not ``float``
src/porepy/grids/mdg_generation.py:            - cell_size_x is not ``float``
src/porepy/grids/mdg_generation.py:            - cell_size_y is not ``float``
src/porepy/grids/mdg_generation.py:            - cell_size_z is not ``float``
src/porepy/grids/mdg_generation.py:        - ValueError: Raises value error messages if:
src/porepy/grids/mdg_generation.py:            - cell_size is not strictly positive
src/porepy/grids/mdg_generation.py:            - cell_size_x is not strictly positive
src/porepy/grids/mdg_generation.py:            - cell_size_y is not strictly positive
src/porepy/grids/mdg_generation.py:            - cell_size_z is not strictly positive
src/porepy/grids/mdg_generation.py:            - cell_size or cell_size_x are not provided
src/porepy/grids/mdg_generation.py:            - cell_size or cell_size_y are not provided
src/porepy/grids/mdg_generation.py:            - cell_size or cell_size_z are not provided if dimension == 3
src/porepy/grids/mdg_generation.py:        - TypeError: Raises type error messages if:
src/porepy/grids/mdg_generation.py:            - cell_size is not ``float``
src/porepy/grids/mdg_generation.py:            - x_pts is not ``np.ndarray``
src/porepy/grids/mdg_generation.py:            - y_pts is not ``np.ndarray``
src/porepy/grids/mdg_generation.py:            - z_pts is not ``np.ndarray``
src/porepy/grids/mdg_generation.py:        - ValueError: Raises value error messages if:
src/porepy/grids/mdg_generation.py:            - cell_size is not strictly positive
src/porepy/grids/mdg_generation.py:            - The points np.min(x_pts) and np.max(x_pts) are not on the boundary.
src/porepy/grids/mdg_generation.py:            - The points np.min(y_pts) and np.max(y_pts) are not on the boundary.
src/porepy/grids/mdg_generation.py:            - The points np.min(z_pts) and np.max(z_pts) are not on the boundary.
src/porepy/grids/mdg_generation.py:            - cell_size or x_pts are not provided
src/porepy/grids/mdg_generation.py:            - cell_size or y_pts are not provided
src/porepy/grids/mdg_generation.py:            - cell_size or z_pts are not provided if dimension == 3
src/porepy/grids/mdg_generation.py:) -> Optional[pp.Domain]:
src/porepy/grids/mdg_generation.py:        - ValueError: Raises value error messages if:
src/porepy/grids/mdg_generation.py:            - Inferred dimension is not 2 or 3
src/porepy/grids/mdg_generation.py:def _infer_dimension_from_network(fracture_network: FractureNetwork) -> int:
src/porepy/grids/mdg_generation.py:        - ValueError: Raises value error messages if:
src/porepy/grids/mdg_generation.py:            - fracture_network without a domain is provided and grid_type != "simplex"
src/porepy/grids/mdg_generation.py:) -> tuple:
src/porepy/grids/mdg_generation.py:        - :method:`~porepy.fracs.fracture_network_2d.FractureNetwork2d.mesh`
src/porepy/grids/mdg_generation.py:        - :method:`~porepy.fracs.fracture_network_3d.FractureNetwork3d.mesh`
src/porepy/grids/mdg_generation.py:            - for :class:`~porepy.fracs.fracture_network_2d.FractureNetwork2d`, It
src/porepy/grids/mdg_generation.py:            - for :class:`~porepy.fracs.fracture_network_2d.FractureNetwork3d`, It
src/porepy/grids/mdg_generation.py:    # signature of the function - this call gives dictionary of argument names and
src/porepy/grids/mdg_generation.py:) -> tuple:
src/porepy/grids/mdg_generation.py:        - :method:`~porepy.fracs.meshing.cart_grid`
src/porepy/grids/mdg_generation.py:    nx_cells: list[int] = [-1 for i in range(domain.dim)]
src/porepy/grids/mdg_generation.py:    # if provided overwrite information in x-direction
src/porepy/grids/mdg_generation.py:        n_x: int = round((xmax - xmin) / cell_size_x)
src/porepy/grids/mdg_generation.py:    # if provided overwrite information in y-direction
src/porepy/grids/mdg_generation.py:        n_y: int = round((ymax - ymin) / cell_size_y)
src/porepy/grids/mdg_generation.py:    # if provided overwrite information in z-direction
src/porepy/grids/mdg_generation.py:        n_z: int = round((zmax - zmin) / cell_size_z)
src/porepy/grids/mdg_generation.py:) -> tuple:
src/porepy/grids/mdg_generation.py:        - :method:`~porepy.fracs.meshing.cart_grid`
src/porepy/grids/mdg_generation.py:        x_pts: An ``np.ndarray`` with points in x-direction.
src/porepy/grids/mdg_generation.py:        y_pts: An ``np.ndarray`` with points in y-direction.
src/porepy/grids/mdg_generation.py:        z_pts: An ``np.ndarray`` with points in z-direction. It is ``None`` for 2D.
src/porepy/grids/mdg_generation.py:        n_x: int = round((xmax - xmin) / cell_size) + 1
src/porepy/grids/mdg_generation.py:        n_y: int = round((ymax - ymin) / cell_size) + 1
src/porepy/grids/mdg_generation.py:            n_z: int = round((zmax - zmin) / cell_size) + 1
src/porepy/grids/mdg_generation.py:) -> pp.MixedDimensionalGrid:
src/porepy/grids/mdg_generation.py:    """Creates a mixed-dimensional grid.
src/porepy/grids/mdg_generation.py:    In terms of meshing arguments, we provide two ways of creating md-grids.
src/porepy/grids/mdg_generation.py:                # Generate a mixed-dimensional grid (MDG)
src/porepy/grids/mdg_generation.py:            - :method:`~porepy.fracs.fracture_network_2d.FractureNetwork2d.mesh`
src/porepy/grids/mdg_generation.py:            - :method:`~porepy.fracs.fracture_network_2d.FractureNetwork3d.mesh`
src/porepy/grids/mdg_generation.py:            - :method:`~porepy.fracs.meshing.cart_grid`
src/porepy/grids/mdg_generation.py:            - :method:`~porepy.fracs.meshing.tensor_grid`
src/porepy/grids/mdg_generation.py:                and ``tensor_grid`` for structured, non-uniform Cartesian grids.
src/porepy/grids/mdg_generation.py:                        boundaries (can be seen as a far-field value). If not provided,
src/porepy/grids/mdg_generation.py:                    cell_size_x: ``float``: size in x-direction. If cell_size_x is
src/porepy/grids/mdg_generation.py:                        provided, it overwrites cell_size in the x-direction.
src/porepy/grids/mdg_generation.py:                    cell_size_y: ``float``: size in y-direction. If cell_size_y is
src/porepy/grids/mdg_generation.py:                        provided, it overwrites cell_size in the y-direction.
src/porepy/grids/mdg_generation.py:                    cell_size_z: ``float``: size in z-direction. If cell_size_z is
src/porepy/grids/mdg_generation.py:                        provided, it overwrites cell_size in the z-direction.
src/porepy/grids/mdg_generation.py:                    x_pts: ``np.ndarray``: points in x-direction. The points np.min(x_pts)
src/porepy/grids/mdg_generation.py:                        x-direction.
src/porepy/grids/mdg_generation.py:                    y_pts: ``np.ndarray``: points in y-direction. The points np.min(y_pts)
src/porepy/grids/mdg_generation.py:                        y-direction.
src/porepy/grids/mdg_generation.py:                    z_pts: ``np.ndarray``: points in z-direction. The points np.min(z_pts)
src/porepy/grids/mdg_generation.py:                        z-direction.
src/porepy/grids/mdg_generation.py:            - TypeError: If invalid arguments types are provided. See validator functions:
src/porepy/grids/mdg_generation.py:                - :meth:`~_validate_args`
src/porepy/grids/mdg_generation.py:                - :meth:`~_validate_args_types`
src/porepy/grids/mdg_generation.py:            - ValueError: If invalid arguments values are provided. See validator
src/porepy/grids/mdg_generation.py:                - :meth:`~_validate_args`
src/porepy/grids/mdg_generation.py:                - :meth:`~_validate_grid_type_value`
src/porepy/grids/mdg_generation.py:                - :meth:`~_validate_simplex_meshing_args_values`
src/porepy/grids/mdg_generation.py:                - :meth:`~_validate_cartesian_meshing_args_values`
src/porepy/grids/mdg_generation.py:                - :meth:`~_validate_tensor_grid_meshing_args_values`
src/porepy/grids/mdg_generation.py:            Mixed-dimensional grid object.
src/porepy/grids/__init__.py:geometrical representation of a (mixed-dimensional) domain.
src/porepy/grids/__init__.py:mixed-dimensional grid, which is used to represent domains with fractures and fracture
src/porepy/grids/boundary_grid.py:    def __init__(self, g: pp.Grid, name: Optional[str] = None) -> None:
src/porepy/grids/boundary_grid.py:        self.dim = g.dim - 1
src/porepy/grids/boundary_grid.py:    def projection(self) -> sps.spmatrix:
src/porepy/grids/boundary_grid.py:        which maps face-wise values on the parent grid to the boundary grid.
src/porepy/grids/boundary_grid.py:    def __repr__(self) -> str:
src/porepy/grids/boundary_grid.py:    def __str__(self) -> str:
src/porepy/grids/partition.py:Intended support is by Cartesian indexing, and METIS-based.
src/porepy/grids/partition.py:def partition_metis(g: pp.Grid, num_part: int) -> np.ndarray:
src/porepy/grids/partition.py:) -> np.ndarray:
src/porepy/grids/partition.py:    partitioning will be inferred from the fine-scale Cartesian dimensions, in a way
src/porepy/grids/partition.py:            incr_ind = incr_ind[:-1]
src/porepy/grids/partition.py:        # A cumulative sum now gives the index, but subtract by one to be 0-offset
src/porepy/grids/partition.py:        ind.append(np.cumsum(loc_ind) - 1)
src/porepy/grids/partition.py:        # y-index jumps in steps of the number of coarse x-cells
src/porepy/grids/partition.py:) -> np.ndarray:
src/porepy/grids/partition.py:    non-convex cells). We optionally check for connectivity and raise an error if this
src/porepy/grids/partition.py:    delta = max_coord - min_coord
src/porepy/grids/partition.py:    partition = -np.ones(g.num_cells)
src/porepy/grids/partition.py:            cc >= lower_coord.reshape((-1, 1)), cc < upper_coord.reshape((-1, 1))
src/porepy/grids/partition.py:def partition(g: pp.Grid, num_coarse: int) -> np.ndarray:
src/porepy/grids/partition.py:        - :meth:`partition_metis`,
src/porepy/grids/partition.py:        - :meth:`partition_structured` and
src/porepy/grids/partition.py:        - :meth:`partition_coordinates` for further details.
src/porepy/grids/partition.py:def determine_coarse_dimensions(target: int, fine_size: np.ndarray) -> np.ndarray:
src/porepy/grids/partition.py:    (given by the Nd-root of the target). If this requires more coarse cells in a
src/porepy/grids/partition.py:        fine_size: Number of fine-scale cells in each dimension
src/porepy/grids/partition.py:        ValueError: If the while-loop runs more iterations than the number of
src/porepy/grids/partition.py:        # The simplest option is to take the Nd-root of the target number. This will
src/porepy/grids/partition.py:        s_num = np.power(target_now, 1 / (nd - found.sum()))
src/porepy/grids/partition.py:            if np.abs(target - size_now.prod()) < dist:
src/porepy/grids/partition.py:                dist = target - size_now.prod()
src/porepy/grids/partition.py:) -> tuple[pp.Grid, np.ndarray, np.ndarray]:
src/porepy/grids/partition.py:    should work in theory for non-connected cells, the user will then have to decide
src/porepy/grids/partition.py:            use this function for extracting a non-planar 2D grid, but use at own risk.
src/porepy/grids/partition.py:        A 3-tuple containing
src/porepy/grids/partition.py:    # Local cell-face and face-node maps.
src/porepy/grids/partition.py:) -> tuple[sps.spmatrix, np.ndarray]:
src/porepy/grids/partition.py:    All zero columns are stripped from the sub-matrix. Mappings from global to local row
src/porepy/grids/partition.py:        A 2-tuple containing
src/porepy/grids/partition.py:    shape = (unique_rows.size, cols.size - 1)
src/porepy/grids/partition.py:) -> tuple[pp.Grid, np.ndarray, np.ndarray]:
src/porepy/grids/partition.py:    """Extract a lower-dimensional grid from the faces of a higher dimensional grid.
src/porepy/grids/partition.py:        g: The grid whose faces are going to be extracted as a new, lower-dimensional
src/porepy/grids/partition.py:            function for a non-planar 2D grid, but use at own risk. This parameter is
src/porepy/grids/partition.py:        A 3-tuple containing
src/porepy/grids/partition.py:) -> tuple[pp.Grid, np.ndarray, np.ndarray]:
src/porepy/grids/partition.py:        A 3-tuple containing
src/porepy/grids/partition.py:) -> tuple[pp.Grid, np.ndarray, np.ndarray]:
src/porepy/grids/partition.py:        A 3-tuple containing
src/porepy/grids/partition.py:    # Local cell-face and face-node maps.
src/porepy/grids/partition.py:    data = -1 * cell_nodes.data
src/porepy/grids/partition.py:    data[ix] *= -1
src/porepy/grids/partition.py:        g.dim - 1,
src/porepy/grids/partition.py:) -> tuple[pp.Grid, np.ndarray, np.ndarray]:
src/porepy/grids/partition.py:    non-planar grids. ``compute_geometry`` is used to do a sanity check of the extracted
src/porepy/grids/partition.py:    grid. If ``is_planar`` is set to ``False``, this function should handle non-planar
src/porepy/grids/partition.py:            Set ``False`` to use this function for a non-planar 2D grid, but use at own
src/porepy/grids/partition.py:        A 3-tuple containing
src/porepy/grids/partition.py:    # Local cell-face and face-node maps.
src/porepy/grids/partition.py:    num_nodes_per_cell = cell_node_ptr[1:] - cell_node_ptr[:-1]
src/porepy/grids/partition.py:    next_node[cell_node_ptr[1:] - 1] = cell_node_ptr[:-1]
src/porepy/grids/partition.py:    data[ix] *= -1
src/porepy/grids/partition.py:        g.dim - 1,
src/porepy/grids/partition.py:) -> tuple[list[pp.Grid], list[np.ndarray], list[np.ndarray]]:
src/porepy/grids/partition.py:        ind: Partition vector, one per cell. Should be 0-offset.
src/porepy/grids/partition.py:        A 3-tuple containing
src/porepy/grids/partition.py:) -> np.ndarray:
src/porepy/grids/partition.py:        g: The grid; the cell-node relation will be used to extend the cell set.
src/porepy/grids/partition.py:            - ``'face'``: Each layer will add cells that share a face with the active
src/porepy/grids/partition.py:            - ``'node'``: Each layer will add cells sharing a vertex with the active
src/porepy/grids/partition.py:        # Construct cell-node map, its transpose will be a node-cell map
src/porepy/grids/partition.py:) -> tuple[bool, list[np.ndarray]]:
src/porepy/grids/partition.py:        A 2-tuple containing
src/porepy/grids/coarsening.py:) -> None:
src/porepy/grids/coarsening.py:    If a md-grid is passed, the procedure is applied to the grid of highest dimension.
src/porepy/grids/coarsening.py:        - The passed grid is modified.
src/porepy/grids/coarsening.py:        - Do not call :meth:`~porepy.grids.grid.Grid.compute_geometry` afterwards.
src/porepy/grids/coarsening.py:        g: The grid or mixed-dimensional grid to be coarsened.
src/porepy/grids/coarsening.py:            - ``'by_volume'``: The coarsening is based on the cell volume.
src/porepy/grids/coarsening.py:            - ``'by_tpfa'``: Uses the AMG method's coarse/fine-splittings based on
src/porepy/grids/coarsening.py:            For the ``'by_volume'``- method, see :func:`create_aggregations` for an
src/porepy/grids/coarsening.py:            For the ``'by_tpfa'``- method, see :func:`create_partition`.
src/porepy/grids/coarsening.py:) -> None:
src/porepy/grids/coarsening.py:    If ``g`` is a mixed-dimensional grid, the coarsening is applied to the higher
src/porepy/grids/coarsening.py:        g: A grid or mixed-dimensional grid.
src/porepy/grids/coarsening.py:        subdiv: If ``g`` is a single grid, a single array-like object as in above
src/porepy/grids/coarsening.py:            If ``g`` is a mixed-dimensional grid, a dictionary containing per grid (key)
src/porepy/grids/coarsening.py:            a 2-tuple, where the second entry is the partition map as seen above.
src/porepy/grids/coarsening.py:) -> Union[np.ndarray, dict[Any, tuple[Any, np.ndarray]]]:
src/porepy/grids/coarsening.py:    """Re-order the partition IDs in order to obtain contiguous numbers.
src/porepy/grids/coarsening.py:            a dictionary containing the previous in a 2-tuple for any key.
src/porepy/grids/coarsening.py:def generate_seeds(mdg: Union[pp.Grid, pp.MixedDimensionalGrid]) -> np.ndarray:
src/porepy/grids/coarsening.py:    """Generates a priory seeds (cells) for coarsening a mixed-dimensional grid based
src/porepy/grids/coarsening.py:    on topological information about the highest-dimensional grid.
src/porepy/grids/coarsening.py:        mdg: A grid or mixed-dimensional grid.
src/porepy/grids/coarsening.py:        If ``mdg`` is a mixed-dimensional grid, this function returns an initial seed
src/porepy/grids/coarsening.py:        dimension and grids of co-dimension 1.
src/porepy/grids/coarsening.py:    # Extract the 1-codimensional grids
src/porepy/grids/coarsening.py:    gs = mdg.subdomains(dim=mdg.dim_max() - 1)
src/porepy/grids/coarsening.py:) -> dict[pp.Grid, tuple[pp.Grid, np.ndarray]]:
src/porepy/grids/coarsening.py:        grid: A single grid or mixed-dimensional grid.
src/porepy/grids/coarsening.py:            - ``'weight'``: A float serving as weight for the mean of the cell volumes.
src/porepy/grids/coarsening.py:        raise ValueError("Only subdomains and mixed-dimensional grids supported.")
src/porepy/grids/coarsening.py:        partition_local = -np.ones(g.num_cells, dtype=int)
src/porepy/grids/coarsening.py:) -> dict[pp.Grid, tuple[pp.Grid, np.ndarray]]:
src/porepy/grids/coarsening.py:    method's coarse/fine-splittings based on direct couplings.
src/porepy/grids/coarsening.py:        g: A single grid or mixed-dimensional grid.
src/porepy/grids/coarsening.py:            A-priory defined cells of the coarser grid.
src/porepy/grids/coarsening.py:            - ``'cdepth'``: A number to define the strength of the aggregation, i.e. a
src/porepy/grids/coarsening.py:            - ``'epsilon'``: A float representing the weight for the off-diagonal
src/porepy/grids/coarsening.py:        A dictionary containing the a 2-tuple per grid. The 2-tuple contains the grid
src/porepy/grids/coarsening.py:        ind = -nvals >= epsilon * np.abs(nvals[minId])
src/porepy/grids/coarsening.py:        lmbda[np.logical_not(candidate)] = -1
src/porepy/grids/coarsening.py:        new_pair = np.stack((np.repeat(it, cind.size), cind), axis=-1)
src/porepy/grids/coarsening.py:        axis=-1,
src/porepy/grids/coarsening.py:        mcval = -np.inf * np.ones(mcind.size)
src/porepy/grids/coarsening.py:) -> Union[np.ndarray, None]:
src/porepy/grids/coarsening.py:        g: A single-dimensional grid.
src/porepy/grids/coarsening.py:        If ``face_map`` is True, returns the cell-to-face map of the coarser grid.
src/porepy/grids/coarsening.py:    num_nodes_per_face = g.face_nodes.indptr[1:] - g.face_nodes.indptr[:-1]
src/porepy/grids/coarsening.py:    """Auxiliary function to create a coarsening for a given mixed-dimensional grid.
src/porepy/grids/coarsening.py:        mdg: A mixed-dimensional grid.
src/porepy/grids/coarsening.py:        subdiv: A subdivision containing the coarsening map for each grid in a 2-tuple.
src/porepy/grids/coarsening.py:) -> sps.spmatrix:
src/porepy/grids/coarsening.py:    """Compute a two-point flux approximation for a given grid
src/porepy/grids/coarsening.py:        g: A single grid or mixed-dimensional grid.
src/porepy/grids/coarsening.py:) -> np.ndarray:
src/porepy/applications/md_grids/mdg_library.py:"""Library of mixed-dimensional grids.
src/porepy/applications/md_grids/mdg_library.py:) -> tuple[pp.MixedDimensionalGrid, pp.FractureNetwork2d]:
src/porepy/applications/md_grids/mdg_library.py:    """Create a mixed-dimensional grid for a square domain with up to two
src/porepy/applications/md_grids/mdg_library.py:                Mixed-dimensional grid.
src/porepy/applications/md_grids/mdg_library.py:) -> tuple[pp.MixedDimensionalGrid, pp.FractureNetwork3d]:
src/porepy/applications/md_grids/mdg_library.py:    """Create a mixed-dimensional grid for a cube domain with up to three
src/porepy/applications/md_grids/mdg_library.py:                Mixed-dimensional grid.
src/porepy/applications/md_grids/model_geometries.py:    """Create a mixed-dimensional grid for a square domain with up to two
src/porepy/applications/md_grids/model_geometries.py:        - domain_size: The side length of the square domain.
src/porepy/applications/md_grids/model_geometries.py:        - fracture_indices: List of indices of fractures to be included in the grid.
src/porepy/applications/md_grids/model_geometries.py:    def domain_size(self) -> pp.number:
src/porepy/applications/md_grids/model_geometries.py:    def set_fractures(self) -> None:
src/porepy/applications/md_grids/model_geometries.py:    def set_domain(self) -> None:
src/porepy/applications/md_grids/model_geometries.py:    """Create a mixed-dimensional grid for a cube domain with up to three
src/porepy/applications/md_grids/model_geometries.py:        - domain_size: The side length of the cube domain.
src/porepy/applications/md_grids/model_geometries.py:        - fracture_indices: List of indices of fractures to be included in the grid.
src/porepy/applications/md_grids/model_geometries.py:    def domain_size(self) -> pp.number:
src/porepy/applications/md_grids/model_geometries.py:    def set_fractures(self) -> None:
src/porepy/applications/md_grids/model_geometries.py:    def set_domain(self) -> None:
src/porepy/applications/md_grids/domains.py:def nd_cube_domain(dimension: Literal[2, 3], size=pp.number) -> pp.Domain:
src/porepy/applications/md_grids/domains.py:        Dimension-cube domain object.
src/porepy/applications/md_grids/domains.py:def unit_cube_domain(dimension: Literal[2, 3]) -> pp.Domain:
src/porepy/applications/md_grids/domains.py:        Unit dimension-cube domain object.
src/porepy/applications/md_grids/fracture_sets.py:def orthogonal_fractures_2d(size: pp.number) -> list[pp.LineFracture]:
src/porepy/applications/md_grids/fracture_sets.py:def orthogonal_fractures_3d(size: pp.number) -> list[pp.PlaneFracture]:
src/porepy/geometry/point_in_polyhedron_test.py:"""This module implements a robust point in polyhedron test supporting non-convex
src/porepy/geometry/point_in_polyhedron_test.py:    """This class implements a robust point in polyhedron test supporting non-convex
src/porepy/geometry/point_in_polyhedron_test.py:    The implementation is based on the reference: Robust inside-outside segmentation
src/porepy/geometry/point_in_polyhedron_test.py:        tol: ``default=1e-10``
src/porepy/geometry/point_in_polyhedron_test.py:        tol: float = 1e-10,
src/porepy/geometry/point_in_polyhedron_test.py:    def solid_angle(self, R: np.ndarray[Any, np.dtype[np.float64]]) -> float:
src/porepy/geometry/point_in_polyhedron_test.py:        point P. It is the measure of the intersection of the three-dimensional unit
src/porepy/geometry/point_in_polyhedron_test.py:        The implementation is based on equation (6) in reference: Robust inside-outside
src/porepy/geometry/point_in_polyhedron_test.py:        # the origin [0,0,0]. Example: half norm of np.cross(R[0]-[0,0,0], R[1]-[0,0,0])
src/porepy/geometry/point_in_polyhedron_test.py:        r_volume = np.linalg.norm(np.dot(R[1], np.cross(R[0] - R[1], R[2] - R[1])))
src/porepy/geometry/point_in_polyhedron_test.py:    def winding_number(self, point: np.ndarray[Any, np.dtype[np.float64]]) -> float:
src/porepy/geometry/point_in_polyhedron_test.py:            points outside the polyhedron, 1 for points inside non-convex polyhedron and
src/porepy/geometry/point_in_polyhedron_test.py:        R = self.vertices - point
src/porepy/geometry/geometry_property_checks.py:def is_ccw_polygon(poly: np.ndarray) -> bool:
src/porepy/geometry/geometry_property_checks.py:    The algorithm should work for non-convex polygons. If the polygon is
src/porepy/geometry/geometry_property_checks.py:    self-intersecting (e.g. shaped like the number 8), the number returned will reflect
src/porepy/geometry/geometry_property_checks.py:        ordered in a natural fashion, that is, not self-intersecting.
src/porepy/geometry/geometry_property_checks.py:           how-to-determine-if-a-list-of-polygon-points-are-in-clockwise-order>`_
src/porepy/geometry/geometry_property_checks.py:        2. http://blog.element84.com/polygon-winding.html
src/porepy/geometry/geometry_property_checks.py:        value += (p_1[i + 1] + p_1[i]) * (p_0[i + 1] - p_0[i])
src/porepy/geometry/geometry_property_checks.py:) -> np.ndarray:
src/porepy/geometry/geometry_property_checks.py:    The function is intended for 2D points; higher-dimensional coordinates will be
src/porepy/geometry/geometry_property_checks.py:            where the first row corresponds to x-coordinates and the second row
src/porepy/geometry/geometry_property_checks.py:            corresponds to y-coordinates. See examples.
src/porepy/geometry/geometry_property_checks.py:        is to the left of the line segment ``p1-p2``.
src/porepy/geometry/geometry_property_checks.py:        p3 = p3.reshape((-1, 1))
src/porepy/geometry/geometry_property_checks.py:    # TODO: Compute cross product between p1-p2 and p1-p3. Right-hand rule gives that p3
src/porepy/geometry/geometry_property_checks.py:    cross_product = (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (
src/porepy/geometry/geometry_property_checks.py:        p3[0] - p1[0]
src/porepy/geometry/geometry_property_checks.py:    is_ccw[cross_product < -tol] = False
src/porepy/geometry/geometry_property_checks.py:) -> np.ndarray:
src/porepy/geometry/geometry_property_checks.py:        pt = p.reshape((-1, 1))
src/porepy/geometry/geometry_property_checks.py:    next_vert = np.roll(poly, -1, axis=1)
src/porepy/geometry/geometry_property_checks.py:        pi = pt[:, i].reshape((-1, 1))
src/porepy/geometry/geometry_property_checks.py:        poly_pi_x = poly[0] - pi[0]
src/porepy/geometry/geometry_property_checks.py:        poly_pi_y = poly[1] - pi[1]
src/porepy/geometry/geometry_property_checks.py:        next_pi_x = next_vert[0] - pi[0]
src/porepy/geometry/geometry_property_checks.py:        next_pi_y = next_vert[1] - pi[1]
src/porepy/geometry/geometry_property_checks.py:        edge_boundary = vertex_sgn_next - vertex_sgn_poly
src/porepy/geometry/geometry_property_checks.py:        edge_sgn = np.sign(poly_pi_x * next_pi_y - poly_pi_y * next_pi_x)
src/porepy/geometry/geometry_property_checks.py:    tol: float = 1e-10,
src/porepy/geometry/geometry_property_checks.py:) -> np.ndarray:
src/porepy/geometry/geometry_property_checks.py:        tol: ``default=1e-10``
src/porepy/geometry/geometry_property_checks.py:    # The in-polyhedra algorithm requires a very particular ordering of the vertexes
src/porepy/geometry/geometry_property_checks.py:        test_points = test_points.reshape((-1, 1))
src/porepy/geometry/geometry_property_checks.py:            # wn = 1 for points inside non-convex polyhedron
src/porepy/geometry/geometry_property_checks.py:    pts: np.ndarray, normal: Optional[np.ndarray] = None, tol: float = 1e-5
src/porepy/geometry/geometry_property_checks.py:) -> bool:
src/porepy/geometry/geometry_property_checks.py:        tol: ``default=1e-5``
src/porepy/geometry/geometry_property_checks.py:    normal = normal.reshape((-1, 1))
src/porepy/geometry/geometry_property_checks.py:    cp = np.mean(pts, axis=1).reshape((-1, 1))
src/porepy/geometry/geometry_property_checks.py:    dot_prod = np.linalg.norm(np.sum(normal * (pts - cp), axis=0))
src/porepy/geometry/geometry_property_checks.py:def point_in_cell(poly: np.ndarray, p: np.ndarray, if_make_planar: bool = True) -> bool:
src/porepy/geometry/geometry_property_checks.py:    j = poly.shape[1] - 1
src/porepy/geometry/geometry_property_checks.py:                + (p[1] - poly[1, i])
src/porepy/geometry/geometry_property_checks.py:                / (poly[1, j] - poly[1, i])
src/porepy/geometry/geometry_property_checks.py:                * (poly[0, j] - poly[0, i])
src/porepy/geometry/geometry_property_checks.py:def points_are_collinear(pts: np.ndarray, tol: float = 1e-5) -> bool:
src/porepy/geometry/geometry_property_checks.py:        tol: ``default=1e-5``
src/porepy/geometry/geometry_property_checks.py:            dist = max(dist, float(np.linalg.norm(pts[:, i] - pts[:, j])))
src/porepy/geometry/geometry_property_checks.py:        np.array([np.linalg.norm(np.cross(p - pt0, pt1 - pt0)) for p in pts[:, 1:-1].T])
src/porepy/geometry/geometry_property_checks.py:    p: np.ndarray, edges: np.ndarray, tol: float = 1e-8
src/porepy/geometry/geometry_property_checks.py:) -> np.ndarray:
src/porepy/geometry/geometry_property_checks.py:            and ``edges[0, 0] == edges[1, -1]``.
src/porepy/geometry/geometry_property_checks.py:        tol: ``default=1e-8``
src/porepy/geometry/geometry_property_checks.py:        ``i == edges.shape[1]`` - 1) are parallel.
src/porepy/geometry/geometry_property_checks.py:    edges_expanded = np.hstack((edges, edges[:, 0].reshape((-1, 1))))
src/porepy/geometry/geometry_property_checks.py:        v_this = p[:, edges_expanded[1, i]] - p[:, edges_expanded[0, i]]
src/porepy/geometry/geometry_property_checks.py:        v_next = p[:, edges_expanded[1, i + 1]] - p[:, edges_expanded[0, i + 1]]
src/porepy/geometry/geometry_property_checks.py:        if dot_prod > 1 - tol:
src/porepy/geometry/domain.py:    - (1) By passing the bounding box as a dictionary (we assume therefore that the
src/porepy/geometry/domain.py:    - (2) By passing a polytope (polygon in 2d and polyhedron in 3d), which are lists of
src/porepy/geometry/domain.py:      numpy arrays defining a general domain (this also includes non-convex domains).
src/porepy/geometry/domain.py:            # Create a domain from a 2d-polytope
src/porepy/geometry/domain.py:        - ``ValueError`` if both ``bounding_box`` AND ``polytope`` are given.
src/porepy/geometry/domain.py:        - ``ValueError`` if no arguments are given.
src/porepy/geometry/domain.py:        polytope: Either a 2d or a 3d-polytope representing a non-boxed domain.
src/porepy/geometry/domain.py:            A 2d-polytope (e.g., a polygon) is defined as a list of arrays of
src/porepy/geometry/domain.py:            the line, i.e., first row the x-coordinates and second row the
src/porepy/geometry/domain.py:            y-coordinates.
src/porepy/geometry/domain.py:            A 3d-polytope (e.g., a polyhedron) is a list of arrays of ``shape = (3,
src/porepy/geometry/domain.py:            defining the polygon, i.e., first row the x-coordinates, second row the
src/porepy/geometry/domain.py:            y-coordinates, and third row the z-coordinates.
src/porepy/geometry/domain.py:    ) -> None:
src/porepy/geometry/domain.py:    def __repr__(self) -> str:
src/porepy/geometry/domain.py:    def __str__(self) -> str:
src/porepy/geometry/domain.py:    def __eq__(self, other: object) -> bool:
src/porepy/geometry/domain.py:    def bounding_box_from_polytope(self) -> dict[str, pp.number]:
src/porepy/geometry/domain.py:    def polytope_from_bounding_box(self) -> list[np.ndarray]:
src/porepy/geometry/domain.py:    def _polygon_from_bounding_box(self) -> list[np.ndarray]:
src/porepy/geometry/domain.py:        """Compute the polygon associated with a two-dimensional bounding box.
src/porepy/geometry/domain.py:    def _polyhedron_from_bounding_box(self) -> list[np.ndarray]:
src/porepy/geometry/domain.py:        """Compute the polyhedron associated with a three-dimensional bounding box.
src/porepy/geometry/domain.py:# -----> Functions related to manipulation/coversion of bounding boxes
src/porepy/geometry/domain.py:def bounding_box_dimension(bounding_box: dict[str, pp.number]) -> int:
src/porepy/geometry/domain.py:) -> dict[str, float]:
src/porepy/geometry/domain.py:    point_cloud_range = max_coord - min_coord
src/porepy/geometry/domain.py:        "xmin": min_coord[0] - point_cloud_range[0] * overlap,
src/porepy/geometry/domain.py:        "ymin": min_coord[1] - point_cloud_range[1] * overlap,
src/porepy/geometry/domain.py:        bounding_box["zmin"] = min_coord[2] - point_cloud_range[2] * overlap
src/porepy/geometry/domain.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/geometry/domain.py:    """Return the minimum and maximum coordinates of a mixed-dimensional grid.
src/porepy/geometry/domain.py:        mdg: The mixed-dimensional grid for which the min/max coordinates will be
src/porepy/geometry/domain.py:        A 2-tuple containing
src/porepy/geometry/domain.py:def grid_minmax_coordinates(sd: pp.Grid) -> tuple[np.ndarray, np.ndarray]:
src/porepy/geometry/domain.py:        A 2-tuple containing
src/porepy/geometry/intersections.py:    tol: float = 1e-8,
src/porepy/geometry/intersections.py:) -> Optional[np.ndarray]:
src/porepy/geometry/intersections.py:    r"""Check if two line segments, defined by their start- and endpoints, intersect.
src/porepy/geometry/intersections.py:        \end{vmatrix}\leq tol\times|start_1-end_1|\times|start_2-end_2|,
src/porepy/geometry/intersections.py:        tol: ``default=1e-8``
src/porepy/geometry/intersections.py:    d_1 = end_1 - start_1
src/porepy/geometry/intersections.py:    d_2 = end_2 - start_2
src/porepy/geometry/intersections.py:    d_s = start_2 - start_1
src/porepy/geometry/intersections.py:    #   d_1[0] * t_1 - d_2[0] * t_2 = d_s[0]
src/porepy/geometry/intersections.py:    #   d_1[1] * t_1 - d_2[1] * t_2 = d_s[1]
src/porepy/geometry/intersections.py:    discr = d_1[0] * (-d_2[1]) - d_1[1] * (-d_2[0])
src/porepy/geometry/intersections.py:        start_cross_line = d_s[0] * d_1[1] - d_s[1] * d_1[0]
src/porepy/geometry/intersections.py:            # The lines are co-linear
src/porepy/geometry/intersections.py:                t_start_2 = (start_2[0] - start_1[0]) / d_1[0]
src/porepy/geometry/intersections.py:                t_end_2 = (end_2[0] - start_1[0]) / d_1[0]
src/porepy/geometry/intersections.py:                t_start_2 = (start_2[1] - start_1[1]) / d_1[1]
src/porepy/geometry/intersections.py:                t_end_2 = (end_2[1] - start_1[1]) / d_1[1]
src/porepy/geometry/intersections.py:                logger.error("Found what must be a point-edge")
src/porepy/geometry/intersections.py:            if t_max - t_min < tol:
src/porepy/geometry/intersections.py:                return p_1.reshape((-1, 1))
src/porepy/geometry/intersections.py:        t_1 = (d_s[0] * (-d_2[1]) - d_s[1] * (-d_2[0])) / discr
src/porepy/geometry/intersections.py:        t_2 = (d_1[0] * d_s[1] - d_1[1] * d_s[0]) / discr
src/porepy/geometry/intersections.py:        if t_1 >= -tol and t_1 <= (1 + tol) and t_2 >= -tol and t_2 <= (1 + tol):
src/porepy/geometry/intersections.py:    tol: float = 1e-8,
src/porepy/geometry/intersections.py:) -> Optional[np.ndarray]:
src/porepy/geometry/intersections.py:        tol: ``default=1e-8``
src/porepy/geometry/intersections.py:    dx_1 = xe_1 - xs_1
src/porepy/geometry/intersections.py:    dy_1 = ye_1 - ys_1
src/porepy/geometry/intersections.py:    dz_1 = ze_1 - zs_1
src/porepy/geometry/intersections.py:    dx_2 = xe_2 - xs_2
src/porepy/geometry/intersections.py:    dy_2 = ye_2 - ys_2
src/porepy/geometry/intersections.py:    dz_2 = ze_2 - zs_2
src/porepy/geometry/intersections.py:    # The lines are parallel in the x-y plane, but we don't know about the
src/porepy/geometry/intersections.py:    # z-direction. Check this.
src/porepy/geometry/intersections.py:    # Find non-zero elements
src/porepy/geometry/intersections.py:        - deltas_1[in_discr[1]] * deltas_2[in_discr[0]]
src/porepy/geometry/intersections.py:        if t.size == 2 and abs(t[0] - t[1]) > tol:
src/porepy/geometry/intersections.py:        elif t.size == 3 and (abs(t[0] - t[1]) > tol or abs(t[0] - t[2]) > tol):
src/porepy/geometry/intersections.py:        diff_start = start_2 - start_1
src/porepy/geometry/intersections.py:        dstart_x_delta_x = diff_start[1] * deltas_1[2] - diff_start[2] * deltas_1[1]
src/porepy/geometry/intersections.py:        dstart_x_delta_y = diff_start[2] * deltas_1[0] - diff_start[0] * deltas_1[2]
src/porepy/geometry/intersections.py:        dstart_x_delta_z = diff_start[0] * deltas_1[1] - diff_start[1] * deltas_1[0]
src/porepy/geometry/intersections.py:        # Rule out case with non-overlapping segments
src/porepy/geometry/intersections.py:        # Array of the full coordinates - same order as lines
src/porepy/geometry/intersections.py:        discr = deltas_1[in_discr[0]] * (-deltas_2[in_discr[1]]) - deltas_1[
src/porepy/geometry/intersections.py:        ] * (-deltas_2[in_discr[0]])
src/porepy/geometry/intersections.py:            (start_2[in_discr[0]] - start_1[in_discr[0]]) * (-deltas_2[in_discr[1]])
src/porepy/geometry/intersections.py:            - (start_2[in_discr[1]] - start_1[in_discr[1]]) * (-deltas_2[in_discr[0]])
src/porepy/geometry/intersections.py:            deltas_1[in_discr[0]] * (start_2[in_discr[1]] - start_1[in_discr[1]])
src/porepy/geometry/intersections.py:            - deltas_1[in_discr[1]] * (start_2[in_discr[0]] - start_1[in_discr[0]])
src/porepy/geometry/intersections.py:        # Compute the z-coordinates of the intersection points
src/porepy/geometry/intersections.py:        if np.abs(z_1_isect - z_2_isect) < tol:
src/porepy/geometry/intersections.py:            return vec.reshape((-1, 1))
src/porepy/geometry/intersections.py:    tol: float = 1e-8,
src/porepy/geometry/intersections.py:) -> tuple[np.ndarray, np.ndarray, np.ndarray, list, np.ndarray, np.ndarray]:
src/porepy/geometry/intersections.py:           polygon, that is, if the polygon has a T or L-type intersection with another
src/porepy/geometry/intersections.py:        - All polygons are convex. Non-convex polygons will simply be treated in a wrong
src/porepy/geometry/intersections.py:          way. To circumvent this, split the non-convex polygon into convex parts.
src/porepy/geometry/intersections.py:        - No polygon contains three points on a line, that is, an angle of pi. This can
src/porepy/geometry/intersections.py:        - If two polygons meet in a vertex, this is not considered an intersection.
src/porepy/geometry/intersections.py:        - If two polygons lie in the same plane, intersection types (vertex, segment,
src/porepy/geometry/intersections.py:        - Contact between polygons in a single point may not be accurately calculated.
src/porepy/geometry/intersections.py:        tol: ``default=1e-8``
src/porepy/geometry/intersections.py:            list tells whether the point formed by point-indices ``0`` and ``1`` in the
src/porepy/geometry/intersections.py:            Each list element is a 2-tuple with the indices of intersecting polygons.
src/porepy/geometry/intersections.py:            return value), a 2-tuple, where the first value gives an index, the second
src/porepy/geometry/intersections.py:        hit = cmax - cmin < tol
src/porepy/geometry/intersections.py:        cmin[hit] -= 0.5 * tol
src/porepy/geometry/intersections.py:    # rectangles in the xy-plane.
src/porepy/geometry/intersections.py:    # Next, find overlapping intervals in the z-directien
src/porepy/geometry/intersections.py:        return p.mean(axis=1).reshape((-1, 1))
src/porepy/geometry/intersections.py:    def mod_sign(v, tol=1e-8):
src/porepy/geometry/intersections.py:                return -1
src/porepy/geometry/intersections.py:        # Find a point p on the segment between start and end, so that the vector p -
src/porepy/geometry/intersections.py:        dx = end - start
src/porepy/geometry/intersections.py:        assert np.abs(dot_prod) > 1e-6
src/porepy/geometry/intersections.py:        t = -np.sum((start - center.ravel()) * normal.ravel()) / dot_prod
src/porepy/geometry/intersections.py:    def vector_pointset_point(a, b, tol=1e-8):
src/porepy/geometry/intersections.py:        # Create a set of non-zero vectors from a point in the plane spanned by a, to
src/porepy/geometry/intersections.py:                np.sqrt(np.sum((b - a[:, i].reshape((-1, 1))) ** 2, axis=0))
src/porepy/geometry/intersections.py:        return b - a[:, ind].reshape((-1, 1))
src/porepy/geometry/intersections.py:    # Pre-compute polygon normals to save computational time
src/porepy/geometry/intersections.py:        pp.map_geometry.compute_normal(poly, tol=tol).reshape((-1, 1)) for poly in polys
src/porepy/geometry/intersections.py:        # main_p_expanded[:-1] with main_p_expanded[1:]
src/porepy/geometry/intersections.py:            # computation - if the vertices are close, we will take a closer look at the
src/porepy/geometry/intersections.py:            # We know that the polygons at least are very close to intersecting each-
src/porepy/geometry/intersections.py:            elif np.sum(dot_prod_from_main[:-1] == 0) == 1:
src/porepy/geometry/intersections.py:                hit = np.where(dot_prod_from_main[:-1] == 0)[0]
src/porepy/geometry/intersections.py:                    # Point of the intersection - known to be on o.
src/porepy/geometry/intersections.py:                    tmp_p = polys[o][:, hit].reshape((-1, 1))
src/porepy/geometry/intersections.py:            elif np.all(dot_prod_from_main[:-1] == 0):
src/porepy/geometry/intersections.py:                            end = np.roll(start, -1, axis=1)
src/porepy/geometry/intersections.py:                # Check that there are only two points - if this assertion fails, there
src/porepy/geometry/intersections.py:                assert np.sum(dot_prod_from_main[:-1] == 0) == 2
src/porepy/geometry/intersections.py:                hit = np.where(dot_prod_from_main[:-1] == 0)[0]
src/porepy/geometry/intersections.py:                    hit[0] + 1 == hit[-1]
src/porepy/geometry/intersections.py:                    and hit[-1] == (dot_prod_from_main.size - 2)
src/porepy/geometry/intersections.py:            elif np.sum(dot_prod_from_other[:-1] == 0) == 1:
src/porepy/geometry/intersections.py:                hit = np.where(dot_prod_from_other[:-1] == 0)[0]
src/porepy/geometry/intersections.py:                    # Point of the intersection - known to be on main.
src/porepy/geometry/intersections.py:                    tmp_p = polys[main][:, hit].reshape((-1, 1))
src/porepy/geometry/intersections.py:            elif np.all(dot_prod_from_other[:-1] == 0):
src/porepy/geometry/intersections.py:                            end = np.roll(start, -1, axis=1)
src/porepy/geometry/intersections.py:                # Check that there are only two points - if this assertion fails, there
src/porepy/geometry/intersections.py:                assert np.sum(dot_prod_from_other[:-1] == 0) == 2
src/porepy/geometry/intersections.py:                hit = np.where(dot_prod_from_other[:-1] == 0)[0]
src/porepy/geometry/intersections.py:                main_intersects_other_1 = main_p_expanded[:, hit[-1]]
src/porepy/geometry/intersections.py:                # the plane, but this is disregarded by the [:-1] above)
src/porepy/geometry/intersections.py:                    hit[0] + 1 == hit[-1]
src/porepy/geometry/intersections.py:                    and hit[-1] == (dot_prod_from_other.size - 2)
src/porepy/geometry/intersections.py:            main_0_other_0 = other_intersects_main_0 - main_intersects_other_0
src/porepy/geometry/intersections.py:            main_0_other_1 = other_intersects_main_1 - main_intersects_other_0
src/porepy/geometry/intersections.py:            main_1_other_0 = other_intersects_main_0 - main_intersects_other_1
src/porepy/geometry/intersections.py:            main_1_other_1 = other_intersects_main_1 - main_intersects_other_1
src/porepy/geometry/intersections.py:            e_3 = mod_sign(np.sum((-main_0_other_0) * (-main_1_other_0)))
src/porepy/geometry/intersections.py:            e_4 = mod_sign(np.sum((-main_0_other_1) * (-main_1_other_1)))
src/porepy/geometry/intersections.py:                    # We know that e_3 and e_4 are non-positive (positive is covered
src/porepy/geometry/intersections.py:                            if not (ind == num_main - 1 and seg_vert_main_0[0] == 0):
src/porepy/geometry/intersections.py:                                ind -= 1
src/porepy/geometry/intersections.py:                        # seg-vert information for the first point is simple for main
src/porepy/geometry/intersections.py:                        # seg-vert information for first point, seen from other
src/porepy/geometry/intersections.py:                                    ind == num_other - 1 and seg_vert_other_0[0] == 0
src/porepy/geometry/intersections.py:                                    ind -= 1
src/porepy/geometry/intersections.py:                        # seg-vert information for the second point is simple for other
src/porepy/geometry/intersections.py:                        # seg-vert information for the first point is simple for main
src/porepy/geometry/intersections.py:                        # seg-vert information for the second point is simple for other
src/porepy/geometry/intersections.py:                        # seg-vert information for the first point is simple for main
src/porepy/geometry/intersections.py:                    if abs(ind_0 - ind_1) == 1:
src/porepy/geometry/intersections.py:                        segment_vertex_intersection[o].append((num_other - 1, True))
src/porepy/geometry/intersections.py:                        segment_vertex_intersection[o].append((num_other - 1, True))
src/porepy/geometry/intersections.py:    start: np.ndarray, end: np.ndarray, poly: np.ndarray, tol: float = 1e-5
src/porepy/geometry/intersections.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/geometry/intersections.py:        >>> start = np.array([0.5, 0.5, -0.5])
src/porepy/geometry/intersections.py:        tol: ``default=1e-5``
src/porepy/geometry/intersections.py:        start = start.reshape((-1, 1))
src/porepy/geometry/intersections.py:        end = end.reshape((-1, 1))
src/porepy/geometry/intersections.py:    center = np.mean(poly, axis=1).reshape((-1, 1))
src/porepy/geometry/intersections.py:    poly = poly - center
src/porepy/geometry/intersections.py:    start = start - center
src/porepy/geometry/intersections.py:    end = end - center
src/porepy/geometry/intersections.py:    # Obtain the rotation matrix that projects p1 to the xy-plane
src/porepy/geometry/intersections.py:    dz = end[2] - start[2]
src/porepy/geometry/intersections.py:    # Intersection point for segments with non-zero incline
src/porepy/geometry/intersections.py:    t[non_zero_incline] = -start[2, non_zero_incline] / dz[non_zero_incline]
src/porepy/geometry/intersections.py:        non_zero_incline, np.logical_and(t >= 0 - tol, t <= 1 + tol).astype(bool)
src/porepy/geometry/intersections.py:    x0 = start + (end - start) * t
src/porepy/geometry/intersections.py:    dot_product = np.einsum("ij,ij->j", x0 - start, end - start)
src/porepy/geometry/intersections.py:    sq_length = np.einsum("ij,ij->j", end - start, end - start)
src/porepy/geometry/intersections.py:    start: np.ndarray, end: np.ndarray, poly: np.ndarray, tol: float = 1e-5
src/porepy/geometry/intersections.py:) -> tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray]:
src/porepy/geometry/intersections.py:        tol: ``default=1e-5``
src/porepy/geometry/intersections.py:        start = start.reshape((start.shape[0], -1))
src/porepy/geometry/intersections.py:        end = end.reshape((end.shape[0], -1))
src/porepy/geometry/intersections.py:            length[seg] = np.linalg.norm(end[:, seg] - start[:, seg])
src/porepy/geometry/intersections.py:            length[seg] = np.linalg.norm(start[:, seg] - extra_pts[seg].flatten())
src/porepy/geometry/intersections.py:            length[seg] = np.linalg.norm(end[:, seg] - extra_pts[seg].flatten())
src/porepy/geometry/intersections.py:            length[seg] = np.linalg.norm(extra_pts[seg][:, 0] - extra_pts[seg][:, 1])
src/porepy/geometry/intersections.py:        np.einsum("ij,ij->j", end - start, end - start)
src/porepy/geometry/intersections.py:    p: np.ndarray, poly: np.ndarray, tol: float = 1e-8
src/porepy/geometry/intersections.py:) -> tuple[int, Optional[tuple[int, None] | tuple[None, int]]]:
src/porepy/geometry/intersections.py:        tol: ``default=1e-8``
src/porepy/geometry/intersections.py:    cp = poly.mean(axis=1).reshape((-1, 1))
src/porepy/geometry/intersections.py:    rot = pp.map_geometry.project_plane_matrix(poly - cp)
src/porepy/geometry/intersections.py:    rot_poly = rot.dot(poly - cp)[:2]
src/porepy/geometry/intersections.py:    rot_p = rot.dot(p - cp)
src/porepy/geometry/intersections.py:    dist, _ = pp.distances.points_segments(p, poly, np.roll(poly, -1, axis=1))
src/porepy/geometry/intersections.py:) -> list[tuple[int, int, float]]:
src/porepy/geometry/intersections.py:) -> list[tuple[int, int, float]]:
src/porepy/geometry/intersections.py:                intersections.append((i, j, np.sqrt(np.sum((X[:, 0] - X[:, 1]) ** 2))))
src/porepy/geometry/intersections.py:) -> tuple[list[np.ndarray], list[sps.csr_matrix]]:
src/porepy/geometry/intersections.py:        NotImplementedError: If a triangulation of a non-convex polygon is attempted.
src/porepy/geometry/intersections.py:            the mapping's ``item[i][j, k]`` is non-zero, polygon ``k`` in set ``i``
src/porepy/geometry/intersections.py:                    isect_x.append(np.array([c[ci][0] for ci in range(len(c) - 1)]))
src/porepy/geometry/intersections.py:                    isect_y.append(np.array([c[ci][1] for ci in range(len(c) - 1)]))
src/porepy/geometry/intersections.py:        # we have considered intersection of non-matching grids on surfaces), so it
src/porepy/geometry/intersections.py:        # seems premature to promote it to a general-purpose function.
src/porepy/geometry/intersections.py:                middle = np.roll(poly, -1, axis=1)  # type: ignore
src/porepy/geometry/intersections.py:                end = np.roll(poly, -2, axis=1)  # type: ignore
src/porepy/geometry/intersections.py:                    # shape, the triangulation will also have bad triangles - to improve
src/porepy/geometry/intersections.py:                    center = np.mean(poly, axis=1).reshape((-1, 1))  # type: ignore
src/porepy/geometry/intersections.py:                    # For non-convex polygons, the Delaunay triangulation will generate
src/porepy/geometry/intersections.py:                    # (would need a point-in-polygon test for non-convex polygons), but
src/porepy/geometry/intersections.py:                    raise NotImplementedError("Non-convex polygons not covered")
src/porepy/geometry/intersections.py:    p: np.ndarray, e: np.ndarray, tol: float = 1e-8, return_argsort: bool = False
src/porepy/geometry/intersections.py:) -> Union[
src/porepy/geometry/intersections.py:        tol: ``default=1e-8``
src/porepy/geometry/intersections.py:            new, non-intersecting edges.
src/porepy/geometry/intersections.py:        2-tuple of :obj:`~numpy.ndarray`:
src/porepy/geometry/intersections.py:        hit = cmax - cmin < tol
src/porepy/geometry/intersections.py:        cmin[hit] -= 0.5 * tol
src/porepy/geometry/intersections.py:        def pt(p: np.ndarray, ind: np.ndarray) -> np.ndarray:
src/porepy/geometry/intersections.py:                return a.reshape((-1, 1))
src/porepy/geometry/intersections.py:            return np.sqrt(np.sum((a - b) ** 2))
src/porepy/geometry/intersections.py:        main_vec = normalize(end_main - start_main)
src/porepy/geometry/intersections.py:            main_other_start = normalize(start_other - start_main)
src/porepy/geometry/intersections.py:            main_other_start = normalize(0.5 * (start_other + end_other) - start_main)
src/porepy/geometry/intersections.py:            main_other_end = normalize(end_other - start_main)
src/porepy/geometry/intersections.py:            main_other_end = normalize(0.3 * start_other + 0.7 * end_other - start_main)
src/porepy/geometry/intersections.py:            main_vec[0] * main_other_start[1] - main_vec[1] * main_other_start[0], tol
src/porepy/geometry/intersections.py:            main_vec[0] * main_other_end[1] - main_vec[1] * main_other_end[0], tol
src/porepy/geometry/intersections.py:        # may merge non-intersecting fractures.
src/porepy/geometry/intersections.py:        # Loop over all lines, split it into non-overlapping segments.
src/porepy/geometry/intersections.py:            num_branches = inds.size - 1
src/porepy/geometry/intersections.py:            dist = np.sum((loc_pts - loc_start) ** 2, axis=0)
src/porepy/geometry/intersections.py:            loc_tags = e[2:, ei].reshape((-1, 1)) * np.ones(num_branches, dtype=int)
src/porepy/geometry/intersections.py:            loc_edge = np.vstack((new_inds[:-1], new_inds[1:], loc_tags))
src/porepy/geometry/intersections.py:) -> tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray]:
src/porepy/geometry/intersections.py:            Minimum x-coordinate for all lines.
src/porepy/geometry/intersections.py:            Maximum x-coordinate for all lines.
src/porepy/geometry/intersections.py:            Minimum y-coordinate for all lines.
src/porepy/geometry/intersections.py:            Maximum y-coordinate for all lines.
src/porepy/geometry/intersections.py:) -> tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray, np.ndarray, np.ndarray]:
src/porepy/geometry/intersections.py:            Minimum x-coordinate for all lines.
src/porepy/geometry/intersections.py:            Maximum x-coordinate for all lines.
src/porepy/geometry/intersections.py:            Minimum y-coordinate for all lines.
src/porepy/geometry/intersections.py:            Maximum y-coordinate for all lines.
src/porepy/geometry/intersections.py:            Minimum z-coordinate for all lines.
src/porepy/geometry/intersections.py:            Maximum z-coordinate for all lines.
src/porepy/geometry/intersections.py:def _identify_overlapping_intervals(left: np.ndarray, right: np.ndarray) -> np.ndarray:
src/porepy/geometry/intersections.py:            # We have reached the end of the interval - remove it from the active ones.
src/porepy/geometry/intersections.py:        # Next, sort the columns so that the first row is non-decreasing
src/porepy/geometry/intersections.py:    tol: float = 1e-8,
src/porepy/geometry/intersections.py:) -> np.ndarray:
src/porepy/geometry/intersections.py:        is allowed. Analogously for the y-components.
src/porepy/geometry/intersections.py:    # Pass along the x-axis, identify the start and end of rectangles as we go. The idea
src/porepy/geometry/intersections.py:    # overlap along the y-axis. These will be identified as pairs.
src/porepy/geometry/intersections.py:            # Find active rectangles where the y-interval is also overlapping
src/porepy/geometry/intersections.py:        # Next, sort the columns so that the first row is non-decreasing
src/porepy/geometry/intersections.py:def _intersect_pairs(p1: np.ndarray, p2: np.ndarray) -> np.ndarray:
src/porepy/geometry/intersections.py:        # Next, sort the columns so that the first row is non-decreasing
src/porepy/geometry/half_space.py:) -> np.ndarray:
src/porepy/geometry/half_space.py:        >>> x0 = np.array([[0, -1], [0, 0], [0, 0]])
src/porepy/geometry/half_space.py:        >>> pts = np.array([[-1 ,-1 ,4], [2, -2, -2], [0, 0, 0]])
src/porepy/geometry/half_space.py:            Point on the boundary of the half-spaces. Half space
src/porepy/geometry/half_space.py:            ``i`` is given by all points satisfying ``(x - x0[:,i])*n[:,i]<=0``.
src/porepy/geometry/half_space.py:            The points to be tested if they are in the intersection of all half-spaces
src/porepy/geometry/half_space.py:        ``out[i]`` is True if ``pts[:, i]`` is in all half-spaces.
src/porepy/geometry/half_space.py:        in_hull += np.sum((pts - x0[:, i, :]) * n[:, i, :], axis=0) <= 0
src/porepy/geometry/half_space.py:) -> np.ndarray:
src/porepy/geometry/half_space.py:            ``aj*(x1/x4)+bj*(x2/x4)+cj*(x3/x4)+dj<=(-x5/x4) j=1..num_planes``
src/porepy/geometry/half_space.py:             ``(-x5/x4)<0,``
src/porepy/geometry/half_space.py:            Point on the boundary of the half-spaces. Half space
src/porepy/geometry/half_space.py:            ``i`` is given by all points satisfying ``(x - x0[:, i]) * n[:, i] <= 0``.
src/porepy/geometry/half_space.py:    c = np.array([0, 0, 0, 0, -1])
src/porepy/geometry/half_space.py:    A_ub: np.ndarray = np.vstack((n, [np.sum(-n * x0, axis=0)], np.ones(dim))).T
src/porepy/geometry/half_space.py:        return half_space_interior_point(-n, x0, pts, False)
src/porepy/geometry/half_space.py:def vertexes_of_convex_domain(A: np.ndarray, b: np.ndarray) -> np.ndarray:
src/porepy/geometry/half_space.py:    b = b.reshape((-1, 1))
src/porepy/geometry/half_space.py:    fun = lambda x: np.linalg.norm(A.dot(x.reshape((-1, 1))) + b)
src/porepy/geometry/map_geometry.py:) -> np.ndarray[Any, np.dtype[np.float64]]:
src/porepy/geometry/map_geometry.py:    delta = pts - np.tile(pts[:, 0], (pts.shape[1], 1)).T
src/porepy/geometry/map_geometry.py:    dist = np.sqrt(np.einsum("ij,ij->j", delta, delta))
src/porepy/geometry/map_geometry.py:    return pts[:, 0, np.newaxis] * (1 - dist) + pts[:, end, np.newaxis] * dist
src/porepy/geometry/map_geometry.py:    tol: float = 1e-5,
src/porepy/geometry/map_geometry.py:) -> tuple[
src/porepy/geometry/map_geometry.py:        tol: ``default=1e-5``
src/porepy/geometry/map_geometry.py:        check = np.sum(np.abs(face_centers.T - face_centers[:, 0]), axis=0)
src/porepy/geometry/map_geometry.py:    pts: np.ndarray[Any, np.dtype[np.float64]], tol: float = 1e-5
src/porepy/geometry/map_geometry.py:) -> np.ndarray[Any, np.dtype[np.float64]]:
src/porepy/geometry/map_geometry.py:        tol: ``default=1e-5``
src/porepy/geometry/map_geometry.py:    p -= mean.reshape((nd, 1))
src/porepy/geometry/map_geometry.py:    dx = p.max(axis=1) - p.min(axis=1)
src/porepy/geometry/map_geometry.py:    assert active_dim.size == 1, "Points should be co-linear"
src/porepy/geometry/map_geometry.py:    p: np.ndarray[Any, np.dtype[np.float64]], tol: float = 1e-4
src/porepy/geometry/map_geometry.py:) -> tuple[
src/porepy/geometry/map_geometry.py:    The points should be co-linear such that a 1d description is meaningful.
src/porepy/geometry/map_geometry.py:            An array representation of coordinates of the points. Should be co-linear,
src/porepy/geometry/map_geometry.py:        tol: ``default=1e-4``
src/porepy/geometry/map_geometry.py:            Tolerance used for testing of co-linearity.
src/porepy/geometry/map_geometry.py:            One-dimensional coordinates of the points, sorted along the line.
src/porepy/geometry/map_geometry.py:    center = np.mean(p, axis=1).reshape((-1, 1))
src/porepy/geometry/map_geometry.py:    p = p - center
src/porepy/geometry/map_geometry.py:    tol: float = 1e-5,
src/porepy/geometry/map_geometry.py:) -> np.ndarray[Any, np.dtype[np.float64]]:
src/porepy/geometry/map_geometry.py:        tol: ``default=1e-5``
src/porepy/geometry/map_geometry.py:            normal[1] * reference[2] - normal[2] * reference[1],
src/porepy/geometry/map_geometry.py:            normal[2] * reference[0] - normal[0] * reference[2],
src/porepy/geometry/map_geometry.py:            normal[0] * reference[1] - normal[1] * reference[0],
src/porepy/geometry/map_geometry.py:) -> np.ndarray[Any, np.dtype[np.float64]]:
src/porepy/geometry/map_geometry.py:            tangent[1] * reference[2] - tangent[2] * reference[1],
src/porepy/geometry/map_geometry.py:            tangent[2] * reference[0] - tangent[0] * reference[2],
src/porepy/geometry/map_geometry.py:            tangent[0] * reference[1] - tangent[1] * reference[0],
src/porepy/geometry/map_geometry.py:) -> np.ndarray[Any, np.dtype[np.float64]]:
src/porepy/geometry/map_geometry.py:    # pylint: disable=bad-whitespace
src/porepy/geometry/map_geometry.py:        [[0.0, -vect[2], vect[1]], [vect[2], 0.0, -vect[0]], [-vect[1], vect[0], 0.0]]
src/porepy/geometry/map_geometry.py:        + (1.0 - np.cos(a)) * np.linalg.matrix_power(W, 2)
src/porepy/geometry/map_geometry.py:) -> np.ndarray[Any, np.dtype[np.float64]]:
src/porepy/geometry/map_geometry.py:    The algorithm assume that the points lie on a plane. Three non-aligned points are
src/porepy/geometry/map_geometry.py:) -> np.ndarray[Any, np.dtype[np.float64]]:
src/porepy/geometry/map_geometry.py:    The algorithm assume that the points lie on a plane. Three non-aligned points are
src/porepy/geometry/map_geometry.py:    return np.eye(3) - normal_matrix(pts, normal)
src/porepy/geometry/map_geometry.py:    pts: np.ndarray[Any, np.dtype[np.float64]], tol: float = 1e-5
src/porepy/geometry/map_geometry.py:) -> np.ndarray:
src/porepy/geometry/map_geometry.py:    plane. Three non-aligned points are needed. If the points are almost collinear, the
src/porepy/geometry/map_geometry.py:        tol (optional): ``default=1e-5``
src/porepy/geometry/map_geometry.py:    center = pts.mean(axis=1).reshape((-1, 1))
src/porepy/geometry/map_geometry.py:    v = pts - center
src/porepy/geometry/map_geometry.py:            v1[1] * v[2] - v1[2] * v[1],
src/porepy/geometry/map_geometry.py:            v1[2] * v[0] - v1[0] * v[2],
src/porepy/geometry/map_geometry.py:            v1[0] * v[1] - v1[1] * v[0],
src/porepy/geometry/map_geometry.py:    # tolerance makes no sense when comparing with a zero vector - see numpy.allclose
src/porepy/geometry/map_geometry.py:    # (the cross product a x b = |a||b|sin(theta) - to detect a small theta, we need to
src/porepy/geometry/map_geometry.py:) -> np.ndarray[Any, np.dtype[np.float64]]:
src/porepy/geometry/map_geometry.py:        >>> array([[-0.4472136 , -0.36514837],
src/porepy/geometry/map_geometry.py:        >>>        [-0.89442719,  0.18257419],
src/porepy/geometry/map_geometry.py:        >>>        [ 0.        , -0.91287093]])
src/porepy/geometry/map_geometry.py:    n = np.array([t[1], -t[0], 0]) / np.sqrt(t[0] ** 2 + t[1] ** 2)
src/porepy/geometry/map_geometry.py:) -> np.ndarray[Any, np.dtype[np.float64]]:
src/porepy/geometry/map_geometry.py:    mean_pts = np.mean(pts, axis=1).reshape((-1, 1))
src/porepy/geometry/map_geometry.py:    tangent = pts - mean_pts
src/porepy/geometry/__init__.py:    lower-dimensional spaces. The module also provides functions for computing normal
src/porepy/geometry/__init__.py:    if a point is contained in a (non-convex) polygon.
src/porepy/geometry/constrain_geometry.py:) -> tuple[np.ndarray, np.ndarray, np.ndarray]:
src/porepy/geometry/constrain_geometry.py:        A 3-tuple containing
src/porepy/geometry/constrain_geometry.py:            is cut by a non-convex domain.
src/porepy/geometry/constrain_geometry.py:    int_edges = np.arange(int_pts.shape[1]).reshape((2, -1), order="F")
src/porepy/geometry/constrain_geometry.py:    tol: float = 1e-8,
src/porepy/geometry/constrain_geometry.py:) -> tuple[list[np.ndarray], np.ndarray]:
src/porepy/geometry/constrain_geometry.py:    """Constrain polygons in 3d to lie inside a (generally non-convex) polyhedron.
src/porepy/geometry/constrain_geometry.py:    Polygons not inside the polyhedron will be removed from descriptions. For non-convex
src/porepy/geometry/constrain_geometry.py:        tol: ``default=1e-8``
src/porepy/geometry/constrain_geometry.py:        # First check if polyhedron is outside the bounding box - if so, we can move on.
src/porepy/geometry/constrain_geometry.py:        # Only consider segment-vertex information for the first polygon
src/porepy/geometry/constrain_geometry.py:        # for a non-convex polygon.
src/porepy/geometry/constrain_geometry.py:            # for in-polyhedron testing is more mature, we do some safeguarding:
src/porepy/geometry/constrain_geometry.py:        next_ind[-1] = 0
src/porepy/geometry/constrain_geometry.py:        prev_ind = np.arange(num_vert) - 1
src/porepy/geometry/constrain_geometry.py:        prev_ind[0] = num_vert - 1
src/porepy/geometry/constrain_geometry.py:        # segment_inside[0] tells whether the point[:, -1] - point[:, 0] is fully
src/porepy/geometry/constrain_geometry.py:        # inside the remaining elements are point[:, 0] - point[:, 1] etc.
src/porepy/geometry/constrain_geometry.py:        # the domain boundary due to a non-convex domain; these must be removed. What we
src/porepy/geometry/constrain_geometry.py:        # actual identification of the sub-segments (next for-loop) uses the identified
src/porepy/geometry/constrain_geometry.py:        # intersections (that is, no sub-segments from this original segment).
src/porepy/geometry/constrain_geometry.py:        # intersection points. Find out which of these sub-segments are inside and
src/porepy/geometry/constrain_geometry.py:            start = poly[:, seg_ind].reshape((-1, 1))
src/porepy/geometry/constrain_geometry.py:            end = poly[:, next_ind[seg_ind]].reshape((-1, 1))
src/porepy/geometry/constrain_geometry.py:            sorted_ind = np.argsort(np.sum((isect_coord - start) ** 2, axis=0))
src/porepy/geometry/constrain_geometry.py:            # Since the sub-segments are formed by intersection points, every second
src/porepy/geometry/constrain_geometry.py:            # Define the vertex pairs of the sub-segments, and add the relevant ones.
src/porepy/geometry/constrain_geometry.py:            pairs = np.vstack((index_along_segment[:-1], index_along_segment[1:]))
src/porepy/geometry/constrain_geometry.py:        # Clean up boundary-interior segments
src/porepy/geometry/constrain_geometry.py:                center = unique_coords.mean(axis=1).reshape((-1, 1))
src/porepy/geometry/constrain_geometry.py:                coords_centered = unique_coords - center
src/porepy/geometry/constrain_geometry.py:                inds = np.hstack((sorted_pairs[0], sorted_pairs[1, -1]))
src/porepy/geometry/constrain_geometry.py:                        ei = edge_ind - decrease  # effective index
src/porepy/geometry/constrain_geometry.py:                        if ei < sorted_pairs.shape[1] - 1:
src/porepy/geometry/constrain_geometry.py:) -> np.ndarray:
src/porepy/geometry/constrain_geometry.py:    Note that if two vertices of two edges are close, they may effectively be co-located
src/porepy/geometry/constrain_geometry.py:            p_start = pn[:, edges[0, ei]].reshape((-1, 1))
src/porepy/geometry/constrain_geometry.py:            p_end = pn[:, edges[1, ei]].reshape((-1, 1))
src/porepy/geometry/constrain_geometry.py:            p_start = p_edges[:, edges[0, ei]].reshape((-1, 1))
src/porepy/geometry/constrain_geometry.py:            p_end = p_edges[:, edges[1, ei]].reshape((-1, 1))
src/porepy/geometry/constrain_geometry.py:            pn[:, i] = cp[i, 0, :].reshape((-1, 1))
src/porepy/geometry/distances.py:def segment_set(start: np.ndarray, end: np.ndarray) -> tuple[np.ndarray, np.ndarray]:
src/porepy/geometry/distances.py:        start = start.reshape((-1, 1))
src/porepy/geometry/distances.py:        end = end.reshape((-1, 1))
src/porepy/geometry/distances.py:        cp[i, i, :] = start[:, i] + 0.5 * (end[:, i] - start[:, i])
src/porepy/geometry/distances.py:) -> tuple[np.ndarray, np.ndarray, np.ndarray]:
src/porepy/geometry/distances.py:    start = start.reshape((-1, 1))
src/porepy/geometry/distances.py:    end = end.reshape((-1, 1))
src/porepy/geometry/distances.py:        start_set = start_set.reshape((-1, 1))
src/porepy/geometry/distances.py:        end_set = end_set.reshape((-1, 1))
src/porepy/geometry/distances.py:    d1: np.ndarray = end - start
src/porepy/geometry/distances.py:    d2: np.ndarray = end_set - start_set
src/porepy/geometry/distances.py:    d_starts: np.ndarray = start - start_set
src/porepy/geometry/distances.py:    discr = dot_1_1 * dot_2_2 - dot_1_2**2
src/porepy/geometry/distances.py:    SMALL_TOLERANCE: float = 1e-8 * np.minimum(dot_1_1, np.min(dot_2_2))
src/porepy/geometry/distances.py:        - dot_2_2[not_parallel] * dot_1_starts[not_parallel]
src/porepy/geometry/distances.py:        - dot_1_2[not_parallel] * dot_1_starts[not_parallel]
src/porepy/geometry/distances.py:    dot_1_start_g_dot_1_1 = np.logical_and(t0_visible, -dot_1_starts > dot_1_1)
src/porepy/geometry/distances.py:    sN[other] = -dot_1_starts[other]
src/porepy/geometry/distances.py:    case_1 = np.logical_and(t1_visible, (-dot_1_starts + dot_1_2) < 0)
src/porepy/geometry/distances.py:    case_2 = np.logical_and(t1_visible, (-dot_1_starts + dot_1_2) > dot_1_1)
src/porepy/geometry/distances.py:    sN[case_3] = -dot_1_starts[case_3] + dot_1_2[case_3]
src/porepy/geometry/distances.py:    dist = d_starts + sc * d1 - tc * d2
src/porepy/geometry/distances.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/geometry/distances.py:        start = start.reshape((-1, 1))
src/porepy/geometry/distances.py:        end = end.reshape((-1, 1))
src/porepy/geometry/distances.py:        p = p.reshape((-1, 1))
src/porepy/geometry/distances.py:    # Number of points - the case of an empty array needs special handling.
src/porepy/geometry/distances.py:    line = end - start
src/porepy/geometry/distances.py:    # The implementation uses an outer for-loop, followed by an inner (almost)
src/porepy/geometry/distances.py:            v = p[:, pi].reshape((-1, 1)) - start
src/porepy/geometry/distances.py:            v = p - start[:, ei].reshape((-1, 1))
src/porepy/geometry/distances.py:            proj = np.sum(v * line[:, ei].reshape((-1, 1)), axis=0) / lengths[ei] ** 2
src/porepy/geometry/distances.py:            proj_p = start[:, ei].reshape((-1, 1)) + proj[between] * line[
src/porepy/geometry/distances.py:            ].reshape((-1, 1))
src/porepy/geometry/distances.py:) -> np.ndarray:
src/porepy/geometry/distances.py:        pt = p.reshape((-1, 1))
src/porepy/geometry/distances.py:        pset_copy = pset.reshape((-1, 1))
src/porepy/geometry/distances.py:        np.sum(np.power(np.abs(pt - pset_copy), exponent), axis=0), 1 / exponent
src/porepy/geometry/distances.py:def pointset(p: np.ndarray, max_diag: bool = False) -> np.ndarray:
src/porepy/geometry/distances.py:    if p.ndim == 1 or p.ndim == 2 and p.shape[-1] == 1:
src/porepy/geometry/distances.py:    p: np.ndarray, poly: np.ndarray, tol: float = 1e-5
src/porepy/geometry/distances.py:) -> tuple[np.ndarray, np.ndarray, np.ndarray]:
src/porepy/geometry/distances.py:        tol: ``default=1e-5``
src/porepy/geometry/distances.py:        p.reshape((-1, 1))
src/porepy/geometry/distances.py:    center = np.mean(poly, axis=1).reshape((-1, 1))
src/porepy/geometry/distances.py:    poly = poly - center
src/porepy/geometry/distances.py:    p = p - center
src/porepy/geometry/distances.py:    # Obtain the rotation matrix that projects p1 to the xy-plane
src/porepy/geometry/distances.py:    # simply the z-coordinate
src/porepy/geometry/distances.py:        cp_inpoly = cp_inpoly.reshape((-1, 1))
src/porepy/geometry/distances.py:    start: np.ndarray, end: np.ndarray, poly: np.ndarray, tol: float = 1e-5
src/porepy/geometry/distances.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/geometry/distances.py:        tol: ``default=1e-5``
src/porepy/geometry/distances.py:        start = start.reshape((-1, 1))
src/porepy/geometry/distances.py:        end = end.reshape((-1, 1))
src/porepy/geometry/distances.py:    center = np.mean(poly, axis=1).reshape((-1, 1))
src/porepy/geometry/distances.py:    poly = poly - center
src/porepy/geometry/distances.py:    start = start - center
src/porepy/geometry/distances.py:    end = end - center
src/porepy/geometry/distances.py:    # Obtain the rotation matrix that projects p1 to the xy-plane
src/porepy/geometry/distances.py:    dz = end[2] - start[2]
src/porepy/geometry/distances.py:    # Intersection point for segments with non-zero incline
src/porepy/geometry/distances.py:    t[non_zero_incline] = -start[2, non_zero_incline] / dz[non_zero_incline]
src/porepy/geometry/distances.py:    x0 = start + (end - start) * t
src/porepy/geometry/distances.py:    # For points with zero incline, the z-coordinate should be zero for the
src/porepy/geometry/distances.py:    # distance is then either 1) one endpoint of the segments (point-polygon), 2) found
src/porepy/geometry/distances.py:    # as a segment-segment minimum (segment and boundary of polygon), or 3) anywhere
src/porepy/geometry/distances.py:        poly_end = np.roll(poly, -1, axis=1)
src/porepy/geometry/distances.py:        cp[:, si] = cp_l.reshape((1, -1))
src/porepy/geometry/distances.py:    tol: float = 1e-5,
src/porepy/geometry/distances.py:) -> Union[bool, tuple[bool, np.ndarray]]:
src/porepy/geometry/distances.py:        tol: ``default=1e-5``
src/porepy/geometry/distances.py:    start_set = np.atleast_2d(start_set)[:2].reshape((2, -1))
src/porepy/geometry/distances.py:    end_set = np.atleast_2d(end_set)[:2].reshape((2, -1))
src/porepy/geometry/distances.py:    start = start.reshape(-1)[:2]
src/porepy/geometry/distances.py:    end = end.reshape(-1)[:2]
src/porepy/geometry/distances.py:    norm = np.linalg.norm(start - end)
src/porepy/geometry/distances.py:    # compute the 2d-cross product useful for the collinearity
src/porepy/geometry/distances.py:        cross[0, idx] = np.cross(j - i, end - start) / norm
src/porepy/geometry/distances.py:        cross[1, idx] = np.cross(start - i, j - i) / norm
src/porepy/geometry/distances.py:        # Note: We need the bool-conversion here since np.any returns np.bool_.
src/porepy/fracs/split_grid.py:    we locate the corresponding lower-dimensional grids. The faces and
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:    mdg    - A mixed-dimensional grid
src/porepy/fracs/split_grid.py:        offset    - FLOAT, defaults to 0. Will perturb the nodes around the
src/porepy/fracs/split_grid.py:    -------
src/porepy/fracs/split_grid.py:    mdg    - A valid mdg where the faces are split at
src/porepy/fracs/split_grid.py:    >>> f_1 = np.array([[-1, 1, 1, -1 ], [0, 0, 0, 0], [-1, -1, 1, 1]])
src/porepy/fracs/split_grid.py:    >>> f_2 = np.array([[0, 0, 0, 0], [-1, 1, 1, -1 ], [-.7, -.7, .8, .8]])
src/porepy/fracs/split_grid.py:    >>> domain = {'xmin': -2, 'xmax': 2,
src/porepy/fracs/split_grid.py:            'ymin': -2, 'ymax': 2, 'zmin': -2, 'zmax': 2}
src/porepy/fracs/split_grid.py:    # For each vertex in the mdg we find the corresponding lower-
src/porepy/fracs/split_grid.py:        # We split all the faces that are connected to a lower-dim grid.
src/porepy/fracs/split_grid.py:        # We now find which lower-dim nodes correspond to which higher-
src/porepy/fracs/split_grid.py:        # the connected higher-dim cells. At a X-intersection we split
src/porepy/fracs/split_grid.py:    map to the same lower-dim cell.
src/porepy/fracs/split_grid.py:            # if flag== 0 we added left and right faces (if it is -1, no faces
src/porepy/fracs/split_grid.py:            right = np.arange(gh.num_faces - face_id.size, gh.num_faces)
src/porepy/fracs/split_grid.py:    Split only the faces specified by faces (higher-dimensional), corresponding
src/porepy/fracs/split_grid.py:    to new cells (lower-dimensional). gl_ind identifies gl in
src/porepy/fracs/split_grid.py:        # Update the mapping between higher-dimensional faces and lower-dimensional
src/porepy/fracs/split_grid.py:            elif np.allclose(np.asarray(flag_array), -1):
src/porepy/fracs/split_grid.py:                flag = -1
src/porepy/fracs/split_grid.py:                # Not sure what to do here - probably a partial update of connectivity
src/porepy/fracs/split_grid.py:                raise ValueError("Split only some faces in non-planar ")
src/porepy/fracs/split_grid.py:            # if flag== 0 we added left and right faces (if it is -1 no faces
src/porepy/fracs/split_grid.py:            right = np.arange(sd_primary.num_faces - face_id.size, sd_primary.num_faces)
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:            Higher-dimension grid.
src/porepy/fracs/split_grid.py:            list gives the mapping from the lower-dim nodes
src/porepy/fracs/split_grid.py:            the higher-dim index of the first node of the
src/porepy/fracs/split_grid.py:            first lower-dim.
src/porepy/fracs/split_grid.py:    # We find the higher-dim node indices of all lower-dim nodes
src/porepy/fracs/split_grid.py:    # Each of these nodes are duplicated depending on the cell-
src/porepy/fracs/split_grid.py:    # topology of the higher-dim around each node. For an X-intersection
src/porepy/fracs/split_grid.py:    # we get four duplications, for a T-intersection we get three
src/porepy/fracs/split_grid.py:    sd_primary.num_nodes = sd_primary.num_nodes + node_count  # - nodes.size
src/porepy/fracs/split_grid.py:    Duplicate all faces that are connected to a lower-dim cell
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:            Higher-dim grid
src/porepy/fracs/split_grid.py:            Connection matrix mapping from the cells of a lower-dim
src/porepy/fracs/split_grid.py:            subdomain to the faces of the higher-dimensional subdomain.
src/porepy/fracs/split_grid.py:    # We find the indices of the higher-dim faces to be duplicated.
src/porepy/fracs/split_grid.py:def _duplicate_specific_faces(sd_primary: pp.Grid, frac_id: np.ndarray) -> np.ndarray:
src/porepy/fracs/split_grid.py:    # Expand the face-node relation to include duplicated nodes
src/porepy/fracs/split_grid.py:    # Do this by directly manipulating the CSC-format of the matrix
src/porepy/fracs/split_grid.py:    added_node_pos = np.cumsum(node_end - node_start) + sd_primary.face_nodes.indptr[-1]
src/porepy/fracs/split_grid.py:    assert added_node_pos[-1] - sd_primary.face_nodes.indptr[-1] == nodes.size
src/porepy/fracs/split_grid.py:    # Expand row-data by adding node indices
src/porepy/fracs/split_grid.py:    assert sd_primary.face_nodes.indices.size == sd_primary.face_nodes.indptr[-1]
src/porepy/fracs/split_grid.py:) -> list[sps.spmatrix]:
src/porepy/fracs/split_grid.py:    Add duplicate faces to connection map between lower-dim grids
src/porepy/fracs/split_grid.py:    cell_id refers to new lower-dimensional cells, e.g. after fracture
src/porepy/fracs/split_grid.py:        face_cells: List of face-cell relation between a higher-dimensional grid
src/porepy/fracs/split_grid.py:            and all its lower-dimensional neighbors.
src/porepy/fracs/split_grid.py:        face_id: Faces to be duplicated in the face-cell relation.
src/porepy/fracs/split_grid.py:        i: Index of the lower-dimensional grid to be treated now
src/porepy/fracs/split_grid.py:        cell_id: List of lower-dimensional cells added in fracture propagation.
src/porepy/fracs/split_grid.py:    # We duplicated the faces associated with lower-dim grid i.
src/porepy/fracs/split_grid.py:    # For the other lower-dim grids we just add zeros to conserve
src/porepy/fracs/split_grid.py:    # Loop over all lower-dimensional neighbors
src/porepy/fracs/split_grid.py:            # The new face-cell relations are added to the end of the matrix
src/porepy/fracs/split_grid.py:            # the higher-dimensional grid).
src/porepy/fracs/split_grid.py:            # Columns (face-indices in the higher dimensional grid) must be
src/porepy/fracs/split_grid.py:            new_indptr = f_c_sliced.indptr + f_c.indptr[-1]
src/porepy/fracs/split_grid.py:            # Expand face-cell relation
src/porepy/fracs/split_grid.py:            # In cases where cells have been added to the lower-dimensional grid
src/porepy/fracs/split_grid.py:            # the standard workflow of post-processing a gmsh grid.
src/porepy/fracs/split_grid.py:                # cell array in the lower-dimensional grid
src/porepy/fracs/split_grid.py:                local_cell_id = cell_id - f_c.shape[0]
src/porepy/fracs/split_grid.py:                new_face_id = np.arange(f_c.shape[1] - face_id.size, f_c.shape[1])
src/porepy/fracs/split_grid.py:            # This is not the target lower-dimensional grid. Add columns to f_c to
src/porepy/fracs/split_grid.py:            new_indptr = f_c.indptr[-1] * np.ones(face_id.size, dtype=f_c.indptr.dtype)
src/porepy/fracs/split_grid.py:) -> int:
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:    g         - The grid for which the cell_face mapping is updated
src/porepy/fracs/split_grid.py:    frac_id   - Indices of the faces that have been duplicated
src/porepy/fracs/split_grid.py:    normal    - Normal of faces that have been duplicated. Note that we assume
src/porepy/fracs/split_grid.py:    x0        - A point in the plane where the faces lie
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:        split. -1 means the fracture was on the boundary, and no action taken.
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:        return -1
src/porepy/fracs/split_grid.py:    # And then we add the new left-faces to the cell_face map. We do not
src/porepy/fracs/split_grid.py:    -----------
src/porepy/fracs/split_grid.py:    g              - A grid
src/porepy/fracs/split_grid.py:    face_id        - Indices of faces to remove
src/porepy/fracs/split_grid.py:    rem_cell_faces - Defaults to True. If set to false, the g.cell_faces matrix
src/porepy/fracs/split_grid.py:    g.num_faces -= face_id.size
src/porepy/fracs/split_grid.py:    will be added. If the node is on a T-intersection 3 duplicates will be
src/porepy/fracs/split_grid.py:    added. If the node is on a X-intersection 4 duplicates will be added.
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:    g         - The grid for which the nodes are duplicated
src/porepy/fracs/split_grid.py:    nodes     - The nodes to be duplicated
src/porepy/fracs/split_grid.py:    offset    - How far from the original node the duplications should be
src/porepy/fracs/split_grid.py:    # In the case of a non-zero offset (presumably intended for visualization), use a
src/porepy/fracs/split_grid.py:    # Nodes must be duplicated in the array of node coordinates. Moreover, the face-node
src/porepy/fracs/split_grid.py:    # spit node. The modification of node numbering further means that the face-node relation
src/porepy/fracs/split_grid.py:    # 3. Modify the face-node relation by splitting nodes. Also update node numbering in
src/porepy/fracs/split_grid.py:    # Separate variable for the rows - these will be used to map back from the cluster
src/porepy/fracs/split_grid.py:    # All non-zero data signifies connections; simplify the representation
src/porepy/fracs/split_grid.py:    # All non-zero elements in c2c.
src/porepy/fracs/split_grid.py:        if bi == num_nodes_to_duplicate - 1:
src/porepy/fracs/split_grid.py:    # Make a new, block-diagonal connection matrix.
src/porepy/fracs/split_grid.py:    # with a non-coo matrix.
src/porepy/fracs/split_grid.py:        ind = search_start + np.argmax(block_start[search_start:] > comp[0]) - 1
src/porepy/fracs/split_grid.py:    # Modify the face-node relation by adjusting the node indices (field indices in the
src/porepy/fracs/split_grid.py:    # Copy node-indices in the face-node relation. The first copy will preserve the old
src/porepy/fracs/split_grid.py:    added = repetitions - 1
src/porepy/fracs/split_grid.py:    # Adjust the shape of face-nodes to account for the added nodes
src/porepy/fracs/split_grid.py:def _duplicate_nodes_with_offset(g: pp.Grid, nodes: np.ndarray, offset: float) -> int:
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:    g         - The grid for which the nodes are duplicated
src/porepy/fracs/split_grid.py:    nodes     - The nodes to be duplicated
src/porepy/fracs/split_grid.py:    offset    - How far from the original node the duplications should be
src/porepy/fracs/split_grid.py:        # First get hold of all cells from the cell-node map
src/porepy/fracs/split_grid.py:        # at a X-intersection will be given four different colors
src/porepy/fracs/split_grid.py:            face_pos = np.append(face_pos, face_pos[-1] + np.sum(is_colored))
src/porepy/fracs/split_grid.py:                new_nodes[:, j] -= _avg_normal(g, faces_of_node_t[is_colored]) * offset
src/porepy/fracs/split_grid.py:        g.face_nodes.indices[face_pos[0] : face_pos[-1]] = faces
src/porepy/fracs/split_grid.py:        node_count += colors.size - 1
src/porepy/fracs/split_grid.py:        g.face_nodes.indptr = np.insert(g.face_nodes.indptr, t_node + 1, face_pos[1:-1])
src/porepy/fracs/split_grid.py:            g.face_nodes.shape[0] + colors.size - 1,
src/porepy/fracs/split_grid.py:    for i in range(indptr.size - 1):
src/porepy/fracs/split_grid.py:           c_1-c_3     c_4
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:    g        - Grid for which the cells belong
src/porepy/fracs/split_grid.py:    cells    - indices of cells (=np.array([1,2,3,4,5,7]) for case above)
src/porepy/fracs/split_grid.py:    # Local cell-face and face-node maps.
src/porepy/fracs/split_grid.py:    child_cell_ind = -np.ones(g.num_cells, dtype=int)
src/porepy/fracs/split_grid.py:    # Create a copy of the cell-face relation, so that we can modify it at
src/porepy/fracs/split_grid.py:    # Find connection between cells via the cell-face map
src/porepy/fracs/split_grid.py:    ----------
src/porepy/fracs/split_grid.py:    g         - Grid
src/porepy/fracs/split_grid.py:    faces     - Face indices of face normals that should be averaged
src/porepy/fracs/split_grid.py:    g - a valid grid definition
src/porepy/fracs/split_grid.py:    rem - a ndarray of indices of nodes to be removed
src/porepy/fracs/fracture_network.py:    tol: float = 1e-8,
src/porepy/fracs/fracture_network.py:) -> FractureNetwork:
src/porepy/fracs/fracture_network.py:        - ValueError: If ``domain = None`` and ``fractures = None`` (or an empty list).
src/porepy/fracs/fracture_network.py:        - ValueError: If the dimensions from ``domain`` and ``fractures`` do not match.
src/porepy/fracs/fracture_network.py:        - TypeError: If not all items of ``fractures`` are of the same type.
src/porepy/fracs/fracture_network.py:        - Warning: If ``run_checks = True`` when dimension is different from 3.
src/porepy/fracs/fracture_network.py:        tol: Geometric tolerance used in the computations. Default is ``1e-8``.
src/porepy/fracs/fracture_network.py:            considered a limited debug mode. Only used for three-dimensional fracture
src/porepy/fracs/fracture_network.py:    # Check that all items are of the same type if the fracture list is non-empty.
src/porepy/fracs/fracture_network.py:            fractures=fracs, domain=domain, tol=tol  # type: ignore[arg-type]
src/porepy/fracs/fracture_network.py:            fractures=fracs,  # type: ignore[arg-type]
src/porepy/fracs/fracture_network_3d.py:# Module-wide logger
src/porepy/fracs/fracture_network_3d.py:    """Representation of a set of plane fractures in a three-dimensional domain.
src/porepy/fracs/fracture_network_3d.py:            to 1e-8.
src/porepy/fracs/fracture_network_3d.py:        tol: float = 1e-8,
src/porepy/fracs/fracture_network_3d.py:    ) -> None:
src/porepy/fracs/fracture_network_3d.py:        # Note that a Y-type intersection between three fractures is represented
src/porepy/fracs/fracture_network_3d.py:        pre-processing before meshing. Added by :meth:`~split_intersections()`.
src/porepy/fracs/fracture_network_3d.py:    def num_frac(self) -> int:
src/porepy/fracs/fracture_network_3d.py:    ) -> pp.MixedDimensionalGrid:
src/porepy/fracs/fracture_network_3d.py:        """Mesh the fracture network, and generate a mixed-dimensional grid.
src/porepy/fracs/fracture_network_3d.py:                ``mesh_size_bound``, which gives the far-field (boundary) mesh size.
src/porepy/fracs/fracture_network_3d.py:            MixedDimensionalGrid: Mixed-dimensional mesh.
src/porepy/fracs/fracture_network_3d.py:            for id_g, g in enumerate(subdomains[1 - int(dfn)]):
src/porepy/fracs/fracture_network_3d.py:        # Merge the grids into a mixed-dimensional MixedDimensionalGrid
src/porepy/fracs/fracture_network_3d.py:    def prepare_for_gmsh(self, mesh_args, dfn=False, constraints=None) -> GmshData3d:
src/porepy/fracs/fracture_network_3d.py:                'mesh_size_bound', which gives the far-field (boundary) mesh
src/porepy/fracs/fracture_network_3d.py:        # Process intersections to get a description of the geometry in non-
src/porepy/fracs/fracture_network_3d.py:        # All intersection lines and points on boundaries are non-physical in 3d.
src/porepy/fracs/fracture_network_3d.py:            in_frac_occurrences - in_frac_occurrences_by_constraints
src/porepy/fracs/fracture_network_3d.py:        # .. However, the line may also be caused by a T- or L-intersection
src/porepy/fracs/fracture_network_3d.py:        # have a 0-d grid assigned to it.
src/porepy/fracs/fracture_network_3d.py:        # boundary line - these will be added to the fracture and boundary points below.
src/porepy/fracs/fracture_network_3d.py:        # of a few cases: A fracture-constraint intersection on a boundary, and/or a
src/porepy/fracs/fracture_network_3d.py:            if is_frac.sum() > 0 and (is_frac_or_boundary.sum() - is_frac.sum()) > 0:
src/porepy/fracs/fracture_network_3d.py:        # boundary-tip combinations.
src/porepy/fracs/fracture_network_3d.py:    ) -> tuple[list[int], list[bool]]:
src/porepy/fracs/fracture_network_3d.py:        Handling of the intersections (splitting into non-intersecting
src/porepy/fracs/fracture_network_3d.py:        # We do not include point contacts here - that should be feasible, but the
src/porepy/fracs/fracture_network_3d.py:            # two intersection points for each segment - thus the indices in i0 and i1
src/porepy/fracs/fracture_network_3d.py:            time.time() - start_time,
src/porepy/fracs/fracture_network_3d.py:        the fractures into non-intersecting sub-polygons. These can
src/porepy/fracs/fracture_network_3d.py:                    raise ValueError("Non-unique fracture edge relation")
src/porepy/fracs/fracture_network_3d.py:            "Finished fracture splitting after %.5f seconds", time.time() - start_time
src/porepy/fracs/fracture_network_3d.py:        # Not sure what to do with a T-type intersection here
src/porepy/fracs/fracture_network_3d.py:            "Points and edges done. Elapsed time %.5f", time.time() - start_time
src/porepy/fracs/fracture_network_3d.py:        # will form either an L/Y-type intersection (shared boundary segment),
src/porepy/fracs/fracture_network_3d.py:        for ri in point_edges[::-1]:
src/porepy/fracs/fracture_network_3d.py:            time.time() - start_time,
src/porepy/fracs/fracture_network_3d.py:            non-intersecting.
src/porepy/fracs/fracture_network_3d.py:            # Append fields for edge-fracture map and boundary tags
src/porepy/fracs/fracture_network_3d.py:                    edges_new_glob[:, ei].reshape((-1, 1)), edges[:2, edges_loc_ind]
src/porepy/fracs/fracture_network_3d.py:                    # during splitting. Information on edge-to-fracs, and on whether this
src/porepy/fracs/fracture_network_3d.py:            for ei in edges_loc_ind[::-1]:
src/porepy/fracs/fracture_network_3d.py:            time.time() - start_time,
src/porepy/fracs/fracture_network_3d.py:        Convenience method for rotating a point cloud into its own 2d-plane.
src/porepy/fracs/fracture_network_3d.py:        p_loc_c = np.mean(p_loc, axis=1).reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:        p_loc -= p_loc_c
src/porepy/fracs/fracture_network_3d.py:        extent = p_2d.max(axis=1) - p_2d.min(axis=1)
src/porepy/fracs/fracture_network_3d.py:    def __repr__(self) -> str:
src/porepy/fracs/fracture_network_3d.py:            f"Three-dimensional fracture network with "
src/porepy/fracs/fracture_network_3d.py:        max_coord = -np.ones(3) * float("inf")
src/porepy/fracs/fracture_network_3d.py:        area_threshold: float = 1e-4,
src/porepy/fracs/fracture_network_3d.py:    ) -> np.ndarray:
src/porepy/fracs/fracture_network_3d.py:        ----------
src/porepy/fracs/fracture_network_3d.py:            Defaults to 1e-4
src/porepy/fracs/fracture_network_3d.py:            are needed in the context of potentially non-convex fractures. The values
src/porepy/fracs/fracture_network_3d.py:        -------
src/porepy/fracs/fracture_network_3d.py:        ------
src/porepy/fracs/fracture_network_3d.py:            # Cannot automatically calculate external boundary for non-fractured grids.
src/porepy/fracs/fracture_network_3d.py:                "A domain must be supplied to constrain non-fractured media."
src/porepy/fracs/fracture_network_3d.py:            cmax = -np.ones((3, 1)) * float("inf")
src/porepy/fracs/fracture_network_3d.py:                cmin = np.min(np.hstack((cmin, f.pts)), axis=1).reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:                cmax = np.max(np.hstack((cmax, f.pts)), axis=1).reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:            dx = overlap * (cmax - cmin)
src/porepy/fracs/fracture_network_3d.py:                "xmin": cmin[0] - dx[0],
src/porepy/fracs/fracture_network_3d.py:                "ymin": cmin[1] - dx[1],
src/porepy/fracs/fracture_network_3d.py:                "zmin": cmin[2] - dx[2],
src/porepy/fracs/fracture_network_3d.py:                # The fractures may very well be non-convex at this point, so
src/porepy/fracs/fracture_network_3d.py:                # Splitting of non-convex fractures into convex subparts is
src/porepy/fracs/fracture_network_3d.py:        # 2) The constrained polygon in non-convex, and must be split into smaller parts
src/porepy/fracs/fracture_network_3d.py:                f.pts, tol=1e-12, check_planar=False
src/porepy/fracs/fracture_network_3d.py:            mapped_coord = rot.dot(f.pts - center_coord)
src/porepy/fracs/fracture_network_3d.py:            mapped_orig = rot.dot(f.orig_pts - center_coord)
src/porepy/fracs/fracture_network_3d.py:            # Next, look for non-convex fracture.
src/porepy/fracs/fracture_network_3d.py:            # Non-convex polygons are identified by comparing two triangulations,
src/porepy/fracs/fracture_network_3d.py:            p_rolled = np.roll(p, -1, axis=1)
src/porepy/fracs/fracture_network_3d.py:                #    (thus other segments). This can happen for a non-convex quad.
src/porepy/fracs/fracture_network_3d.py:                    # We cannot use this triangle - move on:
src/porepy/fracs/fracture_network_3d.py:                if len(removed) == num_p - 2:
src/porepy/fracs/fracture_network_3d.py:                g_constrained.cell_volumes.sum(), g_full.cell_volumes.sum(), rtol=1e-5
src/porepy/fracs/fracture_network_3d.py:            # the Hertel-Mehlhorn algorithm to construct larger convex polygons
src/porepy/fracs/fracture_network_3d.py:            triangles = g_constrained.cell_nodes().indices.reshape((-1, 3))
src/porepy/fracs/fracture_network_3d.py:                indptr_list.append(indptr_list[-1] + num_other)
src/porepy/fracs/fracture_network_3d.py:                vecs = p[:, inds] - p[:, vi].reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:            other_vertex_shifted = np.roll(other_vertex, -1)
src/porepy/fracs/fracture_network_3d.py:            other_vertex_shifted[indptr[1:] - 1] = other_vertex[indptr[:-1]]
src/porepy/fracs/fracture_network_3d.py:            vec_1 = p[:2, edge_pairs[1]] - p[:2, edge_pairs[0]]
src/porepy/fracs/fracture_network_3d.py:            vec_2 = p[:2, edge_pairs[2]] - p[:2, edge_pairs[0]]
src/porepy/fracs/fracture_network_3d.py:        for i in np.unique(delete_frac)[::-1]:
src/porepy/fracs/fracture_network_3d.py:        of co-dimension 3)
src/porepy/fracs/fracture_network_3d.py:        # A 1-d grid will be inserted where there is more than one fracture
src/porepy/fracs/fracture_network_3d.py:        # Remove boundary  that are referred to by more than fracture - this takes
src/porepy/fracs/fracture_network_3d.py:        # care of L-type intersections
src/porepy/fracs/fracture_network_3d.py:        # Index of lines that should have a 1-d grid. This are all of the first
src/porepy/fracs/fracture_network_3d.py:        # num-constraints, minus those on the boundary.
src/porepy/fracs/fracture_network_3d.py:                p[::-1], edges[:2], sort=False
src/porepy/fracs/fracture_network_3d.py:        # For non-intersecting fractures, auxiliary points may be added on the fracture
src/porepy/fracs/fracture_network_3d.py:                a = a.reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:            b = b.reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:            return np.sqrt(np.sum(np.power(b - a, 2), axis=0))
src/porepy/fracs/fracture_network_3d.py:            # Keep track of which other fractures are intersecting - will be
src/porepy/fracs/fracture_network_3d.py:                    isect_coord, f.pts, np.roll(f.pts, -1, axis=1)
src/porepy/fracs/fracture_network_3d.py:        # Precompute rolling of fracture points - this saves a bit of time.
src/porepy/fracs/fracture_network_3d.py:            f.index: np.roll(f.pts, -1, axis=1) for f in self.fractures
src/porepy/fracs/fracture_network_3d.py:            # vectorized segment-segment distance computation.
src/porepy/fracs/fracture_network_3d.py:                seg_start = f.pts[:, start_index].reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:                seg_end = f.pts[:, (start_index + 1) % f.pts.shape[1]].reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:                        pt = unique_candidates[:, point_counter].reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:                    # the new sub-segments a line along the main segment. Then insert.
src/porepy/fracs/fracture_network_3d.py:                    rolled_fracture_points[f.index] = np.roll(f.pts, -1, axis=-1)
src/porepy/fracs/fracture_network_3d.py:                            sorted_new[:, pi].reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:    def _split_intersections_of_fracture(self, cp: np.ndarray) -> None:
src/porepy/fracs/fracture_network_3d.py:        # fracture is involved, or else Y-type intersections may not be treated
src/porepy/fracs/fracture_network_3d.py:            cp = cp.reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:        # replace intersections that are cut in two pieces, both with non-zero length.
src/porepy/fracs/fracture_network_3d.py:            start = start.reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:            end = end.reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:                self.intersections[key], to_replace, axis=-1
src/porepy/fracs/fracture_network_3d.py:    ) -> None:
src/porepy/fracs/fracture_network_3d.py:            start = start.reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:            end = end.reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:    ) -> None:
src/porepy/fracs/fracture_network_3d.py:        Fracture numbers are always exported (1-offset). In addition, it is
src/porepy/fracs/fracture_network_3d.py:        keyword-argument data.
src/porepy/fracs/fracture_network_3d.py:            # In newer versions of meshio, make a list of 2-tuples with
src/porepy/fracs/fracture_network_3d.py:        - if domain is given the first line describes the domain as a rectangle
src/porepy/fracs/fracture_network_3d.py:        - the other lines describe the N fractures as a list of points
src/porepy/fracs/fracture_network_3d.py:        The filter is based on the .fab-files needed at the time of writing, and
src/porepy/fracs/fracture_network_3d.py:                f.write("\t0 -1 -1 -1\n")
src/porepy/fracs/fracture_network_3d.py:        cp = frac.center.reshape((-1, 1))
src/porepy/fracs/fracture_network_3d.py:            return rot.dot(pts - cp)
src/porepy/fracs/gmsh_interface.py:    """Numerical tags used to identify special objects in a mixed-dimensional
src/porepy/fracs/gmsh_interface.py:    geometry. These may be mapped to the string-based tag system used in Gmsh
src/porepy/fracs/gmsh_interface.py:    # A neutral tag - objects with this tag will not be accounted for in any praticular
src/porepy/fracs/gmsh_interface.py:    # A fracture tip - can be point or line
src/porepy/fracs/gmsh_interface.py:    """String-based tags used to assign physical names (Gmsh jargon) to classes
src/porepy/fracs/gmsh_interface.py:    of objects in a mixed-dimensional geometry.
src/porepy/fracs/gmsh_interface.py:    # Note that neutral tags have no physical names - they should not receive special treatment
src/porepy/fracs/gmsh_interface.py:    # This may change if we implement DD - but then we need to revisit these concepts to
src/porepy/fracs/gmsh_interface.py:    # A fracture tip - can be point or line
src/porepy/fracs/gmsh_interface.py:def _tag_to_physical_name(tag: Union[int, Tags]) -> str:
src/porepy/fracs/gmsh_interface.py:    def __init__(self, data: Union[GmshData2d, GmshData3d]) -> None:
src/porepy/fracs/gmsh_interface.py:    def set_gmsh_options(self, options: Optional[dict] = None) -> None:
src/porepy/fracs/gmsh_interface.py:    def define_geometry(self) -> None:
src/porepy/fracs/gmsh_interface.py:        # co-dimension 1 objects (fractures) so that the latter can be
src/porepy/fracs/gmsh_interface.py:            # NOTE: If we ever get around to do a 1d-3d model (say a well), this may
src/porepy/fracs/gmsh_interface.py:        ndim: int = -1,
src/porepy/fracs/gmsh_interface.py:    ) -> None:
src/porepy/fracs/gmsh_interface.py:        if ndim == -1:
src/porepy/fracs/gmsh_interface.py:        if file_name[-4:] != ".msh":
src/porepy/fracs/gmsh_interface.py:            fn = file_name[:-4] + ".geo_unrolled"
src/porepy/fracs/gmsh_interface.py:    def _add_points(self) -> list[int]:
src/porepy/fracs/gmsh_interface.py:                ps = gmsh.model.addPhysicalGroup(0, [point_tags[-1]])
src/porepy/fracs/gmsh_interface.py:    def _add_fractures_2d(self) -> None:
src/porepy/fracs/gmsh_interface.py:    def _add_fractures_3d(self) -> None:
src/porepy/fracs/gmsh_interface.py:    def _add_polygons_3d(self, inds: list, embed_in_domain: bool) -> list[int]:
src/porepy/fracs/gmsh_interface.py:                to_phys_tags.append((pi, physical_name + str(pi), [surf_tag[-1]]))
src/porepy/fracs/gmsh_interface.py:    def _add_lines(self, ind: np.ndarray, embed_in_domain: bool) -> list[int]:
src/porepy/fracs/gmsh_interface.py:            # We do not assign physical groupings inside this for-loop, as this would
src/porepy/fracs/gmsh_interface.py:    def _add_domain_2d(self) -> int:
src/porepy/fracs/gmsh_interface.py:    def _add_domain_3d(self) -> int:
src/porepy/fracs/line_fracture.py:    def sort_points(self) -> np.ndarray:
src/porepy/fracs/line_fracture.py:        For fractures defined by a two-vertex line segment, sorting is trivial.
src/porepy/fracs/line_fracture.py:        -------
src/porepy/fracs/line_fracture.py:    def local_coordinates(self) -> np.ndarray:
src/porepy/fracs/line_fracture.py:        -------
src/porepy/fracs/line_fracture.py:    def compute_centroid(self) -> np.ndarray:
src/porepy/fracs/line_fracture.py:    def compute_normal(self) -> np.ndarray:
src/porepy/fracs/line_fracture.py:        -------
src/porepy/fracs/line_fracture.py:        normal = np.array([diff[0], -diff[1]])
src/porepy/fracs/non_conforming.py:# -*- coding: utf-8 -*-
src/porepy/fracs/non_conforming.py:def merge_grids(grids, intersections, tol=1e-4):
src/porepy/fracs/non_conforming.py:def merge_1d_grids(g, h, global_ind_offset=0, tol=1e-4):
src/porepy/fracs/non_conforming.py:    """Merge two 1d grids with non-matching nodes to a single grid.
src/porepy/fracs/non_conforming.py:    The function is primarily intended for merging non-conforming DFN grids.
src/porepy/fracs/non_conforming.py:        tol (double, defaults to 1e-4): Tolerance for when two nodes are merged
src/porepy/fracs/non_conforming.py:    dx = max_coord - min_coord
src/porepy/fracs/non_conforming.py:            coinciding, but non-matching grids along a fracture.
src/porepy/fracs/non_conforming.py:    # Face-node relation for the grid, in terms of local and global indices
src/porepy/fracs/non_conforming.py:    new_nodes = num_nodes_orig - delete_nodes.size + np.arange(new_grid_1d.num_nodes)
src/porepy/fracs/non_conforming.py:    # Adjust node indices in the face-node relation
src/porepy/fracs/non_conforming.py:    node_adjustment = tmp - np.cumsum(adjustment)
src/porepy/fracs/non_conforming.py:        g.num_nodes - num_delete_nodes + this_in_combined[node_map_1d_2d]
src/porepy/fracs/non_conforming.py:    """Update face-node map by deleting and inserting new faces.
src/porepy/fracs/non_conforming.py:    nothing to adjust the face-node relation for remaining faces.
src/porepy/fracs/non_conforming.py:    ind_new_face = g.num_faces - delete_faces.size + np.arange(num_new_faces)
src/porepy/fracs/non_conforming.py:    # Modify face-node map
src/porepy/fracs/non_conforming.py:    # First obtain face-node relation as a matrix. Thankfully, we know the
src/porepy/fracs/non_conforming.py:    # Add new face-nodes
src/porepy/fracs/non_conforming.py:    g, delete_faces, new_faces, in_combined, fn_orig, node_coord_orig, tol=1e-4
src/porepy/fracs/non_conforming.py:    """Replace faces in a cell-face map.
src/porepy/fracs/non_conforming.py:    update the cell-face relation as well. This function does so, while taking
src/porepy/fracs/non_conforming.py:    The changes of g.cell_faces are done in-place.
src/porepy/fracs/non_conforming.py:    1. (0, 0) - (1, 0)
src/porepy/fracs/non_conforming.py:    2. (1, 0) - (2, 0)
src/porepy/fracs/non_conforming.py:    3. (2, 0) - (3, 0)
src/porepy/fracs/non_conforming.py:        fn_orig (np.ndarray): Face-node relation of the orginial grid, before
src/porepy/fracs/non_conforming.py:        tol (double, defaults to 1e-4): Small tolerance, used to compare
src/porepy/fracs/non_conforming.py:    deleted_2_new_faces = np.empty(in_combined.size - 1, dtype=object)
src/porepy/fracs/non_conforming.py:    # reverse the order of in_combined to reconstruct the old face-node
src/porepy/fracs/non_conforming.py:    if in_combined[0] < in_combined[-1]:
src/porepy/fracs/non_conforming.py:    # The cell-face relations
src/porepy/fracs/non_conforming.py:    # Find elements in the cell-face relation that are also along the
src/porepy/fracs/non_conforming.py:    # Safeguarding (or stupidity?): Only faces along 1d grid have non-negative
src/porepy/fracs/non_conforming.py:    cf_2_f = -np.ones(delete_faces.max() + 1, dtype=int)
src/porepy/fracs/non_conforming.py:    # The cell-face map will go from 3 faces per cell to an arbitrary number.
src/porepy/fracs/non_conforming.py:    face_adjustment = tmp - np.cumsum(adjust_deleted)
src/porepy/fracs/non_conforming.py:    # Face-node relations as array
src/porepy/fracs/non_conforming.py:        # The loop variable refers to indices in the face-cell map. Get cell
src/porepy/fracs/non_conforming.py:        # For this cell, find where in the cell-face map the fracture face is
src/porepy/fracs/non_conforming.py:        # Digestion of loop: i (in hit) refers to elements in cell-face
src/porepy/fracs/non_conforming.py:        # outermost is one-to-many map from deleted to new faces.
src/porepy/fracs/non_conforming.py:        # We need to sort the new face-cell relation so that the edges defined
src/porepy/fracs/non_conforming.py:        # by cell-face-> face_nodes form a closed, non-intersecting loop. If
src/porepy/fracs/non_conforming.py:            new_faces_loc = new_faces_loc[::-1]
src/porepy/fracs/non_conforming.py:        # Replace the cell-face relation for this cell.
src/porepy/fracs/non_conforming.py:    # New pointer structure for cell-face relations
src/porepy/fracs/non_conforming.py:    # All faces in the cell-face relation should be referred to by 1 or 2 cells
src/porepy/fracs/simplex.py:    This function produces a set of grids for fractures and lower-dimensional
src/porepy/fracs/simplex.py:        list (length 3): For each dimension (2 -> 0), a list of all grids in
src/porepy/fracs/simplex.py:    if file_name[-4:] == ".geo" or file_name[-4:] == ".msh":
src/porepy/fracs/simplex.py:        file_name = file_name[:-4]
src/porepy/fracs/simplex.py:                + "-d grids with "
src/porepy/fracs/simplex.py:            constraints in the meshing, but should not have a lower-dimensional
src/porepy/fracs/simplex.py:        file_name = file_name[:-4]
src/porepy/fracs/simplex.py:        "Grid creation completed. Elapsed time " + str(time.time() - start_time)
src/porepy/fracs/simplex.py:                + "-d grids with "
src/porepy/fracs/simplex.py:            constraints in the meshing, but should not have a lower-dimensional
src/porepy/fracs/simplex.py:        file_name = file_name[:-4]
src/porepy/fracs/simplex.py:        "Grid creation completed. Elapsed time " + str(time.time() - start_time)
src/porepy/fracs/simplex.py:                + "-d grids with "
src/porepy/fracs/simplex.py:        file_name = file_name[:-4]
src/porepy/fracs/simplex.py:            "Grid creation completed. Elapsed time " + str(time.time() - start_time)
src/porepy/fracs/simplex.py:                    + "-d grids with "
src/porepy/fracs/simplex.py:) -> Tuple[np.ndarray, Dict[str, np.ndarray], Dict[str, np.ndarray], Dict[int, str]]:
src/porepy/fracs/simplex.py:    # The API of meshio is constantly changing; this if-else is needed to take care
src/porepy/fracs/fracture.py:    numpy-array, where `nd` is the assumed ambient dimension. The order/sorting of
src/porepy/fracs/fracture.py:    Dimension-dependent routines are implemented as abstract methods.
src/porepy/fracs/fracture.py:    PorePy currently only supports planar and convex fractures fully. As a work-around,
src/porepy/fracs/fracture.py:            Array containing the start- and end point/the corner
src/porepy/fracs/fracture.py:            All the tags of the fracture. A tag value of ``-1`` equals to the tag not
src/porepy/fracs/fracture.py:            self.tags: np.ndarray = np.full((0,), -1, dtype=np.int8)
src/porepy/fracs/fracture.py:        A tag value of -1 means that the fracture does not have the specified tag. This
src/porepy/fracs/fracture.py:        first one. In a more extreme case, ``fracture.tags==[-1, -1, -1, -1, -1]`` is
src/porepy/fracs/fracture.py:    def __repr__(self) -> str:
src/porepy/fracs/fracture.py:        """Representation is same as str-representation."""
src/porepy/fracs/fracture.py:    def __str__(self) -> str:
src/porepy/fracs/fracture.py:        """The str-representation displays the number of points, normal and centroid."""
src/porepy/fracs/fracture.py:    def __eq__(self, other: object) -> bool:
src/porepy/fracs/fracture.py:    def points(self) -> Generator[np.ndarray, None, None]:
src/porepy/fracs/fracture.py:            yield self.pts[:, i].reshape((-1, 1))
src/porepy/fracs/fracture.py:    def segments(self) -> Generator[np.ndarray, None, None]:
src/porepy/fracs/fracture.py:        self, p: np.ndarray, tol: float = 1e-4
src/porepy/fracs/fracture.py:    ) -> tuple[bool, Union[int, None]]:
src/porepy/fracs/fracture.py:            tol: Tolerance of point accuracy. Default is ``1e-4``.
src/porepy/fracs/fracture.py:        p = p.reshape((-1, 1))
src/porepy/fracs/fracture.py:        # If the unique-operation did not remove any points, it is not a vertex.
src/porepy/fracs/fracture.py:            return True, (occurrences[1] - 1)
src/porepy/fracs/fracture.py:    def copy(self) -> Fracture:
src/porepy/fracs/fracture.py:    # Below are the dimension-dependent abstract methods
src/porepy/fracs/fracture.py:    def sort_points(self) -> np.ndarray:
src/porepy/fracs/fracture.py:    def local_coordinates(self) -> np.ndarray:
src/porepy/fracs/fracture.py:        local dimension :math:`d` is assumed to be :math:`d = nd - 1`, i.e. the fracture
src/porepy/fracs/fracture.py:        has co-dimension 1.
src/porepy/fracs/fracture.py:    def compute_centroid(self) -> np.ndarray:
src/porepy/fracs/fracture.py:    def compute_normal(self) -> np.ndarray:
src/porepy/fracs/fracture.py:    def _check_pts(self) -> None:
src/porepy/fracs/wells_3d.py:# Module-wide logger
src/porepy/fracs/wells_3d.py:    ) -> None:
src/porepy/fracs/wells_3d.py:        Endpoints of each of the num_points-1 line segments of the new well."""
src/porepy/fracs/wells_3d.py:            self.index = -1
src/porepy/fracs/wells_3d.py:    def index(self) -> int:
src/porepy/fracs/wells_3d.py:    def index(self, i: Optional[int] = None) -> None:
src/porepy/fracs/wells_3d.py:            self._index = -1
src/porepy/fracs/wells_3d.py:    def segments(self) -> Iterator[tuple[tuple[int, int], np.ndarray]]:
src/porepy/fracs/wells_3d.py:    def num_points(self) -> int:
src/porepy/fracs/wells_3d.py:    def num_segments(self) -> int:
src/porepy/fracs/wells_3d.py:        return self.num_points() - 1
src/porepy/fracs/wells_3d.py:    def add_point(self, point: np.ndarray, ind: Optional[int] = None) -> None:
src/porepy/fracs/wells_3d.py:    ) -> Optional[float]:
src/porepy/fracs/wells_3d.py:    def __str__(self) -> str:
src/porepy/fracs/wells_3d.py:    def __repr__(self) -> str:
src/porepy/fracs/wells_3d.py:    a mixed-dimensional grid, see mesh method.
src/porepy/fracs/wells_3d.py:        tol: float = 1e-8,
src/porepy/fracs/wells_3d.py:    ) -> None:
src/porepy/fracs/wells_3d.py:    def add(self, w: Well) -> None:
src/porepy/fracs/wells_3d.py:    ) -> float:
src/porepy/fracs/wells_3d.py:    def mesh(self, mdg: pp.MixedDimensionalGrid) -> None:
src/porepy/fracs/wells_3d.py:        """Produce grids for the network's wells and add to existing mixed-dimensional
src/porepy/fracs/wells_3d.py:        Note that all edge grids (*) are zero-dimensional, and that those
src/porepy/fracs/wells_3d.py:        connected with the fracture have co-dimension 2!
src/porepy/fracs/wells_3d.py:                    if inds_seg[1] == w.num_points() - 1:
src/porepy/fracs/wells_3d.py:                        points_subline = np.reshape(points_subline[:, :-1], (3, -1))
src/porepy/fracs/wells_3d.py:                    previous_ind = -1 - endp_frac_tags[1]
src/porepy/fracs/wells_3d.py:                    previous_g_isec = mdg.subdomains(dim=self.well_dim - 1)[
src/porepy/fracs/wells_3d.py:                endp_inds = [0, -1]
src/porepy/fracs/wells_3d.py:    def __repr__(self) -> str:
src/porepy/fracs/wells_3d.py:) -> None:
src/porepy/fracs/wells_3d.py:            stop_ind = sort_inds.size - ignore_endpoint_tag
src/porepy/fracs/wells_3d.py:    min_length: float = 1e-10,
src/porepy/fracs/wells_3d.py:    tol: float = 1e-5,
src/porepy/fracs/wells_3d.py:) -> None:
src/porepy/fracs/wells_3d.py:        mdg: The mixed-dimensional grid containing all the elements.
src/porepy/fracs/wells_3d.py:        tol: Geometric tolerance, default 1e-5.
src/porepy/fracs/wells_3d.py:    # Extract the grids of the wells of co-dimension 2.
src/porepy/fracs/wells_3d.py:        g for g in mdg.subdomains(dim=dim_max - 2) if hasattr(g, "well_num")
src/porepy/fracs/wells_3d.py:    # Pre-compute some well information.
src/porepy/fracs/wells_3d.py:            sd_w_cn.indices[pp.utils.mcolon.mcolon(first, second)].reshape((-1, 2)).T
src/porepy/fracs/wells_3d.py:                # Compute the intersections between the segment and the current higher-
src/porepy/fracs/wells_3d.py:        # Add a new edge to the mixed-dimensional grid.
src/porepy/fracs/wells_3d.py:        mg = pp.MortarGrid(sd_w.dim, side_g, codim=sd_max.dim - sd_w.dim)
src/porepy/fracs/wells_3d.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/fracs/wells_3d.py:    seg[d, inds[0]], seg[d,inds[1]], ..., seg[d,inds[-2]], seg[d,inds[-1]]
src/porepy/fracs/wells_3d.py:        if not np.isclose(seg[dim, 0] - seg[dim, 1], 0):
src/porepy/fracs/wells_3d.py:        inds = inds[::-1]
src/porepy/fracs/wells_3d.py:    tol: float = 1e-8,
src/porepy/fracs/wells_3d.py:) -> tuple[np.ndarray, list[np.ndarray]]:
src/porepy/fracs/wells_3d.py:) -> pp.PointGrid:
src/porepy/fracs/wells_3d.py:        mdg: The mixed-dimensional grid.
src/porepy/fracs/wells_3d.py:    sd.history.append("Well-fracture intersection grid")
src/porepy/fracs/wells_3d.py:) -> None:
src/porepy/fracs/wells_3d.py:        mdg: The mixed-dimensional grid.
src/porepy/fracs/wells_3d.py:) -> None:
src/porepy/fracs/wells_3d.py:        mdg: The mixed-dimensional grid.
src/porepy/fracs/wells_3d.py:    vec = sd_primary.face_centers - sd_secondary.cell_centers
src/porepy/fracs/wells_3d.py:) -> None:
src/porepy/fracs/wells_3d.py:    Both grids should already be present in the mixed-dimensional grid.
src/porepy/fracs/wells_3d.py:    codim = sd_primary.dim - sd_secondary.dim
src/porepy/fracs/structured.py:Module for creating fractured cartesian grids in 2- and 3-dimensions.
src/porepy/fracs/structured.py:) -> list[pp.Grid]:
src/porepy/fracs/structured.py:    ----------
src/porepy/fracs/structured.py:    -------
src/porepy/fracs/structured.py:    list (length 4): For each dimension (3 -> 0), a list of all grids in
src/porepy/fracs/structured.py:    --------
src/porepy/fracs/structured.py:) -> list[list[pp.Grid]]:
src/porepy/fracs/structured.py:    ----------
src/porepy/fracs/structured.py:    x (np.ndarray): Node coordinates in x-direction
src/porepy/fracs/structured.py:    y (np.ndarray): Node coordinates in y-direction.
src/porepy/fracs/structured.py:    z (np.ndarray): Node coordinates in z-direction.
src/porepy/fracs/structured.py:    -------
src/porepy/fracs/structured.py:    list (length 3): For each dimension (3 -> 0), a list of all grids in
src/porepy/fracs/structured.py:    --------
src/porepy/fracs/structured.py:    nx = np.asarray((x.size - 1, y.size - 1, z.size - 1))
src/porepy/fracs/structured.py:    ----------
src/porepy/fracs/structured.py:    -------
src/porepy/fracs/structured.py:    list (length 3): For each dimension (2 -> 0), a list of all grids in
src/porepy/fracs/structured.py:    --------
src/porepy/fracs/structured.py:) -> list[list[pp.Grid]]:
src/porepy/fracs/structured.py:    ----------
src/porepy/fracs/structured.py:    x (np.ndarray): Node coordinates in x-direction
src/porepy/fracs/structured.py:    y (np.ndarray): Node coordinates in y-direction.
src/porepy/fracs/structured.py:    -------
src/porepy/fracs/structured.py:    list (length 3): For each dimension (2 -> 0), a list of all grids in
src/porepy/fracs/structured.py:    --------
src/porepy/fracs/structured.py:    nx = np.asarray((x.size - 1, y.size - 1))
src/porepy/fracs/structured.py:        tol = 1e-5 / nx
src/porepy/fracs/structured.py:        ), "Fracture must align to x-, y- or z-axis"
src/porepy/fracs/structured.py:        sign = 2 * pp.geometry_property_checks.is_ccw_polygon(f_s[active_dim]) - 1
src/porepy/fracs/structured.py:        tangent = f_s.take(np.arange(f_s.shape[1]) + 1, axis=1, mode="wrap") - f_s
src/porepy/fracs/structured.py:        normal[active_dim] = tangent[active_dim[1::-1]]
src/porepy/fracs/structured.py:        normal[active_dim[1]] = -normal[active_dim[1]]
src/porepy/fracs/structured.py:                f_s[flat_dim, 0] - tol[flat_dim] <= g_3d.face_centers[flat_dim],
src/porepy/fracs/structured.py:    # as for the 2D-case, and count the number of faces belonging to each edge,
src/porepy/fracs/structured.py:        assert is_x_frac != is_y_frac, "Fracture must align to x- or y-axis"
src/porepy/fracs/structured.py:    # Create 0-D grids
src/porepy/fracs/structured.py:    loc_center = np.mean(loc_coord, axis=1).reshape((-1, 1))
src/porepy/fracs/structured.py:    loc_coord -= loc_center
src/porepy/fracs/structured.py:        [bounding_box[f"{s}max"] - bounding_box[f"{s}min"] for s in "xyz"]
src/porepy/fracs/structured.py:    # the coordinates should be non-zerozero.
src/porepy/fracs/structured.py:    assert np.all(g.nodes[0:2] - sorted_coord == 0)
src/porepy/fracs/structured.py:        # x-line:
src/porepy/fracs/structured.py:        # y-line
src/porepy/fracs/structured.py:        # is z-line
src/porepy/fracs/fracture_importer.py:    file_name: str, has_domain: bool = True, tol: float = 1e-4, **kwargs
src/porepy/fracs/fracture_importer.py:) -> pp.FractureNetwork3d:
src/porepy/fracs/fracture_importer.py:    - first line (optional) describes the domain as a rectangle with
src/porepy/fracs/fracture_importer.py:    - the other lines descibe the N fractures as a list of points
src/porepy/fracs/fracture_importer.py:            Defaults to 1e-4.
src/porepy/fracs/fracture_importer.py:                    pts.reshape((3, -1), order="F"), check_convexity=check_convexity
src/porepy/fracs/fracture_importer.py:def elliptic_network_3d_from_csv(file_name, has_domain=True, tol=1e-4, degrees=False):
src/porepy/fracs/fracture_importer.py:    - first line (optional) describes the domain as a rectangle with
src/porepy/fracs/fracture_importer.py:    - the other lines describe the N fractures as a elliptic fractures:
src/porepy/fracs/fracture_importer.py:    ----------
src/porepy/fracs/fracture_importer.py:        Defaults to 1e-4.
src/porepy/fracs/fracture_importer.py:    -------
src/porepy/fracs/fracture_importer.py:            maj_ax_ang = data[5] * (1 - degrees + degrees * np.pi / 180)
src/porepy/fracs/fracture_importer.py:            strike_ang = data[6] * (1 - degrees + degrees * np.pi / 180)
src/porepy/fracs/fracture_importer.py:            dip_ang = data[7] * (1 - degrees + degrees * np.pi / 180)
src/porepy/fracs/fracture_importer.py:    tol=1e-8,
src/porepy/fracs/fracture_importer.py:    Create the mixed-dimensional grid from a set of fractures stored in a csv file and a
src/porepy/fracs/fracture_importer.py:        tagcols (array-like, int. Optional): Column index where fracture tags
src/porepy/fracs/fracture_importer.py:            are stored. 0-offset. Defaults to no columns.
src/porepy/fracs/fracture_importer.py:    pts = data[:, pt_cols].reshape((-1, 2)).T
src/porepy/fracs/fracture_importer.py:                start = pt_ind[ind[0] : ind[-1]]
src/porepy/fracs/fracture_importer.py:                end = pt_ind[ind[1] : ind[-1] + 1]
src/porepy/fracs/fracture_importer.py:def dfm_from_gmsh(file_name: str, dim: int, **kwargs) -> pp.MixedDimensionalGrid:
src/porepy/fracs/fracture_importer.py:            mesh before the mixed-dimensional mesh is constructed.
src/porepy/fracs/fracture_importer.py:        MixedDimensionalGrid: Mixed-dimensional grid as contained in the gmsh file.
src/porepy/fracs/fracture_importer.py:    if file_name[-4:] == ".msh":
src/porepy/fracs/fracture_importer.py:        if file_name[-4:] == ".geo":
src/porepy/fracs/fracture_importer.py:            file_name = file_name[:-4]
src/porepy/fracs/fracture_importer.py:    tol: float = 1e-4,
src/porepy/fracs/fracture_importer.py:    """Create a mixed-dimensional grid from a set of 3d fractures stored in a fab file
src/porepy/fracs/fracture_importer.py:        mdg: the mixed-dimensional grid.
src/porepy/fracs/fracture_importer.py:    The filter is based on the .fab-files available at the time of writing, and
src/porepy/fracs/fracture_importer.py:            For each element in tess_frac, a +-1 defining
src/porepy/fracs/fracture_network_2d.py:    """Representation of a set of line fracture in a two-dimensional domain.
src/porepy/fracs/fracture_network_2d.py:    :class:`~porepy.fracs.line_fracture.LineFracture`. Poly-line fractures are
src/porepy/fracs/fracture_network_2d.py:    non-convex polygon (see e.g., :class:`~porepy.geometry.domain.Domain`).
src/porepy/fracs/fracture_network_2d.py:            the domain. Can be box-shaped or a general (non-convex) polygon.
src/porepy/fracs/fracture_network_2d.py:        tol: float = 1e-8,
src/porepy/fracs/fracture_network_2d.py:    ) -> None:
src/porepy/fracs/fracture_network_2d.py:        # -----> Logging
src/porepy/fracs/fracture_network_2d.py:        The new set may contain non-unique points and edges.
src/porepy/fracs/fracture_network_2d.py:        ``-1``, which equals no tag.
src/porepy/fracs/fracture_network_2d.py:                extra_tags = np.full((n_fs - n_self, self.num_frac()), -1, dtype=int)
src/porepy/fracs/fracture_network_2d.py:                extra_tags = np.full((n_self - n_fs, fs.num_frac()), -1, dtype=int)
src/porepy/fracs/fracture_network_2d.py:    ) -> pp.MixedDimensionalGrid:
src/porepy/fracs/fracture_network_2d.py:        """Create a mixed-dimensional grid for this fracture network.
src/porepy/fracs/fracture_network_2d.py:                generate lower-dimensional meshes, but only act as constraints in
src/porepy/fracs/fracture_network_2d.py:            MixedDimensionalGrid: Mixed-dimensional grid.
src/porepy/fracs/fracture_network_2d.py:        ndim = 2 - int(dfn)
src/porepy/fracs/fracture_network_2d.py:            for idg, g in enumerate(subdomains[1 - int(dfn)]):
src/porepy/fracs/fracture_network_2d.py:    ) -> GmshData2d:
src/porepy/fracs/fracture_network_2d.py:                generate lower-dimensional meshes, but only act as constraints in
src/porepy/fracs/fracture_network_2d.py:            MixedDimensionalGrid: Mixed-dimensional mesh.
src/porepy/fracs/fracture_network_2d.py:            adjustment[edges_deleted] = -1
src/porepy/fracs/fracture_network_2d.py:            adjustment += np.clip(num_occ - 1, 0, None)
src/porepy/fracs/fracture_network_2d.py:        # (fracture, constraint, boundary). For the Gmsh processing, a string-based
src/porepy/fracs/fracture_network_2d.py:    def _find_and_split_intersections(self, constraints: np.ndarray) -> None:
src/porepy/fracs/fracture_network_2d.py:        ----------
src/porepy/fracs/fracture_network_2d.py:        -------
src/porepy/fracs/fracture_network_2d.py:        logger.info("Done. Elapsed time " + str(time.time() - tm))
src/porepy/fracs/fracture_network_2d.py:        # Remove lines with the same start and end-point.
src/porepy/fracs/fracture_network_2d.py:        # This can be caused by L-intersections, or possibly also if the two
src/porepy/fracs/fracture_network_2d.py:    def _find_intersection_points(self, lines: np.ndarray) -> np.ndarray:
src/porepy/fracs/fracture_network_2d.py:                frac_count[frac_id[frac_ia] == a] -= 1
src/porepy/fracs/fracture_network_2d.py:    ) -> None:
src/porepy/fracs/fracture_network_2d.py:        logger.info("Done. Elapsed time " + str(time.time() - tm))
src/porepy/fracs/fracture_network_2d.py:    ) -> None:
src/porepy/fracs/fracture_network_2d.py:        logger.info("Done. Elapsed time " + str(time.time() - tm))
src/porepy/fracs/fracture_network_2d.py:    ) -> Tuple[np.ndarray, np.ndarray]:
src/porepy/fracs/fracture_network_2d.py:                # Append all start/end-points in the x-direction
src/porepy/fracs/fracture_network_2d.py:                # Append all start/end-points in the y-direction
src/porepy/fracs/fracture_network_2d.py:            x_min = np.min(np.asarray(x_pts)) - 10 * self.tol
src/porepy/fracs/fracture_network_2d.py:            y_min = np.min(np.asarray(y_pts)) - 10 * self.tol
src/porepy/fracs/fracture_network_2d.py:        termination_tol: float = 1e-2,
src/porepy/fracs/fracture_network_2d.py:    ) -> Tuple[np.ndarray, bool]:
src/porepy/fracs/fracture_network_2d.py:            almost form a T-intersection (or L), may be connected, while
src/porepy/fracs/fracture_network_2d.py:            X-intersections with very short branches may be truncated to T-intersections.
src/porepy/fracs/fracture_network_2d.py:            diff = np.max(np.abs(pn - pts))
src/porepy/fracs/fracture_network_2d.py:            logger.info("Maximum modification " + str(np.max(np.abs(pts - pts_orig))))
src/porepy/fracs/fracture_network_2d.py:        ----------
src/porepy/fracs/fracture_network_2d.py:        -------
src/porepy/fracs/fracture_network_2d.py:    ---------------------------------
src/porepy/fracs/fracture_network_2d.py:        dx = (domain["xmax"] - domain["xmin"]) / num_x
src/porepy/fracs/fracture_network_2d.py:            dy = (domain["ymax"] - domain["ymin"]) / ny
src/porepy/fracs/fracture_network_2d.py:    def _bounding_box_to_points(self, box: dict[str, pp.number]) -> np.ndarray:
src/porepy/fracs/fracture_network_2d.py:            p00 = np.array([box["xmin"], box["ymin"]]).reshape((-1, 1))
src/porepy/fracs/fracture_network_2d.py:            p10 = np.array([box["xmax"], box["ymin"]]).reshape((-1, 1))
src/porepy/fracs/fracture_network_2d.py:            p11 = np.array([box["xmax"], box["ymax"]]).reshape((-1, 1))
src/porepy/fracs/fracture_network_2d.py:            p01 = np.array([box["xmin"], box["ymax"]]).reshape((-1, 1))
src/porepy/fracs/fracture_network_2d.py:    def copy(self) -> "pp.FractureNetwork2d":
src/porepy/fracs/fracture_network_2d.py:    def snapped_copy(self, tol: float) -> "pp.FractureNetwork2d":
src/porepy/fracs/fracture_network_2d.py:    ) -> "pp.FractureNetwork2d":
src/porepy/fracs/fracture_network_2d.py:                the set only contains non-intersecting branches.
src/porepy/fracs/fracture_network_2d.py:    # --------- Methods for analysis of the fracture set
src/porepy/fracs/fracture_network_2d.py:        By default, the fractures will first be split into non-intersecting branches.
src/porepy/fracs/fracture_network_2d.py:                is split into non-intersecting branches before invoking the graph
src/porepy/fracs/fracture_network_2d.py:            FractureSet: This fracture set, split into non-intersecting branches.
src/porepy/fracs/fracture_network_2d.py:    # --------- Utility functions below here
src/porepy/fracs/fracture_network_2d.py:        new_pts_id = -np.ones(all_pts_id.size, dtype=np.int)
src/porepy/fracs/fracture_network_2d.py:        # Always return a 2-d array
src/porepy/fracs/fracture_network_2d.py:            p = p.reshape((-1, 1))
src/porepy/fracs/fracture_network_2d.py:        # Always return a 2-d array
src/porepy/fracs/fracture_network_2d.py:            p = p.reshape((-1, 1))
src/porepy/fracs/fracture_network_2d.py:        norm = lambda e0, e1: np.linalg.norm(self._pts[:, e0] - self._pts[:, e1])
src/porepy/fracs/fracture_network_2d.py:        """Compute the angle of the fractures to the x-axis.
src/porepy/fracs/fracture_network_2d.py:            angle: Orientation of each fracture, relative to the x-axis.
src/porepy/fracs/fracture_network_2d.py:            self._pts[1, e0] - self._pts[1, e1], self._pts[0, e0] - self._pts[0, e1]
src/porepy/fracs/fracture_network_2d.py:        mean_a[mask] = np.pi - np.abs(mean_a[mask])
src/porepy/fracs/fracture_network_2d.py:        mean_a[mean_a > np.pi] -= np.pi
src/porepy/fracs/fracture_network_2d.py:                specifying the extension in the x-direction. If the domain is 2d,
src/porepy/fracs/fracture_network_2d.py:            return (bounding_box["xmax"] - bounding_box["xmin"]) * (
src/porepy/fracs/fracture_network_2d.py:                bounding_box["ymax"] - bounding_box["ymin"]
src/porepy/fracs/fracture_network_2d.py:            return bounding_box["xmax"] - bounding_box["xmin"]
src/porepy/fracs/fracture_network_2d.py:        ----------
src/porepy/fracs/fracture_network_2d.py:    ) -> None:
src/porepy/fracs/fracture_network_2d.py:        Fracture numbers are always exported (1-offset). In addition, it is
src/porepy/fracs/fracture_network_2d.py:        keyword-argument data.
src/porepy/fracs/fracture_network_2d.py:        # Cell-data to be exported is at least the fracture numbers
src/porepy/fracs/fracture_network_2d.py:            f"Two-dimensional fracture network with {str(self.num_frac())} line "
src/porepy/fracs/meshing.py:) -> pp.MixedDimensionalGrid:
src/porepy/fracs/meshing.py:    created by the standard mixed-dimensional grid constructors. Essentially,
src/porepy/fracs/meshing.py:        subdomains: Subdomains to enter into the Mixed-dimensional grid.
src/porepy/fracs/meshing.py:        MixedDimensionalGrid: Final mixed-dimensional grid.
src/porepy/fracs/meshing.py:    # Assemble the list of subdomain grids into a mixed-dimensional grid.
src/porepy/fracs/meshing.py:    logger.info("Done. Elapsed time " + str(time.time() - tm_mdg))
src/porepy/fracs/meshing.py:    logger.info("Done. Elapsed time " + str(time.time() - tm_geom))
src/porepy/fracs/meshing.py:    logger.info("Done. Elapsed time " + str(time.time() - tm_split))
src/porepy/fracs/meshing.py:    # will be added to the mixed-dimensional grid.
src/porepy/fracs/meshing.py:            "Mesh construction completed. Total time " + str(time.time() - time_tot)
src/porepy/fracs/meshing.py:) -> pp.MixedDimensionalGrid:
src/porepy/fracs/meshing.py:    Creates a cartesian fractured MixedDimensionalGrid in 2- or 3-dimensions.
src/porepy/fracs/meshing.py:        MixedDimensionalGrid: A complete mixed-dimensional grid where all
src/porepy/fracs/meshing.py:) -> pp.MixedDimensionalGrid:
src/porepy/fracs/meshing.py:    Creates a cartesian fractured MixedDimensionalGrid in 2- or 3-dimensions.
src/porepy/fracs/meshing.py:    x (np.ndarray): Node coordinates in x-direction
src/porepy/fracs/meshing.py:    y (np.ndarray): Node coordinates in y-direction.
src/porepy/fracs/meshing.py:    z (np.ndarray): Node coordinates in z-direction.
src/porepy/fracs/meshing.py:            tag_tip_node (bool, default=True): If True, nodes in the highest-dimensional grid
src/porepy/fracs/meshing.py:        # Pick out the face-node relation for the highest dimensional grid, restricted
src/porepy/fracs/meshing.py:        # among the grids of dimension dim_max - 1. Exclude tips that also occur on
src/porepy/fracs/meshing.py:        # other fractures (this will correspond to T or L-intersection, which look
src/porepy/fracs/meshing.py:        # present in g_h (e.g. for DFN-type grids), and avoid issues relating to nodes
src/porepy/fracs/meshing.py:        # in lower-dimensional grids that are not present in g_h, we store node numbers
src/porepy/fracs/meshing.py:        for g_dim in grids[1:-1]:
src/porepy/fracs/meshing.py:                # Also tag the nodes of the lower-dimensional grid that are on a tip
src/porepy/fracs/meshing.py:                if g.dim == g_h.dim - 1:
src/porepy/fracs/meshing.py:                    # For co-dimension 1, we also register those nodes in the host grid which
src/porepy/fracs/meshing.py:) -> tuple[pp.MixedDimensionalGrid, dict[tuple[pp.Grid, pp.Grid], sps.spmatrix]]:
src/porepy/fracs/meshing.py:            to each edge. face_cells maps from lower-dim cells to higher-dim
src/porepy/fracs/meshing.py:            face-cell map. The first item represents two neighboring
src/porepy/fracs/meshing.py:    # Create a mixed-dimensional grid
src/porepy/fracs/meshing.py:    for dim in range(len(subdomains) - 1):
src/porepy/fracs/meshing.py:        # Loop over all grids of the higher dimension, look for lower-dimensional
src/porepy/fracs/meshing.py:        # grids where the cell of the lower-dimensional grid shares nodes with
src/porepy/fracs/meshing.py:        # the faces of the higher-dimensional grid. If this face-cell intersection
src/porepy/fracs/meshing.py:        # is non-empty, there is a coupling will be made between the higher and
src/porepy/fracs/meshing.py:        # lower-dimensional grid, and the face-to-cell relation will be saved.
src/porepy/fracs/meshing.py:            # Get the face-node relation for the higher-dimensional grid,
src/porepy/fracs/meshing.py:            # Get a cell-node relation for the lower-dimensional grids.
src/porepy/fracs/meshing.py:            # a unique over all faces-nodes in the higher-dimensional grid).
src/porepy/fracs/meshing.py:            # To save a lot of time, we first group cell-nodes for all lower-
src/porepy/fracs/meshing.py:            # The treatmnet of the lower-dimensional grids is a bit special
src/porepy/fracs/meshing.py:                # Data structure for cell-nodes
src/porepy/fracs/meshing.py:                # for cell-node relations for each grid, hence initialize with
src/porepy/fracs/meshing.py:                    # Local cell-node relation
src/porepy/fracs/meshing.py:                # Stack all cell-nodes, and define offset array
src/porepy/fracs/meshing.py:                # Ensure that face-node relation is 1d in this case
src/porepy/fracs/meshing.py:            # Find intersection between cell-node and face-nodes.
src/porepy/fracs/meshing.py:            # Node nede to sort along 0-axis, we know we've done that above.
src/porepy/fracs/meshing.py:            # Now, for each lower-dimensional grid, either all of none of the cells
src/porepy/fracs/meshing.py:            # have been identified as faces in the higher-dimensional grid.
src/porepy/fracs/meshing.py:                # If something goes wrong here, we will likely get an index of -1
src/porepy/fracs/meshing.py:                # when initializing the sparse matrix below - that should be a
src/porepy/fracs/meshing.py:                tmp = -np.ones(is_mem.size, dtype=int)
src/porepy/fracs/meshing.py:            # Loop over all lower-dimensional grids; find the cells that had matching
src/porepy/fracs/meshing.py:                # Add the pairing of subdomains and the cell-face map to the list
src/porepy/fracs/meshing.py:        mdg: The mixed-dimensional grid where the interfaces are built.
src/porepy/fracs/meshing.py:            face-cell map. The first item represents two neighboring
src/porepy/fracs/meshing.py:            # a T-intersection, or both ends of an L-intersection).
src/porepy/fracs/meshing.py:                """Found low-dimensional cell which corresponds to
src/porepy/fracs/meshing.py:                             too many high-dimensional faces."""
src/porepy/fracs/meshing.py:            # the tag name is just a place-holder we assume left side
src/porepy/fracs/msh_2_grid.py:def create_3d_grids(pts: np.ndarray, cells: dict[str, np.ndarray]) -> list[pp.Grid]:
src/porepy/fracs/msh_2_grid.py:) -> list[pp.Grid]:
src/porepy/fracs/msh_2_grid.py:            # Split the physical name into a category and a number - which will become
src/porepy/fracs/msh_2_grid.py:            if plane_type != surface_tag[:-1] or int(pn[offset + 1 :]) in constraints:
src/porepy/fracs/msh_2_grid.py:            loc_tri_ind = p_map.reshape((-1, 3))
src/porepy/fracs/msh_2_grid.py:        # since there is not a cell-face relation from gmsh but only a cell-node
src/porepy/fracs/msh_2_grid.py:        # relation we need to recover the corresponding face-line map.
src/porepy/fracs/msh_2_grid.py:        faces = np.reshape(g_2d.face_nodes.indices, (2, -1), order="F")
src/porepy/fracs/msh_2_grid.py:    tol: float = 1e-4,
src/porepy/fracs/msh_2_grid.py:) -> Union[list[pp.Grid], tuple[list[pp.Grid], np.ndarray]]:
src/porepy/fracs/msh_2_grid.py:            line grids. Defaults to 1e-4.
src/porepy/fracs/msh_2_grid.py:        # geo-files. If it fails, we simply set the frac_num to -1 in this case,
src/porepy/fracs/msh_2_grid.py:            frac_num = -1
src/porepy/fracs/msh_2_grid.py:        if line_type == PhysicalNames.FRACTURE_TIP.value[:-1]:
src/porepy/fracs/msh_2_grid.py:        elif line_type == line_tag[:-1]:
src/porepy/fracs/msh_2_grid.py:) -> list[pp.PointGrid]:
src/porepy/fracs/msh_2_grid.py:        # .geo-file
src/porepy/fracs/msh_2_grid.py:            # Check if this is the target. The -1 is needed to avoid the extra _ in
src/porepy/fracs/msh_2_grid.py:            if phys_name_vertex == target_tag_stem[:-1]:
src/porepy/fracs/msh_2_grid.py:    loc_coord: np.ndarray, glob_id: np.ndarray, tol: float = 1e-4
src/porepy/fracs/msh_2_grid.py:) -> pp.Grid:
src/porepy/fracs/msh_2_grid.py:            Defaults to 1e-4.
src/porepy/fracs/msh_2_grid.py:    loc_center = np.mean(loc_coord, axis=1).reshape((-1, 1))
src/porepy/fracs/plane_fracture.py:    Non-convex fractures can be initialized, but geometry processing (computation
src/porepy/fracs/plane_fracture.py:    of intersections etc.) is not supported for non-convex geometries.
src/porepy/fracs/plane_fracture.py:        assert self.is_planar(), "Points define non-planar fracture"
src/porepy/fracs/plane_fracture.py:            assert self.is_convex(), "Points form non-convex polygon"
src/porepy/fracs/plane_fracture.py:    def sort_points(self) -> np.ndarray:
src/porepy/fracs/plane_fracture.py:        """Ensure that the points are sorted in a counter-clockwise (CCW) order.
src/porepy/fracs/plane_fracture.py:        -----
src/porepy/fracs/plane_fracture.py:        -------
src/porepy/fracs/plane_fracture.py:        points_2d -= np.mean(points_2d, axis=1).reshape((-1, 1))
src/porepy/fracs/plane_fracture.py:    def local_coordinates(self) -> np.ndarray:
src/porepy/fracs/plane_fracture.py:        -------
src/porepy/fracs/plane_fracture.py:        tol: float = 1e-4,
src/porepy/fracs/plane_fracture.py:    ) -> bool:
src/porepy/fracs/plane_fracture.py:                Defaults to 1e-4.
src/porepy/fracs/plane_fracture.py:        # Sort points to counter-clockwise
src/porepy/fracs/plane_fracture.py:    def is_convex(self) -> bool:
src/porepy/fracs/plane_fracture.py:        ----
src/porepy/fracs/plane_fracture.py:    def is_planar(self, tol: float = 1e-4) -> bool:
src/porepy/fracs/plane_fracture.py:        """Check if the points representing this fracture lie within a 2D-plane.
src/porepy/fracs/plane_fracture.py:        ----------
src/porepy/fracs/plane_fracture.py:                Tolerance for non-planarity. Treated as an absolute quantity
src/porepy/fracs/plane_fracture.py:        -------
src/porepy/fracs/plane_fracture.py:        p = self.pts - np.mean(self.pts, axis=1).reshape((-1, 1))
src/porepy/fracs/plane_fracture.py:    def compute_centroid(self) -> np.ndarray:
src/porepy/fracs/plane_fracture.py:        v = p[:, 1:] - p[:, 0].reshape((-1, 1))
src/porepy/fracs/plane_fracture.py:        cc = (p[:, 0].reshape((-1, 1)) + p[:, 1:-1] + p[:, 2:]) / 3
src/porepy/fracs/plane_fracture.py:        area = 0.5 * np.abs(v[0, :-1] * v[1, 1:] - v[1, :-1] * v[0, 1:])
src/porepy/fracs/plane_fracture.py:    def compute_normal(self) -> np.ndarray:
src/porepy/fracs/plane_fracture.py:    def as_sympy_polygon(self, pts: Optional[np.ndarray] = None) -> Polygon:
src/porepy/fracs/plane_fracture.py:        ----------
src/porepy/fracs/plane_fracture.py:        -------
src/porepy/fracs/plane_fracture.py:    rotation of the major axis from the x-axis. Next, the fracture is
src/porepy/fracs/plane_fracture.py:    axis) measured from the x-axis, and the dip angle. All angles are
src/porepy/fracs/plane_fracture.py:    -----
src/porepy/fracs/plane_fracture.py:    ----------
src/porepy/fracs/plane_fracture.py:            Length of major axis (radius-like, not diameter).
src/porepy/fracs/plane_fracture.py:            Rotation of the major axis from the x-axis.
src/porepy/fracs/plane_fracture.py:            Measured before strike-dip rotation, see above.
src/porepy/fracs/plane_fracture.py:            Given as angle from the x-direction.
src/porepy/fracs/plane_fracture.py:    --------
src/porepy/fracs/plane_fracture.py:        rotation in xy-plane of 45 degrees, and an incline of 30 degrees
src/porepy/fracs/plane_fracture.py:        rotated around the x-axis.
src/porepy/fracs/plane_fracture.py:        center = center.reshape((-1, 1))
src/porepy/fracs/plane_fracture.py:    # First, populate polygon in the xy-plane
src/porepy/fracs/plane_fracture.py:    angs = np.linspace(0, 2 * np.pi, num_points + 1, endpoint=True)[:-1]
src/porepy/fracs/utils.py:    length = np.sqrt(np.sum(np.power(end - start, 2), axis=0))
src/porepy/fracs/utils.py:    fractures: list[pp.LineFracture], tol: float = 1e-8
src/porepy/fracs/utils.py:) -> tuple[np.ndarray, np.ndarray]:
src/porepy/fracs/utils.py:        tol: Absolute tolerance to decide if start-/endpoints of two different fractures
src/porepy/fracs/utils.py:            are equal. The comparison is done element-wise. Defaults to 1e-8.
src/porepy/fracs/utils.py:            Coordinates of the start- and endpoints of the fractures.
src/porepy/fracs/utils.py:            Indices for the start- and endpoint of each fracture. Note that one point
src/porepy/fracs/utils.py:            in ``pts`` may be the start- and/or endpoint of multiple fractures.
src/porepy/fracs/utils.py:    # Iterate through the fractures and list all start-/endpoints and the corresponding
src/porepy/fracs/utils.py:            # Check if the point is already start-/endpoint of another fracture.
src/porepy/fracs/utils.py:                pt_indices.append(len(pts_list) - 1)
src/porepy/fracs/utils.py:        pts = np.stack(pts_list, axis=-1)
src/porepy/fracs/utils.py:    # -> This determines the shape of the ``edges`` array.
src/porepy/fracs/utils.py:    # Initialize the ``edges`` array with ``-1``. This value indicates that each edge
src/porepy/fracs/utils.py:    # has no tags. Fill in the first two rows with the fracture start-/endpoints and the
src/porepy/fracs/utils.py:    # value of ``-1``, which is equal to the tag not existing.
src/porepy/fracs/utils.py:    edges = np.full((max_edge_dim, len(fractures)), -1, dtype=np.int8)
src/porepy/fracs/utils.py:) -> list[pp.LineFracture]:
src/porepy/fracs/utils.py:            Coordinates of the start- and endpoints of the
src/porepy/fracs/utils.py:            Indices for the start- and endpoint of each fracture. Note, that one point
src/porepy/fracs/utils.py:            in ``pts`` may be the start- and/or endpoint of multiple fractures.
src/porepy/fracs/tools.py:# -*- coding: utf-8 -*-
src/porepy/fracs/tools.py:    tol = kwargs.get("tol", 1e-5)
src/porepy/fracs/tools.py:        val_min = 1e-8 * val
src/porepy/fracs/tools.py:    dist = np.linalg.norm(pts[:, pts_id[0, :]] - pts[:, pts_id[1, :]], axis=0)
src/porepy/fracs/tools.py:                x_max < x_min[line_ind] - buff,
src/porepy/fracs/tools.py:                y_max < y_min[line_ind] - buff,
src/porepy/fracs/tools.py:                    ] = np.linalg.norm(pt1 - pt2)
src/porepy/fracs/tools.py:    # Re-create the lines, considering the new introduced points
src/porepy/fracs/tools.py:            pts_frac_id = np.vstack((pts_frac_id[:-1], pts_frac_id[1:]))
src/porepy/fracs/tools.py:        dist = np.linalg.norm(pts[:, seg[0]] - pts[:, seg[1]])
src/porepy/fracs/tools.py:                    x_max < x_min_new[seg_ind] - buff,
src/porepy/fracs/tools.py:                    y_max < y_min_new[seg_ind] - buff,
src/porepy/fracs/tools.py:        fn (pp.Grid): Higher dimensional face-node relation.
src/porepy/fracs/tools.py:        n_per_face (int): Number of nodes per face in the higher-dimensional grid.
src/porepy/fracs/tools.py:        np.array: Index of faces in the higher-dimensional grid that correspond
src/porepy/fracs/tools.py:            to a cell in the lower-dimensional grid.
src/porepy/fracs/tools.py:        np.array: Index of the corresponding cells in the lower-dimensional grid.
src/porepy/fracs/tools.py:        # We also know that the higher-dimensional grid has faces
src/porepy/fracs/tools.py:    # lower-dimensional grid, the index of the corresponding face
src/porepy/fracs/tools.py:    # in the higher-dimensional structure.
src/porepy/viz/data_saving_model_mixin.py:    def save_data_time_step(self) -> None:
src/porepy/viz/data_saving_model_mixin.py:    def data_to_export(self) -> list[DataInput]:
src/porepy/viz/data_saving_model_mixin.py:                            sd, "specific_volume", f"m^{self.nd-sd.dim}"
src/porepy/viz/data_saving_model_mixin.py:        return data  # type: ignore[return-value]
src/porepy/viz/data_saving_model_mixin.py:    ) -> np.ndarray:
src/porepy/viz/data_saving_model_mixin.py:    def initialize_data_saving(self) -> None:
src/porepy/viz/data_saving_model_mixin.py:    ) -> None:
src/porepy/viz/data_saving_model_mixin.py:                mixed-dimensional grid is checked for keywords corresponding to primary
src/porepy/viz/data_saving_model_mixin.py:    ) -> None:
src/porepy/viz/data_saving_model_mixin.py:                mixed-dimensional grid is checked for keywords corresponding to primary
src/porepy/viz/data_saving_model_mixin.py:    def suppress_export(self) -> bool:
src/porepy/viz/data_saving_model_mixin.py:    """Number of non-linear iterations needed to solve the system. Used only as an
src/porepy/viz/data_saving_model_mixin.py:    """Whether the problem is time-dependent."""
src/porepy/viz/data_saving_model_mixin.py:    def save_data_time_step(self) -> None:
src/porepy/viz/data_saving_model_mixin.py:        else:  # time-dependent problem
src/porepy/viz/exporter.py:# Object for managing meshio-relevant data, as well as a container for its storage,
src/porepy/viz/exporter.py:    to export and import data (and grid - only export) to and from vtu format.
src/porepy/viz/exporter.py:        grid: Subdomain or mixed-dimensional grid containing all mesh information
src/porepy/viz/exporter.py:        # "displacement" stored in a mixed-dimensional grid, do:
src/porepy/viz/exporter.py:    ) -> None:
src/porepy/viz/exporter.py:        # Exporter is operating on mixed-dimensional grids. Convert to such.
src/porepy/viz/exporter.py:            """Mixed-dimensional grid representation of the input grid."""
src/porepy/viz/exporter.py:                "Exporter only supports subdomain and mixed-dimensional grids."
src/porepy/viz/exporter.py:        # Generate infrastructure for storing fixed-dimensional grids in meshio format.
src/porepy/viz/exporter.py:        # Include all but the 0-d grids
src/porepy/viz/exporter.py:        # Generate infrastructure for storing fixed-dimensional mortar grids in meshio
src/porepy/viz/exporter.py:        """Identifier for whether constant data is up-to-date."""
src/porepy/viz/exporter.py:    ) -> int:
src/porepy/viz/exporter.py:        mixed-dimensional grid.
src/porepy/viz/exporter.py:                mixed-dimensional grid is checked for keywords corresponding to primary
src/porepy/viz/exporter.py:            # Use the ET package from the standard library to parse the XML-file.
src/porepy/viz/exporter.py:            time_index = int(pvd_file.stem[-self._padding :])
src/porepy/viz/exporter.py:            # Use the ET package from the standard library to parse the XML-file.
src/porepy/viz/exporter.py:            restart_timestep_str = unique_timesteps[-1]
src/porepy/viz/exporter.py:    ) -> None:
src/porepy/viz/exporter.py:        mixed-dimensional grid is split in the usual way etc.
src/porepy/viz/exporter.py:                mixed-dimensional grid is checked for keywords corresponding to primary
src/porepy/viz/exporter.py:        # Aux. method: Inverse of _to_vector_format, used to define vector-ranged values
src/porepy/viz/exporter.py:        ) -> np.ndarray:
src/porepy/viz/exporter.py:            the grid size. If possible, translate the value to a scalar-ranged object.
src/porepy/viz/exporter.py:            # Make some checks - note that this method handles cell data only.
src/porepy/viz/exporter.py:        # 3. Transfer data from vtu to the mixed-dimensional grid.
src/porepy/viz/exporter.py:                assert vtu_file_pieces[-1].isnumeric()
src/porepy/viz/exporter.py:                dim_pos = -2 if vtu_file_pieces[-2].isnumeric() else -1
src/porepy/viz/exporter.py:                    vtu_file_pieces[dim_pos - 1] == "mortar"
src/porepy/viz/exporter.py:                    or vtu_file_pieces[dim_pos - 1] == "constant"
src/porepy/viz/exporter.py:                    and vtu_file_pieces[dim_pos - 2] == "mortar"
src/porepy/viz/exporter.py:            # 3rd step. Fill-in keys.
src/porepy/viz/exporter.py:    ) -> None:
src/porepy/viz/exporter.py:        """Collect user-defined constant-in-time data, associated with grids, and to
src/porepy/viz/exporter.py:        # Preprocessing of the user-defined constant data has two main goals:
src/porepy/viz/exporter.py:        # Add the user-defined data to the containers for constant data.
src/porepy/viz/exporter.py:    ) -> None:
src/porepy/viz/exporter.py:            grid: subdomain or mixed-dimensional grid if it is not fixed and should be
src/porepy/viz/exporter.py:            # Require a mixed-dimensional grid. Thus convert if single subdomain grid
src/porepy/viz/exporter.py:                # Create a new mixed-dimensional solely with grid as single subdomain.
src/porepy/viz/exporter.py:        # Export mixed-dimensional grid to pvd format
src/porepy/viz/exporter.py:    ) -> None:
src/porepy/viz/exporter.py:        # Define the header - either copy paste from availble previous output, or define
src/porepy/viz/exporter.py:            header: str = "".join(previous_content[: -2 - len(self._restart_files)])
src/porepy/viz/exporter.py:        # Fix the footer - standard for vtu/pvd files and compatible with the XML style
src/porepy/viz/exporter.py:    ) -> tuple[SubdomainData, InterfaceData]:
src/porepy/viz/exporter.py:        # Aux. method: Transform scalar- to vector-ranged values.
src/porepy/viz/exporter.py:        ) -> np.ndarray:
src/porepy/viz/exporter.py:                value = np.reshape(value, (-1, grid.num_cells), "F")
src/porepy/viz/exporter.py:        ) -> tuple[dict, dict, bool]:
src/porepy/viz/exporter.py:            """Check whether data is provided by a key of a field - could be both
src/porepy/viz/exporter.py:                ValueError: if no data available in the mixed-dimensional grid for
src/porepy/viz/exporter.py:                ) -> bool:
src/porepy/viz/exporter.py:        ) -> tuple[dict, dict, bool]:
src/porepy/viz/exporter.py:        ) -> tuple[dict, dict, bool]:
src/porepy/viz/exporter.py:        ) -> tuple[dict, dict, bool]:
src/porepy/viz/exporter.py:            where sd is a single subdomain, key is a string, and data is a user-defined
src/porepy/viz/exporter.py:        ) -> tuple[dict, dict, bool]:
src/porepy/viz/exporter.py:            single interface, key is a string, and data is a user-defined data array.
src/porepy/viz/exporter.py:        ) -> tuple[dict, dict, bool]:
src/porepy/viz/exporter.py:            string, and data is a user-defined data array.
src/porepy/viz/exporter.py:            This only works when the mixed-dimensional grid contains a single subdomain.
src/porepy/viz/exporter.py:                ValueError: if the mixed-dimensional grid contains more than one
src/porepy/viz/exporter.py:                # mixed-dimensional grids containing a single subdomain.
src/porepy/viz/exporter.py:                        mixed-dimensional grid only contains a single subdomain."""
src/porepy/viz/exporter.py:            # Check if provided data has non-supported data format.
src/porepy/viz/exporter.py:    def _update_constant_mesh_data(self) -> None:
src/porepy/viz/exporter.py:    ) -> None:
src/porepy/viz/exporter.py:    def _export_mdg_pvd(self, file_name: str, time_step: Optional[int]) -> None:
src/porepy/viz/exporter.py:    def _update_meshio_geom(self) -> None:
src/porepy/viz/exporter.py:    ) -> Union[None, Meshio_Geom]:
src/porepy/viz/exporter.py:    def _export_grid_1d(self, grids: Iterable[pp.Grid]) -> Meshio_Geom:
src/porepy/viz/exporter.py:        # Dictionary storing cell->nodes connectivity information
src/porepy/viz/exporter.py:            # Lines are 1-simplices, and have a trivial connectivity.
src/porepy/viz/exporter.py:    ) -> np.ndarray:
src/porepy/viz/exporter.py:        """Determine cell to node connectivity for a general n-simplex mesh.
src/porepy/viz/exporter.py:            cells: all n-simplex cells.
src/porepy/viz/exporter.py:        # Determine cell-node ptr
src/porepy/viz/exporter.py:            grid.cell_nodes().indptr[:-1]
src/porepy/viz/exporter.py:        # Each n-simplex has n+1 nodes
src/porepy/viz/exporter.py:        ).reshape(-1, order="F")
src/porepy/viz/exporter.py:        cn_indices = np.reshape(expanded_cn_indices, (-1, num_nodes), order="C")
src/porepy/viz/exporter.py:    def _export_grid_2d(self, grids: Iterable[pp.Grid]) -> Meshio_Geom:
src/porepy/viz/exporter.py:        # Dictionary storing cell->nodes connectivity information for all cell types.
src/porepy/viz/exporter.py:            # Determine cell-node connectivity for each cell type and all cells. Treat
src/porepy/viz/exporter.py:                    # Determine the trivial connectivity - triangles are 2-simplices.
src/porepy/viz/exporter.py:                    # x--x and not x--x
src/porepy/viz/exporter.py:                    # x--x         x--x .
src/porepy/viz/exporter.py:                    ).reshape(-1, order="F")
src/porepy/viz/exporter.py:                        grid.face_nodes.indices[fn_indptr + i].reshape(-1, n)
src/porepy/viz/exporter.py:                    cfn = np.ravel(cfn_indices, order="F").reshape(n, -1).T
src/porepy/viz/exporter.py:    def _export_grid_3d(self, grids: Iterable[pp.Grid]) -> Meshio_Geom:
src/porepy/viz/exporter.py:    def _export_simplex_3d(self, grids: Iterable[pp.Grid]) -> Meshio_Geom:
src/porepy/viz/exporter.py:        # For the special meshio geometric type "tetra", cell->nodes will be used to
src/porepy/viz/exporter.py:            # are essentially 3-simplices.
src/porepy/viz/exporter.py:            # Store cell-node connectivity, and add offset taking into account previous
src/porepy/viz/exporter.py:    def _export_hexahedron_3d(self, grids: Iterable[pp.Grid]) -> Meshio_Geom:
src/porepy/viz/exporter.py:        # For the special meshio geometric type "hexahedron", cell->nodes will be used
src/porepy/viz/exporter.py:            # Determine cell-node ptr
src/porepy/viz/exporter.py:                grid.cell_nodes().indptr[:-1]
src/porepy/viz/exporter.py:            # Collect the indptr to all nodes of the cell; each n-simplex cell contains
src/porepy/viz/exporter.py:                -1, order="F"
src/porepy/viz/exporter.py:            cn_indices = np.reshape(expanded_cn_indices, (-1, 8), order="C")
src/porepy/viz/exporter.py:            # Test whether the hard-coded numbering really defines a hexahedron.
src/porepy/viz/exporter.py:            # Store cell-node connectivity, and add offset taking into account previous
src/porepy/viz/exporter.py:    ) -> bool:
src/porepy/viz/exporter.py:                # FIXME use shorter code of the following style - note: the order in the
src/porepy/viz/exporter.py:                            coords[:, j + 1] - coords[:, j],
src/porepy/viz/exporter.py:                            coords[:, (j + 2) % 4] - coords[:, j + 1],
src/porepy/viz/exporter.py:    def _export_polyhedron_3d(self, grids: Iterable[pp.Grid]) -> Meshio_Geom:
src/porepy/viz/exporter.py:        # For the general geometric type "polyhedron", cell->faces->nodes will be used
src/porepy/viz/exporter.py:        # cell->nodes information used for special type grids.
src/porepy/viz/exporter.py:                # The general strategy is to define the connectivity as cell-face-nodes
src/porepy/viz/exporter.py:                # nodes ordered wrt. the right-hand rule.
src/porepy/viz/exporter.py:                # Store shortcuts to cell-face and face-node information
src/porepy/viz/exporter.py:                # Determine the cell-face connectivity with faces described by their
src/porepy/viz/exporter.py:    ) -> None:
src/porepy/viz/exporter.py:            # For each field create a sub-vector for each geometrically uniform group
src/porepy/viz/exporter.py:    ) -> str:
src/porepy/viz/exporter.py:        """Auxiliary method setting up potentially non-existent folder structure and
src/porepy/viz/exporter.py:    ) -> str:
src/porepy/viz/exporter.py:        # Define non-empty time step extension including zero padding.
src/porepy/viz/exporter.py:        # Define non-empty dim extension
src/porepy/viz/diagnostics_mixin.py:diagnostical values collected for this submatrix -- names and values.
src/porepy/viz/diagnostics_mixin.py:    see the `tutorial <https://github.com/pmgbergen/porepy/blob/feat-diagnostics/tutoria
src/porepy/viz/diagnostics_mixin.py:    ) -> DiagnosticsData:
src/porepy/viz/diagnostics_mixin.py:                separately. Pass `'dense'` to group all grids -- useful to look at the
src/porepy/viz/diagnostics_mixin.py:        def get_singular_val(mat: spmatrix, which: Literal["LM", "SM"]) -> float:
src/porepy/viz/diagnostics_mixin.py:        ) -> float:
src/porepy/viz/diagnostics_mixin.py:                if smallest_sing < 1e-9:
src/porepy/viz/diagnostics_mixin.py:        def get_max(mat: spmatrix, equation_name: str, variable_name: str) -> float:
src/porepy/viz/diagnostics_mixin.py:    ) -> None:
src/porepy/viz/diagnostics_mixin.py:        i_prev, j_prev = -1, -1
src/porepy/viz/diagnostics_mixin.py:    ) -> Sequence[dict[str, Any]]:
src/porepy/viz/diagnostics_mixin.py:            A tuple with dictionaries -- data of each row in the block matrix. The keys
src/porepy/viz/diagnostics_mixin.py:                # Sanity check - we're still within the dofs of this equation.
src/porepy/viz/diagnostics_mixin.py:    ) -> Sequence[dict[str, Any]]:
src/porepy/viz/diagnostics_mixin.py:            A tuple with dictionaries -- data of each column in the block matrix. The
src/porepy/viz/diagnostics_mixin.py:    ) -> dict[tuple[int, int], spmatrix]:
src/porepy/viz/diagnostics_mixin.py:            equation_indices: The dictionary with keys - printed names of equations and
src/porepy/viz/diagnostics_mixin.py:                values - indices of these equations in the Jacobian. (Rows index).
src/porepy/viz/diagnostics_mixin.py:            variable_indices: The dictionary with keys - printed names of variables and
src/porepy/viz/diagnostics_mixin.py:                values - indices of these variables in the Jacobian (Columns index).
src/porepy/viz/diagnostics_mixin.py:) -> str:
src/porepy/viz/plot_grid.py:Module for PorePy's plotting functionality for (mixed-dimensional grids) built on matplotlib.
src/porepy/viz/plot_grid.py:represented by cell-wise colors or cell- or face-wise vector arrows.
src/porepy/viz/plot_grid.py:) -> None:
src/porepy/viz/plot_grid.py:    Plot the (possibly mixed-dimensional) grid with data in a 3d framework.
src/porepy/viz/plot_grid.py:        grid (pp.Grid or pp.MixedDimensionalGrid): subdomain or mixed-dimensional grid.
src/porepy/viz/plot_grid.py:            represented (only 1d and 2d). If g is a mixed-dimensional grid the name (key)
src/porepy/viz/plot_grid.py:            represented (only 1d and 2d). If g is a mixed-dimensional grid the name (key)
src/porepy/viz/plot_grid.py:    # if grid is a mixed-dimensional grid
src/porepy/viz/plot_grid.py:    # Grid is a mixed-dimensional grid
src/porepy/viz/plot_grid.py:) -> None:
src/porepy/viz/plot_grid.py:        grid (pp.Grid or pp.MixedDimensionalGrid): subdomain or mixed-dimensional grid.
src/porepy/viz/plot_grid.py:            field to be represented (only 1d and 2d). If g is a mixed-dimensional grid
src/porepy/viz/plot_grid.py:            mixed-dimensional grid the name (key) of the vector field.
src/porepy/viz/plot_grid.py:    #if grid is a mixed-dimensional grid
src/porepy/viz/plot_grid.py:) -> None:
src/porepy/viz/plot_grid.py:        cell_value (np.ndarray): cell-wise scalar values, will be represented by the color
src/porepy/viz/plot_grid.py:) -> None:
src/porepy/viz/plot_grid.py:    Plot a mixed-dimensional grid and selected data.
src/porepy/viz/plot_grid.py:        mdg (pp.MixedDimensionalGrid): Mixed-dimensional grid
src/porepy/viz/plot_grid.py:            extr_value = np.array([np.inf, -np.inf])
src/porepy/viz/plot_grid.py:                (mdg.dim_max(), -1), order="F"
src/porepy/viz/plot_grid.py:                        (3 - vector_value_array.shape[0], vector_value_array.shape[1])
src/porepy/viz/plot_grid.py:# --------- Auxiliary functions
src/porepy/viz/plot_grid.py:            xs (list of np.ndarray): two-element list of x-coordinates of head and tail points
src/porepy/viz/plot_grid.py:            ys (list of np.ndarray): two-element list of y-coordinates of head and tail points
src/porepy/viz/plot_grid.py:            zs (list of np.ndarray): two-element list of z-coordinates of head and tail points
src/porepy/viz/plot_grid.py:    def draw(self, renderer) -> None:
src/porepy/viz/plot_grid.py:def _quiver(sd: pp.Grid, vector_value: np.ndarray, ax: mpl.axes.Axes, **kwargs) -> None:
src/porepy/viz/plot_grid.py:            arrowstyle="-|>",
src/porepy/viz/plot_grid.py:) -> None:
src/porepy/viz/plot_grid.py:def _lim(nodes: np.ndarray) -> tuple[list[float], list[float], list[float]]:
src/porepy/viz/plot_grid.py:) -> "mpl.cm.ScalarMappable":
src/porepy/viz/plot_grid.py:        extr_value (np.ndarray): two-element iterable object containing min and
src/porepy/viz/plot_grid.py:def _add_info(sd: pp.Grid, info: str, ax: mpl.axis.Axis, **kwargs) -> None:
src/porepy/viz/plot_grid.py:def _plot_sd_0d(sd: pp.Grid, ax: mpl.axis.Axis, **kwargs) -> None:
src/porepy/viz/plot_grid.py:) -> None:
src/porepy/viz/plot_grid.py:        def _color_edge(value: float) -> str:
src/porepy/viz/plot_grid.py:        def _color_edge(value: float) -> str:
src/porepy/viz/plot_grid.py:        ax.view_init(90, -90)
src/porepy/viz/plot_grid.py:def _plot_sd_3d(sd: pp.Grid, ax: mpl.axis.Axis, **kwargs) -> None:
src/porepy/viz/plot_grid.py:    def _color_face(value: float) -> list:
src/porepy/viz/fracture_visualization.py:) -> mpl.axis.Axis:
src/porepy/viz/fracture_visualization.py:    # Assign a color to each tag. We define these by RBG-values (simplest
src/porepy/viz/fracture_visualization.py:        "-",
src/porepy/viz/fracture_visualization.py:    # Simple for-loop to draw one fracture after another. Not fancy, but it
src/porepy/viz/fracture_visualization.py:    line_style = kwargs.get("line_style", "o-")
src/porepy/viz/fracture_visualization.py:        d (pp.Domain): Two-dimensional domain specification.
src/porepy/viz/fracture_visualization.py:    # Assign a color to each tag. We define these by RBG-values (simplest
src/porepy/viz/fracture_visualization.py:        "-",
src/porepy/viz/fracture_visualization.py:    # Simple for-loop to draw one well after another. Not fancy, but it
src/porepy/__init__.py:Root directory for the PorePy package. Contains the following sub-packages:
src/porepy/__init__.py:# ------------------------------------
src/porepy/__init__.py:# Mixed-dimensional discretizations and assemblers
src/porepy/composite/mixture.py:    def __init__(self) -> None:
src/porepy/composite/mixture.py:    def __str__(self) -> str:
src/porepy/composite/mixture.py:    def num_phases(self) -> int:
src/porepy/composite/mixture.py:    def phases(self):  # -> Generator[Phase, None, None]:
src/porepy/composite/mixture.py:    def reference_phase(self) -> Phase:
src/porepy/composite/mixture.py:    def add(self, phases: list[Phase]) -> None:
src/porepy/composite/mixture.py:        - hardcoded for two phase flow
src/porepy/composite/mixture.py:        - this is not the right place for this function
src/porepy/composite/mixture.py:        - TODO: redo constraint
src/porepy/composite/mixture.py:    def num_phases(self) -> int:
src/porepy/composite/mixture.py:        - to be called in after_nonlinear_interation. and in prepare_simulation i guess... you have to define the saturation_m before newton
src/porepy/composite/mixture.py:        - hardcoded for two phase flow
src/porepy/composite/mixture.py:        self.get_phase(m)._s = 1 - self.get_phase(m).saturation
src/porepy/composite/phase.py:# then, i guess, pressure_phase = p +- capillary(saturation_phase)
src/porepy/composite/phase.py:    def __init__(self, name: str = "", rho0: float = 1, p0: float = 1, beta: float = 1e-10) -> None:
src/porepy/composite/phase.py:    def name(self) -> str:
src/porepy/composite/phase.py:            s = pp.ad.Scalar(1, "one") - self.equation_system.md_variable(
src/porepy/composite/phase.py:    # Physical properties: ----------------------------------------------------------------
src/porepy/composite/phase.py:            self._beta * self._p0 * (p / self._p0 - 1)
src/porepy/params/bc.py:boundary conditions. There is one class for scalar problems and one for nd-vectors.
src/porepy/params/bc.py:    def internal_to_dirichlet(self, sd: pp.Grid) -> None:
src/porepy/params/bc.py:        Useful for mixed-dimensional deformation problems, where the interface variable
src/porepy/params/bc.py:        self.dim: int = sd.dim - 1
src/porepy/params/bc.py:        # basis to -1 it should be possible to define inflow as positive, but this
src/porepy/params/bc.py:    def __repr__(self) -> str:
src/porepy/params/bc.py:            s += " non-boundary faces.\n"
src/porepy/params/bc.py:            s += " non-boundary faces.\n"
src/porepy/params/bc.py:            s += "non-boundary faces.\n"
src/porepy/params/bc.py:    self.basis (defaults to the coordinate system). The basis is defined face-wise,
src/porepy/params/bc.py:            Assign Dirichlet condition in the x-direction, Robin in the z-direction.
src/porepy/params/bc.py:    def __repr__(self) -> str:
src/porepy/params/bc.py:            - only_dir
src/porepy/params/bc.py:            - only_neu
src/porepy/params/bc.py:                f"{self.is_dir[:, not_bound].any(axis=0).sum()} non-boundary faces.\n"
src/porepy/params/bc.py:                f"{self.is_neu[:, not_bound].any(axis=0).sum()} non-boundary faces.\n"
src/porepy/params/bc.py:                f"{self.is_rob[:, not_bound].any(axis=0).sum()} non-boundary faces.\n"
src/porepy/params/bc.py:    ) -> None:
src/porepy/params/bc.py:    sd: pp.Grid, side: Union[list[str], str], tol: float = 1e-8
src/porepy/params/bc.py:) -> list[np.ndarray]:
src/porepy/params/bc.py:            lays on the boundary. Defaults to 1e-8.
src/porepy/params/bc.py:            faces.append(np.squeeze(np.where(np.abs(sd.face_centers[0] - xm) < tol)))
src/porepy/params/bc.py:            faces.append(np.squeeze(np.where(np.abs(sd.face_centers[0] - xm) < tol)))
src/porepy/params/bc.py:            faces.append(np.squeeze(np.where(np.abs(sd.face_centers[1] - xm) < tol)))
src/porepy/params/bc.py:            faces.append(np.squeeze(np.where(np.abs(sd.face_centers[1] - xm) < tol)))
src/porepy/params/bc.py:            faces.append(np.squeeze(np.where(np.abs(sd.face_centers[2] - xm) < tol)))
src/porepy/params/bc.py:            faces.append(np.squeeze(np.where(np.abs(sd.face_centers[2] - xm) < tol)))
src/porepy/params/tensor.py:    """Cell-wise permeability represented by (3, 3, Nc)-array, where Nc
src/porepy/params/tensor.py:    The permeability is always 3-dimensional (since the geometry is always 3D),
src/porepy/params/tensor.py:            kxx (np.ndarray): Nc array, with cell-wise values of kxx permeability.
src/porepy/params/tensor.py:                "components in x-direction"
src/porepy/params/tensor.py:        # Onsager's principle - tensor should be positive definite
src/porepy/params/tensor.py:        if np.any((kxx * kyy - kxy * kxy) < 0):
src/porepy/params/tensor.py:                "components in y-direction"
src/porepy/params/tensor.py:        # Onsager's principle - tensor should be positive definite
src/porepy/params/tensor.py:                kxx * (kyy * kzz - kyz * kyz)
src/porepy/params/tensor.py:                - kxy * (kxy * kzz - kxz * kyz)
src/porepy/params/tensor.py:                + kxz * (kxy * kyz - kxz * kyy)
src/porepy/params/tensor.py:                "components in z-direction"
src/porepy/params/tensor.py:    def copy(self) -> "SecondOrderTensor":
src/porepy/params/tensor.py:    def rotate(self, R: np.ndarray) -> None:
src/porepy/params/tensor.py:# ----------------------------------------------------------------------#
src/porepy/params/tensor.py:    """Cell-wise representation of fourth order tensor, represented by (3^2, 3^2 ,Nc)-array,
src/porepy/params/tensor.py:        values (numpy.ndarray): dimensions (3^2, 3^2, nc), cell-wise
src/porepy/params/tensor.py:        """Constructor for fourth order tensor on Lame-parameter form
src/porepy/params/tensor.py:            raise ValueError("mu should be 1-D")
src/porepy/params/tensor.py:            raise ValueError("Lmbda should be 1-D")
src/porepy/params/tensor.py:            raise ValueError("Phi should be 1-D")
src/porepy/params/tensor.py:        # Basis for the contributions of mu, lmbda and phi is hard-coded
src/porepy/params/tensor.py:        # Expand dimensions to prepare for cell-wise representation
src/porepy/params/tensor.py:    def copy(self) -> "FourthOrderTensor":
src/porepy/params/data.py:As an example, the standard incompressible convection-diffusion equation for temperature
src/porepy/params/data.py:    c \rho dT/dt + v \cdot \nabla T - \nabla \cdot (D \nabla T) = f
src/porepy/params/data.py:mixed-dimensional grid), consider:
src/porepy/params/data.py:    processes (e.g. different types of boundary conditions in multi-physics
src/porepy/params/data.py:    one sub-dictionary for each keyword.
src/porepy/params/data.py:    ) -> None:
src/porepy/params/data.py:    ) -> None:
src/porepy/params/data.py:    def overwrite_shared_parameters(self, parameters: list[str], values: list) -> None:
src/porepy/params/data.py:    ) -> None:
src/porepy/params/data.py:    ) -> list:
src/porepy/params/data.py:) -> dict:
src/porepy/params/data.py:) -> dict:
src/porepy/params/data.py:def modify_variable(variable, new_value) -> None:
src/porepy/params/data.py:def add_nonpresent_dictionary(dictionary: dict, key: str) -> None:
src/porepy/params/data.py:def add_discretization_matrix_keyword(dictionary: dict, keyword: str) -> dict:
src/porepy/params/data.py:    """Ensure presence of sub-dictionaries.
src/porepy/params/data.py:    Specific method ensuring that there is a sub-dictionary for discretization matrices,
src/porepy/params/data.py:    and that this contains a sub-sub-dictionary for the given key. Called previous to
src/porepy/params/parameter_dictionaries.py:        in_data: Dictionary containing any custom (non-default) parameter values.
src/porepy/params/parameter_dictionaries.py:        in_data: Dictionary containing any custom (non-default) parameter values.
src/porepy/params/parameter_dictionaries.py:        in_data: Dictionary containing any custom (non-default) parameter values.
src/porepy/params/rock.py:def poisson_from_lame(mu: float, lmbda: float) -> float:
src/porepy/params/rock.py:def lame_from_young_poisson(e: float, nu: float) -> tuple[float, float]:
src/porepy/params/rock.py:    lmbda = e * nu / ((1 + nu) * (1 - 2 * nu))
src/porepy/params/rock.py:def young_from_lame(lmbda: float, mu: float) -> float:
src/porepy/params/rock.py:def bulk_from_lame(lmbda: float, mu: float) -> float:
src/porepy/params/rock.py:    def specific_heat_capacity(self, theta: Optional[float] = None) -> float:
src/porepy/params/rock.py:    def thermal_conductivity(self, _) -> float:
src/porepy/params/rock.py:        http://civilblog.org/2015/02/13/what-are-the-values-of-modulus-of-elasticity-poissons-ratio-for-different-rocks/
src/porepy/params/rock.py:        # Reported range for Young's modulus is 0.5-8.6
src/porepy/params/rock.py:        # Reported range for Poisson's ratio is 0.066-0.125
src/porepy/params/rock.py:    def specific_heat_capacity(self, theta: Optional[float] = None) -> float:
src/porepy/params/rock.py:        eta = 8.9 * 1e-2
src/porepy/params/rock.py:        return c_ref + eta * (theta - theta_ref)
src/porepy/params/rock.py:        http://civilblog.org/2015/02/13/what-are-the-values-of-modulus-of-elasticity-poissons-ratio-for-different-rocks/
src/porepy/params/rock.py:        self.PERMEABILITY = 1e-5 * pp.DARCY
src/porepy/params/rock.py:        # Reported range for Young's modulus is 0.8-3.0
src/porepy/params/rock.py:        # Reported range for Poisson's ratio is 0.11-0.54 (the latter is strange)
src/porepy/params/rock.py:    def specific_heat_capacity(self, theta: Optional[float] = None) -> float:
src/porepy/params/rock.py:        eta = 10.26 * 1e-2
src/porepy/params/rock.py:        return c_ref + eta * (theta - theta_ref)
src/porepy/params/rock.py:        http://civilblog.org/2015/02/13/what-are-the-values-of-modulus-of-elasticity-poissons-ratio-for-different-rocks/
src/porepy/params/rock.py:    https://www.jsg.utexas.edu/tyzhu/files/Some-Useful-Numbers.pdf
src/porepy/params/rock.py:        self.PERMEABILITY = 1e-8 * pp.DARCY
src/porepy/params/rock.py:        # Reported range for Young's modulus by jsg is 10-70GPa
src/porepy/params/rock.py:        # Reported range for Poisson's ratio is 0.125-0.25
src/porepy/params/rock.py:        # From https://www.engineeringtoolbox.com/linear-expansion-coefficients-d_95.html
src/porepy/params/rock.py:        self.THERMAL_EXPANSION = 8e-6 * pp.METER / (pp.METER * pp.CELSIUS)
src/porepy/params/rock.py:    def specific_heat_capacity(self, theta: Optional[float] = None) -> float:
src/porepy/params/rock.py:        return c_ref + eta * (theta - theta_ref)
src/porepy/params/rock.py:    def thermal_conductivity(self, theta: Optional[float] = None) -> float:
src/porepy/params/fluid.py:    def thermal_expansion(self, delta_theta: float) -> float:
src/porepy/params/fluid.py:    def density(self, theta: Optional[float] = None) -> float:
src/porepy/params/fluid.py:    def thermal_conductivity(self, theta: Optional[float] = None) -> float:
src/porepy/params/fluid.py:    def specific_heat_capacity(self, theta: Optional[float] = None) -> float:
src/porepy/params/fluid.py:    def dynamic_viscosity(self, theta: Optional[float] = None) -> float:
src/porepy/params/fluid.py:    ) -> float:
src/porepy/params/fluid.py:        self.COMPRESSIBILITY = 4e-10 / pp.PASCAL  # Moderate dependency on theta
src/porepy/params/fluid.py:    def thermal_expansion(self, delta_theta: float) -> float:
src/porepy/params/fluid.py:            + 1.32 * 1e-6 * delta_theta
src/porepy/params/fluid.py:            + 1.09 * 1e-8 * np.power(delta_theta, 2)
src/porepy/params/fluid.py:    def density(self, theta: Optional[float] = None) -> float:
src/porepy/params/fluid.py:        return rho_0 / (1.0 + self.thermal_expansion(theta - theta_0))
src/porepy/params/fluid.py:    def thermal_conductivity(self, theta: Optional[float] = None) -> float:
src/porepy/params/fluid.py:            - 1.01 * 1e-5 * np.power(theta, 2)
src/porepy/params/fluid.py:            + 6.71 * 1e-9 * np.power(theta, 3)
src/porepy/params/fluid.py:    def specific_heat_capacity(self, theta: Optional[float] = None) -> float:
src/porepy/params/fluid.py:        return 4245 - 1.841 * theta
src/porepy/params/fluid.py:    def dynamic_viscosity(self, theta: Optional[float] = None) -> float:
src/porepy/params/fluid.py:        mu_0 = 2.414 * 1e-5 * (pp.PASCAL * pp.SECOND)
src/porepy/params/fluid.py:        return mu_0 * np.power(10, 247.8 / (theta - 140.0))
src/porepy/params/fluid.py:    ) -> float:
mypy.ini:[mypy-scipy]
mypy.ini:[mypy-scipy.sparse]
mypy.ini:[mypy-scipy.sparse.linalg]
mypy.ini:[mypy-scipy.spatial]
mypy.ini:[mypy-scipy.optimize]
mypy.ini:[mypy-scipy.spatial.qhull]
mypy.ini:[mypy-networkx]
mypy.ini:[mypy-sympy.geometry]
mypy.ini:[mypy-meshio]
mypy.ini:[mypy-shapely]
mypy.ini:[mypy-shapely.geometry]
mypy.ini:[mypy-shapely.speedups]
mypy.ini:[mypy-gmsh]
mypy.ini:[mypy-porepy.numerics.fv.cythoninvert]
mypy.ini:[mypy-porepy_config]
mypy.ini:[mypy-pymetis]
mypy.ini:[mypy-robust_point_in_polyhedron]
mypy.ini:[mypy-numba]
mypy.ini:[mypy-matplotlib]
mypy.ini:[mypy-matplotlib.patches]
mypy.ini:[mypy-matplotlib.pyplot]
mypy.ini:[mypy-matplotlib.collections]
mypy.ini:[mypy-mpl_toolkits.mplot3d]
mypy.ini:[mypy-mpl_toolkits.mplot3d.art3d]
mypy.ini:[mypy-deepdiff]
pp_ad.py:z = np.dot(x, y)  # this is element-wise. ?
pp_ad.py:# tmp = pp.ad.functions.maximum(-np.real(tmp), -1e6) + np.imag(tmp) * 1j
pp_ad.py:# heaviside jacobian: -----------------------------
examples/terzaghi_biot.py:Terzaghi's problem is a well known one-dimensional poroelastic problem [1 - 3].
examples/terzaghi_biot.py:Even though Terzaghi's consolidation problem is strictly speaking one-dimensional, the
examples/terzaghi_biot.py:implemented setup employs a two-dimensional Cartesian grid with roller boundary
examples/terzaghi_biot.py:conditions for the mechanical subproblem and no-flux boundary conditions for the flow
examples/terzaghi_biot.py:subproblem on the sides of the domain such that the one-dimensional process can be
examples/terzaghi_biot.py:The reason why we need to employ a two-dimensional grid is because PorePy only supports
examples/terzaghi_biot.py:one-dimensional subdomains.
examples/terzaghi_biot.py:    - [1] von Terzaghi, K. (1923). Die berechnung der durchassigkeitsziffer des tones
examples/terzaghi_biot.py:      Wiss. Math. Naturwiss. Kl. Abt. 2A, 132, 105-124.
examples/terzaghi_biot.py:    - [2] von Terzaghi, K. (1944). Theoretical Soil Mechanics.
examples/terzaghi_biot.py:    - [3] Verruijt, A. (2017). An Introduction to Soil Mechanics (Vol. 30). Springer.
examples/terzaghi_biot.py:    "specific_storage": 0,  # [Pa * m^-1]
examples/terzaghi_biot.py:    "permeability": 9.86e-14,  # [m^2]
examples/terzaghi_biot.py:    "viscosity": 1e-3,  # [Pa * s]
examples/terzaghi_biot.py:    "density": 1e3,  # [kg * m^-3]
examples/terzaghi_biot.py:# -----> Data-saving
examples/terzaghi_biot.py:    """L2-discrete relative error for the pressure."""
examples/terzaghi_biot.py:    """Method that non-dimensionalizes time. The method is provided by the mixin class
examples/terzaghi_biot.py:    """Method that non-dimensionalises length. The method is provided by the mixin
examples/terzaghi_biot.py:    """Method that non-dimensionalises pressure. The method is provided by the mixin
examples/terzaghi_biot.py:    """Method for computing the discrete relative L2-error. Normally provided by a
examples/terzaghi_biot.py:    def collect_data(self) -> TerzaghiSaveData:
examples/terzaghi_biot.py:            approx_consolidation_degree - exact_consolidation_degree
examples/terzaghi_biot.py:# -----> Exact solution
examples/terzaghi_biot.py:    def __init__(self, setup) -> None:
examples/terzaghi_biot.py:    def pressure(self, y: np.ndarray, t: number) -> np.ndarray:
examples/terzaghi_biot.py:        nondim_y = self.setup.nondim_length(y)  # [-]
examples/terzaghi_biot.py:        nondim_t = self.setup.nondim_time(t)  # [-]
examples/terzaghi_biot.py:                    (((-1) ** (i - 1)) / (2 * i - 1))
examples/terzaghi_biot.py:                    * np.cos((2 * i - 1) * (np.pi / 2) * nondim_y)
examples/terzaghi_biot.py:                    * np.exp((-((2 * i - 1) ** 2)) * (np.pi**2 / 4) * nondim_t)
examples/terzaghi_biot.py:    def consolidation_degree(self, t: number) -> float:
examples/terzaghi_biot.py:            Degree of consolidation [-] for the given time ``t``.
examples/terzaghi_biot.py:        t_nondim = self.setup.nondim_time(t)  # [-]
examples/terzaghi_biot.py:                    / ((2 * i - 1) ** 2)
examples/terzaghi_biot.py:                    * np.exp(-((2 * i - 1) ** 2) * (np.pi**2 / 4) * t_nondim)
examples/terzaghi_biot.py:            deg_cons = 1 - (8 / (np.pi**2)) * sum_series
examples/terzaghi_biot.py:# -----> Utilities
examples/terzaghi_biot.py:    # ---> Derived physical quantities
examples/terzaghi_biot.py:    def gravity_acceleration(self) -> number:
examples/terzaghi_biot.py:        """Gravity acceleration in scaled [m * s^-2]."""
examples/terzaghi_biot.py:        return pp.GRAVITY_ACCELERATION * scaling_factor  # scaled [m * s^-2]
examples/terzaghi_biot.py:    def confined_compressibility(self) -> number:
examples/terzaghi_biot.py:        """Compute confined compressibility in scaled [Pa^-1].
examples/terzaghi_biot.py:        m_v = 1 / (2 * mu_s + lambda_s)  # scaled [Pa^-1]
examples/terzaghi_biot.py:    def consolidation_coefficient(self) -> number:
examples/terzaghi_biot.py:        """Compute consolidation coefficient in scaled [m^2 * s^-1].
examples/terzaghi_biot.py:        rho = self.fluid.density()  # scaled [kg * m^-3]
examples/terzaghi_biot.py:        g = self.gravity_acceleration()  # scaled [m * s^-2]
examples/terzaghi_biot.py:        gamma_f = rho * g  # specific weight in scaled [Pa * m^-1]
examples/terzaghi_biot.py:        hydraulic_conductivity = (k * gamma_f) / mu_f  # scaled [m * s^-1]
examples/terzaghi_biot.py:        storage = self.solid.specific_storage()  # scaled [Pa^-1]
examples/terzaghi_biot.py:        alpha_biot = self.solid.biot_coefficient()  # scaled [-]
examples/terzaghi_biot.py:        m_v = self.confined_compressibility()  # scaled [Pa^-1]
examples/terzaghi_biot.py:    # ---> Non-dimensionalization methods
examples/terzaghi_biot.py:    def nondim_time(self, t: number) -> number:
examples/terzaghi_biot.py:        """Non-dimensional time.
examples/terzaghi_biot.py:        c_v = self.consolidation_coefficient()  # scaled [m * s^-2]
examples/terzaghi_biot.py:    def nondim_length(self, length: np.ndarray) -> np.ndarray:
examples/terzaghi_biot.py:        """Non-dimensional length.
examples/terzaghi_biot.py:            Non-dimensionalized length.
examples/terzaghi_biot.py:    def nondim_pressure(self, pressure: np.ndarray) -> np.ndarray:
examples/terzaghi_biot.py:            Non-dimensional pressure.
examples/terzaghi_biot.py:    # ---> Postprocessing methods
examples/terzaghi_biot.py:    def numerical_consolidation_degree(self) -> number:
examples/terzaghi_biot.py:        m_v = self.confined_compressibility()  # scaled [m * s^-2]
examples/terzaghi_biot.py:            consol_deg = (np.max(np.abs(u_faces[1::2])) - u_0) / (u_inf - u_0)
examples/terzaghi_biot.py:    # ---> Methods related to plotting
examples/terzaghi_biot.py:    def plot_results(self) -> None:
examples/terzaghi_biot.py:    def _pressure_plot(self, color_map: mcolors.ListedColormap) -> None:
examples/terzaghi_biot.py:        """Plot non-dimensional pressure profiles.
examples/terzaghi_biot.py:        nondim_vertical_coo = self.nondim_length(sd.cell_centers[1])  # [-]
examples/terzaghi_biot.py:        ax.set_xlabel(r"Non-dimensional pressure, $p/p_0$", fontsize=15)
examples/terzaghi_biot.py:        ax.set_ylabel(r"Non-dimensional height, $y/h$", fontsize=15)
examples/terzaghi_biot.py:    def _consolidation_degree_plot(self, color_map: mcolors.ListedColormap) -> None:
examples/terzaghi_biot.py:        """Plot the degree of consolidation versus non-dimensional time.
examples/terzaghi_biot.py:        nondim_t_ex = np.asarray([self.nondim_time(t) for t in t_ex])  # [-]
examples/terzaghi_biot.py:        )  # [-]
examples/terzaghi_biot.py:        )  # [-]
examples/terzaghi_biot.py:        ax.set_xlabel(r"Non-dimensional time, $t\,c_f\,h^{-2}$", fontsize=15)
examples/terzaghi_biot.py:# -----> Geometry
examples/terzaghi_biot.py:    def height(self) -> pp.number:
examples/terzaghi_biot.py:    def set_domain(self) -> None:
examples/terzaghi_biot.py:    def meshing_arguments(self) -> dict:
examples/terzaghi_biot.py:# -----> Boundary conditions
examples/terzaghi_biot.py:    """Mixed-dimensional grid for the current model. Normally defined in a mixin
examples/terzaghi_biot.py:    representing solid-related quantities. Normally, this is set by an instance of
examples/terzaghi_biot.py:    def applied_load(self) -> pp.number:
examples/terzaghi_biot.py:    def bc_type_mechanics(self, sd: pp.Grid) -> pp.BoundaryConditionVectorial:
examples/terzaghi_biot.py:    ) -> np.ndarray:
examples/terzaghi_biot.py:            Array of boundary values. Only non-zero values are the ones associated to
examples/terzaghi_biot.py:        bc_values[1, north] = -self.applied_load() * sd.face_areas[north]
examples/terzaghi_biot.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
examples/terzaghi_biot.py:# -----> Solution strategy
examples/terzaghi_biot.py:    def __init__(self, params: dict) -> None:
examples/terzaghi_biot.py:    def initial_condition(self) -> None:
examples/terzaghi_biot.py:    def after_simulation(self) -> None:
examples/terzaghi_biot.py:    def _is_nonlinear_problem(self) -> bool:
examples/terzaghi_biot.py:        - vertical_load (pp.number): Applied vertical stress in [Pa]. Default is 6e8.
examples/terzaghi_biot.py:        - height (pp.number): Height of the domain in [m]. Default is 1.
examples/terzaghi_biot.py:        - upper_limit_summation (int): Number of terms to include for computing the
examples/terzaghi_biot.py:        - material_constants (dict): Dictionary containing the solid and fluid
examples/terzaghi_biot.py:        - time_manager (pp.TimeManager): Time manager object.
examples/terzaghi_biot.py:        - plot_results (bool): Whether to plot the results in non-dimensional form.
examples/terzaghi_biot.py:        - num_cells (bool): Number of cells used for meshing the pseudo one-dimensional
examples/terzaghi_biot.py:        - units (pp.Units): Object containing scaling of base magnitudes. No scaling
examples/terzaghi_biot.py:        - solid:
examples/terzaghi_biot.py:            - biot_coefficient (Required value = 1)
examples/terzaghi_biot.py:            - lame_lambda
examples/terzaghi_biot.py:            - permeability
examples/terzaghi_biot.py:            - shear_modulus
examples/terzaghi_biot.py:            - specific_storage (Required value = 0)
examples/terzaghi_biot.py:        - fluid:
examples/terzaghi_biot.py:            - density
examples/terzaghi_biot.py:            - viscosity
examples/mandel_biot.py:is discretized using MPFA/MPSA-FV in space and backward Euler in time. For further
examples/mandel_biot.py:    - [1] Mandel, J.: Consolidation des sols (étude mathématique). Geotechnique.
examples/mandel_biot.py:    - [2] Cheng, A.H.-D., Detournay, E.: A direct boundary element method for plane
examples/mandel_biot.py:    - [3] Mikelić, A., Wang, B., & Wheeler, M. F. (2014). Numerical convergence study of
examples/mandel_biot.py:      18(3), 325-341.
examples/mandel_biot.py:    - [4] Keilegavlen, E., Berge, R., Fumagalli, A. et al. PorePy: an open-source
examples/mandel_biot.py:    "specific_storage": 6.0606e-11,  # [Pa^-1]
examples/mandel_biot.py:    "permeability": 9.869e-14,  # [m^2]
examples/mandel_biot.py:    "biot_coefficient": 1.0,  # [-]
examples/mandel_biot.py:    "density": 1e3,  # [kg * m^-3]
examples/mandel_biot.py:    "viscosity": 1e-3,  # [Pa * s]
examples/mandel_biot.py:# -----> Data-saving
examples/mandel_biot.py:    """L2-discrete relative error for the displacement."""
examples/mandel_biot.py:    """L2-discrete relative error for the Darcy flux."""
examples/mandel_biot.py:    """L2-discrete relative error for the poroelastic force."""
examples/mandel_biot.py:    """L2-discrete relative error for the pressure."""
examples/mandel_biot.py:    representing fluid-related quantities. Normally, this is set by an instance of
examples/mandel_biot.py:    """Method for computing the discrete relative L2-error. Normally provided by a
examples/mandel_biot.py:    def collect_data(self) -> MandelSaveData:
examples/mandel_biot.py:            approx_consolidation_degree[0] - exact_consolidation_degree
examples/mandel_biot.py:            approx_consolidation_degree[1] - exact_consolidation_degree
examples/mandel_biot.py:# -----> Exact solution
examples/mandel_biot.py:    def __init__(self, setup) -> None:
examples/mandel_biot.py:    def approximate_roots(self) -> np.ndarray:
examples/mandel_biot.py:               f(x) = \\tan{x} - \\frac{1 - \\nu}{\\nu_u - \\nu} x = 0
examples/mandel_biot.py:        nu_s = self.setup.poisson_coefficient()  # [-]
examples/mandel_biot.py:        nu_u = self.setup.undrained_poisson_coefficient()  # [-]
examples/mandel_biot.py:            y = np.tan(x) - ((1 - nu_s) / (nu_u - nu_s)) * x
examples/mandel_biot.py:                x0 + np.pi / 2 - 2.2204e-9,  # right point
examples/mandel_biot.py:                xtol=1e-30,  # absolute tolerance
examples/mandel_biot.py:                rtol=1e-14,  # relative tolerance
examples/mandel_biot.py:    # ---> Pressure
examples/mandel_biot.py:    def pressure_profile(self, x: np.ndarray, t: number) -> np.ndarray:
examples/mandel_biot.py:        F = self.setup.vertical_load()  # scaled [N * m^-1]
examples/mandel_biot.py:        B = self.setup.skempton_coefficient()  # [-]
examples/mandel_biot.py:        nu_u = self.setup.undrained_poisson_coefficient()  # [-]
examples/mandel_biot.py:        c_f = self.setup.fluid_diffusivity()  # scaled [m^2 * s^-1]
examples/mandel_biot.py:                ((np.sin(aa_n)) / (aa_n - (np.sin(aa_n) * np.cos(aa_n))))
examples/mandel_biot.py:                * (np.cos((aa_n * x) / a) - np.cos(aa_n))
examples/mandel_biot.py:                * np.exp((-(aa_n**2) * c_f * t) / (a**2)),
examples/mandel_biot.py:    def pressure(self, sd: pp.Grid, t: number) -> np.ndarray:
examples/mandel_biot.py:    # ---> Displacements
examples/mandel_biot.py:    def horizontal_displacement_profile(self, x: np.ndarray, t: number) -> np.ndarray:
examples/mandel_biot.py:        F = self.setup.vertical_load()  # scaled [N * m^-1]
examples/mandel_biot.py:        nu_s = self.setup.poisson_coefficient()  # [-]
examples/mandel_biot.py:        nu_u = self.setup.undrained_poisson_coefficient()  # [-]
examples/mandel_biot.py:        c_f = self.setup.fluid_diffusivity()  # scaled [m^2 * s^-1]
examples/mandel_biot.py:            cx1 = -((F * nu_u) / (mu_s * a))
examples/mandel_biot.py:                / (aa_n - np.sin(aa_n) * np.cos(aa_n))
examples/mandel_biot.py:                * np.exp((-(aa_n**2) * c_f * t) / (a**2)),
examples/mandel_biot.py:                (np.cos(aa_n) / (aa_n - (np.sin(aa_n) * np.cos(aa_n))))
examples/mandel_biot.py:                * np.exp((-(aa_n**2) * c_f * t) / (a**2)),
examples/mandel_biot.py:    def vertical_displacement_profile(self, y: np.ndarray, t: number) -> np.ndarray:
examples/mandel_biot.py:        F = self.setup.vertical_load()  # scaled [N * m^-1]
examples/mandel_biot.py:        nu_s = self.setup.poisson_coefficient()  # [-]
examples/mandel_biot.py:        nu_u = self.setup.undrained_poisson_coefficient()  # [-]
examples/mandel_biot.py:        c_f = self.setup.fluid_diffusivity()  # scaled [m^2 * s^-1]
examples/mandel_biot.py:            uy = ((-F * (1 - nu_u)) / (2 * mu_s * a)) * y
examples/mandel_biot.py:            cy0 = (-F * (1 - nu_s)) / (2 * mu_s * a)
examples/mandel_biot.py:            cy1 = F * (1 - nu_u) / (mu_s * a)
examples/mandel_biot.py:                ((np.sin(aa_n) * np.cos(aa_n)) / (aa_n - np.sin(aa_n) * np.cos(aa_n)))
examples/mandel_biot.py:                * np.exp((-(aa_n**2) * c_f * t) / (a**2)),
examples/mandel_biot.py:    def displacement(self, sd: pp.Grid, t: number) -> np.ndarray:
examples/mandel_biot.py:    # ---> Flux
examples/mandel_biot.py:    def horizontal_velocity_profile(self, x: np.ndarray, t: number) -> np.ndarray:
examples/mandel_biot.py:        """Exact horizontal specific discharge in scaled [m * s^-1].
examples/mandel_biot.py:        F = self.setup.vertical_load()  # scaled [N * m^-1]
examples/mandel_biot.py:        B = self.setup.skempton_coefficient()  # [-]
examples/mandel_biot.py:        nu_u = self.setup.undrained_poisson_coefficient()  # [-]
examples/mandel_biot.py:        c_f = self.setup.fluid_diffusivity()  # scaled [m^2 * s^-1]
examples/mandel_biot.py:                / (aa_n - np.sin(aa_n) * np.cos(aa_n))
examples/mandel_biot.py:                * np.exp((-(aa_n**2) * c_f * t) / (a**2)),
examples/mandel_biot.py:    def flux(self, sd: pp.Grid, t: number) -> np.ndarray:
examples/mandel_biot.py:        """Evaluate exact Darcy flux in scaled [m^3 * s^-1] at the face centers.
examples/mandel_biot.py:    # ---> Force
examples/mandel_biot.py:    def vertical_stress_profile(self, x: np.ndarray, t: number) -> np.ndarray:
examples/mandel_biot.py:        F = self.setup.vertical_load()  # scaled [N * m^-1]
examples/mandel_biot.py:        nu_s = self.setup.poisson_coefficient()  # [-]
examples/mandel_biot.py:        nu_u = self.setup.undrained_poisson_coefficient()  # [-]
examples/mandel_biot.py:        c_f = self.setup.fluid_diffusivity()  # scaled [m^2 * s^-1]
examples/mandel_biot.py:            s_yy = -F / a * np.ones_like(x)
examples/mandel_biot.py:            c0 = -F / a
examples/mandel_biot.py:            c1 = (-2 * F * (nu_u - nu_s)) / (a * (1 - nu_s))
examples/mandel_biot.py:                / (aa_n - np.sin(aa_n) * np.cos(aa_n))
examples/mandel_biot.py:                * np.exp((-(aa_n**2) * c_f * t) / (a**2)),
examples/mandel_biot.py:                / (aa_n - np.sin(aa_n) * np.cos(aa_n))
examples/mandel_biot.py:                * np.exp((-(aa_n**2) * c_f * t) / (a**2)),
examples/mandel_biot.py:    def poroelastic_force(self, sd: pp.Grid, t: number) -> np.ndarray:
examples/mandel_biot.py:    # ---> Degree of consolidation
examples/mandel_biot.py:    def degree_of_consolidation(self, t: number) -> number:
examples/mandel_biot.py:        """Exact degree of consolidation [-].
examples/mandel_biot.py:        nu_u = self.setup.undrained_poisson_coefficient()  # [-]
examples/mandel_biot.py:        nu_s = self.setup.poisson_coefficient()  # [-]
examples/mandel_biot.py:        F = self.setup.vertical_load()  # scaled [N * m^-1]
examples/mandel_biot.py:        uy_b_0 = (-F * b * (1 - nu_u)) / (2 * mu_s * a)
examples/mandel_biot.py:        uy_b_inf = (-F * b * (1 - nu_s)) / (2 * mu_s * a)
examples/mandel_biot.py:        consolidation_degree = (uy_b_t - uy_b_0) / (uy_b_inf - uy_b_0)
examples/mandel_biot.py:# -----> Utilities
examples/mandel_biot.py:    # -----> Derived physical constants
examples/mandel_biot.py:    def bulk_modulus(self) -> number:
examples/mandel_biot.py:    def poisson_coefficient(self) -> number:
examples/mandel_biot.py:        """Set Poisson coefficient [-]
examples/mandel_biot.py:        return (3 * K_s - 2 * mu_s) / (2 * (3 * K_s + mu_s))
examples/mandel_biot.py:    def undrained_bulk_modulus(self) -> number:
examples/mandel_biot.py:        alpha_biot = self.solid.biot_coefficient()  # [-]
examples/mandel_biot.py:        S_epsilon = self.solid.specific_storage()  # scaled [Pa^-1]
examples/mandel_biot.py:    def skempton_coefficient(self) -> number:
examples/mandel_biot.py:        """Set Skempton's coefficient [-].
examples/mandel_biot.py:        alpha_biot = self.solid.biot_coefficient()  # [-]
examples/mandel_biot.py:        S_epsilon = self.solid.specific_storage()  # scaled [Pa^-1]
examples/mandel_biot.py:    def undrained_poisson_coefficient(self) -> float:
examples/mandel_biot.py:        """Set Poisson coefficient under undrained conditions [-].
examples/mandel_biot.py:        nu_s = self.poisson_coefficient()  # [-]
examples/mandel_biot.py:        B = self.skempton_coefficient()  # [-]
examples/mandel_biot.py:        return (3 * nu_s + B * (1 - 2 * nu_s)) / (3 - B * (1 - 2 * nu_s))
examples/mandel_biot.py:    def fluid_diffusivity(self) -> number:
examples/mandel_biot.py:        """Set fluid diffusivity scaled [m^2 * s^-1].
examples/mandel_biot.py:        B = self.skempton_coefficient()  # [-]
examples/mandel_biot.py:        nu_s = self.poisson_coefficient()  # [-]
examples/mandel_biot.py:        nu_u = self.undrained_poisson_coefficient()  # [-]
examples/mandel_biot.py:        c_f = (2 * k_s * (B**2) * mu_s * (1 - nu_s) * (1 + nu_u) ** 2) / (
examples/mandel_biot.py:            9 * mu_f * (1 - nu_u) * (nu_u - nu_s)
examples/mandel_biot.py:    # -----> Non-dimensionalization methods
examples/mandel_biot.py:    def nondim_time(self, t: Union[number, np.ndarray]) -> Union[number, np.ndarray]:
examples/mandel_biot.py:        """Non-dimensionalize time.
examples/mandel_biot.py:        c_f = self.fluid_diffusivity()  # scaled [m^2 * s^-1]
examples/mandel_biot.py:    def nondim_x(self, x: np.ndarray) -> np.ndarray:
examples/mandel_biot.py:    def nondim_y(self, y: np.ndarray) -> np.ndarray:
examples/mandel_biot.py:        """Non-dimensionalize length in the vertical direction.
examples/mandel_biot.py:    def nondim_pressure(self, p: np.ndarray) -> np.ndarray:
examples/mandel_biot.py:        """Non-dimensionalize pressure.
examples/mandel_biot.py:            This method is also valid to non-dimensionalize stress.
examples/mandel_biot.py:        F = self.vertical_load()  # scaled [N * m^-1]
examples/mandel_biot.py:    def nondim_flux(self, q_x: np.ndarray) -> np.ndarray:
examples/mandel_biot.py:        """Non-dimensionalize horizontal component of the specific discharge vector.
examples/mandel_biot.py:            q_x: Horizontal component of the specific discharge in scaled [m * s^-1].
examples/mandel_biot.py:        F = self.vertical_load()  # scaled [N * m^-1]
examples/mandel_biot.py:        factor = (F * k) / (mu * a**2)  # scaled [m * s^-1]
examples/mandel_biot.py:    # -----> Post-processing methods
examples/mandel_biot.py:    def south_cells(self) -> np.ndarray:
examples/mandel_biot.py:    def east_cells(self) -> np.ndarray:
examples/mandel_biot.py:    def numerical_consolidation_degree(self) -> tuple[number, number]:
examples/mandel_biot.py:        """Numerical consolidation degree [-].
examples/mandel_biot.py:        F = self.vertical_load()  # scaled [N * m^-1]
examples/mandel_biot.py:        nu_s = self.poisson_coefficient()  # [-]
examples/mandel_biot.py:        nu_u = self.undrained_poisson_coefficient()  # [-]
examples/mandel_biot.py:            consol_deg_x = (ux_a_t - ux_a_0) / (ux_a_inf - ux_a_0)
examples/mandel_biot.py:            uy_b_0 = (-F * b * (1 - nu_u)) / (2 * mu_s * a)
examples/mandel_biot.py:            uy_b_inf = (-F * b * (1 - nu_s)) / (2 * mu_s * a)
examples/mandel_biot.py:            consol_deg_y = (uy_b_t - uy_b_0) / (uy_b_inf - uy_b_0)
examples/mandel_biot.py:    # -----> Plotting methods
examples/mandel_biot.py:        num_lines = len(self.time_manager.schedule) - 1
examples/mandel_biot.py:    def _plot_pressure(self, color_map: mcolors.ListedColormap) -> None:
examples/mandel_biot.py:        """Plot non-dimensional pressure profiles.
examples/mandel_biot.py:        ax.set_xlabel(r"Non-dimensional horizontal distance, $x ~ a^{-1}$", fontsize=13)
examples/mandel_biot.py:        ax.set_ylabel(r"Non-dimensional pressure, $p ~ a ~ F^{-1}$", fontsize=13)
examples/mandel_biot.py:    def _plot_horizontal_displacement(self, color_map: mcolors.ListedColormap) -> None:
examples/mandel_biot.py:        """Plot non-dimensional horizontal displacement profiles.
examples/mandel_biot.py:        ax.set_xlabel(r"Non-dimensional horizontal distance, $x ~ a^{-1}$", fontsize=13)
examples/mandel_biot.py:            r"Non-dimensional horizontal displacement, $u_x ~ a^{-1}$", fontsize=13
examples/mandel_biot.py:    def _plot_vertical_displacement(self, color_map: mcolors.ListedColormap) -> None:
examples/mandel_biot.py:        """Plot non-dimensional vertical displacement profiles.
examples/mandel_biot.py:        ax.set_xlabel(r"Non-dimensional vertical distance, $y ~ b^{-1}$", fontsize=13)
examples/mandel_biot.py:            r"Non-dimensional vertical displacement, $u_y ~ b^{-1}$", fontsize=13
examples/mandel_biot.py:    def _plot_horizontal_flux(self, color_map: mcolors.ListedColormap) -> None:
examples/mandel_biot.py:        """Plot non-dimensional horizontal Darcy flux profiles.
examples/mandel_biot.py:        ax.set_xlabel(r"Non-dimensional horizontal distance, $x ~ a^{-1}$", fontsize=13)
examples/mandel_biot.py:            r"Non-dimensional horizontal flux, "
examples/mandel_biot.py:            r"$q_x ~ \mu_f ~ a^2 ~ F^{-1} ~ k^{-1}$",
examples/mandel_biot.py:    def _plot_vertical_stress(self, color_map: mcolors.ListedColormap) -> None:
examples/mandel_biot.py:        """Plot non-dimensional vertical stress profiles.
examples/mandel_biot.py:            r"Non-dimensional horizontal distance, $ x ~ a^{-1}$", fontsize=13
examples/mandel_biot.py:            r"Non-dimensional vertical poroelastic stress,"
examples/mandel_biot.py:            r" $\sigma_{yy} ~ a ~ F^{-1}$",
examples/mandel_biot.py:        c_f = self.fluid_diffusivity()  # [m^2 * s^-1]
examples/mandel_biot.py:        tau_0 = 1e-4
examples/mandel_biot.py:        tau_1 = 1e-3
examples/mandel_biot.py:        tau_2 = 1e-2
examples/mandel_biot.py:            label="Horizontal MPFA/MPSA-FV",
examples/mandel_biot.py:            label="Vertical MPFA/MPSA-FV",
examples/mandel_biot.py:        ax.set_xlabel(r"Non-dimensional time, $t ~ c_f ~ a^{-2}$", fontsize=13)
examples/mandel_biot.py:# -----> Geometry
examples/mandel_biot.py:    """Two-dimensional fracture network object. Set by a mixin instance of
examples/mandel_biot.py:    def set_domain(self) -> None:
examples/mandel_biot.py:    def meshing_arguments(self) -> dict[str, float]:
examples/mandel_biot.py:    def grid_type(self) -> Literal["simplex", "cartesian", "tensor_grid"]:
examples/mandel_biot.py:# -----> Boundary conditions
examples/mandel_biot.py:    """Mixed-dimensional grid for the current model. Normally defined in a mixin
examples/mandel_biot.py:            Applied vertical load on the North boundary in scaled [N * m^-1].
examples/mandel_biot.py:        applied_force = self.params.get("vertical_load", 6e8)  # [N * m^-1]
examples/mandel_biot.py:    def bc_type_mechanics(self, sd: pp.Grid) -> pp.BoundaryConditionVectorial:
examples/mandel_biot.py:    ) -> np.ndarray:
examples/mandel_biot.py:            Array of boundary values. Only non-zero values are the ones associated to
examples/mandel_biot.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
examples/mandel_biot.py:# -----> Solution strategy
examples/mandel_biot.py:    consolidation in non-dimensional forms.
examples/mandel_biot.py:    def __init__(self, params: dict) -> None:
examples/mandel_biot.py:    def initial_condition(self) -> None:
examples/mandel_biot.py:        Initial conditions are given by Eqs. (41) - (43) from [3].
examples/mandel_biot.py:    def after_simulation(self) -> None:
examples/mandel_biot.py:    def _is_nonlinear_problem(self) -> bool:
examples/mandel_biot.py:        - vertical_load (pp.number): Applied load in [N * m^-1]. Default is 6e8.
examples/mandel_biot.py:        - domain_size (tuple(pp.number, pp.number)): Length and height of the domain
examples/mandel_biot.py:        - number_of_roots (int): Number of roots used to solve the exact solution.
examples/mandel_biot.py:        - material_constants (dict): Dictionary containing the solid and fluid
examples/mandel_biot.py:        - time_manager (pp.TimeManager): Time manager object.
examples/mandel_biot.py:        - plot_results (bool): Whether to plot the results in non-dimensional form.
examples/mandel_biot.py:        - mesh_arguments (dict(str, number)): Mesh arguments in [m]. Default is
examples/mandel_biot.py:        - units (pp.Units): Object containing scaling of base magnitudes. No scaling
examples/mandel_biot.py:        - solid:
examples/mandel_biot.py:            - biot_coefficient  (Required value = 1)
examples/mandel_biot.py:            - lame_lambda
examples/mandel_biot.py:            - permeability
examples/mandel_biot.py:            - shear_modulus
examples/mandel_biot.py:            - specific_storage
examples/mandel_biot.py:        - fluid:
examples/mandel_biot.py:            - density
examples/mandel_biot.py:            - viscosity
tutorials/from_single_phase.py:    def set_domain(self) -> None:
tutorials/from_single_phase.py:    def set_fractures(self) -> None:
tutorials/from_single_phase.py:    def grid_type(self) -> str:
tutorials/from_single_phase.py:    def meshing_arguments(self) -> dict:
tutorials/from_single_phase.py:    def bc_type_darcy(self, sd: pp.Grid) -> pp.BoundaryCondition:
tutorials/models_v2.ipynb:    "We first sketch the high-level concepts and structure, before demonstrating basic usage, i.e., adjusting existing models to specific applications. \n",
tutorials/models_v2.ipynb:    "The first provides the mixed-dimensional domain, the next four define the problem, whereas the last one specifies how to solve it.\n",
tutorials/models_v2.ipynb:    "The mixed-dimensional geometry is represented in a `MixedDimensionalGrid` created and stored in a `ModelGeometry` class. \n",
tutorials/models_v2.ipynb:    "It also provides helper methods for geometric operations, e.g. mixed-dimensional extensions of geometry information such as a single-dimensional grid's face normals.\n",
tutorials/models_v2.ipynb:    "### Single-phase flow\n",
tutorials/models_v2.ipynb:    "    def set_fracture_network(self) -> None:\n",
tutorials/models_v2.ipynb:    "    def mesh_arguments(self) -> dict:\n",
tutorials/models_v2.ipynb:    "multi-physics problems."
tutorials/models_v2.ipynb:    "    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:\n",
tutorials/models_v2.ipynb:    "    def bc_values_mobrho(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:\n",
tutorials/models_v2.ipynb:    "The other model classes are conceptually very similar to single-phase flow, albeit somewhat more complicated in the case of coupled equations.\n",
tutorials/models_v2.ipynb:    "Note that the `EnergyBalance` class is currently _not_ standalone - it is only runable in combination with other classes or with certain modifications."
tutorials/models_v2.ipynb:    "There are three single-equation models:\n",
tutorials/models_v2.ipynb:    "The classes are designed to not contain overlapping functionality - there should be no equation defining method in the variable class.\n",
tutorials/models_v2.ipynb:    "The former is simpler and allows for re-definition of a subset of the constitutive laws.\n",
tutorials/models_v2.ipynb:    "We emphasize that this modularity is very flexible and allows implementation of any ad-compatible tailored law.\n",
tutorials/models_v2.ipynb:    "This is done by passing a `Units` object to the initialization params with non-unitary values for some of the SI base units.\n",
tutorials/models_v2.ipynb:    "Multi-physics coupled equations are constructed by first merging the equation, variable etc. classes for the single-physics components.\n",
tutorials/models_v2.ipynb:    "Then, these are combined into a complete multi-physics model.\n",
tutorials/models_v2.ipynb:    "To avoid error-prone code (and even more fundamental problems related to method resolution order), we re-define the full set from members of the of constitutive laws library.\n",
tutorials/models_v2.ipynb:    "The Python term _method resolution order_ describes which method of a inheritance-based class is called.\n",
tutorials/models_v2.ipynb:    "It is therefore crucial to understanding the workings of a complex mixin-based class.\n",
tutorials/models_v2.ipynb:    "It may be better to check the order for a sub-part of the model, `VariablesFluidMassAndEnergy`, say.\n",
tutorials/models_v2.ipynb:   "mimetype": "text/x-python",
tutorials/conventions.ipynb:    "On inner boundaries, a positive mortar flux $\\lambda$ implies flow from the higher-dimensional to the lower-dimensional domain.\n",
tutorials/conventions.ipynb:    "For a 2d  domain, this means that a prescribed boundary value of $\\mathbf{u}_b = [1, -2]$ signifies a unitary displacement to the right, and downwards with magnitude 2. \n",
tutorials/conventions.ipynb:    "Similarly, $\\sigma\\cdot \\mathbf{n} = [-1, 0]$ implies a unitary force to the left.\n",
tutorials/conventions.ipynb:    "In our mixed-dimensional models we denote the thickness of the fractures by the term `aperture` [m], denoted by $a$. \n",
tutorials/conventions.ipynb:    "In any given dimension d, this is the volume of the cell per d-dimensional measure. \n",
tutorials/conventions.ipynb:    "In general, the dimensions are [m$^{3-d}$], where d is the dimension of the subdomain in question.\n",
tutorials/conventions.ipynb:    "The full volume is always the product of the d-dimensional cell volume and the specific volume.\n",
tutorials/conventions.ipynb:    "$\\lambda = - k_n (\\check p - \\hat p $).\n",
tutorials/conventions.ipynb:    "$ \\nabla_{normal, discrete} \\,p = \\frac{\\check p - \\hat p }{a/2} $\n"
tutorials/conventions.ipynb:   "mimetype": "text/x-python",
tutorials/data/flow_benchmark_2d_geiger_setup.py:# -*- coding: utf-8 -*-
tutorials/data/flow_benchmark_2d_geiger_setup.py:    tol = 1e-5
tutorials/data/flow_benchmark_2d_geiger_setup.py:    a = 1e-4
tutorials/data/flow_benchmark_2d_geiger_setup.py:        a_dim = np.power(a, mdg.dim_max() - sd.dim)
tutorials/data/flow_benchmark_2d_geiger_setup.py:        compressibility = 1e-10 * specific_volume
tutorials/data/flow_benchmark_2d_geiger_setup.py:            right = bound_face_centers[0, :] > domain["xmax"] - tol
tutorials/data/flow_benchmark_2d_geiger_setup.py:            bc_val[bound_faces[left]] = -a_dim * sd.face_areas[bound_faces[left]]
tutorials/convert_file.py:    tol = 1e-4 * (pp.METER)
tutorials/convert_file.py:    pts -= xy
tutorials/simulation_exporting.ipynb:   "id": "9fcd215e-0046-446f-b968-282f93e35d10",
tutorials/simulation_exporting.ipynb:    "# Exporting in models - DEPRECATED\n",
tutorials/simulation_exporting.ipynb:    "This tutorial provides inspiration and potentially useful code for exporting data in a `pp.Model` based simulation for visualization in e.g. [ParaView](https://www.paraview.org/). While the PorePy [model class](./incompressible_flow_model.ipynb) and the [exporter](./exporter.ipynb) are introduced elsewhere, this tutorial provides some detail on how to combine them. To this end, we will choose the transient model for mixed-dimensional poroelasticity with fracture deformation and adjust it to make sure the solution is exported according to our requirements, i.e. at the right stages of the simulation and that we export the right fields/variables. The tutorial consists of two parts. The first covers standard usage and the second covers more advanced usage related to debugging. \n",
tutorials/simulation_exporting.ipynb:   "id": "5d556066-e455-4c87-977b-e11ab18749de",
tutorials/simulation_exporting.ipynb:    "        fractures = self.mdg.subdomains(dim=self.nd-1)\n",
tutorials/simulation_exporting.ipynb:   "id": "50a3e694-8f15-4886-a706-391685e3cb5d",
tutorials/simulation_exporting.ipynb:    "## Mixed-dimensional simulations\n",
tutorials/simulation_exporting.ipynb:    "We now extend to the mixed-dimensional case. We can use `Exporting` as above. In the parameters, we adjust the file name to avoid overwriting the previous files. If you inspect the suffixes of the files created, you can see how the exporter deals with multiple time steps by default."
tutorials/simulation_exporting.ipynb:   "id": "726e4966-2b3e-4111-9fa2-729d2588fdb4",
tutorials/simulation_exporting.ipynb:    "    \"\"\"Modify from single- to mixed-dimensional poroelasticity.\"\"\"\n",
tutorials/simulation_exporting.ipynb:    "        \"\"\"Create md grid and define the box-shaped domain.\n",
tutorials/simulation_exporting.ipynb:    "        The implemented method of parent class yields a single-dimensional grid.\n",
tutorials/simulation_exporting.ipynb:    "        Overwrite with a mixed-dimensional one.\n",
tutorials/simulation_exporting.ipynb:   "id": "b211404c-c0ef-4a40-a0f6-e24a6e06993f",
tutorials/simulation_exporting.ipynb:   "id": "9fa9da74-b061-48ca-bfef-5aee34d3711d",
tutorials/simulation_exporting.ipynb:      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
tutorials/simulation_exporting.ipynb:      "Cell \u001b[0;32mIn[8], line 38\u001b[0m\n\u001b[1;32m     32\u001b[0m params\u001b[38;5;241m.\u001b[39mupdate({\n\u001b[1;32m     33\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mend_time\u001b[39m\u001b[38;5;124m\"\u001b[39m: \u001b[38;5;241m2\u001b[39m,\n\u001b[1;32m     34\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mfile_name\u001b[39m\u001b[38;5;124m\"\u001b[39m: \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mjumps\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m     35\u001b[0m     }\n\u001b[1;32m     36\u001b[0m )\n\u001b[1;32m     37\u001b[0m model_2 \u001b[38;5;241m=\u001b[39m Tailored(params)\n\u001b[0;32m---> 38\u001b[0m \u001b[43mpp\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrun_time_dependent_model\u001b[49m\u001b[43m(\u001b[49m\u001b[43mmodel_2\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mparams\u001b[49m\u001b[43m)\u001b[49m\n",
tutorials/simulation_exporting.ipynb:      "File \u001b[0;32m~/Git/porepy/src/porepy/models/run_models.py:70\u001b[0m, in \u001b[0;36mrun_time_dependent_model\u001b[0;34m(model, params)\u001b[0m\n\u001b[1;32m     61\u001b[0m     model\u001b[38;5;241m.\u001b[39mtime_manager\u001b[38;5;241m.\u001b[39mincrease_time_index()\n\u001b[1;32m     62\u001b[0m     logger\u001b[38;5;241m.\u001b[39minfo(\n\u001b[1;32m     63\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124mTime step \u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m at time \u001b[39m\u001b[38;5;132;01m{:.1e}\u001b[39;00m\u001b[38;5;124m of \u001b[39m\u001b[38;5;132;01m{:.1e}\u001b[39;00m\u001b[38;5;124m with time step \u001b[39m\u001b[38;5;132;01m{:.1e}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m.\u001b[39mformat(\n\u001b[1;32m     64\u001b[0m             model\u001b[38;5;241m.\u001b[39mtime_manager\u001b[38;5;241m.\u001b[39mtime_index,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     68\u001b[0m         )\n\u001b[1;32m     69\u001b[0m     )\n\u001b[0;32m---> 70\u001b[0m     \u001b[43msolver\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msolve\u001b[49m\u001b[43m(\u001b[49m\u001b[43mmodel\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     71\u001b[0m     model\u001b[38;5;241m.\u001b[39mtime_manager\u001b[38;5;241m.\u001b[39mcompute_time_step()\n\u001b[1;32m     73\u001b[0m model\u001b[38;5;241m.\u001b[39mafter_simulation()\n",
tutorials/simulation_exporting.ipynb:      "File \u001b[0;32m~/Git/porepy/src/porepy/numerics/nonlinear/nonlinear_solvers.py:68\u001b[0m, in \u001b[0;36mNewtonSolver.solve\u001b[0;34m(self, model)\u001b[0m\n\u001b[1;32m     66\u001b[0m         model\u001b[38;5;241m.\u001b[39mafter_newton_failure(sol, errors, iteration_counter)\n\u001b[1;32m     67\u001b[0m     \u001b[38;5;28;01melif\u001b[39;00m is_converged:\n\u001b[0;32m---> 68\u001b[0m         \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mafter_newton_convergence\u001b[49m\u001b[43m(\u001b[49m\u001b[43msol\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43miteration_counter\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     70\u001b[0m     iteration_counter \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n\u001b[1;32m     72\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m is_converged:\n",
tutorials/simulation_exporting.ipynb:      "File \u001b[0;32m~/Git/porepy/src/porepy/models/contact_mechanics_biot_model.py:135\u001b[0m, in \u001b[0;36mContactMechanicsBiot.after_newton_convergence\u001b[0;34m(self, solution, errors, iteration_counter)\u001b[0m\n\u001b[1;32m    132\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mafter_newton_convergence\u001b[39m(\n\u001b[1;32m    133\u001b[0m     \u001b[38;5;28mself\u001b[39m, solution: np\u001b[38;5;241m.\u001b[39mndarray, errors: \u001b[38;5;28mfloat\u001b[39m, iteration_counter: \u001b[38;5;28mint\u001b[39m\n\u001b[1;32m    134\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m--> 135\u001b[0m     \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mafter_newton_convergence\u001b[49m\u001b[43m(\u001b[49m\u001b[43msolution\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43miteration_counter\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    136\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_save_mechanical_bc_values()\n",
tutorials/simulation_exporting.ipynb:      "File \u001b[0;32m~/Git/porepy/src/porepy/models/contact_mechanics_model.py:152\u001b[0m, in \u001b[0;36mContactMechanics.after_newton_convergence\u001b[0;34m(self, solution, errors, iteration_counter)\u001b[0m\n\u001b[1;32m    150\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39massembler\u001b[38;5;241m.\u001b[39mdistribute_variable(solution)\n\u001b[1;32m    151\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mconvergence_status \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[0;32m--> 152\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_export\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
tutorials/simulation_exporting.ipynb:      "Cell \u001b[0;32mIn[8], line 27\u001b[0m, in \u001b[0;36mTailoredExporting._export\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_export\u001b[39m(\u001b[38;5;28mself\u001b[39m):\n\u001b[1;32m     23\u001b[0m     \u001b[38;5;124;03m\"\"\"Export current solution to vtu files.\u001b[39;00m\n\u001b[1;32m     24\u001b[0m \u001b[38;5;124;03m    \u001b[39;00m\n\u001b[1;32m     25\u001b[0m \u001b[38;5;124;03m    This method is typically called by _after_newton_convergence.\u001b[39;00m\n\u001b[1;32m     26\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m---> 27\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mexporter\u001b[38;5;241m.\u001b[39mwrite_vtu(\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_export_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m, time_dependent\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n",
tutorials/simulation_exporting.ipynb:      "Cell \u001b[0;32mIn[8], line 10\u001b[0m, in \u001b[0;36mTailoredExporting._export_data\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m      8\u001b[0m jumps \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m()\n\u001b[1;32m      9\u001b[0m fractures \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmdg\u001b[38;5;241m.\u001b[39msubdomains(dim\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnd\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m)\n\u001b[0;32m---> 10\u001b[0m vals \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_displacement_jump(fractures)\u001b[38;5;241m.\u001b[39mevaluate(\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdof_manager\u001b[49m)\u001b[38;5;241m.\u001b[39mval\n\u001b[1;32m     11\u001b[0m \u001b[38;5;66;03m# The jump values are defined on all fractures. We need to access the values\u001b[39;00m\n\u001b[1;32m     12\u001b[0m \u001b[38;5;66;03m# corresponding to individual subdomains, which corresponds to a restriction:\u001b[39;00m\n\u001b[1;32m     13\u001b[0m projection \u001b[38;5;241m=\u001b[39m pp\u001b[38;5;241m.\u001b[39mad\u001b[38;5;241m.\u001b[39mSubdomainProjections(\n\u001b[1;32m     14\u001b[0m     subdomains\u001b[38;5;241m=\u001b[39mfractures, nd\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnd\n\u001b[1;32m     15\u001b[0m )\n",
tutorials/simulation_exporting.ipynb:    "        fractures = self.mdg.subdomains(dim=self.nd-1)\n",
tutorials/simulation_exporting.ipynb:   "id": "e82bc3dc-f009-43c1-8103-015d6b5c1791",
tutorials/simulation_exporting.ipynb:    "We stress that not only which variables to export but also when you wish to export them may vary between applications. In the model provided below, we export at all iterations using a separate exporter, keeping track of time step and iteration number using the vtu file suffix and collecting them using a single pvd file. The \"time step\" suffix of an iteration file is the sum of the iteration index and the product of the current time step index and $r$, which is the smallest power of ten exceeding the maximum number of non-linear iterations. \n",
tutorials/simulation_exporting.ipynb:   "id": "cd607d3c-b8cf-43d9-8564-1781fe20bcb4",
tutorials/simulation_exporting.ipynb:    "        fractures = self.mdg.subdomains(dim=self.nd-1)\n",
tutorials/simulation_exporting.ipynb:    "    def after_nonlinear_iteration(self, solution_vector: np.ndarray) -> None:\n",
tutorials/simulation_exporting.ipynb:   "id": "bbebfc0d-3551-488f-bb5d-267aebcdfd34",
tutorials/simulation_exporting.ipynb:   "mimetype": "text/x-python",
tutorials/exporter.ipynb:    "Currently, the standard procedure within PorePy is to export data to vtu and pvd format for visualization with ParaView. This tutorial explains how to use the `Exporter`. In particular, it will showcase different ways to address data, how constant-in-time data is handled, and how pvd-files are managed. \n",
tutorials/exporter.ipynb:    "## Example contact mechanics model for a mixed-dimensional geometry\n",
tutorials/exporter.ipynb:    "In order to illustrate the capability and explain the use of the Exporter, we consider a ContactMechanicsBiot model for a two-dimensional fractured geometry. The mixed-dimensional geometry consists of a 2D square and two crossing 1D fractures."
tutorials/exporter.ipynb:    "    def set_md_grid(self) -> None:\n",
tutorials/exporter.ipynb:    "The default data of the model is stored as pp.STATE in the mixed-dimensional grid. Let's have a look:"
tutorials/exporter.ipynb:    "subdomain_states = set(subdomain_states) - set([pp.ITERATE])\n",
tutorials/exporter.ipynb:    "interface_states = set(interface_states) - set([pp.ITERATE])\n",
tutorials/exporter.ipynb:    "Two arguments are required to define an object of type pp.Exporter: a mixed-dimensional grid, and the target name of the output; optionally, one can add a directory name; and in fact, instead of a mixed-dimensional grid, single grids can also be provided, see Example 7."
tutorials/exporter.ipynb:    "- write_vtu()\n",
tutorials/exporter.ipynb:    "- write_pvd()\n",
tutorials/exporter.ipynb:    "Data stored in the mixed-dimensional grid under 'pp.STATE' can be simply exported by addressing their keys using the routine 'write_vtu()'. We define a dedicated exporter for this task."
tutorials/exporter.ipynb:    "exporter_1 = pp.Exporter(model.mdg, file_name=\"example-1\", folder_name=\"exporter-tutorial\")\n",
tutorials/exporter.ipynb:    "NOTE: For now, one has to make sure that subsets of the mixed-dimensional grid contain all grids of a particular dimension."
tutorials/exporter.ipynb:    "exporter_2 = pp.Exporter(model.mdg, \"example-2\", \"exporter-tutorial\")\n",
tutorials/exporter.ipynb:    "We can also export data which is not stored in the mixed-dimensional grid under 'pp.STATE'. This capability requires defining tuples of (1) a single grid, (2) a key, and (3) the data vector. For example, let's export the cell centers of the 2D subdomain 'sd_2d', as well as all interfaces (with different signs for the sake of the example). Again, we define a dedicated exporter for this task.\n"
tutorials/exporter.ipynb:    "    (intf, \"cc_e\", (-1) ** i * intf.cell_centers)\n",
tutorials/exporter.ipynb:    "exporter_3 = pp.Exporter(model.mdg, \"example-3\", \"exporter-tutorial\")\n",
tutorials/exporter.ipynb:    "exporter_4 = pp.Exporter(model.mdg, \"example-4\", \"exporter-tutorial\")\n",
tutorials/exporter.ipynb:    "exporter_5 = pp.Exporter(model.mdg, \"example-5\", \"exporter-tutorial\")\n",
tutorials/exporter.ipynb:    "exporter_5 = pp.Exporter(model.mdg, \"example-5\", \"exporter-tutorial\")\n",
tutorials/exporter.ipynb:    "exporter_6_a = pp.Exporter(model.mdg, \"example-6-a\", \"exporter-tutorial\")\n",
tutorials/exporter.ipynb:    "        exporter_6_a.add_constant_data([(sd_2d, \"cc\", -sd_2d.cell_centers)])\n",
tutorials/exporter.ipynb:    "exporter_6_b = pp.Exporter(model.mdg, \"example-6-b\", \"exporter-tutorial\", export_constants_separately = False)\n",
tutorials/exporter.ipynb:    "        exporter_6_b.add_constant_data([(sd_2d, \"cc\", -sd_2d.cell_centers)])\n",
tutorials/exporter.ipynb:    "It is also possible to export data without prescribing a mixed-dimensional grid, but a single grid. In this case, one has to assign the data when writing to vtu. For this, a key and a data array (with suitable size) have to be provided."
tutorials/exporter.ipynb:    "exporter_7 = pp.Exporter(sd_2d, \"example-7\", \"exporter-tutorial\")\n",
tutorials/exporter.ipynb:    "PorePy meshes (both mixed-dimensional and single grids) and related information, including solutions and parameters, can be exported to the vtu format, and visualized in ParaView (or other compatible software). The key object is `pp.Exporter` and its `write_vtu` method, which allow for several modes of exporting information."
tutorials/exporter.ipynb:   "mimetype": "text/x-python",
tutorials/incompressible_flow_model.ipynb:    "# Model classes - DEPRECATED\n",
tutorials/incompressible_flow_model.ipynb:    "Setting up a simulation in PorePy requires a certain knowledge of the code - both _what_ objects need to be defined and _how_ to define them. To simplify this task, PorePy exploits encapsulation through `Model` classes for some common problems. These contain methods for parameter specification, equation specification, discretization, assembly and solving of the (non)linear problem. The `Model`s provide an overview of the entire problem setup and may be tailored and extended according to the user's need by overwriting the relevant methods. The class [AbstractModel](https://github.com/pmgbergen/porepy/blob/develop/src/porepy/models/abstract_model.py) is the common base class for all `Model`s, which in turn partly are built based on inheritance (e.g. `ContactMechanics(AbstractModel)` and `ContactMechanicsBiot(ContactMechanics)`.\n",
tutorials/incompressible_flow_model.ipynb:    "To set out, we define the governing equations for mixed-dimensional incompressible flow \n",
tutorials/incompressible_flow_model.ipynb:    " \\nabla \\cdot q_i - \\sum_j \\Xi_j^i \\lambda_j  &= f \\qquad &\\texttt{in } \\Omega_i,\\\\\n",
tutorials/incompressible_flow_model.ipynb:    "\\lambda_j + \\kappa (\\Pi_j^l p_{l} - \\Pi_j^l \\texttt{tr }p_{h}) &= 0 \\qquad &\\texttt{on } \\Gamma_j, \\\\\n",
tutorials/incompressible_flow_model.ipynb:    "Referring to  [Keilegavlen et al.](https://link.springer.com/article/10.1007/s10596-020-10002-5) for detailed conceptual and notational descriptions, we here note that $\\Omega_i$ and $\\Gamma_j$ denote subdomains and interfaces, respectively, while $\\partial_j \\Omega_i$ is the internal boundary of $\\Omega_i$ coinciding geometrically with $\\Gamma_j$. Moreover, $q$, $p$ and $\\lambda$ are the unknown flux, pressure and interface flux, while $\\Pi$ and $\\Xi$ are projection operators, mapping quantities from subdomains to interfaces and from interfaces to subdomains, respectively.\n",
tutorials/incompressible_flow_model.ipynb:      "    def _set_parameters(self) -> None:\n",
tutorials/incompressible_flow_model.ipynb:      "                # Co-dimension 2 (well type) interfaces are on the user's own responsibility\n",
tutorials/incompressible_flow_model.ipynb:      "    def _assign_equations(self) -> None:\n",
tutorials/incompressible_flow_model.ipynb:      "        Neumann conditions on all internal boundaries. On interfaces of co-dimension one,\n",
tutorials/incompressible_flow_model.ipynb:      "        interface fluxes are related to higher- and lower-dimensional pressures using\n",
tutorials/incompressible_flow_model.ipynb:      "            - self._ad.mortar_proj.mortar_to_secondary_int * mortar_flux\n",
tutorials/incompressible_flow_model.ipynb:      "            - source\n",
tutorials/incompressible_flow_model.ipynb:      "        # Interface equation: \\lambda = -\\kappa (p_l - p_h)\n",
tutorials/incompressible_flow_model.ipynb:      "        # Robin_ad.mortar_discr represents -\\kappa. The involved term is\n",
tutorials/incompressible_flow_model.ipynb:      "                - self._ad.mortar_proj.secondary_to_mortar_avg * p\n",
tutorials/incompressible_flow_model.ipynb:    " - prepare_simulation\n",
tutorials/incompressible_flow_model.ipynb:    " - before_nonlinear_loop\n",
tutorials/incompressible_flow_model.ipynb:    " - after_nonlinear_convergence\n",
tutorials/incompressible_flow_model.ipynb:    " - after_nonlinear_loop\n",
tutorials/incompressible_flow_model.ipynb:    " - after_simulation\n",
tutorials/incompressible_flow_model.ipynb:    " Before running the simulation, we will visit the `create_grid` method. While a default grid is provided in [AbstractModel](https://github.com/pmgbergen/porepy/blob/develop/src/porepy/models/abstract_model.py), the user will usually want to specify the mixed-dimensional grid to be used. This will serve as our first example of how to make a modification to the [IncompressibleFlow](https://github.com/pmgbergen/porepy/blob/incompressible_flow_tutorial/src/porepy/models/incompressible_flow_model.py) model:"
tutorials/incompressible_flow_model.ipynb:    "    \"\"\"An Incompressible flow class with non-default mixed-dimensional grid.\n",
tutorials/incompressible_flow_model.ipynb:    "    def create_grid(self) -> None:\n",
tutorials/incompressible_flow_model.ipynb:    "            mdg (pp.MixedDimensionalGrid): The produced mixed-dimensional grid.\n",
tutorials/incompressible_flow_model.ipynb:    "Due to the default parameters (notably Dirichlet boundary conditions of value 0), the solution is homogeneous (or simply \"really boring\", if you prefer). We can make it somewhat more interesting by assigning a non-zero source term in our second adjustment. Note that we can base this next class on `ChangedGrid`, thereby using its `create_grid` method."
tutorials/incompressible_flow_model.ipynb:    "    def _source(self, sd: pp.Grid) -> np.ndarray:\n",
tutorials/incompressible_flow_model.ipynb:    "Note that in addition to producing a non-zero pressure solution, we also obtained a finer grid by passing meshing arguments in `params`. We can also investigate the value of the interface fluxes:"
tutorials/incompressible_flow_model.ipynb:      "[-0.59068028 -0.47969844 -0.45057056 -0.4500899  -0.47227967 -0.55919814\n",
tutorials/incompressible_flow_model.ipynb:      " -0.58835115 -0.47911445 -0.45293844 -0.45012337 -0.46935454 -0.55760107]\n"
tutorials/incompressible_flow_model.ipynb:    "    def _vector_source(self, sd: pp.Grid) -> np.ndarray:\n",
tutorials/incompressible_flow_model.ipynb:    "        source_values[-1] = - density * pp.GRAVITY_ACCELERATION\n",
tutorials/incompressible_flow_model.ipynb:    "    def _bc_values(self, sd: pp.Grid) -> np.ndarray:\n",
tutorials/incompressible_flow_model.ipynb:    "        bc_values[bf] = density * pp.GRAVITY_ACCELERATION * (1 - sd.face_centers[1, bf])\n",
tutorials/incompressible_flow_model.ipynb:    "    def _source(self, sd: pp.Grid) -> np.ndarray:\n",
tutorials/incompressible_flow_model.ipynb:    "        \"\"\"Return cell-wise source values.\n",
tutorials/incompressible_flow_model.ipynb:    "            np.ndarray (sd.num_cells): The cell-wise values.\n",
tutorials/incompressible_flow_model.ipynb:   "id": "5ae70b03-3dde-4413-a62d-e3d8586182ce",
tutorials/incompressible_flow_model.ipynb:    "Unsurprisingly, the resulting pressure solution closely resembles that obtained using the parent class `UnitaryFractureSource`, with an additional high-pressure region around the point $(x,y) = (0.7, 0.7)$.\n",
tutorials/incompressible_flow_model.ipynb:    "The concept of a `Model` has been discussed. The mixed-dimensional scalar flow problem was defined, and with some minor adjustments, complex scenarios could be approximated. Having made no assumptions about the ambient dimension, the extension to a three-dimensional setting consists only of creating a three-dimensinal mixed-dimensional grid instead of the two-dimensional used above.\n"
tutorials/incompressible_flow_model.ipynb:   "id": "ea676143-04de-43f4-b052-badf0905f01f",
tutorials/incompressible_flow_model.ipynb:   "mimetype": "text/x-python",
tutorials/contact_mechanics_with_AD.ipynb:    "This notebook documents how the automatic (or algorithmic) differentiation framework may be applied to non-linear equations. For an introduction to the framework, see the [automatic differentiation](./automatic_differentiation.ipynb) notebook.\n",
tutorials/contact_mechanics_with_AD.ipynb:    "The functions in question are the normal and tangential complementary equations for contact mechanics, which are only semi-smooth (i.e. they are not differentiable everywhere):\n",
tutorials/contact_mechanics_with_AD.ipynb:    "C_n &= \\lambda_n + \\text{max}(0, -\\lambda_n-c_n([[u]]_n-g))\\\\\n",
tutorials/contact_mechanics_with_AD.ipynb:    "- \\text{max}(b, ||\\lambda_{\\tau}+c_{\\tau}[[\\dot{u}]]_{\\tau}||)\\lambda_{\\tau},\n",
tutorials/contact_mechanics_with_AD.ipynb:    "with $b=-F(\\lambda_n+c_n([[u]]_n-g))$ and F, c, and $g$ denoting friction coefficient, numerical constants and the gap function, respectively. See [Hüeber 2008](https://elib.uni-stuttgart.de/handle/11682/4854) for a detailed derivation and discussion and [Stefansson et al. 2021](https://www.sciencedirect.com/science/article/pii/S0045782521004539) for notation.\n",
tutorials/contact_mechanics_with_AD.ipynb:      "            - Momentum balance in the matrix.\n",
tutorials/contact_mechanics_with_AD.ipynb:      "            - Force balance between fracture interfaces.\n",
tutorials/contact_mechanics_with_AD.ipynb:      "            - Deformation constraints for fractures, split into normal and tangential\n",
tutorials/contact_mechanics_with_AD.ipynb:      "        fracture_subdomains = self.mdg.subdomains(dim=self.nd - 1)\n",
tutorials/contact_mechanics_with_AD.ipynb:      "        interfaces = self.mdg.interfaces(dim=self.nd - 1, codim=1)\n",
tutorials/contact_mechanics_with_AD.ipynb:      "            fracture_eq_tangential, fracture_subdomains, {\"cells\": self.nd - 1}\n",
tutorials/contact_mechanics_with_AD.ipynb:      "        This constraint equation enforces non-penetration of opposing fracture\n",
tutorials/contact_mechanics_with_AD.ipynb:      "        #  - We do not directly implement the matrix elements of the contact traction\n",
tutorials/contact_mechanics_with_AD.ipynb:      "        #    as are derived by Berge in their equations (28)-(32). Instead, we directly\n",
tutorials/contact_mechanics_with_AD.ipynb:      "        #  - Related to the previous point, we do not implement the regularization that\n",
tutorials/contact_mechanics_with_AD.ipynb:      "            pp.ad.Scalar(-1.0) * t_n\n",
tutorials/contact_mechanics_with_AD.ipynb:      "            - self.contact_mechanics_numerical_constant(subdomains)\n",
tutorials/contact_mechanics_with_AD.ipynb:      "            * (u_n - self.fracture_gap(subdomains)),\n",
tutorials/contact_mechanics_with_AD.ipynb:    "## Non-smooth functions using pp.ad.Function\n",
tutorials/contact_mechanics_with_AD.ipynb:    "Handling non-smoothness in the AD setting requires the definition of extended derivatives by assigning appropriate values to the Jacobi matrices for the non-smooth function components ($\\text{max}$ and $\\text{abs}$) at the points in question. While this may seem somewhat technical, it is a modest price to pay for handling these equations otherwise straightforwardly using AD. We define standard Python functions and wrap them in `pp.ad.Function` returning `pp.ad.AdArray`s having a val and a jac attribute. For instance, the maximum value function is defined and used as follows:"
tutorials/contact_mechanics_with_AD.ipynb:      "def maximum(var_0: pp.ad.AdArray, var_1: pp.ad.AdArray | np.ndarray) -> pp.ad.AdArray:\n",
tutorials/contact_mechanics_with_AD.ipynb:      "        The maximum of the two arguments, taken element-wise in the arrays. The return\n",
tutorials/contact_mechanics_with_AD.ipynb:      "    # Make a fall-back zero Jacobian for constant arguments.\n",
tutorials/contact_mechanics_with_AD.ipynb:      "    # know clearer how the Ad-machinery should be used.\n",
tutorials/contact_mechanics_with_AD.ipynb:      "        # statement in the above double-if). Broadcast var_1 to shape of var_0.\n",
tutorials/contact_mechanics_with_AD.ipynb:    "def function_to_be_wrapped(var: pp.ad.AdArray) -> pp.ad.AdArray:\n",
tutorials/contact_mechanics_with_AD.ipynb:    "Some functions depend on arguments which do not have anything to do with ad. Instead of having to wrap such arguments in AD objects to be evaluated as part of parsing of the Function, one can exploit partial evaluation. For instance, the `pp.ad.functions.l2_norm` function for cell-wise vectors has been implemented for an arbitrary number of vector components. It is applied in the definition of the gap, which depends on the norm of tangential displacement jumps. The number of tangential components equals the dimension of the fracture, i.e. $nd - 1$:"
tutorials/contact_mechanics_with_AD.ipynb:      "    def fracture_gap(self, subdomains: list[pp.Grid]) -> pp.ad.Operator:\n",
tutorials/contact_mechanics_with_AD.ipynb:      "            Cell-wise fracture gap operator.\n",
tutorials/contact_mechanics_with_AD.ipynb:      "            partial(pp.ad.functions.l2_norm, self.nd - 1), \"norm_function\"\n",
tutorials/contact_mechanics_with_AD.ipynb:    "We have seen how the Ad framework can be used to specify non-linear functions, including ones that are sub-differentiable but not fully differentiable (e.g., the maximum function), and reviewed this in the context of contact mechancis. The model classes implement the functions and constitutive relations most relevant for standard applications of PorePy. New Ad functions can easily be implemented by wrapping standard python functions using `pp.ad.Function`."
tutorials/contact_mechanics_with_AD.ipynb:   "mimetype": "text/x-python",
tutorials/automatic_differentiation.ipynb:    "A key feature of PorePy is that forward-mode automatic (or algorithmic) differentiation, AD, is used to linearize a system of partial differential equations. This tutorial provides a short introduction to automatic differentiation and an overview of the AD-module included in PorePy. \n",
tutorials/automatic_differentiation.ipynb:    "Further description is provided in other tutorials: *pdes with ad*  explains how to use the module to solve (mixed-dimensional) PDEs. For an example where the AD module has been used to solve non-linear compressible flow, see the tutorial:  \"compressible_flow_with_automatic_differentiation\"\n"
tutorials/automatic_differentiation.ipynb:    "$$y(x) = \\mathbf{A} x + x^2 - b$$\n",
tutorials/automatic_differentiation.ipynb:    "y = A @ x  + x**2 - b\n",
tutorials/automatic_differentiation.ipynb:    "We can find its roots (solution) using the Newton-Rhapson scheme, which, on linearized form, reads \n",
tutorials/automatic_differentiation.ipynb:    "$$J_y(x^{k}) (x^{k+1} - x^{k}) = - y(x^{k}).$$"
tutorials/automatic_differentiation.ipynb:      "After five iterations, the solution is [ 0.39609763 -0.11506208 -0.11506208]. The residuals were \n",
tutorials/automatic_differentiation.ipynb:      "[5.121415047969018, 0.37208984847741916, 0.010886193063849024, 1.2643761102354224e-05, 1.7809260833326555e-11]\n"
tutorials/automatic_differentiation.ipynb:    "tol = 1e-5\n",
tutorials/automatic_differentiation.ipynb:    "    x = x - sps.linalg.spsolve(y.jac, y.val)\n",
tutorials/automatic_differentiation.ipynb:    "    y = A @ x  + x**2 - b\n",
tutorials/automatic_differentiation.ipynb:    "3. Solve the nonlinear problem using Newton-Rhapson (or another suitable linearization method)\n",
tutorials/automatic_differentiation.ipynb:    "Extending the concept to PDEs in mixed-dimensional form only requires some additional book-keeping. Specifically, variables, parameters, etc. are defined on subdomains and interfaces of the mixed-dimensional grid as shown in the [equation definition tutorial](https://github.com/pmgbergen/porepy/blob/develop/tutorials/equation_definition.ipynb)."
tutorials/automatic_differentiation.ipynb:    "Automatic differentiation (AD) gives access to derivatives of complex functions with minimal user effort. PorePy implements forward AD, primarily aimed at solving non-linear problems using Newton's method. The value and derivatives of an `AdArray` are contained in its attributes val and jac, respectively."
tutorials/automatic_differentiation.ipynb:   "mimetype": "text/x-python",
tutorials/gmsh_frac_file.geo_unrolled:Curve Loop(1) = {1, 2, 3, -4};
tutorials/flux_discretizations.ipynb:    "We showcase the different alternatives for the discretization of fluxes in PorePy. To this aim, we focus on single-phase flow in unfractured domains. <br>\n",
tutorials/flux_discretizations.ipynb:    "* two-point flux approximation\n",
tutorials/flux_discretizations.ipynb:    "* multi-point flux approximation\n",
tutorials/flux_discretizations.ipynb:    "Mixed finite elements of the lowest order, a.k.a RT0-P0, are supported in PorePy, but not demonstrated herein. While this tutorial considers a 2d domain, most of the code works for 1d, 2d, and 3d domains. The case of mixed-dimensional domains containing both fractures and a porous medium is covered in the [incompressible flow](./incompressible_flow_model.ipynb) tutorial. \n",
tutorials/flux_discretizations.ipynb:    "Let $\\Omega$ be a regular domain with boundary $\\partial \\Omega$. The boundary can be divided in two non-overlapping parts on which we will impose Dirichlet ($\\partial \\Omega_d$) and Neumann ($\\partial \\Omega_n$) boundary conditions, respectively. We indicate with $\\mathbf{n}$ the outward unit normal vector of $\\partial \\Omega$.<br>\n",
tutorials/flux_discretizations.ipynb:    "The single-phase flow can be written in\n",
tutorials/flux_discretizations.ipynb:    "$$\\nabla \\cdot \\mathbf{u} = f \\qquad \\mathbf{u} = - K \\nabla p$$\n",
tutorials/flux_discretizations.ipynb:    "$$ - \\nabla \\cdot K \\nabla p = f $$\n",
tutorials/flux_discretizations.ipynb:    "$$ p = p_b \\qquad - K \\nabla p \\cdot \\mathbf{n} = u_b$$\n",
tutorials/flux_discretizations.ipynb:    "We present *step-by-step* how to create the grid, declare the problem data, and finally solve the problem. <br><br>\n",
tutorials/flux_discretizations.ipynb:      "c:\\users\\ivar\\onedrive - university of bergen\\documents\\github\\porepy\\src\\porepy\\viz\\plot_grid.py:198: UserWarning: Attempting to set identical bottom == top == 0.0 results in singular transformations; automatically expanding.\n",
tutorials/flux_discretizations.ipynb:    "### Two-point flux approximation"
tutorials/flux_discretizations.ipynb:    "The two-point flux approximation solves the single-phase flow problem using pressure as the primary variable. We use this to discretize the flux term, before assembling it. The source term is discretized using the finite volume scalar source class. The ensuing system of linear equations is solved for pressures using a direct sparse solver."
tutorials/flux_discretizations.ipynb:    "### Multi-point flux approximation "
tutorials/flux_discretizations.ipynb:    "The multi-point flux approximation also uses pressure as the only primary variable. We discretize the flux term anew with the MPFA, and assemble the matrix. Note that the call to Mpfa.discretize() will override the already stored discretization matrix for Tpfa. We reuse the source term discretization, as this is the same for TPFA and MPFA."
tutorials/flux_discretizations.ipynb:    "The dual virtual element method solves the single-phase flow problem using both pressures and fluxes as primary variables."
tutorials/flux_discretizations.ipynb:      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
tutorials/flux_discretizations.ipynb:      "\u001b[0;32m/tmp/ipykernel_11388/320593701.py\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32massert\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mp_mvem\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m14.348068220560325\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32massert\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mu_mvem\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32massert\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mP0u\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
tutorials/flux_discretizations.ipynb:    "Elliptic equations (e.g., diffusion) in PorePy are specified in terms of a mesh, a second order diffusion tensor, source terms and boundary conditions, all of which must be assigned with a specific syntax. To discretize the equations, PorePy provides two- and multi-point finite volume discretizations as well as the lowest order mixed virtual element method. Discrete solutions are obtained by first discretizing, then assembling and solving the equations."
tutorials/flux_discretizations.ipynb:   "mimetype": "text/x-python",
tutorials/equation_definition.ipynb:            "id": "historical-situation",
tutorials/equation_definition.ipynb:                "This tutorial is meant as an introduction to the PorePy framework for defining and working with (non-linear) equations, using the mixed-dimensional flow problem as an example. For an introduction to basic concepts of algorithmic differentiation, please refer to the dedicated [automatic differentiation tutorial](https://github.com/pmgbergen/porepy/blob/develop/tutorials/automatic_differentiation.ipynb). \n",
tutorials/equation_definition.ipynb:                "Note that for several much used problems, PorePy provides `Model` classes to solve mixed-dimensional PDEs. These classes use the AD functionality as described herein. A less technical explanation of how to solve the present mixed-dimensional problem is provided in the [incompressible flow tutorial](https://github.com/pmgbergen/porepy/blob/develop/tutorials/incompressible_flow_model.ipynb), which also details the equations. Herein, we provide more detailed explanations and descriptions of the design of the AD objects."
tutorials/equation_definition.ipynb:            "id": "further-bride",
tutorials/equation_definition.ipynb:                "2. Grid-dependent operators are defined on one or multiple subdomain grids. Examples are:\n",
tutorials/equation_definition.ipynb:                "4. Classes for book-keeping, notably degree-of-freedom handling and the relation between equations/variables and the underlying mixed-dimensional grid.\n",
tutorials/equation_definition.ipynb:                "Solving (partial differential) equations on a mixed-dimensional grid requires defining the above objects, combining them into equations and solving the ensuing equation system. \n",
tutorials/equation_definition.ipynb:                "## Test case: A mixed-dimensional grid.\n",
tutorials/equation_definition.ipynb:                "As a test case, we define a mixed-dimensional grid, which we for simplicity let be Cartesian"
tutorials/equation_definition.ipynb:            "id": "moral-nerve",
tutorials/equation_definition.ipynb:                "# fractures 1 and 2 form a T-intersection in (3, 3)\n",
tutorials/equation_definition.ipynb:            "id": "temporal-booking",
tutorials/equation_definition.ipynb:            "id": "bigger-outside",
tutorials/equation_definition.ipynb:                "    kn = 1e-1 * np.ones(intf.num_cells)\n",
tutorials/equation_definition.ipynb:            "id": "bb4c81f1-0512-4b48-9d42-225a6aa34255",
tutorials/equation_definition.ipynb:                "### Mixed-dimensional AD variables and book-keeping\n",
tutorials/equation_definition.ipynb:                "The next step is to define Ad representations of the (mixed-dimensional) variables. For this, we first need to define a degree of freedom manager (`DofManager`) and an equation manager (`EquationManager`). The `DofManager` is responsible for keeping track of the degrees of freedom in the mixed-dimensional system, whereas the `EquationManager` is responsible for providing the Ad  representations of the variables.\n",
tutorials/equation_definition.ipynb:            "id": "dirty-wesley",
tutorials/equation_definition.ipynb:            "id": "endangered-operator",
tutorials/equation_definition.ipynb:                "### Grid-related operators\n",
tutorials/equation_definition.ipynb:                "Now, we are ready to apply define AD objects for this mixed-dimensional problem. The key to exploit this efficiently (in terms of both userfriendliness and computational speed) is to operate on several subdomains simultaneously. For instance, the mass conservation equation requires a divergence operator, which we define jointly for all subdomains. We also require a representation of boundary conditions."
tutorials/equation_definition.ipynb:            "id": "usual-gardening",
tutorials/equation_definition.ipynb:                        "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
tutorials/equation_definition.ipynb:                        "Cell \u001b[1;32mIn[7], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m div \u001b[39m=\u001b[39m pp\u001b[39m.\u001b[39mad\u001b[39m.\u001b[39mDivergence(subdomains\u001b[39m=\u001b[39mmdg\u001b[39m.\u001b[39msubdomains())\n\u001b[0;32m      2\u001b[0m \u001b[39m# The boundary condition object is initialized with the parameter key used to set the parameters in the\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[39m# above loop. This is critical to ensure parameters are not mixed in multi-physics simulations.\u001b[39;00m\n\u001b[1;32m----> 4\u001b[0m bound_ad \u001b[39m=\u001b[39m pp\u001b[39m.\u001b[39;49mad\u001b[39m.\u001b[39;49mBoundaryCondition(param_key, subdomains\u001b[39m=\u001b[39mmdg\u001b[39m.\u001b[39msubdomains())\n",
tutorials/equation_definition.ipynb:                "# above loop. This is critical to ensure parameters are not mixed in multi-physics simulations.\n",
tutorials/equation_definition.ipynb:            "id": "seven-illness",
tutorials/equation_definition.ipynb:            "id": "superior-crossing",
tutorials/equation_definition.ipynb:            "id": "straight-saskatchewan",
tutorials/equation_definition.ipynb:                "We can also define merged projection operators between subdomain grids and mortar grids. This can be done either on the whole `mdg` or on parts of it. The ordering of the grids matters- you most likely will not get consistent results if the ordering is altered throughout the simulation (if you get a warning, disregard it; this will be handled at a later point):"
tutorials/equation_definition.ipynb:            "id": "controlling-prisoner",
tutorials/equation_definition.ipynb:                        "c:\\users\\ivar\\onedrive - university of bergen\\documents\\github\\porepy\\src\\porepy\\grids\\mortar_grid.py:801: UserWarning: Is it really meaningful to ask for signs of a one sided mortar grid?\n",
tutorials/equation_definition.ipynb:            "id": "fdff8566-8b4a-45e1-949a-3e31afe939bb",
tutorials/equation_definition.ipynb:            "id": "ranking-layer",
tutorials/equation_definition.ipynb:            "id": "f37f4124-5dfa-4dd2-86e8-c530b4e07c9d",
tutorials/equation_definition.ipynb:            "id": "cleared-multimedia",
tutorials/equation_definition.ipynb:            "id": "destroyed-outdoors",
tutorials/equation_definition.ipynb:                "## Mixed-dimensional ad equations\n",
tutorials/equation_definition.ipynb:                "To explore how the mixed-dimensional Ad framework works in action, we can define the flux discretization on all subdomains as"
tutorials/equation_definition.ipynb:            "id": "difficult-edmonton",
tutorials/equation_definition.ipynb:            "id": "genetic-stock",
tutorials/equation_definition.ipynb:            "id": "defined-daughter",
tutorials/equation_definition.ipynb:                        "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
tutorials/equation_definition.ipynb:                        "Cell \u001b[1;32mIn[12], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m interior_flux\u001b[39m.\u001b[39mdiscretize(mdg)\n\u001b[1;32m----> 2\u001b[0m num_flux \u001b[39m=\u001b[39m interior_flux\u001b[39m.\u001b[39;49mevaluate(dof_manager)\n\u001b[0;32m      3\u001b[0m \u001b[39mprint\u001b[39m(num_flux)\n",
tutorials/equation_definition.ipynb:                        "File \u001b[1;32mc:\\users\\ivar\\onedrive - university of bergen\\documents\\github\\porepy\\src\\porepy\\numerics\\ad\\operators.py:737\u001b[0m, in \u001b[0;36mOperator.evaluate\u001b[1;34m(self, system_manager, state)\u001b[0m\n\u001b[0;32m    730\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_prev_iter_ids \u001b[39m=\u001b[39m prev_iter_ids\n\u001b[0;32m    732\u001b[0m \u001b[39m# Parsing in two stages: First make a forward Ad-representation of the variable\u001b[39;00m\n\u001b[0;32m    733\u001b[0m \u001b[39m# state (this must be done jointly for all variables of the operator to get all\u001b[39;00m\n\u001b[0;32m    734\u001b[0m \u001b[39m# derivatives represented). Then parse the operator by traversing its\u001b[39;00m\n\u001b[0;32m    735\u001b[0m \u001b[39m# tree-representation, and parse and combine individual operators.\u001b[39;00m\n\u001b[1;32m--> 737\u001b[0m prev_vals \u001b[39m=\u001b[39m system_manager\u001b[39m.\u001b[39;49mget_variable_values(from_iterate\u001b[39m=\u001b[39;49m\u001b[39mFalse\u001b[39;49;00m)\n\u001b[0;32m    739\u001b[0m \u001b[39mif\u001b[39;00m state \u001b[39mis\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n\u001b[0;32m    740\u001b[0m     state \u001b[39m=\u001b[39m system_manager\u001b[39m.\u001b[39mget_variable_values(from_iterate\u001b[39m=\u001b[39m\u001b[39mTrue\u001b[39;00m)\n",
tutorials/equation_definition.ipynb:                        "File \u001b[1;32mc:\\users\\ivar\\onedrive - university of bergen\\documents\\github\\porepy\\src\\porepy\\numerics\\mixed_dim\\dof_manager.py:350\u001b[0m, in \u001b[0;36mDofManager.get_variable_values\u001b[1;34m(self, variables, from_iterate)\u001b[0m\n\u001b[0;32m    348\u001b[0m         values\u001b[39m.\u001b[39mappend(data[pp\u001b[39m.\u001b[39mSTATE][pp\u001b[39m.\u001b[39mITERATE][name]\u001b[39m.\u001b[39mcopy())\n\u001b[0;32m    349\u001b[0m     \u001b[39melse\u001b[39;00m:\n\u001b[1;32m--> 350\u001b[0m         values\u001b[39m.\u001b[39mappend(data[pp\u001b[39m.\u001b[39mSTATE][name]\u001b[39m.\u001b[39mcopy())\n\u001b[0;32m    351\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mKeyError\u001b[39;00m:\n\u001b[0;32m    352\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mKeyError\u001b[39;00m(\n\u001b[0;32m    353\u001b[0m         \u001b[39mf\u001b[39m\u001b[39m\"\u001b[39m\u001b[39mNo values stored for variable \u001b[39m\u001b[39m{\u001b[39;00mname\u001b[39m}\u001b[39;00m\u001b[39m, \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[0;32m    354\u001b[0m         \u001b[39mf\u001b[39m\u001b[39m\"\u001b[39m\u001b[39mfrom_iterate=\u001b[39m\u001b[39m{\u001b[39;00mfrom_iterate\u001b[39m}\u001b[39;00m\u001b[39m\"\u001b[39m\n\u001b[0;32m    355\u001b[0m         \u001b[39mf\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m\\n\u001b[39;00m\u001b[39mon grid \u001b[39m\u001b[39m{\u001b[39;00mgrid\u001b[39m}\u001b[39;00m\u001b[39m.\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[0;32m    356\u001b[0m     )\n",
tutorials/equation_definition.ipynb:            "id": "reasonable-bachelor",
tutorials/equation_definition.ipynb:            "id": "balanced-overhead",
tutorials/equation_definition.ipynb:            "id": "nasty-papua",
tutorials/equation_definition.ipynb:                "In the lower-dimensional subdomains, the projected interface fluxes manifest as sources.\n",
tutorials/equation_definition.ipynb:            "id": "dimensional-lexington",
tutorials/equation_definition.ipynb:            "id": "right-brunei",
tutorials/equation_definition.ipynb:                "We can also define equations for the interfaces. To that end, we first define the pressure trace on internal boundaries - the most accurate representation of this trace is a bit complex within Mpfa (and Tpfa) methods"
tutorials/equation_definition.ipynb:            "id": "behind-heater",
tutorials/equation_definition.ipynb:            "id": "introductory-buffalo",
tutorials/equation_definition.ipynb:                "Now, we can write the Darcy-type equation for the interface flux"
tutorials/equation_definition.ipynb:            "id": "suburban-vinyl",
tutorials/equation_definition.ipynb:                "                          - mortar_proj.secondary_to_mortar_avg * p)\n",
tutorials/equation_definition.ipynb:            "id": "characteristic-animal",
tutorials/equation_definition.ipynb:            "id": "choice-treat",
tutorials/equation_definition.ipynb:            "id": "green-exclusion",
tutorials/equation_definition.ipynb:            "id": "answering-denver",
tutorials/equation_definition.ipynb:            "id": "about-income",
tutorials/equation_definition.ipynb:                "2. Define grid-related operators (not strictly necessary, but most often)\n",
tutorials/equation_definition.ipynb:            "mimetype": "text/x-python",
tutorials/Readme.md:The PorePy tutorials are designed as stand-alone documentation of different components and capabilities. 
tutorials/Readme.md:1. [introduction](./introduction.ipynb) describes the overarching conceptual framework and its high-level implementation and lists some problems which may be solved using PorePy.
tutorials/Readme.md:3. [meshing_of_fractures](./meshing_of_fractures.ipynb) describes the construction of mixed-dimensional grids representing a fracture network and the surrounding porous medium.
tutorials/Readme.md:5. [incompressible_flow_model](./incompressible_flow_model.ipynb) describes how to use a model class `Incompressible Flow`. The tutorial exposes several extensions and how to solve a mixed-dimensional problem with a few lines of code.
tutorials/Readme.md:7. [stress_discretization](./stress_discretization.ipynb) describes the discretization method used for the vector version of 6. arising in the stress-strain relationship of Hooke's law.
tutorials/Readme.md:10. [equation_definition](./equation_definition.ipynb) details the steps required to set up and solve a mixed-dimensional partial differential equation with emphasis on the PorePy AD framework.
tutorials/stress_discretization.ipynb:    "# Multi-point stress approximation (MPSA)"
tutorials/stress_discretization.ipynb:    "PorePy includes a multi-point stress approximation discretization for the linear elasticity problem:\n",
tutorials/stress_discretization.ipynb:    "\\nabla\\cdot \\sigma = -\\vec f,\\quad \\vec x \\in \\Omega\n",
tutorials/stress_discretization.ipynb:    "The convention in PorePy is that tension is positive. This means that the Cartesian component of the traction $\\vec T = \\sigma \\cdot \\vec n$, for a direction $\\vec r$ is positive number if the inner product $\\vec T\\cdot \\vec r$ is positive. The displacements will give the difference between the initial state of the rock and the deformed state. If we consider a point in its initial state $\\vec x \\in \\Omega$ and let $\\vec x^* \\in \\Omega$ be the same point in the deformed state, to be consistent with the convention we used for traction, the displacements are given by $\\vec u = \\vec x^* - \\vec x$, that is, $u$ points from the initial state to the finial state.\n",
tutorials/stress_discretization.ipynb:    "dirich = np.ravel(np.argwhere(g.face_centers[1] < 1e-10))\n",
tutorials/stress_discretization.ipynb:    "We discretize the stresses by using the multi-point stress approximation (for details, please see: E. Keilegavlen and J. M. Nordbotten. “Finite volume methods for elasticity with weak symmetry”. In: International Journal for Numerical Methods in Engineering (2017))."
tutorials/stress_discretization.ipynb:    "top_faces = np.ravel(np.argwhere(g.face_centers[1] > n - 1e-10))\n",
tutorials/stress_discretization.ipynb:    "bot_faces = np.ravel(np.argwhere(g.face_centers[1] < 1e-10))\n",
tutorials/stress_discretization.ipynb:    "u_b[1, top_faces] = -1 * g.face_areas[top_faces]\n",
tutorials/stress_discretization.ipynb:    "The unknowns are ordered so that u[0] and u[1] contain the displacement in the x- and y-direction in cell 0, respectively, u[2] gives the x-displacement in cell 1 etc. Thus we can plot the y component of the displacement by writing:"
tutorials/stress_discretization.ipynb:      "c:\\users\\ivar\\onedrive - university of bergen\\documents\\github\\porepy\\src\\porepy\\viz\\plot_grid.py:197: UserWarning: Attempting to set identical bottom == top == 0.0 results in singular transformations; automatically expanding.\n",
tutorials/stress_discretization.ipynb:    "To understand the inner workings of the discretization, and to recover the traction on the grid faces, some more detail is needed. The mpsa discretization creates two sparse matrices \"stress\" and \"bound_stress\". They define the discretization of the cell-face traction:\n",
tutorials/stress_discretization.ipynb:    "-\\int_{\\Omega_k} f dv = \\int_{\\partial\\Omega_k} T(n)dA = [div \\cdot \\text{stress} \\cdot u + div\\cdot\\text{bound_stress}\\cdot u_b]_k,\n",
tutorials/stress_discretization.ipynb:    "The call to mpsa_class.assemble_matrix_rhs(), creates the left-hand side matrix $ \\text{div} \\cdot \\text{stress} $, the right-hand side vector, which consists of $\\text{f}$ and $-\\text{div} \\cdot \\text{bound_stress}$ (note sign change).\n",
tutorials/stress_discretization.ipynb:    "T2d = np.reshape(T, (g.dim, -1), order=\"F\")\n",
tutorials/stress_discretization.ipynb:    "u_b2d = np.reshape(u_b, (g.dim, -1), order=\"F\")\n",
tutorials/stress_discretization.ipynb:    "We have seen how linear elastic problems can be solved using the Mpsa class, which implements a multi-point finite volume method for momentum balance. The primary unknown in Mpsa is the cell center displacements, whereas tractions on faces can easily be post-processed."
tutorials/stress_discretization.ipynb:   "mimetype": "text/x-python",
tutorials/diagnostics.ipynb:    "    def meshing_arguments(self) -> dict:\n",
tutorials/diagnostics.ipynb:    "    def bc_values_darcy(self, subdomains: list[pp.Grid]) -> pp.ad.DenseArray:\n",
tutorials/diagnostics.ipynb:    "The matrix consists of multiple blocks - the submatrices. Each block corresponds to the dependence of a specific equation on a specific variable. If there are multiple subdomains/interfaces, we can also divide each submatrix into grid-related blocks.\n",
tutorials/diagnostics.ipynb:    "Now, we plot the list of variables. Note, that each variable corresponds to its own subdomain. That's why you'll see \"temperature\" and \"pressure\" twice - one of them is defined in the 2D subdomain, and the latter - in the 1D subdomain. "
tutorials/diagnostics.ipynb:    "- it takes values in $[1, \\infty]$.\n",
tutorials/diagnostics.ipynb:    "- unity matrix has condition number = 1.\n",
tutorials/diagnostics.ipynb:    "- degenerate matrices have condition number = $\\infty$. \n",
tutorials/diagnostics.ipynb:    "- the smaller the condition number, the more accurately and easily we can solve a linear system numerically.\n",
tutorials/diagnostics.ipynb:    "- Do your expectations of which equations depend on which variables (and on which grids) match what you see?\n",
tutorials/diagnostics.ipynb:    "- Does any block have a much bigger condition value than the others? Is this expected?\n",
tutorials/diagnostics.ipynb:    "- Maybe you should apply scaling to one of your model equations to decrease the condition number?\n",
tutorials/diagnostics.ipynb:    "It is computationally expensive to compute the condition number for big matrices. In this case, you can use the simplified metric - the absolute maximum for each submatrix. It might provide less information about how bad the block is, but still a good thing to look at as a sanity check. If you need the condition number, it is recommended to decrease the model size. "
tutorials/diagnostics.ipynb:    "- `grouping=\"dense\"` - group all grids into one cell.\n",
tutorials/diagnostics.ipynb:    "- `grouping=\"subdomains\"` - investigate only the subdomains. Each subdomain is treated in a separate cell.\n",
tutorials/diagnostics.ipynb:    "- `grouping=\"interfaces\"` - the same as \"subdomains\", but for interfaces.\n",
tutorials/diagnostics.ipynb:    "- custom - see further."
tutorials/diagnostics.ipynb:       "  Number of cells in lower-dimensional neighbor 4\n",
tutorials/diagnostics.ipynb:       "  Number of faces in higher-dimensional neighbor 44]]"
tutorials/diagnostics.ipynb:   "mimetype": "text/x-python",
tutorials/grid_structure.ipynb:    "This is general, all geometric quantities in `PorePy` have three dimensions, even if they represent objects that are genuinely lower-dimensional. \n",
tutorials/grid_structure.ipynb:    "This is achieved by perturbing the nodes, and then (re)-computing geometry:"
tutorials/grid_structure.ipynb:    "For instance, the lines of code below will plot a grid where we can see cell-, face- and node numbers, in addition to having all the cells colored with separate colors:"
tutorials/grid_structure.ipynb:    "There is an entire tutorial related to exporting of data, so for a thorough walk-through of this we refer to the [exporter tutorial](./exporter.ipynb)."
tutorials/grid_structure.ipynb:    "The simplex grids can be specified either by point coordinates and a cell-node map (e.g. a Delaunay triangulation), or simply by the node coordinates. \n",
tutorials/grid_structure.ipynb:    "To import a new type of grid, all that is needed is to construct the face-node and cell-face maps, together with importing the node coordinates. \n",
tutorials/grid_structure.ipynb:    "We have seen that PorePy provides convenient construction of Cartesian and simplex grids in 2d and 3d. The geometric information relevant to a grid (node coordinates, cell and face centers, cell volumes, face areas and face normal vectors) are computed by the method `compute_geometry()`. All coordinates are three-dimensional fields, even if the grid is of a lower dimension. Small grids can be visualized by the method `pp.plot_grid()`; for larger grids, it is advisable to export the grid to ParaView as demonstrated in the [exporter tutorial](./exporter.ipynb)."
tutorials/grid_structure.ipynb:   "mimetype": "text/x-python",
tutorials/introduction.ipynb:    "For a more rigorous and theoretical description, please see [Keilegavlen et al.](https://link.springer.com/article/10.1007/s10596-020-10002-5) and references therein.\n",
tutorials/introduction.ipynb:    "The underlying mixed-dimensional model arises from dimension reduction of fractures, which is motivated by their high aspect ratio. \n",
tutorials/introduction.ipynb:    "Averaging along the thickness of the fracture allows representing it as a co-dimension one subdomain where the aperture [m] accounts for the collapsed dimension.\n",
tutorials/introduction.ipynb:    "The dimension reduction leads to a mixed-dimensional model of the rock, where the host rock, fractures, fracture intersections and intersections of fracture intersections are treated as individual subdomains.\n",
tutorials/introduction.ipynb:    "In practice this means that for a three-dimensional domain, the fractures within it are two-dimensional planes.\n",
tutorials/introduction.ipynb:    "Similarly, fracture intersections are represented by one-dimensional lines and intersections of fracture intersections by zero-dimensional points. \n",
tutorials/introduction.ipynb:    "The same principle holds also for two-dimensional domains: the fractures are one-dimensional lines and fracture intersections are zero-dimensional points. \n",
tutorials/introduction.ipynb:    "To account for the collapsed area and volume, we introduce a _specific volume_ [m$^{3-d}$], with $d$ denoting the dimension of the subdomain in question. \n",
tutorials/introduction.ipynb:    "Finally, in the mixed-dimensional model, each lower-dimensional subdomain corresponds to an internal boundary for one or more higher-dimensional subdomains. \n",
tutorials/introduction.ipynb:    "Each such pair of neighboring subdomains exactly one dimension apart is connected through an _interface_. This is illustrated in the figure below, for the 2D subdomain $\\Omega_h$, the 1D subdomain $\\Omega_l$ and the 1D interface $\\Gamma_j$ (figure taken from [Keilegavlen et al.](https://link.springer.com/article/10.1007/s10596-020-10002-5)).\n",
tutorials/introduction.ipynb:    "Thus, the entire mixed-dimensional domain can be represented by a graph with *nodes* corresponding to subdomains and *edges* corresponding to interfaces.\n",
tutorials/introduction.ipynb:    "The definition of a mixed-dimensional domain allows modeling, equation definition and numerical discretization to take place on individual subdomains and interfaces.\n",
tutorials/introduction.ipynb:    "It also implies the need for a structure representing a mixed-dimensional grid and handling of this structure:\n",
tutorials/introduction.ipynb:    "* The `MixedDimensionalGrid` object has a graph structure whose nodes are $d$-dimensional grids representing the subdomains and whose edges correspond to interface (or \"mortar\") grids. Each node and edge also has an associated data dictionary for storage of parameters, variables, discretization matrices etc.\n",
tutorials/introduction.ipynb:    "* A `FractureNetwork` class processes a set of fractures (defined through vertices) by computing intersections to define the collection of subdomains. Then, the actual meshing of subdomains is done using [gmsh](https://gmsh.info/). The resulting mixed-dimensional mesh is conforming, in that any internal boundary corresponds to a face of the mesh, but may be non-matching, i.e. we do not require a one-to-one face correspondance between the two sides of a fracture.\n",
tutorials/introduction.ipynb:    "* The `EquationSystem` class handles variables and equations. This includes bookkeeping of user-defined equations, as well as assembling the linear system of equations during a Newton iteration. \n",
tutorials/introduction.ipynb:    "* An automatic differentiation (AD) package handles the assembly of the Jacobian matrix during a Newton iteration. Due to this, equations are defined as AD operators - that is, operators on which automatic differentiation can be performed. This is achieved by defining all of the building blocks of the equation to be AD operators, including the independent variables. All of this is handled by the `Operator` class.\n",
tutorials/introduction.ipynb:    "* Single-phase flow, both incompressible and compressible.\n",
tutorials/introduction.ipynb:    "* Two-phase flow\n",
tutorials/introduction.ipynb:    "* Thermo-poroelasticity\n",
tutorials/introduction.ipynb:    "The setup of a coupled multi-physics mixed-dimensional simulation is nontrivial. \n",
tutorials/introduction.ipynb:    "* There is currently no native support for linear and non-linear solvers in PorePy; specifically tailored approaches for coupled physical processes are lacking. This means simulations on large grids will be time consuming."
tutorials/introduction.ipynb:   "mimetype": "text/x-python",
tutorials/mandels_problem.ipynb:    "scaling = {\"m\": 1e-3}\n",
tutorials/mandels_problem.ipynb:    "factor of `1e-3`, thus effectively measuring length in _millimeters_. Defining a\n",
tutorials/mandels_problem.ipynb:    "the numerical approximations obtained with MPSA/MPFA-FV. Each line corresponds to a\n",
tutorials/mandels_problem.ipynb:    "Finite-Volume-Based Module for Unsaturated Poroelasticity. Advanced Modeling with the\n",
tutorials/mandels_problem.ipynb:    "[2] Nordbotten, J. M. (2016). Stable cell-centered finite volume discretization for Biot\n",
tutorials/mandels_problem.ipynb:    "equations. SIAM Journal on Numerical Analysis, 54(2), 942-968.\n",
tutorials/mandels_problem.ipynb:    "& Berre, I. (2021). Porepy: An open-source software for simulation of multiphysics\n",
tutorials/mandels_problem.ipynb:    "processes in fractured porous media. Computational Geosciences, 25, 243-265."
tutorials/mandels_problem.ipynb:   "mimetype": "text/x-python",
tutorials/grid_structure_advanced.ipynb:    "Before tackling the topological information, we will re-use the basic grid we created in the previous grid structure tutorial:\n"
tutorials/grid_structure_advanced.ipynb:    "The information can still be recovered from the face-node relations, see comments below.\n",
tutorials/grid_structure_advanced.ipynb:       "array([-1.,  1., -1.,  1.])"
tutorials/grid_structure_advanced.ipynb:    "As with the face-node relations, we can obtain the cells of a face by representing the matrix in a sparse row storage format, and then use the above procedure of indices and index pointers. \n",
tutorials/grid_structure_advanced.ipynb:    "It is thus feasible to create a dense representation of the cell-face relations:"
tutorials/grid_structure_advanced.ipynb:       "array([[-1,  0,  1,  2, -1,  3,  4,  5, -1, -1, -1,  0,  1,  2,  3,  4,\n",
tutorials/grid_structure_advanced.ipynb:       "       [ 0,  1,  2, -1,  3,  4,  5, -1,  0,  1,  2,  3,  4,  5, -1, -1,\n",
tutorials/grid_structure_advanced.ipynb:       "        -1]])"
tutorials/grid_structure_advanced.ipynb:    "Finally, we note that to get a cell-node relation, we can combine `cell_faces` and `face_nodes`. \n",
tutorials/grid_structure_advanced.ipynb:      "    def cell_nodes(self) -> sps.csc_matrix:\n",
tutorials/grid_structure_advanced.ipynb:      "            The value 1 indicates a connection between a cell and node column-wise.\n",
tutorials/grid_structure_advanced.ipynb:   "mimetype": "text/x-python",
tutorials/gmsh_frac_file.msh:1 0 0 0 2 0 0 1 5 2 3 -4 
tutorials/gmsh_frac_file.msh:2 2 0 0 2 2 0 1 6 2 4 -5 
tutorials/gmsh_frac_file.msh:3 0 2 0 2 2 0 1 7 2 5 -6 
tutorials/gmsh_frac_file.msh:4 0 0 0 0 2 0 1 8 2 3 -6 
tutorials/gmsh_frac_file.msh:5 0.2 0.2 0 1 1 0 1 10 2 1 -7 
tutorials/gmsh_frac_file.msh:6 1 1 0 1.8 1.8 0 1 10 2 7 -2 
tutorials/gmsh_frac_file.msh:1 0 0 0 2 2 0 1 9 4 1 2 3 -4 
tutorials/meshing_of_fractures.ipynb:    "Together, these are the first steps towards creating a simulation model for a mixed-dimensional problem in fractured domains.\n",
tutorials/meshing_of_fractures.ipynb:    "For most simulation purposes, the final mixed-dimensional grid is all that is needed. Therefore, we start by showing a shortcut for obtaining a `MixedDimensionalGrid` given a set of fractures, a domain and two mesh size parameters. All these will be described in more detail below.\n",
tutorials/meshing_of_fractures.ipynb:    "We also mention that access to methods generating mixed-dimensional grids for a small selection of predefined fracture networks is available under `pp.grids.standard_grids`.\n",
tutorials/meshing_of_fractures.ipynb:    "A two-dimensional fracture is formed by specifying the coordinates of its two endpoints. These coordinates are collected into an array such that each column contains the coordinates of a specific point. The fractures are instantiated by the `LineFracture` class, which inherits from the `Fracture` class.\n",
tutorials/meshing_of_fractures.ipynb:    "bounding_box = {'xmin': -2, 'xmax': 3, 'ymin': -2, 'ymax': 3}\n",
tutorials/meshing_of_fractures.ipynb:    "We combine the geometry information into a fracture network and produce fracture and matrix meshes, collected in a mixed-dimensional mesh."
tutorials/meshing_of_fractures.ipynb:    "# Set preferred mesh size close to the fracture and at the boundary (essentially this is a far-field value)\n",
tutorials/meshing_of_fractures.ipynb:    "# Generate a mixed-dimensional grid\n",
tutorials/meshing_of_fractures.ipynb:    "Visualizing the network, we see that the two fractures form a Y (or T) type intersection. The intersection point is identified during meshing and assigned a zero-dimensional mesh. The plot of `mdg` shows how the chosen mesh sizes result in refinement towards the fractures."
tutorials/meshing_of_fractures.ipynb:    "                                 [-1, 2, 2, -1], \n",
tutorials/meshing_of_fractures.ipynb:    "                                 [-1, -1, 2, 2]]))\n",
tutorials/meshing_of_fractures.ipynb:    "bounding_box = {'xmin': -1, 'xmax': 3, 'ymin': -2, 'ymax': 3, 'zmin': -1.5, 'zmax': 3}\n",
tutorials/meshing_of_fractures.ipynb:    "# Generate the mixed-dimensional mesh\n",
tutorials/meshing_of_fractures.ipynb:    "## Visualization of the mixed-dimensional grid\n",
tutorials/meshing_of_fractures.ipynb:    "# So far, the fracture is located in the xy-plane. To define the incline, specify the strike angle, and the dip angle.\n",
tutorials/meshing_of_fractures.ipynb:    "# Note that the dip rotation is carried out after the major_axis rotation (recall rotations are non-commutative).\n",
tutorials/meshing_of_fractures.ipynb:    "strike_angle = -np.pi/3\n",
tutorials/meshing_of_fractures.ipynb:    "dip_angle = -np.pi/3\n",
tutorials/meshing_of_fractures.ipynb:    "bounding_box = {'xmin': -2, 'xmax': 3, 'ymin': -2, 'ymax': 3, 'zmin': -3, 'zmax': 3}\n",
tutorials/meshing_of_fractures.ipynb:    "Our aim is to create a computational mesh that conforms to the fractures and their intersections (1d lines, 0d points). For the actual grid construction, we rely on Gmsh. However, Gmsh requires that the geometric constraints, that is the fractures, are described as *non-intersecting* polygons. It only takes some thinking to understand why the meshing software would not like to do this themselves; this is a highly challenging task.\n",
tutorials/meshing_of_fractures.ipynb:    "PorePy provides functionality for finding intersections between fractures, and splitting them into non-intersecting polygons. Intersections are found by "
tutorials/meshing_of_fractures.ipynb:    "3. The resolution of the computational grid: If points with a certain distance are considered non-equal, this may also require that we resolve their difference in the mesh. In addition, the mesh generator will use its own concept of geometric tolerance for internal calculations.\n",
tutorials/meshing_of_fractures.ipynb:    "If an acceptable mesh cannot be generated by tuning the three parameters `mesh_size_frac`, `mesh_size_min` and `mesh_size_bound`, more fine-tuned mesh generation can be achieved directly in Gmsh. A typical workflow would be first to generate a gmsh configuration file using the function `FractureNetwork.prepare_for_gmsh()`, then generate the mesh from Gmsh proper and store it to a .msh file, and finally import the mesh using the functions from `pp.fracture_importer` to obtain a MixedDimensionalGrid."
tutorials/meshing_of_fractures.ipynb:    "# With the mesh size parameters, we can simply ask the md-grid to mesh itself:\n",
tutorials/meshing_of_fractures.ipynb:    "# Show basic geometric information on the mixed-dimensional grid\n",
tutorials/meshing_of_fractures.ipynb:    "Fractures in PorePy are defined as convex planes (in 3d) or lines (in 2d). A `FractureNetwork` is a domain that contains a set of fractures. A mixed-dimensional mesh is constructed by invoking the method `mesh()` of a `FractureNetwork`, with the mesh size controlled by the parameters `mesh_size_frac`, `mesh_size_min` and `mesh_size_bound`. The actual mesh is constructed by the external package Gmsh."
tutorials/meshing_of_fractures.ipynb:   "mimetype": "text/x-python",
tutorials/visualization/data_1_000119.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000133.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000127.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000117.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000043.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000065.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000048.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000060.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000104.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000131.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000145.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000109.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000114.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000128.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000103.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000040.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000024.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000106.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000042.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000117.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000137.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000071.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000140.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000098.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000135.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000142.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000115.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000135.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000134.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000121.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000109.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000102.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000121.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000085.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000018.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000079.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000145.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000134.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000142.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000105.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000143.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000045.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000128.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000017.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000080.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000109.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000059.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000121.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000051.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000110.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000027.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000110.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000066.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000144.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000111.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000072.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000011.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000007.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000125.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000107.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000012.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000038.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000077.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000075.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000062.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000106.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000069.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000084.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000036.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000137.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000122.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000046.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000130.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000127.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000113.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000078.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000113.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000044.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000025.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000144.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000057.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000111.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000105.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000119.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000066.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000103.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000050.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000022.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000108.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000101.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000020.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000021.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000129.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000135.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000101.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000005.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000103.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000133.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000128.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000138.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000123.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000143.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000068.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000062.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000123.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000055.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000136.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000112.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000126.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000068.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000020.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000077.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000003.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000056.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000047.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000019.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000053.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000112.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000116.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000119.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000099.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000042.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000095.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000061.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000132.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000080.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000122.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000035.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000133.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000137.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000041.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000015.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000049.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000134.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000064.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000139.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000120.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000085.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000032.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000120.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000122.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000017.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000002.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000035.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000096.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000075.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000032.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000036.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000059.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000086.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000138.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000145.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000073.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000124.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000084.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000014.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000055.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000116.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000004.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000069.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000021.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000008.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000124.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000033.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000053.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000129.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000026.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000031.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000112.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000125.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000076.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000048.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000094.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000067.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000090.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000005.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000067.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000105.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000030.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000016.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000117.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000083.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000006.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000136.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000074.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000140.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000114.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000087.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000100.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000024.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000016.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000001.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000091.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000123.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000102.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000057.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000054.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000083.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000092.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000082.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000094.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000008.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000099.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000039.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000138.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000081.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000056.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000079.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000040.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000118.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000028.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000095.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000045.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000065.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000129.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000011.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000107.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000141.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000081.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000058.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000044.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000025.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000142.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000063.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000070.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000014.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000074.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000091.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000096.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000097.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000132.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000089.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000078.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000015.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000018.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000052.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000061.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000009.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000023.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000054.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000127.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000038.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000026.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000070.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000125.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000110.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000052.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000029.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000144.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000100.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000116.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000139.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000007.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000107.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000033.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000019.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000111.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000093.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000010.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000092.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000047.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000124.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000013.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000140.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000041.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000027.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000001.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000114.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000029.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000115.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000141.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000064.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000120.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000130.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000141.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000132.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000039.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000058.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000006.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000034.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000072.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000037.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000118.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000013.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000023.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000009.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000043.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000012.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000060.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000106.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000115.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000104.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000082.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000030.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000071.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000102.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000031.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000108.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000126.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000051.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000139.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000004.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000037.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000002.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000136.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000003.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000087.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000050.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000098.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000022.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000089.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000093.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000088.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000130.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000063.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000034.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000131.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000118.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000108.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000131.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000086.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000113.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000049.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000104.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000028.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000126.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000143.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000090.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000076.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000010.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_mortar_1_000046.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_2_000088.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000097.vtu:<!--This file was created by meshio v5.3.4-->
tutorials/visualization/data_1_000073.vtu:<!--This file was created by meshio v5.3.4-->
gmsh_frac_file.geo_unrolled:Curve Loop(1) = {1, -7, 8, -6, 5, -4, 3, -2};
LICENSE:share and change all versions of a program--to make sure it remains free
LICENSE:software on general-purpose computers, but in those that do, we wish to
LICENSE:patents cannot be used to render the program non-free.
LICENSE:  "Copyright" also means copyright-like laws that apply to other kinds of
LICENSE:for making modifications to it.  "Object code" means any non-source
LICENSE:System Libraries, or general-purpose tools or generally available free
LICENSE:  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
LICENSE:non-permissive terms added in accord with section 7 apply to the code;
LICENSE:  6. Conveying Non-Source Forms.
LICENSE:machine-readable Corresponding Source under the terms of this License,
LICENSE:    e) Convey the object code using peer-to-peer transmission, provided
LICENSE:commercial, industrial or non-consumer uses, unless such uses represent
LICENSE:  All other non-permissive additional terms are considered "further
LICENSE:  Additional terms, permissive or non-permissive, may be stated in the
LICENSE:occurring solely as a consequence of using peer-to-peer transmission
LICENSE:(including a cross-claim or counterclaim in a lawsuit) alleging that
LICENSE:  Each contributor grants you a non-exclusive, worldwide, royalty-free
LICENSE:conditioned on the non-exercise of one or more of the rights that are
LICENSE:<https://www.gnu.org/licenses/why-not-lgpl.html>.
Readme.md:[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)
Readme.md:[![Code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)
Readme.md:- General grids in 2d and 3d, as well as mixed-dimensional grids defined by intersecting fracture networks.
Readme.md:- Automatic gridding for complex fracture networks in 2d and 3d.
Readme.md:- Discretization of mixed-dimensional multi-physics processes:
Readme.md:    - Finite volume and mixed and virtual finite element methods for flow
Readme.md:    - Finite volume methods for transport and thermo-poroelasticity
Readme.md:    - Deformation of existing fractures treated as a frictional contact problem
Readme.md:    - Some functionality for fracture propagation along existing grid lines
Readme.md:Keilegavlen, E., Berge, R., Fumagalli, A., Starnoni, M., Stefansson, I., Varela, J., & Berre, I. PorePy: an open-source software for simulation of multiphysics processes in fractured porous media. Computational Geosciences,  25, 243–265 (2021), [doi:10.1007/s10596-020-10002-5](https://doi.org/10.1007/s10596-020-10002-5)
Readme.md:Note that there are a few simple but non-obvious steps in the installation, so please read the entire document before sending questions.
Readme.md:    pip install -r requirements.txt
Readme.md:    pip install --user -e .
Readme.md:# (Semi-) Optional packages
Readme.md:* We use `shapely` for certain geometry-operations.
Readme.md:    pip install -r requirements-dev.txt
LICENSE.md:Copyright 2016-2017: University of Bergen.
LICENSE.md:       of the Library that is interface-compatible with the Linked
dockerfiles/parse_environment.py:# Source: https://stackoverflow.com/questions/3232943/update-value-of-a-nested-dictionary-of-varying-depth
dockerfiles/parse_environment.py:def forced_update(orig: Dict, mandatory: Dict) -> Dict:
dockerfiles/parse_environment.py:def amend_dict(orig: Dict, defaults: Dict) -> Dict:
dockerfiles/parse_environment.py:            line = line.replace("python", "- python")
dockerfiles/base/Dockerfile:#    docker build  --tag porepy --file dockerfiles/base/Dockerfile .
dockerfiles/base/Dockerfile:#    docker run -ti -v $(pwd):/home/porepy/shared porepy:latest
dockerfiles/base/Dockerfile:#    docker run -ti TAG_FOR_NEW_IMAGE  # will contain modifications.
dockerfiles/base/Dockerfile:FROM phusion/baseimage:jammy-1.0.0
dockerfiles/base/Dockerfile:RUN apt-get update && yes|apt-get upgrade
dockerfiles/base/Dockerfile:RUN apt-get install -y wget vim bzip2 git gcc libglu1-mesa libxrender1 libxcursor1 libxft2 libxinerama1 ffmpeg libgl1-mesa-glx libsm6 libxext6 
dockerfiles/base/Dockerfile:RUN apt-get -y install sudo
dockerfiles/base/Dockerfile:RUN adduser --disabled-password porepy
dockerfiles/base/Dockerfile:RUN curl -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh \
dockerfiles/base/Dockerfile:    && bash /tmp/miniconda.sh -bfp $POREPY_HOME/.conda \
dockerfiles/base/Dockerfile:    && rm -rf /tmp/miniconda.sh
dockerfiles/base/Dockerfile:RUN conda create --name pp_env python=${PYTHON_VERSION}
dockerfiles/base/Dockerfile:# Source: https://stackoverflow.com/questions/64323539/docker-run-interactive-with-conda-environment-already-activated
dockerfiles/base/Dockerfile:SHELL ["/bin/bash", "--login", "-c"]
dockerfiles/base/Dockerfile:# Add conda-forge as a channel
dockerfiles/base/Dockerfile:RUN conda config --add channels conda-forge
dockerfiles/base/Dockerfile:# Get the PorePy requirements-dev file (we'll install the full development
dockerfiles/base/Dockerfile:    wget https://raw.githubusercontent.com/pmgbergen/porepy/develop/requirements-dev.txt
dockerfiles/base/Dockerfile:# since updates like 'conda update --all' will not update all packages, likely contrary
dockerfiles/base/Dockerfile:RUN sed -i '/gmsh/d' requirements.txt 
dockerfiles/base/Dockerfile:# Main source: https://pythonspeed.com/articles/activate-conda-dockerfile/
dockerfiles/base/Dockerfile:SHELL ["conda", "run", "-n", "pp_env", "/bin/bash", "-c"]
dockerfiles/base/Dockerfile:RUN conda install -c conda-forge --file requirements.txt && \
dockerfiles/base/Dockerfile:    conda install -c conda-forge --file requirements-dev.txt
dockerfiles/base/Dockerfile:#   docker build  --tag porepy/base:latest --file dockerfiles/base/Dockerfile .
dockerfiles/base/Dockerfile:COPY ./dockerfiles/base/set-home-permissions.sh /etc/my_init.d/set-home-permissions.sh
dockerfiles/base/Dockerfile:RUN chmod +x /etc/my_init.d/set-home-permissions.sh
dockerfiles/base/Dockerfile:ENTRYPOINT ["/sbin/my_init","--quiet","--","/sbin/setuser","porepy","/bin/bash","-l","-c"]
dockerfiles/base/Dockerfile:CMD ["/bin/bash","-i"]
dockerfiles/base/set-home-permissions.sh:#   https://bitbucket.org/fenics-project/docker/src/master/dockerfiles/base/set-home-permissions.sh
dockerfiles/base/set-home-permissions.sh:# we let the user pass --env arguments to the docker run command that (by the
dockerfiles/base/set-home-permissions.sh:#    docker run -ti --env HOST_UID=$(id -u) --env HOST_GID=$(id -g) ...
dockerfiles/base/set-home-permissions.sh:# User can pass e.g. --env HOST_UID=1003 so that UID in the container matches
dockerfiles/base/set-home-permissions.sh:    usermod -u $HOST_UID porepy
dockerfiles/base/set-home-permissions.sh:    groupmod -g $HOST_GID porepy
dockerfiles/dev/Dockerfile:#    docker run -ti -v $(pwd):/home/porepy/shared porepy/dev:latest
dockerfiles/dev/Dockerfile:#    docker run -ti TAG_FOR_NEW_IMAGE  # will contain modifications.
dockerfiles/dev/Dockerfile:RUN pip install -e .
dockerfiles/intelpython.Dockerfile:# - intepython3_core=2020.1
dockerfiles/intelpython.Dockerfile:# - do: apt-get update && apt-get install g++
dockerfiles/intelpython.Dockerfile:# - use intel as priority 1. channel
dockerfiles/intelpython.Dockerfile:# Add conda-forge to dependencies
dockerfiles/intelpython.Dockerfile:# 1. intel, 2. conda-forge, 3. defaults
dockerfiles/intelpython.Dockerfile:RUN conda config --append channels conda-forge
dockerfiles/intelpython.Dockerfile:RUN conda config --append channels defaults
dockerfiles/intelpython.Dockerfile:	pytest pytest-cov pytest-runner black mypy flake8 \
dockerfiles/intelpython.Dockerfile:RUN apt-get install libgl1 libglu1 libxcursor1 libxft2 libxinerama1 -y
dockerfiles/intelpython.Dockerfile:# Install conda-build to use 'conda develop'
dockerfiles/intelpython.Dockerfile:RUN conda install conda-build
dockerfiles/intelpython.Dockerfile:RUN conda install -c haasad pypardiso
dockerfiles/intelpython.Dockerfile:# -- Prepare installation of PorePy --
dockerfiles/intelpython.Dockerfile:# Install robust-point-in-polyhedron
dockerfiles/stable/Dockerfile:#    docker run -ti -v $(pwd):/home/porepy/shared porepy/stable:latest
dockerfiles/stable/Dockerfile:#    docker run -ti TAG_FOR_NEW_IMAGE  # will contain modifications.
dockerfiles/stable/Dockerfile:RUN pip install --user -e .
conftest.py:Credits: https://jwodder.github.io/kbits/posts/pytest-mark-off/ (Option 1).
conftest.py:        "--run-skipped",
conftest.py:    if not config.getoption("--run-skipped"):
conftest.py:        skipper = pytest.mark.skip(reason="Only run when --run-skipped is given")
Papers.md:List of papers that have used PorePy to generate (parts of) the numerical results. The indicated year is the first submission on [arXiv](https://arxiv.org/). Where applicable, open-source runscripts for the paper are accessible as the first link in each item.
Papers.md:* [arXiv:2101.08331 [math.NA]](https://github.com/jhabriel/mixdim-estimates) paper "*A posteriori error estimates for hierarchical mixed-dimensional elliptic equations*" by Jhabriel Varela, Elyes Ahmed, Eirik Keilegavlen, Jan Martin Nordbotten, Florin Radu. See [arXiv pre-print](https://arxiv.org/abs/2101.08331).
Papers.md:* [arXiv:2012.06493 [math.Na]](https://github.com/pmgbergen/Numerical-modelling-of-convection-driven-cooling-deformation-and-fracturing-of-thermo-poroelastic-m)  paper "*Numerical modelling of convection-driven cooling, deformation and fracturing of thermo-poroelastic media*" by Ivar Stefansson, Eirik Keilegavlen, Sæunn Halldórsdóttir, Inga Berre. See [arXiv pre-print](https://arxiv.org/abs/2012.06493).
Papers.md:* [arXiv:2011.04227 [math.NA]](https://github.com/alessiofumagalli/arXiv_2011_04227) paper "*A multi-layer reactive transport model for fractured porous media*" by Luca Formaggia, Alessio Fumagalli, Anna Scotti. See [arXiv pre-print](https://arxiv.org/abs/2011.04227).
Papers.md:* [arXiv:2011.03370 [physics.geo-ph]](https://github.com/keileg/RN-34-stimulation) paper "*Hydro-mechanical simulation and analysis of induced seismicity for a hydraulic stimulation test at the Reykjanes geothermal field, Iceland*" by Eirik Keilegavlen, Laure Duboeuf, Anna Maria Dichiarante, Sæunn Halldórsdóttir, Ivar Stefansson, Marcel Naumann, Egill Árni Guðnason, Kristján Ágústsson, Guðjón Helgi Eggertsson, Volker Oye, Inga Berre. See [arXiv pre-print](https://arxiv.org/abs/2011.03370).
Papers.md:* [arXiv:2008.11190 [physics.comp-ph]](https://github.com/IvarStefansson/Fault-Slip-in-Hydraulic-Stimulation-of-Geothermal-Reservoirs) paper "*Fault slip in hydraulic stimulation of geothermal reservoirs: governing mechanisms and process-structure interactiona*" by Inga Berre, Ivar Stefansson, Eirik Keilegavlen. See [arXiv pre-print](https://arxiv.org/abs/2008.11190).
Papers.md:* [arXiv:2008.06289 [physics.comp-ph]](https://github.com/IvarStefansson/A-fully-coupled-numerical-model-of-thermo-hydro-mechanical-processes-and-fracture-contact-mechanics-)  paper "*A fully coupled numerical model of thermo-hydro-mechanical processes and fracture contact mechanics in porous media*" by Ivar Stefansson, Inga Berre, Eirik Keilegavlen. See [arXiv pre-print](https://arxiv.org/abs/2008.06289).
Papers.md:* [arXiv:2005.09437 [math.NA]](https://github.com/alessiofumagalli/arXiv_2005_0943) paper "*A mathematical model for thermal single-phase flow and reactive transport in fractured porous media*" by Alessio Fumagalli, Anna Scotti. See [arXiv pre-print](https://arxiv.org/abs/2005.09437).
Papers.md:* arXiv:2003.14279 [physics.comp-ph] paper "*Numerical Methods for Flow in Fractured Porous Media*" by Luca Formaggia, Anna Scotti, Alessio Fumagalli. See [arXiv pre-print](https://arxiv.org/abs/2003.14279).
Papers.md:* [arXiv:2002.11974 [math.NA]](https://github.com/alessiofumagalli/arXiv_2002_11974) paper "*Performances of the mixed virtual element method on complex grids for underground flow*" by Alessio Fumagalli, Anna Scotti, Luca Formaggia. See [arXiv pre-print](https://arxiv.org/abs/2002.11974).
Papers.md:* [arXiv:2002.07005 [math.NA]](https://github.com/pmgbergen/arXiv_1809_06926) paper "*Verification benchmarks for single-phase flow in three-dimensional fractured porous media*" by Inga Berre, Wietse M. Boon, Bernd Flemisch, Alessio Fumagalli, Dennis Gläser, Eirik Keilegavlen, Anna Scotti, Ivar Stefansson, Alexandru Tatomir, Konstantin Brenner, Samuel Burbulla, Philippe Devloo, Omar Duran, Marco Favino, Julian Hennicker, I-Hsien Lee, Konstantin Lipnikov, Roland Masson, Klaus Mosthaf, Maria Giuseppina Chiara Nestola, Chuen-Fa Ni, Kirill Nikitin, Philipp Schädle, Daniil Svyatskiy, Ruslan Yanbarisov, Patrick Zulian. See [arXiv pre-print](https://arxiv.org/abs/2002.07005) or [journal article](https://doi.org/10.1016/j.advwatres.2020.103759).
Papers.md:* arXiv:2001.01990 [physics.comp-ph] paper "*An Introduction to Multi-Point Flux (MPFA) and Stress (MPSA) Finite Volume Methods for Thermo-Poroelasticity*" by Jan Nordbotten, Eirik Keilegavlen. See [arXiv pre-print](https://arxiv.org/abs/2001.01990).
Papers.md:* [arXiv:1908.09869 [math.NA]](https://zenodo.org/record/3374624#.XWjdt3X7T0o) paper "*PorePy: An Open-Source Software for Simulation of Multiphysics Processes in Fractured Porous Media.*" by Eirik Keilegavlen, Runar Berge, Alessio Fumagalli, Michele Starnoni, Ivar Stefansson, Jhabriel Varela, Inga Berre. See [arXiv pre-print](https://arxiv.org/abs/1908.09869) or [journal article](https://link.springer.com/article/10.1007/s10596-020-10002-5)
Papers.md:* [arXiv:1906.10472 [physics.flu-dyn]](http://doi.org/10.5281/zenodo.3249931) paper "*Viscous fingering in fractured porous media*" by Runar Lie Berge, Inga Berre, Eirik Keilegavlen, Jan Martin Nordbotten. (2019, June 19).  See [arXiv pre-print](https://arxiv.org/abs/1906.10472).
Papers.md:* [arXiv:1904.11916 [math.NA]](http://doi.org/10.5281/zenodo.2652762) paper "*Finite volume discretization for poroelastic media with fractures modeled by contact mechanics*" by Runar Lie Berge, Inga Berre, Eirik Keilegavlen, Jan Martin Nordbotten, Barbara Wohlmuth. (2019, April 27). See [arXiv pre-print](https://arxiv.org/abs/1904.11916) or [journal article](https://onlinelibrary.wiley.com/doi/full/10.1002/nme.6238).
Papers.md:* [arXiv:1907.12514 [math.NA]](https://github.com/alessiofumagalli/dfn_transport) paper "*Analysis of conforming, non-matching, and polygonal methods for Darcy and advection-diffusion-reaction simulations in discrete fracture networks*" by Andrea Borio, Alessio Fumagalli, Stefano Scialò. See [arXiv pre-print](https://arxiv.org/abs/1907.12514).
Papers.md:* [arXiv:1906.05831 [math.NA]](https://github.com/alessiofumagalli/multiscale_timedependent) paper "*Robust linear domain decomposition schemes for reduced non-linear fracture flow models*" by Elyes Ahmed, Alessio Fumagalli, Ana Budiša, Eirik Keilegavlen, Jan M. Nordbotten, A. Radu Florin. See [arXiv pre-print](https://arxiv.org/abs/1906.05831).
Papers.md:* [arXiv:1905.13513 [math.NA]](https://github.com/anabudisa/md_block_precond) paper "*Block Preconditioners for Mixed-dimensional Discretization of Flow in Fractured Porous Media*" by Ana Budiša and Xiaozhe Hu. See [arXiv pre-print](https://arxiv.org/abs/1905.13513) or [journal article](https://link.springer.com/article/10.1007%2Fs10596-020-09984-z).
Papers.md:* [arXiv:1903.01117 [math.NA]](https://github.com/alessiofumagalli/arXiv_1903_01117/) paper "*A multi-layer reduced model for flow in porous media with a fault and surrounding damage zones*" by Alessio Fumagalli, Anna Scotti. See [arXiv pre-print](https://arxiv.org/abs/1903.01117) or [journal article](https://link.springer.com/article/10.1007/s10596-020-09954-5).
Papers.md:* [arXiv:1810.12761 [math.NA]](https://github.com/pmgbergen/arXiv_1810_12761) paper "*A multiscale flux basis for mortar mixed discretizations of reduced Darcy-Forchheimer fracture models*" by Elyes Ahmed, Alessio Fumagalli, Ana Budiša. See [arXiv pre-print](https://arxiv.org/abs/1810.12761) or [journal article](https://www.sciencedirect.com/science/article/pii/S0045782519303044).
Papers.md:* [arXiv:1809.06926 [math.NA]](https://github.com/pmgbergen/arXiv_1809_06926) paper "*Call for participation: Verification benchmarks for single-phase flow in three-dimensional fractured porous media*" by Inga Berre, Wietse Boon, Bernd Flemisch, Alessio Fumagalli, Dennis Glaser, Eirik Keilegavlen, Anna Scotti, Ivar Stefansson, Alexandru Tatomir. See [arXiv pre-print](https://arxiv.org/abs/1809.06926).
Papers.md:* [arXiv:1802.05961 [math.NA]](https://github.com/pmgbergen/arXiv_1802_05961) paper "*Unified approach to discretization of flow in fractured porous media*" by Jan M. Nordbotten, Wietse M. Boon, Alessio Fumagalli, and  Eirik Keilegavlen. See [arXiv pre-print](https://arxiv.org/abs/1802.05961) or [journal article](https://link.springer.com/article/10.1007/s10596-018-9778-9).
Papers.md:* [arXiv:1803.01732 [math.NA]](https://github.com/pmgbergen/arXiv_1803_01732) paper "*Conforming, non-conforming and non-matching discretization couplings in discrete fracture network simulations*" by Alessio Fumagalli, Eirik Keilegavlen, and Stefano Scialo'. See [arXiv pre-print](https://arxiv.org/abs/1803.01732) or [journal article](https://www.sciencedirect.com/science/article/pii/S0021999118306508).
Papers.md:* [arXiv:1712.08479 [math.NA]](https://github.com/pmgbergen/arXiv_1712_08479) paper "*Hybrid-Dimensional Finite Volume Discretizations for Fractured Porous Media*" by Ivar Stefansson, Inga Berre, Eirik Keilegavlen. See [arXiv pre-print](https://arxiv.org/abs/1712.08479)
Papers.md:* [arXiv:1712.07392 [math.NA]](https://github.com/pmgbergen/arXiv_1712_07392) paper "*Implementation of mixed-dimensional models for flow in fractured porous media*" by Eirik Keilegavlen, Alessio Fumagalli, Runar Berge, Ivar Stefansson. See [arXiv pre-print](https://arxiv.org/abs/1712.07392) or [journal article](https://www.springerprofessional.de/en/implementation-of-mixed-dimensional-models-for-flow-in-fractured/16377424).
Papers.md:* [arXiv:1712.00460 [math.NA]](https://github.com/pmgbergen/arXiv_1712_00460) paper "*PorePy: An Open-Source Simulation Tool for Flow and Transport in Deformable Fractured Rocks*" by Eirik Keilegavlen, Alessio Fumagalli, Runar Berge, Ivar Stefansson, Inga Berre. See [arXiv pre-print](https://arxiv.org/abs/1712.00460).
Papers.md:* [arXiv:1711.01818 [math.NA]](https://github.com/pmgbergen/arXiv_1711_01818/) paper "*Dual Virtual Element Methods for Discrete Fracture Matrix Models*" by Alessio Fumagalli, Eirik Keilegavlen. See [arXiv pre-print](https://arxiv.org/abs/1711.01818) or [journal article](https://ogst.ifpenergiesnouvelles.fr/articles/ogst/full_html/2019/01/ogst170210/ogst170210.html).
Papers.md:* [arXiv:1709.03519 [math.NA]](https://github.com/alessiofumagalli/arXiv_1709_03519/) paper "*Dual virtual element method in presence of an inclusion*" by Alessio Fumagalli. See [arXiv pre-print](https://arxiv.org/abs/1709.03519) or [journal article](https://www.sciencedirect.com/science/article/pii/S0893965918301812).
Papers.md:* [arXiv:1610.02905 [math.NA]](https://github.com/pmgbergen/arXiv_1610_02905/) paper "*Dual virtual element method for discrete fractures networks*" by Alessio Fumagalli, Eirik Keilegavlen. See [arXiv pre-print](https://arxiv.org/abs/1610.02905) or [journal article](https://epubs.siam.org/doi/abs/10.1137/16M1098231).
.github/pull_request_template.md:- [ ] Minor change (e.g., dependency bumps, broken links).
.github/pull_request_template.md:- [ ] Bugfix (non-breaking change which fixes an issue).
.github/pull_request_template.md:- [ ] New feature (non-breaking change which adds functionality).
.github/pull_request_template.md:- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected).
.github/pull_request_template.md:- [ ] Testing (contribution related to testing of existing or new functionality).
.github/pull_request_template.md:- [ ] Documentation (contribution related to adding, improving, or fixing documentation).
.github/pull_request_template.md:- [ ] Maintenance (e.g., improve logic and performance, remove obsolete code).
.github/pull_request_template.md:- [ ] Other:
.github/pull_request_template.md:- [ ] The documentation is up-to-date.
.github/pull_request_template.md:- [ ] Static typing is included in the update.
.github/pull_request_template.md:- [ ] This PR does not duplicate existing functionality.
.github/pull_request_template.md:- [ ] The update is covered by the test suite (including tests added in the PR).
.github/pull_request_template.md:- [ ] If new skipped tests have been introduced in this PR, `pytest` was run with the `--run-skipped` flag.
.github/dependabot.yml:   - package-ecosystem: pip
.github/dependabot.yml:       - "keileg"
.github/workflows/run-pytest-all.yml:    - cron: '1 0 * * 0'
.github/workflows/run-pytest-all.yml:    runs-on: ubuntu-latest
.github/workflows/run-pytest-all.yml:    # https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#specifying-a-python-version
.github/workflows/run-pytest-all.yml:        python-version:  ["3.10"]  # run only the last python version
.github/workflows/run-pytest-all.yml:      fail-fast: false
.github/workflows/run-pytest-all.yml:    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
.github/workflows/run-pytest-all.yml:    - uses: actions/checkout@v3
.github/workflows/run-pytest-all.yml:    - name: Setup Python ${{ matrix.python-version}}
.github/workflows/run-pytest-all.yml:      uses: actions/setup-python@v3
.github/workflows/run-pytest-all.yml:        python-version: ${{ matrix.python-version}}
.github/workflows/run-pytest-all.yml:    # Source: https://github.com/actions/cache/blob/main/examples.md#python---pip
.github/workflows/run-pytest-all.yml:    - name: Cache dependencies
.github/workflows/run-pytest-all.yml:        # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
.github/workflows/run-pytest-all.yml:        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}
.github/workflows/run-pytest-all.yml:    - name: Install external libraries
.github/workflows/run-pytest-all.yml:        # ubuntu-latest was updated, libffi was removed, and scipy complained.
.github/workflows/run-pytest-all.yml:        sudo apt-get install libglu1-mesa libgeos-dev libffi7
.github/workflows/run-pytest-all.yml:    - name: Install requirements
.github/workflows/run-pytest-all.yml:        pip install -U pip
.github/workflows/run-pytest-all.yml:        # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
.github/workflows/run-pytest-all.yml:        pip install --upgrade --upgrade-strategy eager -r requirements.txt
.github/workflows/run-pytest-all.yml:    - name: Install requirements-dev
.github/workflows/run-pytest-all.yml:        pip install --upgrade --upgrade-strategy eager -r requirements-dev.txt        
.github/workflows/run-pytest-all.yml:    - name: Install pypardiso
.github/workflows/run-pytest-all.yml:    - name: Install PorePy
.github/workflows/run-pytest-all.yml:    - name: all tests
.github/workflows/run-pytest-all.yml:      run: pytest --run-skipped
.github/workflows/push-develop-docker-image.yml:# They are provided by a third-party and are governed by
.github/workflows/push-develop-docker-image.yml:       - develop
.github/workflows/push-develop-docker-image.yml:    runs-on: ubuntu-latest
.github/workflows/push-develop-docker-image.yml:      - name: Check out the repo
.github/workflows/push-develop-docker-image.yml:      - name: Log in to Docker Hub
.github/workflows/push-develop-docker-image.yml:        uses: docker/login-action@v1
.github/workflows/push-develop-docker-image.yml:      - name: Build and push base
.github/workflows/push-develop-docker-image.yml:        uses: docker/build-push-action@v3
.github/workflows/push-develop-docker-image.yml:      - name: Build and push dev
.github/workflows/push-develop-docker-image.yml:        uses: docker/build-push-action@v3
.github/workflows/run-static-checks.yml:      - develop
.github/workflows/run-static-checks.yml:      - main
.github/workflows/run-static-checks.yml:      - develop
.github/workflows/run-static-checks.yml:      - main
.github/workflows/run-static-checks.yml:    - cron: '0 1 * * *'
.github/workflows/run-static-checks.yml:    runs-on: ubuntu-latest
.github/workflows/run-static-checks.yml:    # https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#specifying-a-python-version
.github/workflows/run-static-checks.yml:        python-version:  ["3.10"]
.github/workflows/run-static-checks.yml:      fail-fast: false
.github/workflows/run-static-checks.yml:    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
.github/workflows/run-static-checks.yml:    - uses: actions/checkout@v3
.github/workflows/run-static-checks.yml:    - name: Setup Python ${{ matrix.python-version}}
.github/workflows/run-static-checks.yml:      uses: actions/setup-python@v3
.github/workflows/run-static-checks.yml:        python-version: ${{ matrix.python-version}}
.github/workflows/run-static-checks.yml:    # Source: https://github.com/actions/cache/blob/main/examples.md#python---pip
.github/workflows/run-static-checks.yml:    - name: Cache dependencies
.github/workflows/run-static-checks.yml:        # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
.github/workflows/run-static-checks.yml:        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}
.github/workflows/run-static-checks.yml:    - name: Cache mypy
.github/workflows/run-static-checks.yml:      id: cache-mypy
.github/workflows/run-static-checks.yml:        path: mypy-cache-${{ matrix.python-version}}
.github/workflows/run-static-checks.yml:        key: ${{ runner.os }}-mypy
.github/workflows/run-static-checks.yml:    - name: Install requirements
.github/workflows/run-static-checks.yml:        pip install -U pip
.github/workflows/run-static-checks.yml:        # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
.github/workflows/run-static-checks.yml:        pip install --upgrade --upgrade-strategy eager -r requirements.txt
.github/workflows/run-static-checks.yml:    - name: Install requirements-dev
.github/workflows/run-static-checks.yml:        pip install --upgrade --upgrade-strategy eager -r requirements-dev.txt          
.github/workflows/run-static-checks.yml:    - name: black
.github/workflows/run-static-checks.yml:      run: black --check src
.github/workflows/run-static-checks.yml:    - name: isort
.github/workflows/run-static-checks.yml:      run: isort --check src
.github/workflows/run-static-checks.yml:    - name: flake8
.github/workflows/run-static-checks.yml:    - name: mypy
.github/workflows/run-static-checks.yml:      run: mypy src --cache-dir mypy-cache-${{ matrix.python-version}}
.github/workflows/push-stable-docker-image.yml:      - main
.github/workflows/push-stable-docker-image.yml:    runs-on: ubuntu-latest
.github/workflows/push-stable-docker-image.yml:      - name: Check out the repo
.github/workflows/push-stable-docker-image.yml:      - name: Log in to Docker Hub
.github/workflows/push-stable-docker-image.yml:        uses: docker/login-action@v1
.github/workflows/push-stable-docker-image.yml:      - name: Build and push stable
.github/workflows/push-stable-docker-image.yml:        uses: docker/build-push-action@v3
.github/workflows/run-pytest.yml:      - develop
.github/workflows/run-pytest.yml:      - main
.github/workflows/run-pytest.yml:      - develop
.github/workflows/run-pytest.yml:      - main
.github/workflows/run-pytest.yml:    - cron: '0 1 * * *'
.github/workflows/run-pytest.yml:    runs-on: ubuntu-latest
.github/workflows/run-pytest.yml:    # https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#specifying-a-python-version
.github/workflows/run-pytest.yml:        python-version:  ["3.8", "3.9", "3.10"]
.github/workflows/run-pytest.yml:      fail-fast: false
.github/workflows/run-pytest.yml:    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
.github/workflows/run-pytest.yml:    - uses: actions/checkout@v3
.github/workflows/run-pytest.yml:    - name: Setup Python ${{ matrix.python-version}}
.github/workflows/run-pytest.yml:      uses: actions/setup-python@v3
.github/workflows/run-pytest.yml:        python-version: ${{ matrix.python-version}}
.github/workflows/run-pytest.yml:    # Source: https://github.com/actions/cache/blob/main/examples.md#python---pip
.github/workflows/run-pytest.yml:    - name: Cache dependencies
.github/workflows/run-pytest.yml:        # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
.github/workflows/run-pytest.yml:        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}
.github/workflows/run-pytest.yml:    - name: Install external libraries
.github/workflows/run-pytest.yml:        # ubuntu-latest was updated, libffi was removed, and scipy complained.
.github/workflows/run-pytest.yml:        sudo apt-get install libglu1-mesa libgeos-dev libffi7
.github/workflows/run-pytest.yml:    - name: Install requirements
.github/workflows/run-pytest.yml:        pip install -U pip
.github/workflows/run-pytest.yml:        # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
.github/workflows/run-pytest.yml:        pip install --upgrade --upgrade-strategy eager -r requirements.txt
.github/workflows/run-pytest.yml:    - name: Install requirements-dev
.github/workflows/run-pytest.yml:        pip install --upgrade --upgrade-strategy eager -r requirements-dev.txt        
.github/workflows/run-pytest.yml:    - name: Install PorePy
.github/workflows/run-pytest.yml:    - name: unit tests
.github/workflows/run-pytest.yml:    - name: integration tests
.github/workflows/run-pytest.yml:    - name: functional tests
Readme.rst:-  `Installation <#installation>`__
Readme.rst:-  `PorePy features <#porepy-features>`__
Readme.rst:PorePy currently has the following distinguishing features: - General
Readme.rst:grids in 2d and 3d, as well as mixed-dimensional grids defined by
Readme.rst:intersecting fracture networks. - Support for analysis, visualization
Readme.rst:and gridding of fractured domains. - Discretization of flow and
Readme.rst:transport, using finite volume methods and virtual finite elements. -
Readme.rst:PorePy has no support for multi-phase problems, nor are there plans to
Readme.rst:.. |Build Status| image:: https://travis-ci.org/pmgbergen/porepy.svg?branch=develop
Readme.rst:   :target: https://travis-ci.org/pmgbergen/porepy
Install.md:Several computationally expensive methods can be accelerated with Cython or Numba. Shapely is used for certain geometry-operations. To install these packages, an administrative level pip install should be sufficient, i.e. through `sudo pip install cython numba shapely`
Install.md:http://glaros.dtc.umn.edu/gkhome/metis/metis/overview. In linux, this should be available through apt-get or apt install:
Install.md:- Download the Metis library source files from: http://glaros.dtc.umn.edu/gkhome/metis/metis/download
Install.md:- Make sure you have cmake and build-essentials installed via `sudo apt install cmake build-essentials`
Install.md:- Run the following from the Metis source file directory:
Install.md:- You should now have Metis installed on your machine. Test this by running mpmetis -help.
Install.md:- Make sure you have pybind11 installed via `pip install pybind11`
Install.md:- Install pymetis via `pip install pymetis`
.gitignore:develop-eggs/
.gitignore:share/python-wheels/
.gitignore:*.egg-info/
.gitignore:*-converted-to.*
setup.cfg:description-file = Readme.md
setup.cfg:addopts = --cov=src/porepy --cov-report term-missing -p no:warnings
setup.cfg:max-line-length = 95
setup.cfg:  # F541: f-string is missing placeholders
gmsh_frac_file.msh:1 0 0 0 0.2113248654051872 0 0 1 10 2 1 -7 
gmsh_frac_file.msh:2 0.2113248654051872 0 0 1 0 0 1 10 2 1 -8 
gmsh_frac_file.msh:3 1 0 0 1 0.4133974596215562 0 1 11 2 4 -8 
gmsh_frac_file.msh:4 1 0.4133974596215562 0 1 1 0 1 11 2 4 -9 
gmsh_frac_file.msh:5 0.7886751345948129 1 0 1 1 0 1 12 2 2 -9 
gmsh_frac_file.msh:6 0 1 0 0.7886751345948129 1 0 1 12 2 2 -10 
gmsh_frac_file.msh:7 0 0 0 0 0.5 0 1 13 2 5 -7 
gmsh_frac_file.msh:8 0 0.5 0 0 1 0 1 13 2 5 -10 
gmsh_frac_file.msh:9 0.2113248654051872 0 0 0.4500000000000001 0.4133974596215562 0 1 15 2 1 -3 
gmsh_frac_file.msh:10 0.4500000000000001 0.4133974596215562 0 0.7886751345948129 1 0 1 15 2 2 -3 
gmsh_frac_file.msh:11 0.4500000000000001 0.4133974596215562 0 1 0.4133974596215562 0 1 16 2 3 -4 
gmsh_frac_file.msh:12 0 0.5 0 0.4 0.5 0 1 17 2 5 -6 
gmsh_frac_file.msh:1 0 0 0 1 1 0 1 14 8 1 -7 8 -6 5 -4 3 -2 
visualization/data_2_000000.vtu:<!--This file was created by meshio v5.3.4-->
visualization/data_mortar_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
visualization/data_1_000000.vtu:<!--This file was created by meshio v5.3.4-->
.git/COMMIT_EDITMSG:#	modified:   tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/FLIPS
.git/COMMIT_EDITMSG:#	modified:   tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/MASS_OVER_TIME
.git/COMMIT_EDITMSG:#	modified:   tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/OUTPUT_NEWTON_INFO
.git/COMMIT_EDITMSG:#	modified:   tests/unit/tests-paper-2/case_1/slanted_hu_Kn0.1/visualization/times.json
.git/COMMIT_EDITMSG:#	new file:   tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/MASS_OVER_TIME
.git/COMMIT_EDITMSG:#	new file:   tests/unit/tests-paper-2/case_1/slanted_hu_Kn10.0/non-conforming/visualization/times.json
.git/COMMIT_EDITMSG:#	modified:   tests/unit/tests-paper-2/case_1_slanted_hu.py
.git/COMMIT_EDITMSG:#	new file:   tests/unit/tests-paper-2/case_2/FLIPS
.git/COMMIT_EDITMSG:#	new file:   tests/unit/tests-paper-2/case_2/MASS_OVER_TIME
.git/COMMIT_EDITMSG:#	new file:   tests/unit/tests-paper-2/case_2/OUTPUT_NEWTON_INFO
.git/COMMIT_EDITMSG:#	new file:   tests/unit/tests-paper-2/case_2/visualization/times.json
.git/COMMIT_EDITMSG:#	new file:   tests/unit/tests-paper-2/case_2_hu.py
.git/COMMIT_EDITMSG:#	modified:   tests/unit/tests-paper-2/test_2_paper_hu_non_conforming.py
.git/COMMIT_EDITMSG:#	modified:   tests/unit/tests-paper-2/tests_chart.odg
.git/COMMIT_EDITMSG:#	new file:   tests/unit/tests-paper-2/visualization/times.json
.git/packed-refs:# pack-refs with: peeled fully-peeled sorted 
.git/packed-refs:d126d2295ab21a0943a68fd1e968e6efc547b6ee refs/remotes/origin/feat/parallelize-contact-conditions
.git/packed-refs:441428797f87f5a82e02af8a4b6e9fadeda9db9d refs/remotes/origin/haakon-e/refactor-docs
.git/info/exclude:# git ls-files --others --exclude-from=.git/info/exclude
.git/logs/HEAD:54035a5ea18eb49fa0021a98b7892ef5ea803797 0c928a1527cd9543f4c1c77acc22c64865ba9f2e enrico <enrico.ballini@polimi.it> 1682575377 +0200	pull: Fast-forward
.git/logs/HEAD:db104a8e200df76cf91343d62ce5b735ff79c35d 6a022c3b745cce4d1b876be02d67c3d0ac2be431 enrico <enrico.ballini@polimi.it> 1700061924 +0100	commit: added working test with non-confomring mesh
.git/logs/HEAD:acc2350088d14a486e60bf057cedd9c74432b60b 10028127d6260d6d8f8c4bb9580d3b2a6fafcf2a enrico <enrico.ballini@polimi.it> 1701197414 +0100	commit: are you ready? I'm ready - are you ready? I'm ready
.git/logs/refs/heads/hybrid_upwind:54035a5ea18eb49fa0021a98b7892ef5ea803797 0c928a1527cd9543f4c1c77acc22c64865ba9f2e enrico <enrico.ballini@polimi.it> 1682575377 +0200	pull: Fast-forward
.git/logs/refs/heads/hybrid_upwind:db104a8e200df76cf91343d62ce5b735ff79c35d 6a022c3b745cce4d1b876be02d67c3d0ac2be431 enrico <enrico.ballini@polimi.it> 1700061924 +0100	commit: added working test with non-confomring mesh
.git/logs/refs/heads/hybrid_upwind:acc2350088d14a486e60bf057cedd9c74432b60b 10028127d6260d6d8f8c4bb9580d3b2a6fafcf2a enrico <enrico.ballini@polimi.it> 1701197414 +0100	commit: are you ready? I'm ready - are you ready? I'm ready
.git/logs/refs/remotes/origin/develop:48e1a384b8635c1eedfae4682d27df5b232c932f a0f2d6f293c1b561d40063f3830005f23002325a enrico <enrico.ballini@polimi.it> 1682575377 +0200	pull: fast-forward
.git/logs/refs/remotes/origin/hybrid_upwind:54035a5ea18eb49fa0021a98b7892ef5ea803797 0c928a1527cd9543f4c1c77acc22c64865ba9f2e enrico <enrico.ballini@polimi.it> 1682575377 +0200	pull: fast-forward
.git/FETCH_HEAD:a0f2d6f293c1b561d40063f3830005f23002325a	not-for-merge	branch 'develop' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:8550bab2be49d0eb38fff7fde4d2679ada26a609	not-for-merge	branch 'distribute_variable' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:d126d2295ab21a0943a68fd1e968e6efc547b6ee	not-for-merge	branch 'feat/parallelize-contact-conditions' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:441428797f87f5a82e02af8a4b6e9fadeda9db9d	not-for-merge	branch 'haakon-e/refactor-docs' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:ed41cc13982f52d82fa5c4e39a80aee05e9e3040	not-for-merge	branch 'jhabriel/develop' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:2f50e4cb8d9320130154f8ba158d2c4181d1e143	not-for-merge	branch 'main' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:e327fad498e89cae0fcce96d3494f837fa145f77	not-for-merge	branch 'mat254_tutorials' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:d7345181bd52e12c9da89b643d925e3d55094d86	not-for-merge	branch 'multiphase_reactive_base' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:de8a94904c848c298da0ab8d634d5bf8216ee6f7	not-for-merge	branch 'my_porepy_old_for_paper_1' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:0088e47adbf6cdf405fbe69623893424515d1ee4	not-for-merge	branch 'nonlinear_scalar' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:079c89cd3cfc54cc76abfd3d28d3e8861b75e236	not-for-merge	branch 'semi_local_flow' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:3fb69b74a2ec32ea6606292ff30fb5179258dbc0	not-for-merge	branch 'slightly_compressible_flow' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:26f020929d5831f4517ba9d0682d3fdee8ed939b	not-for-merge	branch 'update_pp_for_dfm_up' of https://github.com/enricoballini/porepy
.git/FETCH_HEAD:fbdfc9428dd4db1c6195546f0706de0cad7119ff	not-for-merge	branch 'upwind_coupling_ad' of https://github.com/enricoballini/porepy
.git/hooks/post-update.sample:# To enable this hook, rename this file to "post-update".
.git/hooks/post-update.sample:exec git update-server-info
.git/hooks/pre-push.sample:# pushed.  If this script exits with a non-zero status nothing will be pushed.
.git/hooks/pre-push.sample:# $1 -- Name of the remote to which the push is being done
.git/hooks/pre-push.sample:# $2 -- URL to which the push is being done
.git/hooks/pre-push.sample:zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
.git/hooks/pre-push.sample:		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
.git/hooks/pre-push.sample:		if test -n "$commit"
.git/hooks/pre-commit.sample:# exit with non-zero status after issuing an appropriate message if
.git/hooks/pre-commit.sample:# To enable this hook, rename this file to "pre-commit".
.git/hooks/pre-commit.sample:if git rev-parse --verify HEAD >/dev/null 2>&1
.git/hooks/pre-commit.sample:	against=$(git hash-object -t tree /dev/null)
.git/hooks/pre-commit.sample:# If you want to allow non-ASCII filenames set this variable to true.
.git/hooks/pre-commit.sample:allownonascii=$(git config --type=bool hooks.allownonascii)
.git/hooks/pre-commit.sample:# Cross platform projects tend to avoid non-ASCII filenames; prevent
.git/hooks/pre-commit.sample:	test $(git diff --cached --name-only --diff-filter=A -z $against |
.git/hooks/pre-commit.sample:	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
.git/hooks/pre-commit.sample:Error: Attempt to add a non-ASCII file name.
.git/hooks/pre-commit.sample:exec git diff-index --check --cached $against --
.git/hooks/pre-merge-commit.sample:# exit with non-zero status after issuing an appropriate message to
.git/hooks/pre-merge-commit.sample:# To enable this hook, rename this file to "pre-merge-commit".
.git/hooks/pre-merge-commit.sample:. git-sh-setup
.git/hooks/pre-merge-commit.sample:test -x "$GIT_DIR/hooks/pre-commit" &&
.git/hooks/pre-merge-commit.sample:        exec "$GIT_DIR/hooks/pre-commit"
.git/hooks/fsmonitor-watchman.sample:# To enable this hook, rename this file to "query-watchman" and set
.git/hooks/fsmonitor-watchman.sample:# 'git config core.fsmonitor .git/hooks/query-watchman'
.git/hooks/fsmonitor-watchman.sample:	die "Unsupported query-fsmonitor hook version '$version'.\n" .
.git/hooks/fsmonitor-watchman.sample:		output_result($o->{clock}, @{$o->{files}});
.git/hooks/fsmonitor-watchman.sample:	# open (my $fh, ">", ".git/watchman-output.out");
.git/hooks/fsmonitor-watchman.sample:	return $json_pkg->new->utf8->decode($response);
.git/hooks/fsmonitor-watchman.sample:	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
.git/hooks/fsmonitor-watchman.sample:	# open (my $fh, ">", ".git/watchman-query.json");
.git/hooks/fsmonitor-watchman.sample:	# open ($fh, ">", ".git/watchman-response.json");
.git/hooks/fsmonitor-watchman.sample:	return $json_pkg->new->utf8->decode($response);
.git/hooks/fsmonitor-watchman.sample:	my $error = $output->{error};
.git/hooks/fsmonitor-watchman.sample:		$retry--;
.git/hooks/fsmonitor-watchman.sample:		$output = $json_pkg->new->utf8->decode($response);
.git/hooks/fsmonitor-watchman.sample:		$error = $output->{error};
.git/hooks/fsmonitor-watchman.sample:		# open (my $fh, ">", ".git/watchman-output.out");
.git/hooks/fsmonitor-watchman.sample:		$error = $output->{error};
.git/hooks/fsmonitor-watchman.sample:		output_result($o->{clock}, ("/"));
.git/hooks/fsmonitor-watchman.sample:		$last_update_token = $o->{clock};
.git/hooks/push-to-checkout.sample:# An example hook script to update a checked-out tree on a git push.
.git/hooks/push-to-checkout.sample:# This hook is invoked by git-receive-pack(1) when it reacts to git
.git/hooks/push-to-checkout.sample:# It can exit with a non-zero status to refuse the push (when it does
.git/hooks/push-to-checkout.sample:# For example, the hook can simply run git read-tree -u -m HEAD "$1"
.git/hooks/push-to-checkout.sample:# with git push, as the two-tree form of git read-tree -u -m is
.git/hooks/push-to-checkout.sample:# The below is a more-or-less exact translation to shell of the C code
.git/hooks/push-to-checkout.sample:# for the default behaviour for git's push-to-checkout hook defined in
.git/hooks/push-to-checkout.sample:# the push_to_deploy() function in builtin/receive-pack.c.
.git/hooks/push-to-checkout.sample:if ! git update-index -q --ignore-submodules --refresh
.git/hooks/push-to-checkout.sample:	die "Up-to-date check failed"
.git/hooks/push-to-checkout.sample:if ! git diff-files --quiet --ignore-submodules --
.git/hooks/push-to-checkout.sample:if git cat-file -e HEAD 2>/dev/null
.git/hooks/push-to-checkout.sample:	head=$(git hash-object -t tree --stdin </dev/null)
.git/hooks/push-to-checkout.sample:if ! git diff-index --quiet --cached --ignore-submodules $head --
.git/hooks/push-to-checkout.sample:if ! git read-tree -u -m "$commit"
.git/hooks/prepare-commit-msg.sample:# message file.  If the hook fails with a non-zero status,
.git/hooks/prepare-commit-msg.sample:# To enable this hook, rename this file to "prepare-commit-msg".
.git/hooks/prepare-commit-msg.sample:# The second includes the output of "git diff --name-status -r"
.git/hooks/prepare-commit-msg.sample:# commented because it doesn't cope with --amend or with squashed
.git/hooks/prepare-commit-msg.sample:# The third example adds a Signed-off-by line to the message, that can
.git/hooks/prepare-commit-msg.sample:/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
.git/hooks/prepare-commit-msg.sample:#    /usr/bin/perl -i.bak -pe '
.git/hooks/prepare-commit-msg.sample:#       print "\n" . `git diff --cached --name-status -r`
.git/hooks/prepare-commit-msg.sample:# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
.git/hooks/prepare-commit-msg.sample:# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
.git/hooks/prepare-commit-msg.sample:# if test -z "$COMMIT_SOURCE"
.git/hooks/prepare-commit-msg.sample:#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
.git/hooks/pre-rebase.sample:# The "pre-rebase" hook is run just before "git rebase" starts doing
.git/hooks/pre-rebase.sample:# non-zero status.
.git/hooks/pre-rebase.sample:# $1 -- the upstream the series was forked from.
.git/hooks/pre-rebase.sample:# $2 -- the branch being rebased (or empty when rebasing the current branch).
.git/hooks/pre-rebase.sample:	topic=`git symbolic-ref HEAD` ||
.git/hooks/pre-rebase.sample:git show-ref -q "$topic" || {
.git/hooks/pre-rebase.sample:not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
.git/hooks/pre-rebase.sample:if test -z "$not_in_master"
.git/hooks/pre-rebase.sample:only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
.git/hooks/pre-rebase.sample:only_next_2=`git rev-list ^master           ${publish} | sort`
.git/hooks/pre-rebase.sample:	not_in_topic=`git rev-list "^$topic" master`
.git/hooks/pre-rebase.sample:	if test -z "$not_in_topic"
.git/hooks/pre-rebase.sample:	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
.git/hooks/pre-rebase.sample:	/usr/bin/perl -e '
.git/hooks/pre-rebase.sample:			/^([0-9a-f]+) /;
.git/hooks/pre-rebase.sample:				/^([0-9a-f]+) (.*)$/;
.git/hooks/pre-rebase.sample:			if (!exists $not_in_next{$elem->[0]}) {
.git/hooks/pre-rebase.sample:				print STDERR " $elem->[1]\n";
.git/hooks/pre-rebase.sample:    build on top of it -- other people may already want to
.git/hooks/pre-rebase.sample:		   o---o---o---o---o---o---o---o---o---o "next"
.git/hooks/pre-rebase.sample:		 /   a---a---b A     /           /
.git/hooks/pre-rebase.sample:	       /   /   c---c---c---c B         /
.git/hooks/pre-rebase.sample:	     /   /   /   b---b C     \       /
.git/hooks/pre-rebase.sample:    ---o---o---o---o---o---o---o---o---o---o---o "master"
.git/hooks/pre-rebase.sample:	git rev-list ^master ^topic next
.git/hooks/pre-rebase.sample:	git rev-list ^master        next
.git/hooks/pre-rebase.sample:	git rev-list master..topic
.git/hooks/update.sample:# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
.git/hooks/update.sample:# ------
.git/hooks/update.sample:# --- Command line
.git/hooks/update.sample:# --- Safety check
.git/hooks/update.sample:if [ -z "$GIT_DIR" ]; then
.git/hooks/update.sample:if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
.git/hooks/update.sample:# --- Config
.git/hooks/update.sample:allowunannotated=$(git config --type=bool hooks.allowunannotated)
.git/hooks/update.sample:allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
.git/hooks/update.sample:denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
.git/hooks/update.sample:allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
.git/hooks/update.sample:allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
.git/hooks/update.sample:projectdesc=$(sed -e '1q' "$GIT_DIR/description")
.git/hooks/update.sample:# --- Check types
.git/hooks/update.sample:zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
.git/hooks/update.sample:	newrev_type=$(git cat-file -t $newrev)
.git/hooks/update.sample:		# un-annotated tag
.git/hooks/update.sample:			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
.git/hooks/update.sample:			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
.git/hooks/update.sample:		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
.git/hooks/update.sample:		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
.git/hooks/update.sample:# --- Finished
.git/hooks/commit-msg.sample:# that has the commit message.  The hook should exit with non-zero
.git/hooks/commit-msg.sample:# To enable this hook, rename this file to "commit-msg".
.git/hooks/commit-msg.sample:# Uncomment the below to add a Signed-off-by line to the message.
.git/hooks/commit-msg.sample:# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
.git/hooks/commit-msg.sample:# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
.git/hooks/commit-msg.sample:# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
.git/hooks/commit-msg.sample:# This example catches duplicate Signed-off-by lines.
.git/hooks/commit-msg.sample:test "" = "$(grep '^Signed-off-by: ' "$1" |
.git/hooks/commit-msg.sample:	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
.git/hooks/commit-msg.sample:	echo >&2 Duplicate Signed-off-by lines.
.git/hooks/applypatch-msg.sample:# applypatch from an e-mail message.
.git/hooks/applypatch-msg.sample:# The hook should exit with non-zero status after issuing an
.git/hooks/applypatch-msg.sample:# To enable this hook, rename this file to "applypatch-msg".
.git/hooks/applypatch-msg.sample:. git-sh-setup
.git/hooks/applypatch-msg.sample:commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
.git/hooks/applypatch-msg.sample:test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
.git/hooks/pre-receive.sample:# To enable this hook, rename this file to "pre-receive".
.git/hooks/pre-receive.sample:if test -n "$GIT_PUSH_OPTION_COUNT"
.git/hooks/pre-receive.sample:	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
.git/hooks/pre-receive.sample:			echo "echo from the pre-receive-hook: ${value#*=}" >&2
.git/hooks/pre-applypatch.sample:# by applypatch from an e-mail message.
.git/hooks/pre-applypatch.sample:# The hook should exit with non-zero status after issuing an
.git/hooks/pre-applypatch.sample:# To enable this hook, rename this file to "pre-applypatch".
.git/hooks/pre-applypatch.sample:. git-sh-setup
.git/hooks/pre-applypatch.sample:precommit="$(git rev-parse --git-path hooks/pre-commit)"
.git/hooks/pre-applypatch.sample:test -x "$precommit" && exec "$precommit" ${1+"$@"}
